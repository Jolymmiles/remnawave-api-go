{
  "openapi": "3.0.0",
  "paths": {
    "/api/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "examples": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string",
                      "examples": [
                        "Invalid credentials"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "examples": [
                        "Unauthorized"
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Login as superadmin",
        "tags": [
          "Auth Controller"
        ]
      }
    },
    "/api/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequestDto"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden - Registration is not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "examples": [
                        403
                      ]
                    },
                    "message": {
                      "type": "string",
                      "examples": [
                        "Registration is not allowed"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "examples": [
                        "Forbidden"
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Register as superadmin",
        "tags": [
          "Auth Controller"
        ]
      }
    },
    "/api/auth/status": {
      "get": {
        "operationId": "AuthController_getStatus",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get the status of the authentication",
        "tags": [
          "Auth Controller"
        ]
      }
    },
    "/api/auth/oauth2/tg/callback": {
      "post": {
        "operationId": "AuthController_telegramCallback",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TelegramCallbackRequestDto"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Callback from Telegram OAuth2",
        "tags": [
          "Auth Controller"
        ]
      }
    },
    "/api/auth/oauth2/authorize": {
      "post": {
        "operationId": "AuthController_oauth2Authorize",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuth2AuthorizeRequestDto"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Initiate OAuth2 authorization",
        "tags": [
          "Auth Controller"
        ]
      }
    },
    "/api/auth/oauth2/callback": {
      "post": {
        "operationId": "AuthController_oauth2Callback",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuth2CallbackRequestDto"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Callback from OAuth2",
        "tags": [
          "Auth Controller"
        ]
      }
    },
    "/api/users": {
      "post": {
        "operationId": "UsersController_createUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Create a new user",
        "tags": [
          "Users Controller"
        ]
      },
      "patch": {
        "operationId": "UsersController_updateUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Update a user by UUID or username",
        "tags": [
          "Users Controller"
        ]
      },
      "get": {
        "operationId": "UsersController_getAllUsers",
        "parameters": [
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Page size for pagination",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "start",
            "required": false,
            "in": "query",
            "description": "Offset for pagination",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllUsersResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get all users",
        "tags": [
          "Users Controller"
        ]
      }
    },
    "/api/users/{uuid}": {
      "delete": {
        "operationId": "UsersController_deleteUser",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "UUID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Delete user",
        "tags": [
          "Users Controller"
        ]
      },
      "get": {
        "operationId": "UsersController_getUserByUuid",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "UUID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserByUuidResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get user by UUID",
        "tags": [
          "Users Controller"
        ]
      }
    },
    "/api/users/tags": {
      "get": {
        "operationId": "UsersController_getAllTags",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Tags fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllTagsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get all existing user tags",
        "tags": [
          "Users Controller"
        ]
      }
    },
    "/api/users/{uuid}/accessible-nodes": {
      "get": {
        "operationId": "UsersController_getUserAccessibleNodes",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "UUID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User accessible nodes fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserAccessibleNodesResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get user accessible nodes",
        "tags": [
          "Users Controller"
        ]
      }
    },
    "/api/users/{uuid}/subscription-request-history": {
      "get": {
        "operationId": "UsersController_getUserSubscriptionRequestHistory",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "UUID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User subscription request history fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserSubscriptionRequestHistoryResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get user subscription request history, recent 24 records",
        "tags": [
          "Users Controller"
        ]
      }
    },
    "/api/users/by-short-uuid/{shortUuid}": {
      "get": {
        "operationId": "UsersController_getUserByShortUuid",
        "parameters": [
          {
            "name": "shortUuid",
            "required": true,
            "in": "path",
            "description": "Short UUID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserByShortUuidResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get user by Short UUID",
        "tags": [
          "Users Controller"
        ]
      }
    },
    "/api/users/by-username/{username}": {
      "get": {
        "operationId": "UsersController_getUserByUsername",
        "parameters": [
          {
            "name": "username",
            "required": true,
            "in": "path",
            "description": "Username of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserByUsernameResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get user by username",
        "tags": [
          "Users Controller"
        ]
      }
    },
    "/api/users/by-telegram-id/{telegramId}": {
      "get": {
        "operationId": "UsersController_getUserByTelegramId",
        "parameters": [
          {
            "name": "telegramId",
            "required": true,
            "in": "path",
            "description": "Telegram ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserByTelegramIdResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Users not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get users by telegram ID",
        "tags": [
          "Users Controller"
        ]
      }
    },
    "/api/users/by-email/{email}": {
      "get": {
        "operationId": "UsersController_getUsersByEmail",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "path",
            "description": "Email of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserByEmailResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Users not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get users by email",
        "tags": [
          "Users Controller"
        ]
      }
    },
    "/api/users/by-tag/{tag}": {
      "get": {
        "operationId": "UsersController_getUsersByTag",
        "parameters": [
          {
            "name": "tag",
            "required": true,
            "in": "path",
            "description": "Tag of the user",
            "schema": {
              "type": "string",
              "examples": [
                "PROMO_1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserByTagResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Users not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get users by tag",
        "tags": [
          "Users Controller"
        ]
      }
    },
    "/api/users/{uuid}/actions/revoke": {
      "post": {
        "operationId": "UsersController_revokeUserSubscription",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "UUID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeUserSubscriptionBodyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User subscription revoked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevokeUserSubscriptionResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Revoke user subscription",
        "tags": [
          "Users Controller"
        ]
      }
    },
    "/api/users/{uuid}/actions/disable": {
      "post": {
        "operationId": "UsersController_disableUser",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "UUID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User disabled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisableUserResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Disable user",
        "tags": [
          "Users Controller"
        ]
      }
    },
    "/api/users/{uuid}/actions/enable": {
      "post": {
        "operationId": "UsersController_enableUser",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "UUID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User enabled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnableUserResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Enable user",
        "tags": [
          "Users Controller"
        ]
      }
    },
    "/api/users/{uuid}/actions/reset-traffic": {
      "post": {
        "operationId": "UsersController_resetUserTraffic",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "UUID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User traffic reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetUserTrafficResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Reset user traffic",
        "tags": [
          "Users Controller"
        ]
      }
    },
    "/api/users/bulk/delete-by-status": {
      "post": {
        "operationId": "UsersBulkActionsController_bulkDeleteUsersByStatus",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDeleteUsersByStatusRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Users deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDeleteUsersByStatusResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Bulk delete users by status",
        "tags": [
          "Users Bulk Actions Controller"
        ]
      }
    },
    "/api/users/bulk/delete": {
      "post": {
        "operationId": "UsersBulkActionsController_bulkDeleteUsers",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDeleteUsersRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Users deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDeleteUsersResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Bulk delete users by UUIDs",
        "tags": [
          "Users Bulk Actions Controller"
        ]
      }
    },
    "/api/users/bulk/revoke-subscription": {
      "post": {
        "operationId": "UsersBulkActionsController_bulkRevokeUsersSubscription",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkRevokeUsersSubscriptionRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Users subscription revoked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkRevokeUsersSubscriptionResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Revoke users subscription by User UUIDs",
        "tags": [
          "Users Bulk Actions Controller"
        ]
      }
    },
    "/api/users/bulk/reset-traffic": {
      "post": {
        "operationId": "UsersBulkActionsController_bulkResetUserTraffic",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkResetTrafficUsersRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Users traffic reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkResetTrafficUsersResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Bulk reset traffic users by UUIDs",
        "tags": [
          "Users Bulk Actions Controller"
        ]
      }
    },
    "/api/users/bulk/update": {
      "post": {
        "operationId": "UsersBulkActionsController_bulkUpdateUsers",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateUsersRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Users updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUpdateUsersResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Bulk update users by UUIDs",
        "tags": [
          "Users Bulk Actions Controller"
        ]
      }
    },
    "/api/users/bulk/update-squads": {
      "post": {
        "operationId": "UsersBulkActionsController_bulkUpdateUsersInternalSquads",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateUsersSquadsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Internal squads updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUpdateUsersSquadsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Bulk update users internal squads by UUIDs",
        "tags": [
          "Users Bulk Actions Controller"
        ]
      }
    },
    "/api/users/bulk/all/update": {
      "post": {
        "operationId": "UsersBulkActionsController_bulkUpdateAllUsers",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkAllUpdateUsersRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All users updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkAllUpdateUsersResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Bulk update all users",
        "tags": [
          "Users Bulk Actions Controller"
        ]
      }
    },
    "/api/users/bulk/all/reset-traffic": {
      "post": {
        "description": "Bulk reset all users traffic",
        "operationId": "UsersBulkActionsController_bulkAllResetUserTraffic",
        "parameters": [],
        "responses": {
          "200": {
            "description": "All users traffic reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkAllResetTrafficUsersResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Bulk Reset All Users Traffic",
        "tags": [
          "Users Bulk Actions Controller"
        ]
      }
    },
    "/api/users/stats/usage/{uuid}/range": {
      "get": {
        "operationId": "UsersStatsController_getUserUsageByRange",
        "parameters": [
          {
            "name": "start",
            "required": true,
            "in": "query",
            "description": "Start date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "description": "End date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "UUID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User usage by range fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserUsageByRangeResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get user usage by range",
        "tags": [
          "Users Stats Controller"
        ]
      }
    },
    "/api/sub/{shortUuid}/info": {
      "get": {
        "operationId": "SubscriptionController_getSubscriptionInfoByShortUuid",
        "parameters": [
          {
            "name": "shortUuid",
            "required": true,
            "in": "path",
            "description": "Short UUID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription info fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionInfoResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get Subscription Info by Short UUID",
        "tags": [
          "[Public] Subscription Controller"
        ]
      }
    },
    "/api/sub/{shortUuid}": {
      "get": {
        "operationId": "SubscriptionController_getSubscription",
        "parameters": [
          {
            "name": "shortUuid",
            "required": true,
            "in": "path",
            "description": "Short UUID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "[Public] Subscription Controller"
        ]
      }
    },
    "/api/sub/{shortUuid}/{clientType}": {
      "get": {
        "operationId": "SubscriptionController_getSubscriptionByClientType",
        "parameters": [
          {
            "name": "clientType",
            "required": true,
            "in": "path",
            "description": "Client type",
            "schema": {
              "enum": [
                "stash",
                "singbox",
                "singbox-legacy",
                "mihomo",
                "json",
                "v2ray-json",
                "clash"
              ],
              "type": "string"
            }
          },
          {
            "name": "shortUuid",
            "required": true,
            "in": "path",
            "description": "Short UUID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "[Public] Subscription Controller"
        ]
      }
    },
    "/api/sub/outline/{shortUuid}/{type}/{encodedTag}": {
      "get": {
        "operationId": "SubscriptionController_getSubscriptionWithType",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Subscription type (required if encodedTag is provided). Only SS is supported for now.",
            "schema": {
              "type": "string",
              "examples": [
                "ss"
              ]
            }
          },
          {
            "name": "encodedTag",
            "required": true,
            "in": "path",
            "description": "Base64 encoded tag for Outline config. This paramter is optional. It is required only when type=ss.",
            "schema": {
              "type": "string",
              "examples": [
                "VGVzdGVy"
              ]
            }
          },
          {
            "name": "shortUuid",
            "required": true,
            "in": "path",
            "description": "Short UUID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "[Public] Subscription Controller"
        ]
      }
    },
    "/api/subscriptions": {
      "get": {
        "operationId": "SubscriptionsController_getAllSubscriptions",
        "parameters": [
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of subscriptions to return, no more than 500",
            "schema": {
              "type": "number",
              "examples": [
                25
              ]
            }
          },
          {
            "name": "start",
            "required": false,
            "in": "query",
            "description": "Start index (offset) of the users to return, default is 0",
            "schema": {
              "type": "number",
              "examples": [
                0
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllSubscriptionsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get all subscriptions",
        "tags": [
          "[Protected] Subscriptions Controller"
        ]
      }
    },
    "/api/subscriptions/by-username/{username}": {
      "get": {
        "operationId": "SubscriptionsController_getSubscriptionByUsername",
        "parameters": [
          {
            "name": "username",
            "required": true,
            "in": "path",
            "description": "Username of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionByUsernameResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get subscription by username",
        "tags": [
          "[Protected] Subscriptions Controller"
        ]
      }
    },
    "/api/subscriptions/by-short-uuid/{shortUuid}": {
      "get": {
        "operationId": "SubscriptionsController_getSubscriptionByShortUuidProtected",
        "parameters": [
          {
            "name": "shortUuid",
            "required": true,
            "in": "path",
            "description": "Short uuid of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionByShortUuidProtectedResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get subscription by short uuid (protected route)",
        "tags": [
          "[Protected] Subscriptions Controller"
        ]
      }
    },
    "/api/subscriptions/by-uuid/{uuid}": {
      "get": {
        "operationId": "SubscriptionsController_getSubscriptionByUuid",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "Uuid of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionByUuidResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get subscription by uuid",
        "tags": [
          "[Protected] Subscriptions Controller"
        ]
      }
    },
    "/api/subscriptions/by-short-uuid/{shortUuid}/raw": {
      "get": {
        "operationId": "SubscriptionsController_getRawSubscriptionByShortUuid",
        "parameters": [
          {
            "name": "withDisabledHosts",
            "required": false,
            "in": "query",
            "description": "Include disabled hosts in the subscription. Default is false.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "shortUuid",
            "required": true,
            "in": "path",
            "description": "Short UUID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Raw subscription fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRawSubscriptionByShortUuidResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get Raw Subscription by Short UUID",
        "tags": [
          "[Protected] Subscriptions Controller"
        ]
      }
    },
    "/api/subscription-templates/{templateType}": {
      "get": {
        "operationId": "SubscriptionTemplateController_getTemplate",
        "parameters": [
          {
            "name": "templateType",
            "required": true,
            "in": "path",
            "description": "Template type",
            "schema": {
              "enum": [
                "STASH",
                "SINGBOX",
                "SINGBOX_LEGACY",
                "MIHOMO",
                "XRAY_JSON",
                "CLASH"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Template retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplateResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get subscription template",
        "tags": [
          "Subscription Template Controller"
        ]
      }
    },
    "/api/subscription-templates": {
      "put": {
        "operationId": "SubscriptionTemplateController_updateTemplate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTemplateRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Template updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTemplateResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Update subscription template",
        "tags": [
          "Subscription Template Controller"
        ]
      }
    },
    "/api/tokens": {
      "post": {
        "description": "This endpoint is forbidden to use via \"API-key\". It can only be used with an admin JWT-token.",
        "operationId": "ApiTokensController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiTokenRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Token created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateApiTokenResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Create a new API token",
        "tags": [
          "API Tokens Controller"
        ]
      },
      "get": {
        "description": "This endpoint is forbidden to use via \"API-key\". It can only be used with admin JWT-token.",
        "operationId": "ApiTokensController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Tokens fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindAllApiTokensResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get all API tokens",
        "tags": [
          "API Tokens Controller"
        ]
      }
    },
    "/api/tokens/{uuid}": {
      "delete": {
        "description": "This endpoint is forbidden to use via \"API-key\". It can be used only with an admin JWT-token.",
        "operationId": "ApiTokensController_delete",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "UUID of the API token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteApiTokenResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Delete an API token by UUID",
        "tags": [
          "API Tokens Controller"
        ]
      }
    },
    "/api/config-profiles": {
      "get": {
        "operationId": "ConfigProfileController_getConfigProfiles",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Config profiles retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConfigProfilesResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get config profiles",
        "tags": [
          "Config Profiles Controller"
        ]
      },
      "post": {
        "operationId": "ConfigProfileController_createConfigProfile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConfigProfileRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Config profile created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateConfigProfileResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "Config profile name already exists or inbound tags are not unique. Inbound tags must be unique in global scope."
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Create config profile",
        "tags": [
          "Config Profiles Controller"
        ]
      },
      "patch": {
        "operationId": "ConfigProfileController_updateConfigProfile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConfigProfileRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Config profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateConfigProfileResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Config profile not found"
          },
          "409": {
            "description": "Config profile name already exists or inbound tags are not unique. Inbound tags must be unique in global scope."
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Update Core Config in specific config profile",
        "tags": [
          "Config Profiles Controller"
        ]
      }
    },
    "/api/config-profiles/inbounds": {
      "get": {
        "operationId": "ConfigProfileController_getAllInbounds",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Inbounds retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllInboundsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get all inbounds from all config profiles",
        "tags": [
          "Config Profiles Controller"
        ]
      }
    },
    "/api/config-profiles/{uuid}/inbounds": {
      "get": {
        "operationId": "ConfigProfileController_getInboundsByProfileUuid",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Inbounds retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInboundsByProfileUuidResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Config profile not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get inbounds by profile uuid",
        "tags": [
          "Config Profiles Controller"
        ]
      }
    },
    "/api/config-profiles/{uuid}": {
      "get": {
        "operationId": "ConfigProfileController_getConfigProfileByUuid",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Config profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConfigProfileByUuidResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Config profile not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get config profile by uuid",
        "tags": [
          "Config Profiles Controller"
        ]
      },
      "delete": {
        "operationId": "ConfigProfileController_deleteConfigProfileByUuid",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Config profile deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteConfigProfileResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Config profile not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Delete config profile",
        "tags": [
          "Config Profiles Controller"
        ]
      }
    },
    "/api/internal-squads": {
      "get": {
        "operationId": "InternalSquadController_getInternalSquads",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Internal squads retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInternalSquadsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get all internal squads",
        "tags": [
          "Internal Squads Controller"
        ]
      },
      "post": {
        "operationId": "InternalSquadController_createInternalSquad",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInternalSquadRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Internal squad created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInternalSquadResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "Internal squad already exists"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Create internal squad",
        "tags": [
          "Internal Squads Controller"
        ]
      },
      "patch": {
        "operationId": "InternalSquadController_updateInternalSquad",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInternalSquadRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Internal squad updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInternalSquadResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Internal squad not found"
          },
          "409": {
            "description": "Internal squad already exists"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Update internal squad",
        "tags": [
          "Internal Squads Controller"
        ]
      }
    },
    "/api/internal-squads/{uuid}": {
      "get": {
        "operationId": "InternalSquadController_getInternalSquadByUuid",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Internal squad retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInternalSquadByUuidResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get internal squad by uuid",
        "tags": [
          "Internal Squads Controller"
        ]
      },
      "delete": {
        "operationId": "InternalSquadController_deleteInternalSquad",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Internal squad deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteInternalSquadResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Internal squad not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Delete internal squad",
        "tags": [
          "Internal Squads Controller"
        ]
      }
    },
    "/api/internal-squads/{uuid}/accessible-nodes": {
      "get": {
        "operationId": "InternalSquadController_getInternalSquadAccessibleNodes",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "UUID of the internal squad",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Internal squad accessible nodes fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInternalSquadAccessibleNodesResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Internal squad not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get internal squad accessible nodes",
        "tags": [
          "Internal Squads Controller"
        ]
      }
    },
    "/api/internal-squads/{uuid}/bulk-actions/add-users": {
      "post": {
        "operationId": "InternalSquadController_addUsersToInternalSquad",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task added to internal job queue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddUsersToInternalSquadResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Internal squad not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Add all users to internal squad",
        "tags": [
          "Internal Squads Controller"
        ]
      }
    },
    "/api/internal-squads/{uuid}/bulk-actions/remove-users": {
      "delete": {
        "operationId": "InternalSquadController_removeUsersFromInternalSquad",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task added to internal job queue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveUsersFromInternalSquadResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Internal squad not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Delete users from internal squad",
        "tags": [
          "Internal Squads Controller"
        ]
      }
    },
    "/api/keygen": {
      "get": {
        "operationId": "KeygenController_generateKey",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get SSL_CERT for Remnawave Node",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPubKeyResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get SSL_CERT for Remnawave Node",
        "tags": [
          "Keygen Controller"
        ]
      }
    },
    "/api/nodes": {
      "post": {
        "operationId": "NodesController_createNode",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNodeRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Node created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNodeResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Create a new node",
        "tags": [
          "Nodes Controller"
        ]
      },
      "get": {
        "operationId": "NodesController_getAllNodes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Nodes fetched",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllNodesResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get all nodes",
        "tags": [
          "Nodes Controller"
        ]
      },
      "patch": {
        "operationId": "NodesController_updateNode",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNodeRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Node updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateNodeResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Update node",
        "tags": [
          "Nodes Controller"
        ]
      }
    },
    "/api/nodes/{uuid}": {
      "get": {
        "operationId": "NodesController_getOneNode",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "Node UUID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Node fetched",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneNodeResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get node by UUID",
        "tags": [
          "Nodes Controller"
        ]
      },
      "delete": {
        "operationId": "NodesController_deleteNode",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "Node UUID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Node deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteNodeResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Delete a node",
        "tags": [
          "Nodes Controller"
        ]
      }
    },
    "/api/nodes/{uuid}/actions/enable": {
      "post": {
        "operationId": "NodesController_enableNode",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "Node UUID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Node enabled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnableNodeResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Enable a node",
        "tags": [
          "Nodes Controller"
        ]
      }
    },
    "/api/nodes/{uuid}/actions/disable": {
      "post": {
        "operationId": "NodesController_disableNode",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "Node UUID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Node disabled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisableNodeResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Disable a node",
        "tags": [
          "Nodes Controller"
        ]
      }
    },
    "/api/nodes/{uuid}/actions/restart": {
      "post": {
        "operationId": "NodesController_restartNode",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "Node UUID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Node restarted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestartNodeResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Restart node",
        "tags": [
          "Nodes Controller"
        ]
      }
    },
    "/api/nodes/actions/restart-all": {
      "post": {
        "operationId": "NodesController_restartAllNodes",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestartAllNodesRequestBodyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All nodes restarted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestartAllNodesResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Restart all nodes",
        "tags": [
          "Nodes Controller"
        ]
      }
    },
    "/api/nodes/actions/reorder": {
      "post": {
        "operationId": "NodesController_reorderNodes",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReorderNodeRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Nodes reordered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReorderNodeResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Reorder nodes",
        "tags": [
          "Nodes Controller"
        ]
      }
    },
    "/api/hosts/tags": {
      "get": {
        "operationId": "HostsController_getAllHostTags",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Host tags fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllHostTagsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get all existing host tags",
        "tags": [
          "Hosts Controller"
        ]
      }
    },
    "/api/hosts": {
      "post": {
        "operationId": "HostsController_createHost",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHostRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Host created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateHostResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Create a new host",
        "tags": [
          "Hosts Controller"
        ]
      },
      "patch": {
        "operationId": "HostsController_updateHost",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHostRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Host updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateHostResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Update a host",
        "tags": [
          "Hosts Controller"
        ]
      },
      "get": {
        "operationId": "HostsController_getAllHosts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Hosts fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllHostsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get all hosts",
        "tags": [
          "Hosts Controller"
        ]
      }
    },
    "/api/hosts/{uuid}": {
      "get": {
        "operationId": "HostsController_getOneHost",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "UUID of the host",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Host fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneHostResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get a host by UUID",
        "tags": [
          "Hosts Controller"
        ]
      },
      "delete": {
        "operationId": "HostsController_deleteHost",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "UUID of the host",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Host deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteHostResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Host not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Delete a host by UUID",
        "tags": [
          "Hosts Controller"
        ]
      }
    },
    "/api/hosts/actions/reorder": {
      "post": {
        "operationId": "HostsController_reorderHosts",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReorderHostRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hosts reordered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReorderHostResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Reorder hosts",
        "tags": [
          "Hosts Controller"
        ]
      }
    },
    "/api/hosts/bulk/delete": {
      "post": {
        "operationId": "HostsBulkActionsController_deleteHosts",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDeleteHostsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hosts deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDeleteHostsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Delete hosts by UUIDs",
        "tags": [
          "Hosts Bulk Actions Controller"
        ]
      }
    },
    "/api/hosts/bulk/disable": {
      "post": {
        "operationId": "HostsBulkActionsController_disableHosts",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDisableHostsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hosts disabled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDisableHostsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Disable hosts by UUIDs",
        "tags": [
          "Hosts Bulk Actions Controller"
        ]
      }
    },
    "/api/hosts/bulk/enable": {
      "post": {
        "operationId": "HostsBulkActionsController_enableHosts",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkEnableHostsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hosts enabled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkEnableHostsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Enable hosts by UUIDs",
        "tags": [
          "Hosts Bulk Actions Controller"
        ]
      }
    },
    "/api/hosts/bulk/set-inbound": {
      "post": {
        "operationId": "HostsBulkActionsController_setInboundToHosts",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetInboundToManyHostsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hosts inbound set successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetInboundToManyHostsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Set inbound to hosts by UUIDs",
        "tags": [
          "Hosts Bulk Actions Controller"
        ]
      }
    },
    "/api/hosts/bulk/set-port": {
      "post": {
        "operationId": "HostsBulkActionsController_setPortToHosts",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPortToManyHostsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hosts port set successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetPortToManyHostsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Set port to hosts by UUIDs",
        "tags": [
          "Hosts Bulk Actions Controller"
        ]
      }
    },
    "/api/nodes/usage/{uuid}/users/range": {
      "get": {
        "operationId": "NodesUserUsageHistoryController_getNodeUserUsage",
        "parameters": [
          {
            "name": "start",
            "required": true,
            "in": "query",
            "description": "Start date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "description": "End date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "description": "UUID of the node",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Nodes user usage by range fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNodeUserUsageByRangeResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get node user usage by range and Node UUID",
        "tags": [
          "Bandwidth Stats Controller"
        ]
      }
    },
    "/api/nodes/usage/realtime": {
      "get": {
        "operationId": "NodesUserUsageHistoryController_getNodesRealtimeUsage",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Nodes realtime usage fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNodesRealtimeUsageResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get nodes realtime usage",
        "tags": [
          "Bandwidth Stats Controller"
        ]
      }
    },
    "/api/hwid/devices": {
      "get": {
        "operationId": "HwidUserDevicesController_getAllUsers",
        "parameters": [
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Page size for pagination",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "start",
            "required": false,
            "in": "query",
            "description": "Offset for pagination",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hwid devices fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllHwidDevicesResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get all HWID devices",
        "tags": [
          "HWID User Devices Controller"
        ]
      },
      "post": {
        "operationId": "HwidUserDevicesController_createUserHwidDevice",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserHwidDeviceRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User HWID device created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserHwidDeviceResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Create a user HWID device",
        "tags": [
          "HWID User Devices Controller"
        ]
      }
    },
    "/api/hwid/devices/delete": {
      "post": {
        "operationId": "HwidUserDevicesController_deleteUserHwidDevice",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteUserHwidDeviceRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User HWID device deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserHwidDeviceResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Delete a user HWID device",
        "tags": [
          "HWID User Devices Controller"
        ]
      }
    },
    "/api/hwid/devices/delete-all": {
      "post": {
        "operationId": "HwidUserDevicesController_deleteAllUserHwidDevices",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAllUserHwidDevicesRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User HWID devices deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAllUserHwidDevicesResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Delete all user HWID devices",
        "tags": [
          "HWID User Devices Controller"
        ]
      }
    },
    "/api/hwid/devices/stats": {
      "get": {
        "operationId": "HwidUserDevicesController_getHwidDevicesStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Hwid devices stats fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHwidDevicesStatsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get HWID devices stats",
        "tags": [
          "HWID User Devices Controller"
        ]
      }
    },
    "/api/hwid/devices/{userUuid}": {
      "get": {
        "operationId": "HwidUserDevicesController_getUserHwidDevices",
        "parameters": [
          {
            "name": "userUuid",
            "required": true,
            "in": "path",
            "description": "UUID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User HWID devices fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserHwidDevicesResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get user HWID devices",
        "tags": [
          "HWID User Devices Controller"
        ]
      }
    },
    "/api/nodes/usage/range": {
      "get": {
        "operationId": "NodesUsageHistoryController_getNodesUsageByRange",
        "parameters": [
          {
            "name": "start",
            "required": true,
            "in": "query",
            "description": "Start date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "description": "End date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Nodes usage by range fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNodesUsageByRangeResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get nodes usage by range",
        "tags": [
          "Bandwidth Stats Controller"
        ]
      }
    },
    "/api/infra-billing/providers": {
      "get": {
        "operationId": "InfraBillingController_getInfraProviders",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Infra providers retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInfraProvidersResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get all infra providers",
        "tags": [
          "Infra Billing Controller"
        ]
      },
      "post": {
        "operationId": "InfraBillingController_createInfraProvider",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInfraProviderRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Infra provider created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInfraProviderResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Create infra provider",
        "tags": [
          "Infra Billing Controller"
        ]
      },
      "patch": {
        "operationId": "InfraBillingController_updateInfraProvider",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInfraProviderRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Infra provider updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInfraProviderResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Update infra provider",
        "tags": [
          "Infra Billing Controller"
        ]
      }
    },
    "/api/infra-billing/providers/{uuid}": {
      "get": {
        "operationId": "InfraBillingController_getInfraProviderByUuid",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Infra provider retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInfraProviderByUuidResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Infra provider not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get infra provider by uuid",
        "tags": [
          "Infra Billing Controller"
        ]
      },
      "delete": {
        "operationId": "InfraBillingController_deleteInfraProviderByUuid",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Infra provider deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteInfraProviderByUuidResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Delete infra provider by uuid",
        "tags": [
          "Infra Billing Controller"
        ]
      }
    },
    "/api/infra-billing/history": {
      "post": {
        "operationId": "InfraBillingController_createInfraBillingHistoryRecord",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInfraBillingHistoryRecordRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Infra billing history record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInfraBillingHistoryRecordResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Create infra billing history",
        "tags": [
          "Infra Billing Controller"
        ]
      },
      "get": {
        "operationId": "InfraBillingController_getInfraBillingHistoryRecords",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Infra billing history records retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInfraBillingHistoryRecordsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get infra billing history",
        "tags": [
          "Infra Billing Controller"
        ]
      }
    },
    "/api/infra-billing/history/{uuid}": {
      "delete": {
        "operationId": "InfraBillingController_deleteInfraBillingHistoryRecordByUuid",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Infra billing history record deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteInfraBillingHistoryRecordByUuidResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Delete infra billing history",
        "tags": [
          "Infra Billing Controller"
        ]
      }
    },
    "/api/infra-billing/nodes": {
      "get": {
        "operationId": "InfraBillingController_getBillingNodes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Infra billing nodes retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInfraBillingNodesResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get infra billing nodes",
        "tags": [
          "Infra Billing Controller"
        ]
      },
      "patch": {
        "operationId": "InfraBillingController_updateInfraBillingNode",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInfraBillingNodeRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Infra billing node updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInfraBillingNodeResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Update infra billing nodes",
        "tags": [
          "Infra Billing Controller"
        ]
      },
      "post": {
        "operationId": "InfraBillingController_createInfraBillingNode",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInfraBillingNodeRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Infra billing node created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInfraBillingNodeResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Create infra billing node",
        "tags": [
          "Infra Billing Controller"
        ]
      }
    },
    "/api/infra-billing/nodes/{uuid}": {
      "delete": {
        "operationId": "InfraBillingController_deleteInfraBillingNodeByUuid",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Infra billing node deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteInfraBillingNodeByUuidResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Delete infra billing node",
        "tags": [
          "Infra Billing Controller"
        ]
      }
    },
    "/api/subscription-request-history": {
      "get": {
        "operationId": "UserSubscriptionRequestHistoryController_getSubscriptionRequestHistory",
        "parameters": [
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Page size for pagination",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "start",
            "required": false,
            "in": "query",
            "description": "Offset for pagination",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription request history fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionRequestHistoryResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get all subscription request history",
        "tags": [
          "Subscription Request History Controller"
        ]
      }
    },
    "/api/subscription-request-history/stats": {
      "get": {
        "operationId": "UserSubscriptionRequestHistoryController_getSubscriptionRequestHistoryStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User subscription request history stats fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionRequestHistoryStatsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get subscription request history stats",
        "tags": [
          "Subscription Request History Controller"
        ]
      }
    },
    "/api/system/stats": {
      "get": {
        "operationId": "SystemController_getStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns system statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get Stats",
        "tags": [
          "System Controller"
        ]
      }
    },
    "/api/system/stats/bandwidth": {
      "get": {
        "operationId": "SystemController_getBandwidthStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns bandwidth statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBandwidthStatsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get Bandwidth Stats",
        "tags": [
          "System Controller"
        ]
      }
    },
    "/api/system/stats/nodes": {
      "get": {
        "operationId": "SystemController_getNodesStatistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns nodes statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNodesStatisticsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get Nodes Statistics",
        "tags": [
          "System Controller"
        ]
      }
    },
    "/api/system/health": {
      "get": {
        "operationId": "SystemController_getRemnawaveHealth",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns Remnawave health",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRemnawaveHealthResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get Remnawave Health",
        "tags": [
          "System Controller"
        ]
      }
    },
    "/api/system/nodes/metrics": {
      "get": {
        "operationId": "SystemController_getNodesMetrics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns nodes metrics from Prometheus metrics endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNodesMetricsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get Nodes Metrics",
        "tags": [
          "System Controller"
        ]
      }
    },
    "/api/system/tools/x25519/generate": {
      "get": {
        "operationId": "SystemController_getX25519Keypairs",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns x25519 keypairs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateX25519ResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Generate 30 X25519 keypairs",
        "tags": [
          "System Controller"
        ]
      }
    },
    "/api/system/tools/happ/encrypt": {
      "post": {
        "operationId": "SystemController_encryptHappCryptoLink",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptHappCryptoLinkRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Happ crypto link encrypted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EncryptHappCryptoLinkResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Encrypt Happ Crypto Link",
        "tags": [
          "System Controller"
        ]
      }
    },
    "/api/subscription-settings": {
      "get": {
        "operationId": "SubscriptionSettingsController_getSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Subscription settings retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionSettingsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get subscription settings",
        "tags": [
          "Subscription Settings Controller"
        ]
      },
      "patch": {
        "operationId": "SubscriptionSettingsController_updateSettings",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionSettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Subscription settings updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSubscriptionSettingsResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Update subscription settings",
        "tags": [
          "Subscription Settings Controller"
        ]
      }
    }
  },
  "info": {
    "title": "Remnawave API v2.1.19",
    "description": "\nRemnawave is a powerful proxy management tool, built on top of Xray-core, with a focus on simplicity and ease of use.\n\n## Resources\n* https://t.me/remnawave\n* https://github.com/remnawave\n* https://remna.st\n",
    "version": "2.1.19",
    "contact": {},
    "license": {
      "name": "AGPL-3.0",
      "url": "https://github.com/remnawave/panel?tab=AGPL-3.0-1-ov-file"
    }
  },
  "tags": [
    {
      "name": "Auth Controller",
      "description": "Used to authenticate admin users."
    },
    {
      "name": "API Tokens Controller",
      "description": "Manage API tokens to use in your code. This controller can't be used with API token, only with Admin JWT token"
    },
    {
      "name": "Users Controller",
      "description": "Manage users, change their status, reset traffic, etc."
    },
    {
      "name": "Users Bulk Actions Controller",
      "description": "Bulk actions with users."
    },
    {
      "name": "Users Stats Controller",
      "description": ""
    },
    {
      "name": "HWID User Devices Controller",
      "description": ""
    },
    {
      "name": "[Public] Subscription Controller",
      "description": "Public Subscription Controller. Methods of this controller are not protected with auth. Use it only for public requests."
    },
    {
      "name": "[Protected] Subscriptions Controller",
      "description": "Methods of this controller are protected with auth, most of them is returning the same informations as public Subscription Controller."
    },
    {
      "name": "Config Profiles Controller",
      "description": "Management of Config Profiles."
    },
    {
      "name": "Internal Squads Controller",
      "description": "Management of Internal Squads."
    },
    {
      "name": "Nodes Controller",
      "description": ""
    },
    {
      "name": "Hosts Controller",
      "description": ""
    },
    {
      "name": "Hosts Bulk Actions Controller",
      "description": ""
    },
    {
      "name": "Subscription Template Controller",
      "description": ""
    },
    {
      "name": "Subscription Settings Controller",
      "description": ""
    },
    {
      "name": "Infra Billing Controller",
      "description": ""
    },
    {
      "name": "System Controller",
      "description": ""
    },
    {
      "name": "Bandwidth Stats Controller",
      "description": ""
    },
    {
      "name": "Keygen Controller",
      "description": "Generation of SSL_CERT for Remnawave Node."
    },
    {
      "name": "Subscription Request History Controller",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "Authorization": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "Authorization",
        "description": "JWT obtained login."
      },
      "Prometheus": {
        "type": "http",
        "scheme": "basic",
        "name": "Prometheus",
        "description": "Prometheus Basic Auth"
      }
    },
    "schemas": {
      "LoginRequestDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ],
        "description": "Login Request Dto"
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string"
              }
            },
            "required": [
              "accessToken"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Login Response Dto"
      },
      "RegisterRequestDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "minLength": 24,
            "pattern": "^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{24,}$"
          }
        },
        "required": [
          "username",
          "password"
        ],
        "description": "Register Request Dto"
      },
      "RegisterResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string"
              }
            },
            "required": [
              "accessToken"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Register Response Dto"
      },
      "GetStatusResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "isLoginAllowed": {
                "type": "boolean"
              },
              "isRegisterAllowed": {
                "type": "boolean"
              },
              "tgAuth": {
                "type": "object",
                "properties": {
                  "botId": {
                    "type": "number"
                  }
                },
                "required": [
                  "botId"
                ],
                "nullable": true
              },
              "oauth2": {
                "type": "object",
                "properties": {
                  "providers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  }
                },
                "required": [
                  "providers"
                ]
              },
              "branding": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "nullable": true
                  },
                  "logoUrl": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "title",
                  "logoUrl"
                ]
              }
            },
            "required": [
              "isLoginAllowed",
              "isRegisterAllowed",
              "tgAuth",
              "oauth2",
              "branding"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Status Response Dto"
      },
      "TelegramCallbackRequestDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "photo_url": {
            "type": "string"
          },
          "auth_date": {
            "type": "number"
          },
          "hash": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "first_name",
          "auth_date",
          "hash"
        ],
        "description": "Telegram Callback Request Dto"
      },
      "TelegramCallbackResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string"
              }
            },
            "required": [
              "accessToken"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Telegram Callback Response Dto"
      },
      "OAuth2AuthorizeRequestDto": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "github",
              "pocketid",
              "yandex"
            ],
            "x-enumNames": [
              "GITHUB",
              "POCKETID",
              "YANDEX"
            ]
          }
        },
        "required": [
          "provider"
        ],
        "description": "OAuth2Authorize Request Dto"
      },
      "OAuth2AuthorizeResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "authorizationUrl": {
                "type": "string",
                "format": "uri",
                "nullable": true
              }
            },
            "required": [
              "authorizationUrl"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "OAuth2Authorize Response Dto"
      },
      "OAuth2CallbackRequestDto": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "github",
              "pocketid",
              "yandex"
            ],
            "x-enumNames": [
              "GITHUB",
              "POCKETID",
              "YANDEX"
            ]
          },
          "code": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        },
        "required": [
          "provider",
          "code",
          "state"
        ],
        "description": "OAuth2Callback Request Dto"
      },
      "OAuth2CallbackResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string"
              }
            },
            "required": [
              "accessToken"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "OAuth2Callback Response Dto"
      },
      "CreateUserRequestDto": {
        "type": "object",
        "properties": {
          "username": {
            "description": "Unique username for the user. Required. Must be 3-36 characters long and contain only letters, numbers, underscores and dashes.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "maxLength": 36,
            "minLength": 3
          },
          "status": {
            "description": "Optional. User account status. Defaults to ACTIVE.",
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "LIMITED",
              "EXPIRED"
            ],
            "x-enumNames": [
              "ACTIVE",
              "DISABLED",
              "LIMITED",
              "EXPIRED"
            ],
            "default": "ACTIVE"
          },
          "shortUuid": {
            "description": "Optional. Short UUID identifier for the user.",
            "type": "string"
          },
          "trojanPassword": {
            "description": "Optional. Password for Trojan protocol. Must be 8-32 characters.",
            "type": "string",
            "minLength": 8,
            "maxLength": 32
          },
          "vlessUuid": {
            "description": "Optional. UUID for VLESS protocol. Must be a valid UUID format.",
            "type": "string",
            "format": "uuid"
          },
          "ssPassword": {
            "description": "Optional. Password for Shadowsocks protocol. Must be 8-32 characters.",
            "type": "string",
            "minLength": 8,
            "maxLength": 32
          },
          "trafficLimitBytes": {
            "description": "Optional. Traffic limit in bytes. Set to 0 for unlimited traffic.",
            "type": "integer",
            "minimum": 0
          },
          "trafficLimitStrategy": {
            "description": "Available reset periods",
            "type": "string",
            "enum": [
              "NO_RESET",
              "DAY",
              "WEEK",
              "MONTH"
            ],
            "x-enumNames": [
              "NO_RESET",
              "DAY",
              "WEEK",
              "MONTH"
            ],
            "default": "NO_RESET"
          },
          "expireAt": {
            "description": "Account expiration date. Required. Format: 2025-01-17T15:38:45.065Z",
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "description": "Optional. Account creation date. Format: 2025-01-17T15:38:45.065Z",
            "type": "string",
            "format": "date-time"
          },
          "lastTrafficResetAt": {
            "description": "Optional. Date of last traffic reset. Format: 2025-01-17T15:38:45.065Z",
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "description": "Optional. Additional notes or description for the user account.",
            "type": "string"
          },
          "tag": {
            "description": "Optional. User tag for categorization. Max 16 characters, uppercase letters, numbers and underscores only.",
            "type": "string",
            "pattern": "^[A-Z0-9_]+$",
            "maxLength": 16,
            "nullable": true
          },
          "telegramId": {
            "description": "Optional. Telegram user ID for notifications. Must be an integer.",
            "type": "integer",
            "nullable": true
          },
          "email": {
            "description": "Optional. User email address. Must be a valid email format.",
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "hwidDeviceLimit": {
            "description": "Optional. Maximum number of hardware devices allowed. Must be a positive integer.",
            "type": "integer",
            "minimum": 0
          },
          "activeInternalSquads": {
            "description": "Optional. Array of UUIDs representing enabled internal squads.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "uuid": {
            "description": "Optional. Pass UUID to create user with specific UUID, otherwise it will be generated automatically.",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "username",
          "expireAt"
        ],
        "description": "Create User Request Dto"
      },
      "CreateUserResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "shortUuid": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "x-enumNames": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "default": "ACTIVE"
              },
              "usedTrafficBytes": {
                "type": "number"
              },
              "lifetimeUsedTrafficBytes": {
                "type": "number"
              },
              "trafficLimitBytes": {
                "type": "integer",
                "default": 0
              },
              "trafficLimitStrategy": {
                "description": "Available reset periods",
                "type": "string",
                "enum": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ],
                "x-enumNames": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ],
                "default": "NO_RESET"
              },
              "subLastUserAgent": {
                "type": "string",
                "nullable": true
              },
              "subLastOpenedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "expireAt": {
                "type": "string",
                "format": "date-time"
              },
              "onlineAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "subRevokedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastTrafficResetAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "trojanPassword": {
                "type": "string"
              },
              "vlessUuid": {
                "type": "string",
                "format": "uuid"
              },
              "ssPassword": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "tag": {
                "type": "string",
                "nullable": true
              },
              "telegramId": {
                "type": "integer",
                "nullable": true
              },
              "email": {
                "type": "string",
                "format": "email",
                "nullable": true
              },
              "hwidDeviceLimit": {
                "type": "integer",
                "nullable": true
              },
              "firstConnectedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastTriggeredThreshold": {
                "type": "integer",
                "default": 0
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "activeInternalSquads": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "uuid",
                    "name"
                  ]
                }
              },
              "subscriptionUrl": {
                "type": "string"
              },
              "lastConnectedNode": {
                "type": "object",
                "properties": {
                  "connectedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "nodeName": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  }
                },
                "required": [
                  "connectedAt",
                  "nodeName",
                  "countryCode"
                ],
                "nullable": true
              },
              "happ": {
                "type": "object",
                "properties": {
                  "cryptoLink": {
                    "type": "string"
                  }
                },
                "required": [
                  "cryptoLink"
                ]
              }
            },
            "required": [
              "uuid",
              "shortUuid",
              "username",
              "usedTrafficBytes",
              "lifetimeUsedTrafficBytes",
              "subLastUserAgent",
              "subLastOpenedAt",
              "expireAt",
              "onlineAt",
              "subRevokedAt",
              "lastTrafficResetAt",
              "trojanPassword",
              "vlessUuid",
              "ssPassword",
              "description",
              "tag",
              "telegramId",
              "email",
              "hwidDeviceLimit",
              "firstConnectedAt",
              "createdAt",
              "updatedAt",
              "activeInternalSquads",
              "subscriptionUrl",
              "lastConnectedNode",
              "happ"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Create User Response Dto"
      },
      "UpdateUserRequestDto": {
        "type": "object",
        "properties": {
          "username": {
            "description": "Username of the user",
            "type": "string"
          },
          "uuid": {
            "description": "UUID of the user. UUID has higher priority than username, so if both are provided, username will be ignored.",
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED"
            ]
          },
          "trafficLimitBytes": {
            "description": "Traffic limit in bytes. 0 - unlimited",
            "type": "integer",
            "minimum": 0
          },
          "trafficLimitStrategy": {
            "description": "Available reset periods",
            "type": "string",
            "enum": [
              "NO_RESET",
              "DAY",
              "WEEK",
              "MONTH"
            ],
            "x-enumNames": [
              "NO_RESET",
              "DAY",
              "WEEK",
              "MONTH"
            ],
            "default": "NO_RESET"
          },
          "expireAt": {
            "description": "Expiration date: 2025-01-17T15:38:45.065Z",
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "tag": {
            "type": "string",
            "pattern": "^[A-Z0-9_]+$",
            "maxLength": 16,
            "nullable": true
          },
          "telegramId": {
            "type": "integer",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "hwidDeviceLimit": {
            "type": "integer",
            "minimum": 0,
            "nullable": true
          },
          "activeInternalSquads": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "description": "Update User Request Dto"
      },
      "UpdateUserResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "shortUuid": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "x-enumNames": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "default": "ACTIVE"
              },
              "usedTrafficBytes": {
                "type": "number"
              },
              "lifetimeUsedTrafficBytes": {
                "type": "number"
              },
              "trafficLimitBytes": {
                "type": "integer",
                "default": 0
              },
              "trafficLimitStrategy": {
                "description": "Available reset periods",
                "type": "string",
                "enum": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ],
                "x-enumNames": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ],
                "default": "NO_RESET"
              },
              "subLastUserAgent": {
                "type": "string",
                "nullable": true
              },
              "subLastOpenedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "expireAt": {
                "type": "string",
                "format": "date-time"
              },
              "onlineAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "subRevokedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastTrafficResetAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "trojanPassword": {
                "type": "string"
              },
              "vlessUuid": {
                "type": "string",
                "format": "uuid"
              },
              "ssPassword": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "tag": {
                "type": "string",
                "nullable": true
              },
              "telegramId": {
                "type": "integer",
                "nullable": true
              },
              "email": {
                "type": "string",
                "format": "email",
                "nullable": true
              },
              "hwidDeviceLimit": {
                "type": "integer",
                "nullable": true
              },
              "firstConnectedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastTriggeredThreshold": {
                "type": "integer",
                "default": 0
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "activeInternalSquads": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "uuid",
                    "name"
                  ]
                }
              },
              "subscriptionUrl": {
                "type": "string"
              },
              "lastConnectedNode": {
                "type": "object",
                "properties": {
                  "connectedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "nodeName": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  }
                },
                "required": [
                  "connectedAt",
                  "nodeName",
                  "countryCode"
                ],
                "nullable": true
              },
              "happ": {
                "type": "object",
                "properties": {
                  "cryptoLink": {
                    "type": "string"
                  }
                },
                "required": [
                  "cryptoLink"
                ]
              }
            },
            "required": [
              "uuid",
              "shortUuid",
              "username",
              "usedTrafficBytes",
              "lifetimeUsedTrafficBytes",
              "subLastUserAgent",
              "subLastOpenedAt",
              "expireAt",
              "onlineAt",
              "subRevokedAt",
              "lastTrafficResetAt",
              "trojanPassword",
              "vlessUuid",
              "ssPassword",
              "description",
              "tag",
              "telegramId",
              "email",
              "hwidDeviceLimit",
              "firstConnectedAt",
              "createdAt",
              "updatedAt",
              "activeInternalSquads",
              "subscriptionUrl",
              "lastConnectedNode",
              "happ"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Update User Response Dto"
      },
      "DeleteUserResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "isDeleted": {
                "type": "boolean"
              }
            },
            "required": [
              "isDeleted"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Delete User Response Dto"
      },
      "GetAllUsersResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "users": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "shortUuid": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ACTIVE",
                        "DISABLED",
                        "LIMITED",
                        "EXPIRED"
                      ],
                      "x-enumNames": [
                        "ACTIVE",
                        "DISABLED",
                        "LIMITED",
                        "EXPIRED"
                      ],
                      "default": "ACTIVE"
                    },
                    "usedTrafficBytes": {
                      "type": "number"
                    },
                    "lifetimeUsedTrafficBytes": {
                      "type": "number"
                    },
                    "trafficLimitBytes": {
                      "type": "integer",
                      "default": 0
                    },
                    "trafficLimitStrategy": {
                      "description": "Available reset periods",
                      "type": "string",
                      "enum": [
                        "NO_RESET",
                        "DAY",
                        "WEEK",
                        "MONTH"
                      ],
                      "x-enumNames": [
                        "NO_RESET",
                        "DAY",
                        "WEEK",
                        "MONTH"
                      ],
                      "default": "NO_RESET"
                    },
                    "subLastUserAgent": {
                      "type": "string",
                      "nullable": true
                    },
                    "subLastOpenedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "expireAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "onlineAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "subRevokedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "lastTrafficResetAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "trojanPassword": {
                      "type": "string"
                    },
                    "vlessUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "ssPassword": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "tag": {
                      "type": "string",
                      "nullable": true
                    },
                    "telegramId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "nullable": true
                    },
                    "hwidDeviceLimit": {
                      "type": "integer",
                      "nullable": true
                    },
                    "firstConnectedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "lastTriggeredThreshold": {
                      "type": "integer",
                      "default": 0
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "activeInternalSquads": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "uuid",
                          "name"
                        ]
                      }
                    },
                    "subscriptionUrl": {
                      "type": "string"
                    },
                    "lastConnectedNode": {
                      "type": "object",
                      "properties": {
                        "connectedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "nodeName": {
                          "type": "string"
                        },
                        "countryCode": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "connectedAt",
                        "nodeName",
                        "countryCode"
                      ],
                      "nullable": true
                    },
                    "happ": {
                      "type": "object",
                      "properties": {
                        "cryptoLink": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "cryptoLink"
                      ]
                    }
                  },
                  "required": [
                    "uuid",
                    "shortUuid",
                    "username",
                    "usedTrafficBytes",
                    "lifetimeUsedTrafficBytes",
                    "subLastUserAgent",
                    "subLastOpenedAt",
                    "expireAt",
                    "onlineAt",
                    "subRevokedAt",
                    "lastTrafficResetAt",
                    "trojanPassword",
                    "vlessUuid",
                    "ssPassword",
                    "description",
                    "tag",
                    "telegramId",
                    "email",
                    "hwidDeviceLimit",
                    "firstConnectedAt",
                    "createdAt",
                    "updatedAt",
                    "activeInternalSquads",
                    "subscriptionUrl",
                    "lastConnectedNode",
                    "happ"
                  ]
                }
              },
              "total": {
                "type": "number"
              }
            },
            "required": [
              "users",
              "total"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get All Users Response Dto"
      },
      "GetAllTagsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "tags"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get All Tags Response Dto"
      },
      "GetUserAccessibleNodesResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "userUuid": {
                "type": "string",
                "format": "uuid"
              },
              "activeNodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "nodeName": {
                      "type": "string"
                    },
                    "countryCode": {
                      "type": "string"
                    },
                    "configProfileUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "configProfileName": {
                      "type": "string"
                    },
                    "activeSquads": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "squadName": {
                            "type": "string"
                          },
                          "activeInbounds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "squadName",
                          "activeInbounds"
                        ]
                      }
                    }
                  },
                  "required": [
                    "uuid",
                    "nodeName",
                    "countryCode",
                    "configProfileUuid",
                    "configProfileName",
                    "activeSquads"
                  ]
                }
              }
            },
            "required": [
              "userUuid",
              "activeNodes"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get User Accessible Nodes Response Dto"
      },
      "GetUserSubscriptionRequestHistoryResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "records": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "userUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "requestIp": {
                      "type": "string",
                      "nullable": true
                    },
                    "userAgent": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "userUuid",
                    "requestAt",
                    "requestIp",
                    "userAgent"
                  ]
                }
              }
            },
            "required": [
              "total",
              "records"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get User Subscription Request History Response Dto"
      },
      "GetUserByShortUuidResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "shortUuid": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "x-enumNames": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "default": "ACTIVE"
              },
              "usedTrafficBytes": {
                "type": "number"
              },
              "lifetimeUsedTrafficBytes": {
                "type": "number"
              },
              "trafficLimitBytes": {
                "type": "integer",
                "default": 0
              },
              "trafficLimitStrategy": {
                "description": "Available reset periods",
                "type": "string",
                "enum": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ],
                "x-enumNames": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ],
                "default": "NO_RESET"
              },
              "subLastUserAgent": {
                "type": "string",
                "nullable": true
              },
              "subLastOpenedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "expireAt": {
                "type": "string",
                "format": "date-time"
              },
              "onlineAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "subRevokedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastTrafficResetAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "trojanPassword": {
                "type": "string"
              },
              "vlessUuid": {
                "type": "string",
                "format": "uuid"
              },
              "ssPassword": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "tag": {
                "type": "string",
                "nullable": true
              },
              "telegramId": {
                "type": "integer",
                "nullable": true
              },
              "email": {
                "type": "string",
                "format": "email",
                "nullable": true
              },
              "hwidDeviceLimit": {
                "type": "integer",
                "nullable": true
              },
              "firstConnectedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastTriggeredThreshold": {
                "type": "integer",
                "default": 0
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "activeInternalSquads": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "uuid",
                    "name"
                  ]
                }
              },
              "subscriptionUrl": {
                "type": "string"
              },
              "lastConnectedNode": {
                "type": "object",
                "properties": {
                  "connectedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "nodeName": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  }
                },
                "required": [
                  "connectedAt",
                  "nodeName",
                  "countryCode"
                ],
                "nullable": true
              },
              "happ": {
                "type": "object",
                "properties": {
                  "cryptoLink": {
                    "type": "string"
                  }
                },
                "required": [
                  "cryptoLink"
                ]
              }
            },
            "required": [
              "uuid",
              "shortUuid",
              "username",
              "usedTrafficBytes",
              "lifetimeUsedTrafficBytes",
              "subLastUserAgent",
              "subLastOpenedAt",
              "expireAt",
              "onlineAt",
              "subRevokedAt",
              "lastTrafficResetAt",
              "trojanPassword",
              "vlessUuid",
              "ssPassword",
              "description",
              "tag",
              "telegramId",
              "email",
              "hwidDeviceLimit",
              "firstConnectedAt",
              "createdAt",
              "updatedAt",
              "activeInternalSquads",
              "subscriptionUrl",
              "lastConnectedNode",
              "happ"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get User By Short Uuid Response Dto"
      },
      "GetUserByUuidResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "shortUuid": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "x-enumNames": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "default": "ACTIVE"
              },
              "usedTrafficBytes": {
                "type": "number"
              },
              "lifetimeUsedTrafficBytes": {
                "type": "number"
              },
              "trafficLimitBytes": {
                "type": "integer",
                "default": 0
              },
              "trafficLimitStrategy": {
                "description": "Available reset periods",
                "type": "string",
                "enum": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ],
                "x-enumNames": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ],
                "default": "NO_RESET"
              },
              "subLastUserAgent": {
                "type": "string",
                "nullable": true
              },
              "subLastOpenedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "expireAt": {
                "type": "string",
                "format": "date-time"
              },
              "onlineAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "subRevokedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastTrafficResetAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "trojanPassword": {
                "type": "string"
              },
              "vlessUuid": {
                "type": "string",
                "format": "uuid"
              },
              "ssPassword": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "tag": {
                "type": "string",
                "nullable": true
              },
              "telegramId": {
                "type": "integer",
                "nullable": true
              },
              "email": {
                "type": "string",
                "format": "email",
                "nullable": true
              },
              "hwidDeviceLimit": {
                "type": "integer",
                "nullable": true
              },
              "firstConnectedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastTriggeredThreshold": {
                "type": "integer",
                "default": 0
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "activeInternalSquads": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "uuid",
                    "name"
                  ]
                }
              },
              "subscriptionUrl": {
                "type": "string"
              },
              "lastConnectedNode": {
                "type": "object",
                "properties": {
                  "connectedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "nodeName": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  }
                },
                "required": [
                  "connectedAt",
                  "nodeName",
                  "countryCode"
                ],
                "nullable": true
              },
              "happ": {
                "type": "object",
                "properties": {
                  "cryptoLink": {
                    "type": "string"
                  }
                },
                "required": [
                  "cryptoLink"
                ]
              }
            },
            "required": [
              "uuid",
              "shortUuid",
              "username",
              "usedTrafficBytes",
              "lifetimeUsedTrafficBytes",
              "subLastUserAgent",
              "subLastOpenedAt",
              "expireAt",
              "onlineAt",
              "subRevokedAt",
              "lastTrafficResetAt",
              "trojanPassword",
              "vlessUuid",
              "ssPassword",
              "description",
              "tag",
              "telegramId",
              "email",
              "hwidDeviceLimit",
              "firstConnectedAt",
              "createdAt",
              "updatedAt",
              "activeInternalSquads",
              "subscriptionUrl",
              "lastConnectedNode",
              "happ"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get User By Uuid Response Dto"
      },
      "GetUserByUsernameResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "shortUuid": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "x-enumNames": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "default": "ACTIVE"
              },
              "usedTrafficBytes": {
                "type": "number"
              },
              "lifetimeUsedTrafficBytes": {
                "type": "number"
              },
              "trafficLimitBytes": {
                "type": "integer",
                "default": 0
              },
              "trafficLimitStrategy": {
                "description": "Available reset periods",
                "type": "string",
                "enum": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ],
                "x-enumNames": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ],
                "default": "NO_RESET"
              },
              "subLastUserAgent": {
                "type": "string",
                "nullable": true
              },
              "subLastOpenedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "expireAt": {
                "type": "string",
                "format": "date-time"
              },
              "onlineAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "subRevokedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastTrafficResetAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "trojanPassword": {
                "type": "string"
              },
              "vlessUuid": {
                "type": "string",
                "format": "uuid"
              },
              "ssPassword": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "tag": {
                "type": "string",
                "nullable": true
              },
              "telegramId": {
                "type": "integer",
                "nullable": true
              },
              "email": {
                "type": "string",
                "format": "email",
                "nullable": true
              },
              "hwidDeviceLimit": {
                "type": "integer",
                "nullable": true
              },
              "firstConnectedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastTriggeredThreshold": {
                "type": "integer",
                "default": 0
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "activeInternalSquads": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "uuid",
                    "name"
                  ]
                }
              },
              "subscriptionUrl": {
                "type": "string"
              },
              "lastConnectedNode": {
                "type": "object",
                "properties": {
                  "connectedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "nodeName": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  }
                },
                "required": [
                  "connectedAt",
                  "nodeName",
                  "countryCode"
                ],
                "nullable": true
              },
              "happ": {
                "type": "object",
                "properties": {
                  "cryptoLink": {
                    "type": "string"
                  }
                },
                "required": [
                  "cryptoLink"
                ]
              }
            },
            "required": [
              "uuid",
              "shortUuid",
              "username",
              "usedTrafficBytes",
              "lifetimeUsedTrafficBytes",
              "subLastUserAgent",
              "subLastOpenedAt",
              "expireAt",
              "onlineAt",
              "subRevokedAt",
              "lastTrafficResetAt",
              "trojanPassword",
              "vlessUuid",
              "ssPassword",
              "description",
              "tag",
              "telegramId",
              "email",
              "hwidDeviceLimit",
              "firstConnectedAt",
              "createdAt",
              "updatedAt",
              "activeInternalSquads",
              "subscriptionUrl",
              "lastConnectedNode",
              "happ"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get User By Username Response Dto"
      },
      "GetUserByTelegramIdResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "shortUuid": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "ACTIVE",
                    "DISABLED",
                    "LIMITED",
                    "EXPIRED"
                  ],
                  "x-enumNames": [
                    "ACTIVE",
                    "DISABLED",
                    "LIMITED",
                    "EXPIRED"
                  ],
                  "default": "ACTIVE"
                },
                "usedTrafficBytes": {
                  "type": "number"
                },
                "lifetimeUsedTrafficBytes": {
                  "type": "number"
                },
                "trafficLimitBytes": {
                  "type": "integer",
                  "default": 0
                },
                "trafficLimitStrategy": {
                  "description": "Available reset periods",
                  "type": "string",
                  "enum": [
                    "NO_RESET",
                    "DAY",
                    "WEEK",
                    "MONTH"
                  ],
                  "x-enumNames": [
                    "NO_RESET",
                    "DAY",
                    "WEEK",
                    "MONTH"
                  ],
                  "default": "NO_RESET"
                },
                "subLastUserAgent": {
                  "type": "string",
                  "nullable": true
                },
                "subLastOpenedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "expireAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "onlineAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "subRevokedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "lastTrafficResetAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "trojanPassword": {
                  "type": "string"
                },
                "vlessUuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "ssPassword": {
                  "type": "string"
                },
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "tag": {
                  "type": "string",
                  "nullable": true
                },
                "telegramId": {
                  "type": "integer",
                  "nullable": true
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "nullable": true
                },
                "hwidDeviceLimit": {
                  "type": "integer",
                  "nullable": true
                },
                "firstConnectedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "lastTriggeredThreshold": {
                  "type": "integer",
                  "default": 0
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "activeInternalSquads": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "uuid",
                      "name"
                    ]
                  }
                },
                "subscriptionUrl": {
                  "type": "string"
                },
                "lastConnectedNode": {
                  "type": "object",
                  "properties": {
                    "connectedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "nodeName": {
                      "type": "string"
                    },
                    "countryCode": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "connectedAt",
                    "nodeName",
                    "countryCode"
                  ],
                  "nullable": true
                },
                "happ": {
                  "type": "object",
                  "properties": {
                    "cryptoLink": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "cryptoLink"
                  ]
                }
              },
              "required": [
                "uuid",
                "shortUuid",
                "username",
                "usedTrafficBytes",
                "lifetimeUsedTrafficBytes",
                "subLastUserAgent",
                "subLastOpenedAt",
                "expireAt",
                "onlineAt",
                "subRevokedAt",
                "lastTrafficResetAt",
                "trojanPassword",
                "vlessUuid",
                "ssPassword",
                "description",
                "tag",
                "telegramId",
                "email",
                "hwidDeviceLimit",
                "firstConnectedAt",
                "createdAt",
                "updatedAt",
                "activeInternalSquads",
                "subscriptionUrl",
                "lastConnectedNode",
                "happ"
              ]
            }
          }
        },
        "required": [
          "response"
        ],
        "description": "Get User By Telegram Id Response Dto"
      },
      "GetUserByEmailResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "shortUuid": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "ACTIVE",
                    "DISABLED",
                    "LIMITED",
                    "EXPIRED"
                  ],
                  "x-enumNames": [
                    "ACTIVE",
                    "DISABLED",
                    "LIMITED",
                    "EXPIRED"
                  ],
                  "default": "ACTIVE"
                },
                "usedTrafficBytes": {
                  "type": "number"
                },
                "lifetimeUsedTrafficBytes": {
                  "type": "number"
                },
                "trafficLimitBytes": {
                  "type": "integer",
                  "default": 0
                },
                "trafficLimitStrategy": {
                  "description": "Available reset periods",
                  "type": "string",
                  "enum": [
                    "NO_RESET",
                    "DAY",
                    "WEEK",
                    "MONTH"
                  ],
                  "x-enumNames": [
                    "NO_RESET",
                    "DAY",
                    "WEEK",
                    "MONTH"
                  ],
                  "default": "NO_RESET"
                },
                "subLastUserAgent": {
                  "type": "string",
                  "nullable": true
                },
                "subLastOpenedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "expireAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "onlineAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "subRevokedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "lastTrafficResetAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "trojanPassword": {
                  "type": "string"
                },
                "vlessUuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "ssPassword": {
                  "type": "string"
                },
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "tag": {
                  "type": "string",
                  "nullable": true
                },
                "telegramId": {
                  "type": "integer",
                  "nullable": true
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "nullable": true
                },
                "hwidDeviceLimit": {
                  "type": "integer",
                  "nullable": true
                },
                "firstConnectedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "lastTriggeredThreshold": {
                  "type": "integer",
                  "default": 0
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "activeInternalSquads": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "uuid",
                      "name"
                    ]
                  }
                },
                "subscriptionUrl": {
                  "type": "string"
                },
                "lastConnectedNode": {
                  "type": "object",
                  "properties": {
                    "connectedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "nodeName": {
                      "type": "string"
                    },
                    "countryCode": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "connectedAt",
                    "nodeName",
                    "countryCode"
                  ],
                  "nullable": true
                },
                "happ": {
                  "type": "object",
                  "properties": {
                    "cryptoLink": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "cryptoLink"
                  ]
                }
              },
              "required": [
                "uuid",
                "shortUuid",
                "username",
                "usedTrafficBytes",
                "lifetimeUsedTrafficBytes",
                "subLastUserAgent",
                "subLastOpenedAt",
                "expireAt",
                "onlineAt",
                "subRevokedAt",
                "lastTrafficResetAt",
                "trojanPassword",
                "vlessUuid",
                "ssPassword",
                "description",
                "tag",
                "telegramId",
                "email",
                "hwidDeviceLimit",
                "firstConnectedAt",
                "createdAt",
                "updatedAt",
                "activeInternalSquads",
                "subscriptionUrl",
                "lastConnectedNode",
                "happ"
              ]
            }
          }
        },
        "required": [
          "response"
        ],
        "description": "Get User By Email Response Dto"
      },
      "GetUserByTagResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "shortUuid": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "ACTIVE",
                    "DISABLED",
                    "LIMITED",
                    "EXPIRED"
                  ],
                  "x-enumNames": [
                    "ACTIVE",
                    "DISABLED",
                    "LIMITED",
                    "EXPIRED"
                  ],
                  "default": "ACTIVE"
                },
                "usedTrafficBytes": {
                  "type": "number"
                },
                "lifetimeUsedTrafficBytes": {
                  "type": "number"
                },
                "trafficLimitBytes": {
                  "type": "integer",
                  "default": 0
                },
                "trafficLimitStrategy": {
                  "description": "Available reset periods",
                  "type": "string",
                  "enum": [
                    "NO_RESET",
                    "DAY",
                    "WEEK",
                    "MONTH"
                  ],
                  "x-enumNames": [
                    "NO_RESET",
                    "DAY",
                    "WEEK",
                    "MONTH"
                  ],
                  "default": "NO_RESET"
                },
                "subLastUserAgent": {
                  "type": "string",
                  "nullable": true
                },
                "subLastOpenedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "expireAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "onlineAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "subRevokedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "lastTrafficResetAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "trojanPassword": {
                  "type": "string"
                },
                "vlessUuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "ssPassword": {
                  "type": "string"
                },
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "tag": {
                  "type": "string",
                  "nullable": true
                },
                "telegramId": {
                  "type": "integer",
                  "nullable": true
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "nullable": true
                },
                "hwidDeviceLimit": {
                  "type": "integer",
                  "nullable": true
                },
                "firstConnectedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "lastTriggeredThreshold": {
                  "type": "integer",
                  "default": 0
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "activeInternalSquads": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "uuid",
                      "name"
                    ]
                  }
                },
                "subscriptionUrl": {
                  "type": "string"
                },
                "lastConnectedNode": {
                  "type": "object",
                  "properties": {
                    "connectedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "nodeName": {
                      "type": "string"
                    },
                    "countryCode": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "connectedAt",
                    "nodeName",
                    "countryCode"
                  ],
                  "nullable": true
                },
                "happ": {
                  "type": "object",
                  "properties": {
                    "cryptoLink": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "cryptoLink"
                  ]
                }
              },
              "required": [
                "uuid",
                "shortUuid",
                "username",
                "usedTrafficBytes",
                "lifetimeUsedTrafficBytes",
                "subLastUserAgent",
                "subLastOpenedAt",
                "expireAt",
                "onlineAt",
                "subRevokedAt",
                "lastTrafficResetAt",
                "trojanPassword",
                "vlessUuid",
                "ssPassword",
                "description",
                "tag",
                "telegramId",
                "email",
                "hwidDeviceLimit",
                "firstConnectedAt",
                "createdAt",
                "updatedAt",
                "activeInternalSquads",
                "subscriptionUrl",
                "lastConnectedNode",
                "happ"
              ]
            }
          }
        },
        "required": [
          "response"
        ],
        "description": "Get User By Tag Response Dto"
      },
      "RevokeUserSubscriptionBodyDto": {
        "type": "object",
        "properties": {
          "shortUuid": {
            "description": "Optional. If not provided, a new short UUID will be generated by Remnawave. Please note that it is strongly recommended to allow Remnawave to generate the short UUID.",
            "type": "string",
            "minLength": 6,
            "maxLength": 48
          }
        },
        "description": "Revoke User Subscription Body Dto"
      },
      "RevokeUserSubscriptionResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "shortUuid": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "x-enumNames": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "default": "ACTIVE"
              },
              "usedTrafficBytes": {
                "type": "number"
              },
              "lifetimeUsedTrafficBytes": {
                "type": "number"
              },
              "trafficLimitBytes": {
                "type": "integer",
                "default": 0
              },
              "trafficLimitStrategy": {
                "description": "Available reset periods",
                "type": "string",
                "enum": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ],
                "x-enumNames": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ],
                "default": "NO_RESET"
              },
              "subLastUserAgent": {
                "type": "string",
                "nullable": true
              },
              "subLastOpenedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "expireAt": {
                "type": "string",
                "format": "date-time"
              },
              "onlineAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "subRevokedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastTrafficResetAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "trojanPassword": {
                "type": "string"
              },
              "vlessUuid": {
                "type": "string",
                "format": "uuid"
              },
              "ssPassword": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "tag": {
                "type": "string",
                "nullable": true
              },
              "telegramId": {
                "type": "integer",
                "nullable": true
              },
              "email": {
                "type": "string",
                "format": "email",
                "nullable": true
              },
              "hwidDeviceLimit": {
                "type": "integer",
                "nullable": true
              },
              "firstConnectedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastTriggeredThreshold": {
                "type": "integer",
                "default": 0
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "activeInternalSquads": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "uuid",
                    "name"
                  ]
                }
              },
              "subscriptionUrl": {
                "type": "string"
              },
              "lastConnectedNode": {
                "type": "object",
                "properties": {
                  "connectedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "nodeName": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  }
                },
                "required": [
                  "connectedAt",
                  "nodeName",
                  "countryCode"
                ],
                "nullable": true
              },
              "happ": {
                "type": "object",
                "properties": {
                  "cryptoLink": {
                    "type": "string"
                  }
                },
                "required": [
                  "cryptoLink"
                ]
              }
            },
            "required": [
              "uuid",
              "shortUuid",
              "username",
              "usedTrafficBytes",
              "lifetimeUsedTrafficBytes",
              "subLastUserAgent",
              "subLastOpenedAt",
              "expireAt",
              "onlineAt",
              "subRevokedAt",
              "lastTrafficResetAt",
              "trojanPassword",
              "vlessUuid",
              "ssPassword",
              "description",
              "tag",
              "telegramId",
              "email",
              "hwidDeviceLimit",
              "firstConnectedAt",
              "createdAt",
              "updatedAt",
              "activeInternalSquads",
              "subscriptionUrl",
              "lastConnectedNode",
              "happ"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Revoke User Subscription Response Dto"
      },
      "DisableUserResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "shortUuid": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "x-enumNames": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "default": "ACTIVE"
              },
              "usedTrafficBytes": {
                "type": "number"
              },
              "lifetimeUsedTrafficBytes": {
                "type": "number"
              },
              "trafficLimitBytes": {
                "type": "integer",
                "default": 0
              },
              "trafficLimitStrategy": {
                "description": "Available reset periods",
                "type": "string",
                "enum": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ],
                "x-enumNames": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ],
                "default": "NO_RESET"
              },
              "subLastUserAgent": {
                "type": "string",
                "nullable": true
              },
              "subLastOpenedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "expireAt": {
                "type": "string",
                "format": "date-time"
              },
              "onlineAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "subRevokedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastTrafficResetAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "trojanPassword": {
                "type": "string"
              },
              "vlessUuid": {
                "type": "string",
                "format": "uuid"
              },
              "ssPassword": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "tag": {
                "type": "string",
                "nullable": true
              },
              "telegramId": {
                "type": "integer",
                "nullable": true
              },
              "email": {
                "type": "string",
                "format": "email",
                "nullable": true
              },
              "hwidDeviceLimit": {
                "type": "integer",
                "nullable": true
              },
              "firstConnectedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastTriggeredThreshold": {
                "type": "integer",
                "default": 0
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "activeInternalSquads": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "uuid",
                    "name"
                  ]
                }
              },
              "subscriptionUrl": {
                "type": "string"
              },
              "lastConnectedNode": {
                "type": "object",
                "properties": {
                  "connectedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "nodeName": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  }
                },
                "required": [
                  "connectedAt",
                  "nodeName",
                  "countryCode"
                ],
                "nullable": true
              },
              "happ": {
                "type": "object",
                "properties": {
                  "cryptoLink": {
                    "type": "string"
                  }
                },
                "required": [
                  "cryptoLink"
                ]
              }
            },
            "required": [
              "uuid",
              "shortUuid",
              "username",
              "usedTrafficBytes",
              "lifetimeUsedTrafficBytes",
              "subLastUserAgent",
              "subLastOpenedAt",
              "expireAt",
              "onlineAt",
              "subRevokedAt",
              "lastTrafficResetAt",
              "trojanPassword",
              "vlessUuid",
              "ssPassword",
              "description",
              "tag",
              "telegramId",
              "email",
              "hwidDeviceLimit",
              "firstConnectedAt",
              "createdAt",
              "updatedAt",
              "activeInternalSquads",
              "subscriptionUrl",
              "lastConnectedNode",
              "happ"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Disable User Response Dto"
      },
      "EnableUserResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "shortUuid": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "x-enumNames": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "default": "ACTIVE"
              },
              "usedTrafficBytes": {
                "type": "number"
              },
              "lifetimeUsedTrafficBytes": {
                "type": "number"
              },
              "trafficLimitBytes": {
                "type": "integer",
                "default": 0
              },
              "trafficLimitStrategy": {
                "description": "Available reset periods",
                "type": "string",
                "enum": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ],
                "x-enumNames": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ],
                "default": "NO_RESET"
              },
              "subLastUserAgent": {
                "type": "string",
                "nullable": true
              },
              "subLastOpenedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "expireAt": {
                "type": "string",
                "format": "date-time"
              },
              "onlineAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "subRevokedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastTrafficResetAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "trojanPassword": {
                "type": "string"
              },
              "vlessUuid": {
                "type": "string",
                "format": "uuid"
              },
              "ssPassword": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "tag": {
                "type": "string",
                "nullable": true
              },
              "telegramId": {
                "type": "integer",
                "nullable": true
              },
              "email": {
                "type": "string",
                "format": "email",
                "nullable": true
              },
              "hwidDeviceLimit": {
                "type": "integer",
                "nullable": true
              },
              "firstConnectedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastTriggeredThreshold": {
                "type": "integer",
                "default": 0
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "activeInternalSquads": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "uuid",
                    "name"
                  ]
                }
              },
              "subscriptionUrl": {
                "type": "string"
              },
              "lastConnectedNode": {
                "type": "object",
                "properties": {
                  "connectedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "nodeName": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  }
                },
                "required": [
                  "connectedAt",
                  "nodeName",
                  "countryCode"
                ],
                "nullable": true
              },
              "happ": {
                "type": "object",
                "properties": {
                  "cryptoLink": {
                    "type": "string"
                  }
                },
                "required": [
                  "cryptoLink"
                ]
              }
            },
            "required": [
              "uuid",
              "shortUuid",
              "username",
              "usedTrafficBytes",
              "lifetimeUsedTrafficBytes",
              "subLastUserAgent",
              "subLastOpenedAt",
              "expireAt",
              "onlineAt",
              "subRevokedAt",
              "lastTrafficResetAt",
              "trojanPassword",
              "vlessUuid",
              "ssPassword",
              "description",
              "tag",
              "telegramId",
              "email",
              "hwidDeviceLimit",
              "firstConnectedAt",
              "createdAt",
              "updatedAt",
              "activeInternalSquads",
              "subscriptionUrl",
              "lastConnectedNode",
              "happ"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Enable User Response Dto"
      },
      "ResetUserTrafficResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "shortUuid": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "x-enumNames": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "default": "ACTIVE"
              },
              "usedTrafficBytes": {
                "type": "number"
              },
              "lifetimeUsedTrafficBytes": {
                "type": "number"
              },
              "trafficLimitBytes": {
                "type": "integer",
                "default": 0
              },
              "trafficLimitStrategy": {
                "description": "Available reset periods",
                "type": "string",
                "enum": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ],
                "x-enumNames": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ],
                "default": "NO_RESET"
              },
              "subLastUserAgent": {
                "type": "string",
                "nullable": true
              },
              "subLastOpenedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "expireAt": {
                "type": "string",
                "format": "date-time"
              },
              "onlineAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "subRevokedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastTrafficResetAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "trojanPassword": {
                "type": "string"
              },
              "vlessUuid": {
                "type": "string",
                "format": "uuid"
              },
              "ssPassword": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "tag": {
                "type": "string",
                "nullable": true
              },
              "telegramId": {
                "type": "integer",
                "nullable": true
              },
              "email": {
                "type": "string",
                "format": "email",
                "nullable": true
              },
              "hwidDeviceLimit": {
                "type": "integer",
                "nullable": true
              },
              "firstConnectedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastTriggeredThreshold": {
                "type": "integer",
                "default": 0
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "activeInternalSquads": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "uuid",
                    "name"
                  ]
                }
              },
              "subscriptionUrl": {
                "type": "string"
              },
              "lastConnectedNode": {
                "type": "object",
                "properties": {
                  "connectedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "nodeName": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  }
                },
                "required": [
                  "connectedAt",
                  "nodeName",
                  "countryCode"
                ],
                "nullable": true
              },
              "happ": {
                "type": "object",
                "properties": {
                  "cryptoLink": {
                    "type": "string"
                  }
                },
                "required": [
                  "cryptoLink"
                ]
              }
            },
            "required": [
              "uuid",
              "shortUuid",
              "username",
              "usedTrafficBytes",
              "lifetimeUsedTrafficBytes",
              "subLastUserAgent",
              "subLastOpenedAt",
              "expireAt",
              "onlineAt",
              "subRevokedAt",
              "lastTrafficResetAt",
              "trojanPassword",
              "vlessUuid",
              "ssPassword",
              "description",
              "tag",
              "telegramId",
              "email",
              "hwidDeviceLimit",
              "firstConnectedAt",
              "createdAt",
              "updatedAt",
              "activeInternalSquads",
              "subscriptionUrl",
              "lastConnectedNode",
              "happ"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Reset User Traffic Response Dto"
      },
      "BulkDeleteUsersByStatusRequestDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "LIMITED",
              "EXPIRED"
            ],
            "x-enumNames": [
              "ACTIVE",
              "DISABLED",
              "LIMITED",
              "EXPIRED"
            ],
            "default": "ACTIVE"
          }
        },
        "description": "Bulk Delete Users By Status Request Dto"
      },
      "BulkDeleteUsersByStatusResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "affectedRows": {
                "type": "number"
              }
            },
            "required": [
              "affectedRows"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Bulk Delete Users By Status Response Dto"
      },
      "BulkDeleteUsersRequestDto": {
        "type": "object",
        "properties": {
          "uuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "uuids"
        ],
        "description": "Bulk Delete Users Request Dto"
      },
      "BulkDeleteUsersResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "affectedRows": {
                "type": "number"
              }
            },
            "required": [
              "affectedRows"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Bulk Delete Users Response Dto"
      },
      "BulkRevokeUsersSubscriptionRequestDto": {
        "type": "object",
        "properties": {
          "uuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "uuids"
        ],
        "description": "Bulk Revoke Users Subscription Request Dto"
      },
      "BulkRevokeUsersSubscriptionResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "affectedRows": {
                "type": "number"
              }
            },
            "required": [
              "affectedRows"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Bulk Revoke Users Subscription Response Dto"
      },
      "BulkResetTrafficUsersRequestDto": {
        "type": "object",
        "properties": {
          "uuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "uuids"
        ],
        "description": "Bulk Reset Traffic Users Request Dto"
      },
      "BulkResetTrafficUsersResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "affectedRows": {
                "type": "number"
              }
            },
            "required": [
              "affectedRows"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Bulk Reset Traffic Users Response Dto"
      },
      "BulkUpdateUsersRequestDto": {
        "type": "object",
        "properties": {
          "uuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "fields": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "x-enumNames": [
                  "ACTIVE",
                  "DISABLED",
                  "LIMITED",
                  "EXPIRED"
                ],
                "default": "ACTIVE"
              },
              "trafficLimitBytes": {
                "description": "Traffic limit in bytes. 0 - unlimited",
                "type": "integer",
                "minimum": 0
              },
              "trafficLimitStrategy": {
                "description": "Traffic limit reset strategy",
                "type": "string",
                "enum": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ],
                "x-enumNames": [
                  "NO_RESET",
                  "DAY",
                  "WEEK",
                  "MONTH"
                ]
              },
              "expireAt": {
                "description": "Expiration date: 2025-01-17T15:38:45.065Z",
                "type": "string",
                "format": "date-time"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "telegramId": {
                "type": "integer",
                "nullable": true
              },
              "email": {
                "type": "string",
                "format": "email",
                "nullable": true
              },
              "tag": {
                "type": "string",
                "pattern": "^[A-Z0-9_]+$",
                "maxLength": 16,
                "nullable": true
              },
              "hwidDeviceLimit": {
                "type": "integer",
                "minimum": 0,
                "nullable": true
              }
            }
          }
        },
        "required": [
          "uuids",
          "fields"
        ],
        "description": "Bulk Update Users Request Dto"
      },
      "BulkUpdateUsersResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "affectedRows": {
                "type": "number"
              }
            },
            "required": [
              "affectedRows"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Bulk Update Users Response Dto"
      },
      "BulkUpdateUsersSquadsRequestDto": {
        "type": "object",
        "properties": {
          "uuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "activeInternalSquads": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "uuids",
          "activeInternalSquads"
        ],
        "description": "Bulk Update Users Squads Request Dto"
      },
      "BulkUpdateUsersSquadsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "affectedRows": {
                "type": "number"
              }
            },
            "required": [
              "affectedRows"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Bulk Update Users Squads Response Dto"
      },
      "BulkAllUpdateUsersRequestDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "LIMITED",
              "EXPIRED"
            ],
            "x-enumNames": [
              "ACTIVE",
              "DISABLED",
              "LIMITED",
              "EXPIRED"
            ],
            "default": "ACTIVE"
          },
          "trafficLimitBytes": {
            "description": "Traffic limit in bytes. 0 - unlimited",
            "type": "integer",
            "minimum": 0
          },
          "trafficLimitStrategy": {
            "description": "Traffic limit reset strategy",
            "type": "string",
            "enum": [
              "NO_RESET",
              "DAY",
              "WEEK",
              "MONTH"
            ],
            "x-enumNames": [
              "NO_RESET",
              "DAY",
              "WEEK",
              "MONTH"
            ]
          },
          "expireAt": {
            "description": "Expiration date: 2025-01-17T15:38:45.065Z",
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "telegramId": {
            "type": "integer",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "tag": {
            "type": "string",
            "pattern": "^[A-Z0-9_]+$",
            "maxLength": 16,
            "nullable": true
          },
          "hwidDeviceLimit": {
            "type": "integer",
            "minimum": 0,
            "nullable": true
          }
        },
        "description": "Bulk All Update Users Request Dto"
      },
      "BulkAllUpdateUsersResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "eventSent": {
                "type": "boolean"
              }
            },
            "required": [
              "eventSent"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Bulk All Update Users Response Dto"
      },
      "BulkAllResetTrafficUsersResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "eventSent": {
                "type": "boolean"
              }
            },
            "required": [
              "eventSent"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Bulk All Reset Traffic Users Response Dto"
      },
      "GetUserUsageByRangeResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "userUuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "nodeUuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "nodeName": {
                  "type": "string"
                },
                "countryCode": {
                  "type": "string"
                },
                "total": {
                  "type": "number"
                },
                "date": {
                  "type": "string"
                }
              },
              "required": [
                "userUuid",
                "nodeUuid",
                "nodeName",
                "countryCode",
                "total",
                "date"
              ]
            }
          }
        },
        "required": [
          "response"
        ],
        "description": "Get User Usage By Range Response Dto"
      },
      "GetSubscriptionInfoResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "isFound": {
                "type": "boolean"
              },
              "user": {
                "type": "object",
                "properties": {
                  "shortUuid": {
                    "type": "string"
                  },
                  "daysLeft": {
                    "type": "number"
                  },
                  "trafficUsed": {
                    "type": "string"
                  },
                  "trafficLimit": {
                    "type": "string"
                  },
                  "lifetimeTrafficUsed": {
                    "type": "string"
                  },
                  "trafficUsedBytes": {
                    "type": "string"
                  },
                  "trafficLimitBytes": {
                    "type": "string"
                  },
                  "lifetimeTrafficUsedBytes": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isActive": {
                    "type": "boolean"
                  },
                  "userStatus": {
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "DISABLED",
                      "LIMITED",
                      "EXPIRED"
                    ],
                    "x-enumNames": [
                      "ACTIVE",
                      "DISABLED",
                      "LIMITED",
                      "EXPIRED"
                    ]
                  },
                  "trafficLimitStrategy": {
                    "type": "string",
                    "enum": [
                      "NO_RESET",
                      "DAY",
                      "WEEK",
                      "MONTH"
                    ],
                    "x-enumNames": [
                      "NO_RESET",
                      "DAY",
                      "WEEK",
                      "MONTH"
                    ]
                  }
                },
                "required": [
                  "shortUuid",
                  "daysLeft",
                  "trafficUsed",
                  "trafficLimit",
                  "lifetimeTrafficUsed",
                  "trafficUsedBytes",
                  "trafficLimitBytes",
                  "lifetimeTrafficUsedBytes",
                  "username",
                  "expiresAt",
                  "isActive",
                  "userStatus",
                  "trafficLimitStrategy"
                ]
              },
              "links": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ssConfLinks": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "subscriptionUrl": {
                "type": "string"
              },
              "happ": {
                "type": "object",
                "properties": {
                  "cryptoLink": {
                    "type": "string"
                  }
                },
                "required": [
                  "cryptoLink"
                ]
              }
            },
            "required": [
              "isFound",
              "user",
              "links",
              "ssConfLinks",
              "subscriptionUrl",
              "happ"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Subscription Info Response Dto"
      },
      "GetAllSubscriptionsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "subscriptions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "isFound": {
                      "type": "boolean"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "shortUuid": {
                          "type": "string"
                        },
                        "daysLeft": {
                          "type": "number"
                        },
                        "trafficUsed": {
                          "type": "string"
                        },
                        "trafficLimit": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "expiresAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "isActive": {
                          "type": "boolean"
                        },
                        "userStatus": {
                          "type": "string",
                          "enum": [
                            "ACTIVE",
                            "DISABLED",
                            "LIMITED",
                            "EXPIRED"
                          ],
                          "x-enumNames": [
                            "ACTIVE",
                            "DISABLED",
                            "LIMITED",
                            "EXPIRED"
                          ]
                        },
                        "trafficLimitStrategy": {
                          "type": "string",
                          "enum": [
                            "NO_RESET",
                            "DAY",
                            "WEEK",
                            "MONTH"
                          ],
                          "x-enumNames": [
                            "NO_RESET",
                            "DAY",
                            "WEEK",
                            "MONTH"
                          ]
                        }
                      },
                      "required": [
                        "shortUuid",
                        "daysLeft",
                        "trafficUsed",
                        "trafficLimit",
                        "username",
                        "expiresAt",
                        "isActive",
                        "userStatus",
                        "trafficLimitStrategy"
                      ]
                    },
                    "links": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ssConfLinks": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "subscriptionUrl": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "isFound",
                    "user",
                    "links",
                    "ssConfLinks",
                    "subscriptionUrl"
                  ]
                }
              },
              "total": {
                "type": "number"
              }
            },
            "required": [
              "subscriptions",
              "total"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get All Subscriptions Response Dto"
      },
      "GetSubscriptionByUsernameResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "isFound": {
                "type": "boolean"
              },
              "user": {
                "type": "object",
                "properties": {
                  "shortUuid": {
                    "type": "string"
                  },
                  "daysLeft": {
                    "type": "number"
                  },
                  "trafficUsed": {
                    "type": "string"
                  },
                  "trafficLimit": {
                    "type": "string"
                  },
                  "lifetimeTrafficUsed": {
                    "type": "string"
                  },
                  "trafficUsedBytes": {
                    "type": "string"
                  },
                  "trafficLimitBytes": {
                    "type": "string"
                  },
                  "lifetimeTrafficUsedBytes": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isActive": {
                    "type": "boolean"
                  },
                  "userStatus": {
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "DISABLED",
                      "LIMITED",
                      "EXPIRED"
                    ],
                    "x-enumNames": [
                      "ACTIVE",
                      "DISABLED",
                      "LIMITED",
                      "EXPIRED"
                    ]
                  },
                  "trafficLimitStrategy": {
                    "type": "string",
                    "enum": [
                      "NO_RESET",
                      "DAY",
                      "WEEK",
                      "MONTH"
                    ],
                    "x-enumNames": [
                      "NO_RESET",
                      "DAY",
                      "WEEK",
                      "MONTH"
                    ]
                  }
                },
                "required": [
                  "shortUuid",
                  "daysLeft",
                  "trafficUsed",
                  "trafficLimit",
                  "lifetimeTrafficUsed",
                  "trafficUsedBytes",
                  "trafficLimitBytes",
                  "lifetimeTrafficUsedBytes",
                  "username",
                  "expiresAt",
                  "isActive",
                  "userStatus",
                  "trafficLimitStrategy"
                ]
              },
              "links": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ssConfLinks": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "subscriptionUrl": {
                "type": "string"
              },
              "happ": {
                "type": "object",
                "properties": {
                  "cryptoLink": {
                    "type": "string"
                  }
                },
                "required": [
                  "cryptoLink"
                ]
              }
            },
            "required": [
              "isFound",
              "user",
              "links",
              "ssConfLinks",
              "subscriptionUrl",
              "happ"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Subscription By Username Response Dto"
      },
      "GetSubscriptionByShortUuidProtectedResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "isFound": {
                "type": "boolean"
              },
              "user": {
                "type": "object",
                "properties": {
                  "shortUuid": {
                    "type": "string"
                  },
                  "daysLeft": {
                    "type": "number"
                  },
                  "trafficUsed": {
                    "type": "string"
                  },
                  "trafficLimit": {
                    "type": "string"
                  },
                  "lifetimeTrafficUsed": {
                    "type": "string"
                  },
                  "trafficUsedBytes": {
                    "type": "string"
                  },
                  "trafficLimitBytes": {
                    "type": "string"
                  },
                  "lifetimeTrafficUsedBytes": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isActive": {
                    "type": "boolean"
                  },
                  "userStatus": {
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "DISABLED",
                      "LIMITED",
                      "EXPIRED"
                    ],
                    "x-enumNames": [
                      "ACTIVE",
                      "DISABLED",
                      "LIMITED",
                      "EXPIRED"
                    ]
                  },
                  "trafficLimitStrategy": {
                    "type": "string",
                    "enum": [
                      "NO_RESET",
                      "DAY",
                      "WEEK",
                      "MONTH"
                    ],
                    "x-enumNames": [
                      "NO_RESET",
                      "DAY",
                      "WEEK",
                      "MONTH"
                    ]
                  }
                },
                "required": [
                  "shortUuid",
                  "daysLeft",
                  "trafficUsed",
                  "trafficLimit",
                  "lifetimeTrafficUsed",
                  "trafficUsedBytes",
                  "trafficLimitBytes",
                  "lifetimeTrafficUsedBytes",
                  "username",
                  "expiresAt",
                  "isActive",
                  "userStatus",
                  "trafficLimitStrategy"
                ]
              },
              "links": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ssConfLinks": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "subscriptionUrl": {
                "type": "string"
              },
              "happ": {
                "type": "object",
                "properties": {
                  "cryptoLink": {
                    "type": "string"
                  }
                },
                "required": [
                  "cryptoLink"
                ]
              }
            },
            "required": [
              "isFound",
              "user",
              "links",
              "ssConfLinks",
              "subscriptionUrl",
              "happ"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Subscription By Short Uuid Protected Response Dto"
      },
      "GetSubscriptionByUuidResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "isFound": {
                "type": "boolean"
              },
              "user": {
                "type": "object",
                "properties": {
                  "shortUuid": {
                    "type": "string"
                  },
                  "daysLeft": {
                    "type": "number"
                  },
                  "trafficUsed": {
                    "type": "string"
                  },
                  "trafficLimit": {
                    "type": "string"
                  },
                  "lifetimeTrafficUsed": {
                    "type": "string"
                  },
                  "trafficUsedBytes": {
                    "type": "string"
                  },
                  "trafficLimitBytes": {
                    "type": "string"
                  },
                  "lifetimeTrafficUsedBytes": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isActive": {
                    "type": "boolean"
                  },
                  "userStatus": {
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "DISABLED",
                      "LIMITED",
                      "EXPIRED"
                    ],
                    "x-enumNames": [
                      "ACTIVE",
                      "DISABLED",
                      "LIMITED",
                      "EXPIRED"
                    ]
                  },
                  "trafficLimitStrategy": {
                    "type": "string",
                    "enum": [
                      "NO_RESET",
                      "DAY",
                      "WEEK",
                      "MONTH"
                    ],
                    "x-enumNames": [
                      "NO_RESET",
                      "DAY",
                      "WEEK",
                      "MONTH"
                    ]
                  }
                },
                "required": [
                  "shortUuid",
                  "daysLeft",
                  "trafficUsed",
                  "trafficLimit",
                  "lifetimeTrafficUsed",
                  "trafficUsedBytes",
                  "trafficLimitBytes",
                  "lifetimeTrafficUsedBytes",
                  "username",
                  "expiresAt",
                  "isActive",
                  "userStatus",
                  "trafficLimitStrategy"
                ]
              },
              "links": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ssConfLinks": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "subscriptionUrl": {
                "type": "string"
              },
              "happ": {
                "type": "object",
                "properties": {
                  "cryptoLink": {
                    "type": "string"
                  }
                },
                "required": [
                  "cryptoLink"
                ]
              }
            },
            "required": [
              "isFound",
              "user",
              "links",
              "ssConfLinks",
              "subscriptionUrl",
              "happ"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Subscription By Uuid Response Dto"
      },
      "GetRawSubscriptionByShortUuidResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "shortUuid": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "DISABLED",
                      "LIMITED",
                      "EXPIRED"
                    ],
                    "x-enumNames": [
                      "ACTIVE",
                      "DISABLED",
                      "LIMITED",
                      "EXPIRED"
                    ],
                    "default": "ACTIVE"
                  },
                  "usedTrafficBytes": {
                    "type": "number"
                  },
                  "lifetimeUsedTrafficBytes": {
                    "type": "number"
                  },
                  "trafficLimitBytes": {
                    "type": "integer",
                    "default": 0
                  },
                  "trafficLimitStrategy": {
                    "description": "Available reset periods",
                    "type": "string",
                    "enum": [
                      "NO_RESET",
                      "DAY",
                      "WEEK",
                      "MONTH"
                    ],
                    "x-enumNames": [
                      "NO_RESET",
                      "DAY",
                      "WEEK",
                      "MONTH"
                    ],
                    "default": "NO_RESET"
                  },
                  "subLastUserAgent": {
                    "type": "string",
                    "nullable": true
                  },
                  "subLastOpenedAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "expireAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "onlineAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "subRevokedAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "lastTrafficResetAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "trojanPassword": {
                    "type": "string"
                  },
                  "vlessUuid": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "ssPassword": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true
                  },
                  "tag": {
                    "type": "string",
                    "nullable": true
                  },
                  "telegramId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "nullable": true
                  },
                  "hwidDeviceLimit": {
                    "type": "integer",
                    "nullable": true
                  },
                  "firstConnectedAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "lastTriggeredThreshold": {
                    "type": "integer",
                    "default": 0
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "activeInternalSquads": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "uuid",
                        "name"
                      ]
                    }
                  },
                  "subscriptionUrl": {
                    "type": "string"
                  },
                  "lastConnectedNode": {
                    "type": "object",
                    "properties": {
                      "connectedAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "nodeName": {
                        "type": "string"
                      },
                      "countryCode": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "connectedAt",
                      "nodeName",
                      "countryCode"
                    ],
                    "nullable": true
                  },
                  "happ": {
                    "type": "object",
                    "properties": {
                      "cryptoLink": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "cryptoLink"
                    ]
                  }
                },
                "required": [
                  "uuid",
                  "shortUuid",
                  "username",
                  "usedTrafficBytes",
                  "lifetimeUsedTrafficBytes",
                  "subLastUserAgent",
                  "subLastOpenedAt",
                  "expireAt",
                  "onlineAt",
                  "subRevokedAt",
                  "lastTrafficResetAt",
                  "trojanPassword",
                  "vlessUuid",
                  "ssPassword",
                  "description",
                  "tag",
                  "telegramId",
                  "email",
                  "hwidDeviceLimit",
                  "firstConnectedAt",
                  "createdAt",
                  "updatedAt",
                  "activeInternalSquads",
                  "subscriptionUrl",
                  "lastConnectedNode",
                  "happ"
                ]
              },
              "convertedUserInfo": {
                "type": "object",
                "properties": {
                  "daysLeft": {
                    "type": "number"
                  },
                  "trafficLimit": {
                    "type": "string"
                  },
                  "trafficUsed": {
                    "type": "string"
                  },
                  "lifetimeTrafficUsed": {
                    "type": "string"
                  },
                  "isHwidLimited": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "daysLeft",
                  "trafficLimit",
                  "trafficUsed",
                  "lifetimeTrafficUsed",
                  "isHwidLimited"
                ]
              },
              "headers": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "rawHosts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "nullable": true
                    },
                    "alpn": {
                      "type": "string",
                      "nullable": true
                    },
                    "fingerprint": {
                      "type": "string",
                      "nullable": true
                    },
                    "host": {
                      "type": "string",
                      "nullable": true
                    },
                    "network": {
                      "type": "string",
                      "nullable": true
                    },
                    "password": {
                      "type": "object",
                      "properties": {
                        "ssPassword": {
                          "type": "string"
                        },
                        "trojanPassword": {
                          "type": "string"
                        },
                        "vlessPassword": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "ssPassword",
                        "trojanPassword",
                        "vlessPassword"
                      ]
                    },
                    "path": {
                      "type": "string",
                      "nullable": true
                    },
                    "publicKey": {
                      "type": "string",
                      "nullable": true
                    },
                    "port": {
                      "type": "number",
                      "nullable": true
                    },
                    "protocol": {
                      "type": "string",
                      "nullable": true
                    },
                    "remark": {
                      "type": "string",
                      "nullable": true
                    },
                    "shortId": {
                      "type": "string",
                      "nullable": true
                    },
                    "sni": {
                      "type": "string",
                      "nullable": true
                    },
                    "spiderX": {
                      "type": "string",
                      "nullable": true
                    },
                    "tls": {
                      "type": "string",
                      "nullable": true
                    },
                    "headerType": {
                      "type": "string",
                      "nullable": true
                    },
                    "additionalParams": {
                      "type": "object",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "nullable": true
                        },
                        "heartbeatPeriod": {
                          "type": "number",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "xHttpExtraParams": {
                      "type": "object",
                      "properties": {},
                      "nullable": true
                    },
                    "muxParams": {
                      "type": "object",
                      "properties": {},
                      "nullable": true
                    },
                    "sockoptParams": {
                      "type": "object",
                      "properties": {},
                      "nullable": true
                    },
                    "serverDescription": {
                      "type": "string",
                      "nullable": true
                    },
                    "flow": {
                      "type": "string",
                      "nullable": true
                    },
                    "allowInsecure": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "shuffleHost": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "mihomoX25519": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "mldsa65Verify": {
                      "type": "string",
                      "nullable": true
                    },
                    "encryption": {
                      "type": "string",
                      "nullable": true
                    },
                    "protocolOptions": {
                      "type": "object",
                      "properties": {
                        "ss": {
                          "type": "object",
                          "properties": {
                            "method": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "dbData": {
                      "type": "object",
                      "properties": {
                        "rawInbound": {
                          "type": "object",
                          "properties": {},
                          "nullable": true
                        },
                        "inboundTag": {
                          "type": "string"
                        },
                        "uuid": {
                          "type": "string"
                        },
                        "configProfileUuid": {
                          "type": "string",
                          "nullable": true
                        },
                        "configProfileInboundUuid": {
                          "type": "string",
                          "nullable": true
                        },
                        "isDisabled": {
                          "type": "boolean"
                        },
                        "viewPosition": {
                          "type": "number"
                        },
                        "remark": {
                          "type": "string"
                        },
                        "isHidden": {
                          "type": "boolean"
                        },
                        "tag": {
                          "type": "string",
                          "nullable": true
                        },
                        "vlessRouteId": {
                          "type": "integer",
                          "nullable": true
                        }
                      },
                      "required": [
                        "rawInbound",
                        "inboundTag",
                        "uuid",
                        "configProfileUuid",
                        "configProfileInboundUuid",
                        "isDisabled",
                        "viewPosition",
                        "remark",
                        "isHidden",
                        "tag",
                        "vlessRouteId"
                      ]
                    }
                  },
                  "required": [
                    "password"
                  ]
                }
              }
            },
            "required": [
              "user",
              "convertedUserInfo",
              "headers",
              "rawHosts"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Raw Subscription By Short Uuid Response Dto"
      },
      "GetTemplateResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "templateType": {
                "type": "string",
                "enum": [
                  "STASH",
                  "SINGBOX",
                  "SINGBOX_LEGACY",
                  "MIHOMO",
                  "XRAY_JSON",
                  "CLASH"
                ],
                "x-enumNames": [
                  "STASH",
                  "SINGBOX",
                  "SINGBOX_LEGACY",
                  "MIHOMO",
                  "XRAY_JSON",
                  "CLASH"
                ]
              },
              "templateJson": {
                "nullable": true
              },
              "encodedTemplateYaml": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "uuid",
              "templateType",
              "templateJson",
              "encodedTemplateYaml"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Template Response Dto"
      },
      "UpdateTemplateRequestDto": {
        "type": "object",
        "properties": {
          "templateType": {
            "type": "string",
            "enum": [
              "STASH",
              "SINGBOX",
              "SINGBOX_LEGACY",
              "MIHOMO",
              "XRAY_JSON",
              "CLASH"
            ],
            "x-enumNames": [
              "STASH",
              "SINGBOX",
              "SINGBOX_LEGACY",
              "MIHOMO",
              "XRAY_JSON",
              "CLASH"
            ]
          },
          "templateJson": {
            "type": "object",
            "properties": {}
          },
          "encodedTemplateYaml": {
            "type": "string"
          }
        },
        "required": [
          "templateType"
        ],
        "description": "Update Template Request Dto"
      },
      "UpdateTemplateResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "templateType": {
                "type": "string",
                "enum": [
                  "STASH",
                  "SINGBOX",
                  "SINGBOX_LEGACY",
                  "MIHOMO",
                  "XRAY_JSON",
                  "CLASH"
                ],
                "x-enumNames": [
                  "STASH",
                  "SINGBOX",
                  "SINGBOX_LEGACY",
                  "MIHOMO",
                  "XRAY_JSON",
                  "CLASH"
                ]
              },
              "templateJson": {
                "nullable": true
              },
              "encodedTemplateYaml": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "uuid",
              "templateType",
              "templateJson",
              "encodedTemplateYaml"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Update Template Response Dto"
      },
      "CreateApiTokenRequestDto": {
        "type": "object",
        "properties": {
          "tokenName": {
            "type": "string"
          }
        },
        "required": [
          "tokenName"
        ],
        "description": "Create Api Token Request Dto"
      },
      "CreateApiTokenResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              }
            },
            "required": [
              "token",
              "uuid"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Create Api Token Response Dto"
      },
      "DeleteApiTokenResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "boolean"
          }
        },
        "required": [
          "response"
        ],
        "description": "Delete Api Token Response Dto"
      },
      "FindAllApiTokensResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "apiKeys": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "token": {
                      "type": "string"
                    },
                    "tokenName": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "uuid",
                    "token",
                    "tokenName",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              },
              "docs": {
                "type": "object",
                "properties": {
                  "isDocsEnabled": {
                    "type": "boolean"
                  },
                  "scalarPath": {
                    "type": "string",
                    "nullable": true
                  },
                  "swaggerPath": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "isDocsEnabled",
                  "scalarPath",
                  "swaggerPath"
                ]
              }
            },
            "required": [
              "apiKeys",
              "docs"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Find All Api Tokens Response Dto"
      },
      "GetConfigProfilesResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "configProfiles": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "config": {},
                    "inbounds": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "profileUuid": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "tag": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "network": {
                            "type": "string",
                            "nullable": true
                          },
                          "security": {
                            "type": "string",
                            "nullable": true
                          },
                          "port": {
                            "type": "number",
                            "nullable": true
                          },
                          "rawInbound": {
                            "nullable": true
                          }
                        },
                        "required": [
                          "uuid",
                          "profileUuid",
                          "tag",
                          "type",
                          "network",
                          "security",
                          "port",
                          "rawInbound"
                        ]
                      }
                    },
                    "nodes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "name": {
                            "type": "string"
                          },
                          "countryCode": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "uuid",
                          "name",
                          "countryCode"
                        ]
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "uuid",
                    "name",
                    "config",
                    "inbounds",
                    "nodes",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "required": [
              "total",
              "configProfiles"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Config Profiles Response Dto"
      },
      "GetAllInboundsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "inbounds": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "profileUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tag": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "network": {
                      "type": "string",
                      "nullable": true
                    },
                    "security": {
                      "type": "string",
                      "nullable": true
                    },
                    "port": {
                      "type": "number",
                      "nullable": true
                    },
                    "rawInbound": {
                      "nullable": true
                    },
                    "activeSquads": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "uuid"
                      }
                    }
                  },
                  "required": [
                    "uuid",
                    "profileUuid",
                    "tag",
                    "type",
                    "network",
                    "security",
                    "port",
                    "rawInbound",
                    "activeSquads"
                  ]
                }
              }
            },
            "required": [
              "total",
              "inbounds"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get All Inbounds Response Dto"
      },
      "GetInboundsByProfileUuidResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "inbounds": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "profileUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tag": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "network": {
                      "type": "string",
                      "nullable": true
                    },
                    "security": {
                      "type": "string",
                      "nullable": true
                    },
                    "port": {
                      "type": "number",
                      "nullable": true
                    },
                    "rawInbound": {
                      "nullable": true
                    },
                    "activeSquads": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "uuid"
                      }
                    }
                  },
                  "required": [
                    "uuid",
                    "profileUuid",
                    "tag",
                    "type",
                    "network",
                    "security",
                    "port",
                    "rawInbound",
                    "activeSquads"
                  ]
                }
              }
            },
            "required": [
              "total",
              "inbounds"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Inbounds By Profile Uuid Response Dto"
      },
      "GetConfigProfileByUuidResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "config": {},
              "inbounds": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "profileUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tag": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "network": {
                      "type": "string",
                      "nullable": true
                    },
                    "security": {
                      "type": "string",
                      "nullable": true
                    },
                    "port": {
                      "type": "number",
                      "nullable": true
                    },
                    "rawInbound": {
                      "nullable": true
                    }
                  },
                  "required": [
                    "uuid",
                    "profileUuid",
                    "tag",
                    "type",
                    "network",
                    "security",
                    "port",
                    "rawInbound"
                  ]
                }
              },
              "nodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "countryCode": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "uuid",
                    "name",
                    "countryCode"
                  ]
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "uuid",
              "name",
              "config",
              "inbounds",
              "nodes",
              "createdAt",
              "updatedAt"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Config Profile By Uuid Response Dto"
      },
      "DeleteConfigProfileResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "isDeleted": {
                "type": "boolean"
              }
            },
            "required": [
              "isDeleted"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Delete Config Profile Response Dto"
      },
      "CreateConfigProfileRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 30,
            "pattern": "^[A-Za-z0-9_\\s-]+$"
          },
          "config": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "name",
          "config"
        ],
        "description": "Create Config Profile Request Dto"
      },
      "CreateConfigProfileResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "config": {},
              "inbounds": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "profileUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tag": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "network": {
                      "type": "string",
                      "nullable": true
                    },
                    "security": {
                      "type": "string",
                      "nullable": true
                    },
                    "port": {
                      "type": "number",
                      "nullable": true
                    },
                    "rawInbound": {
                      "nullable": true
                    }
                  },
                  "required": [
                    "uuid",
                    "profileUuid",
                    "tag",
                    "type",
                    "network",
                    "security",
                    "port",
                    "rawInbound"
                  ]
                }
              },
              "nodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "countryCode": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "uuid",
                    "name",
                    "countryCode"
                  ]
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "uuid",
              "name",
              "config",
              "inbounds",
              "nodes",
              "createdAt",
              "updatedAt"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Create Config Profile Response Dto"
      },
      "UpdateConfigProfileRequestDto": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 30,
            "pattern": "^[A-Za-z0-9_\\s-]+$"
          },
          "config": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "uuid"
        ],
        "description": "Update Config Profile Request Dto"
      },
      "UpdateConfigProfileResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "config": {},
              "inbounds": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "profileUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tag": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "network": {
                      "type": "string",
                      "nullable": true
                    },
                    "security": {
                      "type": "string",
                      "nullable": true
                    },
                    "port": {
                      "type": "number",
                      "nullable": true
                    },
                    "rawInbound": {
                      "nullable": true
                    }
                  },
                  "required": [
                    "uuid",
                    "profileUuid",
                    "tag",
                    "type",
                    "network",
                    "security",
                    "port",
                    "rawInbound"
                  ]
                }
              },
              "nodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "countryCode": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "uuid",
                    "name",
                    "countryCode"
                  ]
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "uuid",
              "name",
              "config",
              "inbounds",
              "nodes",
              "createdAt",
              "updatedAt"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Update Config Profile Response Dto"
      },
      "GetInternalSquadsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "internalSquads": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "membersCount": {
                          "type": "number"
                        },
                        "inboundsCount": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "membersCount",
                        "inboundsCount"
                      ]
                    },
                    "inbounds": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "profileUuid": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "tag": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "network": {
                            "type": "string",
                            "nullable": true
                          },
                          "security": {
                            "type": "string",
                            "nullable": true
                          },
                          "port": {
                            "type": "number",
                            "nullable": true
                          },
                          "rawInbound": {
                            "nullable": true
                          }
                        },
                        "required": [
                          "uuid",
                          "profileUuid",
                          "tag",
                          "type",
                          "network",
                          "security",
                          "port",
                          "rawInbound"
                        ]
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "uuid",
                    "name",
                    "info",
                    "inbounds",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "required": [
              "total",
              "internalSquads"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Internal Squads Response Dto"
      },
      "GetInternalSquadByUuidResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "info": {
                "type": "object",
                "properties": {
                  "membersCount": {
                    "type": "number"
                  },
                  "inboundsCount": {
                    "type": "number"
                  }
                },
                "required": [
                  "membersCount",
                  "inboundsCount"
                ]
              },
              "inbounds": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "profileUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tag": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "network": {
                      "type": "string",
                      "nullable": true
                    },
                    "security": {
                      "type": "string",
                      "nullable": true
                    },
                    "port": {
                      "type": "number",
                      "nullable": true
                    },
                    "rawInbound": {
                      "nullable": true
                    }
                  },
                  "required": [
                    "uuid",
                    "profileUuid",
                    "tag",
                    "type",
                    "network",
                    "security",
                    "port",
                    "rawInbound"
                  ]
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "uuid",
              "name",
              "info",
              "inbounds",
              "createdAt",
              "updatedAt"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Internal Squad By Uuid Response Dto"
      },
      "CreateInternalSquadRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 30,
            "pattern": "^[A-Za-z0-9_\\s-]+$"
          },
          "inbounds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "name",
          "inbounds"
        ],
        "description": "Create Internal Squad Request Dto"
      },
      "CreateInternalSquadResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "info": {
                "type": "object",
                "properties": {
                  "membersCount": {
                    "type": "number"
                  },
                  "inboundsCount": {
                    "type": "number"
                  }
                },
                "required": [
                  "membersCount",
                  "inboundsCount"
                ]
              },
              "inbounds": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "profileUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tag": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "network": {
                      "type": "string",
                      "nullable": true
                    },
                    "security": {
                      "type": "string",
                      "nullable": true
                    },
                    "port": {
                      "type": "number",
                      "nullable": true
                    },
                    "rawInbound": {
                      "nullable": true
                    }
                  },
                  "required": [
                    "uuid",
                    "profileUuid",
                    "tag",
                    "type",
                    "network",
                    "security",
                    "port",
                    "rawInbound"
                  ]
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "uuid",
              "name",
              "info",
              "inbounds",
              "createdAt",
              "updatedAt"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Create Internal Squad Response Dto"
      },
      "GetInternalSquadAccessibleNodesResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "squadUuid": {
                "type": "string",
                "format": "uuid"
              },
              "accessibleNodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "nodeName": {
                      "type": "string"
                    },
                    "countryCode": {
                      "type": "string"
                    },
                    "configProfileUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "configProfileName": {
                      "type": "string"
                    },
                    "activeInbounds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "uuid",
                    "nodeName",
                    "countryCode",
                    "configProfileUuid",
                    "configProfileName",
                    "activeInbounds"
                  ]
                }
              }
            },
            "required": [
              "squadUuid",
              "accessibleNodes"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Internal Squad Accessible Nodes Response Dto"
      },
      "UpdateInternalSquadRequestDto": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 30,
            "pattern": "^[A-Za-z0-9_\\s-]+$"
          },
          "inbounds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "uuid"
        ],
        "description": "Update Internal Squad Request Dto"
      },
      "UpdateInternalSquadResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "info": {
                "type": "object",
                "properties": {
                  "membersCount": {
                    "type": "number"
                  },
                  "inboundsCount": {
                    "type": "number"
                  }
                },
                "required": [
                  "membersCount",
                  "inboundsCount"
                ]
              },
              "inbounds": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "profileUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tag": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "network": {
                      "type": "string",
                      "nullable": true
                    },
                    "security": {
                      "type": "string",
                      "nullable": true
                    },
                    "port": {
                      "type": "number",
                      "nullable": true
                    },
                    "rawInbound": {
                      "nullable": true
                    }
                  },
                  "required": [
                    "uuid",
                    "profileUuid",
                    "tag",
                    "type",
                    "network",
                    "security",
                    "port",
                    "rawInbound"
                  ]
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "uuid",
              "name",
              "info",
              "inbounds",
              "createdAt",
              "updatedAt"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Update Internal Squad Response Dto"
      },
      "DeleteInternalSquadResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "isDeleted": {
                "type": "boolean"
              }
            },
            "required": [
              "isDeleted"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Delete Internal Squad Response Dto"
      },
      "AddUsersToInternalSquadResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "eventSent": {
                "type": "boolean"
              }
            },
            "required": [
              "eventSent"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Add Users To Internal Squad Response Dto"
      },
      "RemoveUsersFromInternalSquadResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "eventSent": {
                "type": "boolean"
              }
            },
            "required": [
              "eventSent"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Remove Users From Internal Squad Response Dto"
      },
      "GetPubKeyResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "pubKey": {
                "type": "string"
              }
            },
            "required": [
              "pubKey"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Pub Key Response Dto"
      },
      "CreateNodeRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 30
          },
          "address": {
            "type": "string",
            "minLength": 2
          },
          "port": {
            "type": "integer",
            "minimum": 1,
            "maximum": 65535
          },
          "isTrafficTrackingActive": {
            "type": "boolean",
            "default": false
          },
          "trafficLimitBytes": {
            "type": "integer",
            "minimum": 0
          },
          "notifyPercent": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100
          },
          "trafficResetDay": {
            "type": "integer",
            "minimum": 1,
            "maximum": 31
          },
          "countryCode": {
            "type": "string",
            "maxLength": 2,
            "default": "XX"
          },
          "consumptionMultiplier": {
            "type": "number",
            "minimum": 0.1
          },
          "configProfile": {
            "type": "object",
            "properties": {
              "activeConfigProfileUuid": {
                "type": "string",
                "format": "uuid"
              },
              "activeInbounds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "required": [
              "activeConfigProfileUuid",
              "activeInbounds"
            ]
          },
          "providerUuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "required": [
          "name",
          "address",
          "configProfile"
        ],
        "description": "Create Node Request Dto"
      },
      "CreateNodeResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "port": {
                "type": "integer",
                "nullable": true
              },
              "isConnected": {
                "type": "boolean"
              },
              "isDisabled": {
                "type": "boolean"
              },
              "isConnecting": {
                "type": "boolean"
              },
              "isNodeOnline": {
                "type": "boolean"
              },
              "isXrayRunning": {
                "type": "boolean"
              },
              "lastStatusChange": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastStatusMessage": {
                "type": "string",
                "nullable": true
              },
              "xrayVersion": {
                "type": "string",
                "nullable": true
              },
              "nodeVersion": {
                "type": "string",
                "nullable": true
              },
              "xrayUptime": {
                "type": "string"
              },
              "isTrafficTrackingActive": {
                "type": "boolean"
              },
              "trafficResetDay": {
                "type": "integer",
                "nullable": true
              },
              "trafficLimitBytes": {
                "type": "number",
                "nullable": true
              },
              "trafficUsedBytes": {
                "type": "number",
                "nullable": true
              },
              "notifyPercent": {
                "type": "integer",
                "nullable": true
              },
              "usersOnline": {
                "type": "integer",
                "nullable": true
              },
              "viewPosition": {
                "type": "integer"
              },
              "countryCode": {
                "type": "string"
              },
              "consumptionMultiplier": {
                "type": "number"
              },
              "cpuCount": {
                "type": "integer",
                "nullable": true
              },
              "cpuModel": {
                "type": "string",
                "nullable": true
              },
              "totalRam": {
                "type": "string",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "configProfile": {
                "type": "object",
                "properties": {
                  "activeConfigProfileUuid": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "activeInbounds": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "profileUuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "tag": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "network": {
                          "type": "string",
                          "nullable": true
                        },
                        "security": {
                          "type": "string",
                          "nullable": true
                        },
                        "port": {
                          "type": "number",
                          "nullable": true
                        },
                        "rawInbound": {
                          "nullable": true
                        }
                      },
                      "required": [
                        "uuid",
                        "profileUuid",
                        "tag",
                        "type",
                        "network",
                        "security",
                        "port",
                        "rawInbound"
                      ]
                    }
                  }
                },
                "required": [
                  "activeConfigProfileUuid",
                  "activeInbounds"
                ]
              },
              "providerUuid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "provider": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string"
                  },
                  "faviconLink": {
                    "type": "string",
                    "nullable": true
                  },
                  "loginUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "uuid",
                  "name",
                  "faviconLink",
                  "loginUrl",
                  "createdAt",
                  "updatedAt"
                ],
                "nullable": true
              }
            },
            "required": [
              "uuid",
              "name",
              "address",
              "port",
              "isConnected",
              "isDisabled",
              "isConnecting",
              "isNodeOnline",
              "isXrayRunning",
              "lastStatusChange",
              "lastStatusMessage",
              "xrayVersion",
              "nodeVersion",
              "xrayUptime",
              "isTrafficTrackingActive",
              "trafficResetDay",
              "trafficLimitBytes",
              "trafficUsedBytes",
              "notifyPercent",
              "usersOnline",
              "viewPosition",
              "countryCode",
              "consumptionMultiplier",
              "cpuCount",
              "cpuModel",
              "totalRam",
              "createdAt",
              "updatedAt",
              "configProfile",
              "providerUuid",
              "provider"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Create Node Response Dto"
      },
      "GetAllNodesResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "name": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "port": {
                  "type": "integer",
                  "nullable": true
                },
                "isConnected": {
                  "type": "boolean"
                },
                "isDisabled": {
                  "type": "boolean"
                },
                "isConnecting": {
                  "type": "boolean"
                },
                "isNodeOnline": {
                  "type": "boolean"
                },
                "isXrayRunning": {
                  "type": "boolean"
                },
                "lastStatusChange": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "lastStatusMessage": {
                  "type": "string",
                  "nullable": true
                },
                "xrayVersion": {
                  "type": "string",
                  "nullable": true
                },
                "nodeVersion": {
                  "type": "string",
                  "nullable": true
                },
                "xrayUptime": {
                  "type": "string"
                },
                "isTrafficTrackingActive": {
                  "type": "boolean"
                },
                "trafficResetDay": {
                  "type": "integer",
                  "nullable": true
                },
                "trafficLimitBytes": {
                  "type": "number",
                  "nullable": true
                },
                "trafficUsedBytes": {
                  "type": "number",
                  "nullable": true
                },
                "notifyPercent": {
                  "type": "integer",
                  "nullable": true
                },
                "usersOnline": {
                  "type": "integer",
                  "nullable": true
                },
                "viewPosition": {
                  "type": "integer"
                },
                "countryCode": {
                  "type": "string"
                },
                "consumptionMultiplier": {
                  "type": "number"
                },
                "cpuCount": {
                  "type": "integer",
                  "nullable": true
                },
                "cpuModel": {
                  "type": "string",
                  "nullable": true
                },
                "totalRam": {
                  "type": "string",
                  "nullable": true
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "configProfile": {
                  "type": "object",
                  "properties": {
                    "activeConfigProfileUuid": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    },
                    "activeInbounds": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "profileUuid": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "tag": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "network": {
                            "type": "string",
                            "nullable": true
                          },
                          "security": {
                            "type": "string",
                            "nullable": true
                          },
                          "port": {
                            "type": "number",
                            "nullable": true
                          },
                          "rawInbound": {
                            "nullable": true
                          }
                        },
                        "required": [
                          "uuid",
                          "profileUuid",
                          "tag",
                          "type",
                          "network",
                          "security",
                          "port",
                          "rawInbound"
                        ]
                      }
                    }
                  },
                  "required": [
                    "activeConfigProfileUuid",
                    "activeInbounds"
                  ]
                },
                "providerUuid": {
                  "type": "string",
                  "format": "uuid",
                  "nullable": true
                },
                "provider": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "faviconLink": {
                      "type": "string",
                      "nullable": true
                    },
                    "loginUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "uuid",
                    "name",
                    "faviconLink",
                    "loginUrl",
                    "createdAt",
                    "updatedAt"
                  ],
                  "nullable": true
                }
              },
              "required": [
                "uuid",
                "name",
                "address",
                "port",
                "isConnected",
                "isDisabled",
                "isConnecting",
                "isNodeOnline",
                "isXrayRunning",
                "lastStatusChange",
                "lastStatusMessage",
                "xrayVersion",
                "nodeVersion",
                "xrayUptime",
                "isTrafficTrackingActive",
                "trafficResetDay",
                "trafficLimitBytes",
                "trafficUsedBytes",
                "notifyPercent",
                "usersOnline",
                "viewPosition",
                "countryCode",
                "consumptionMultiplier",
                "cpuCount",
                "cpuModel",
                "totalRam",
                "createdAt",
                "updatedAt",
                "configProfile",
                "providerUuid",
                "provider"
              ]
            }
          }
        },
        "required": [
          "response"
        ],
        "description": "Get All Nodes Response Dto"
      },
      "GetOneNodeResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "port": {
                "type": "integer",
                "nullable": true
              },
              "isConnected": {
                "type": "boolean"
              },
              "isDisabled": {
                "type": "boolean"
              },
              "isConnecting": {
                "type": "boolean"
              },
              "isNodeOnline": {
                "type": "boolean"
              },
              "isXrayRunning": {
                "type": "boolean"
              },
              "lastStatusChange": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastStatusMessage": {
                "type": "string",
                "nullable": true
              },
              "xrayVersion": {
                "type": "string",
                "nullable": true
              },
              "nodeVersion": {
                "type": "string",
                "nullable": true
              },
              "xrayUptime": {
                "type": "string"
              },
              "isTrafficTrackingActive": {
                "type": "boolean"
              },
              "trafficResetDay": {
                "type": "integer",
                "nullable": true
              },
              "trafficLimitBytes": {
                "type": "number",
                "nullable": true
              },
              "trafficUsedBytes": {
                "type": "number",
                "nullable": true
              },
              "notifyPercent": {
                "type": "integer",
                "nullable": true
              },
              "usersOnline": {
                "type": "integer",
                "nullable": true
              },
              "viewPosition": {
                "type": "integer"
              },
              "countryCode": {
                "type": "string"
              },
              "consumptionMultiplier": {
                "type": "number"
              },
              "cpuCount": {
                "type": "integer",
                "nullable": true
              },
              "cpuModel": {
                "type": "string",
                "nullable": true
              },
              "totalRam": {
                "type": "string",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "configProfile": {
                "type": "object",
                "properties": {
                  "activeConfigProfileUuid": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "activeInbounds": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "profileUuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "tag": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "network": {
                          "type": "string",
                          "nullable": true
                        },
                        "security": {
                          "type": "string",
                          "nullable": true
                        },
                        "port": {
                          "type": "number",
                          "nullable": true
                        },
                        "rawInbound": {
                          "nullable": true
                        }
                      },
                      "required": [
                        "uuid",
                        "profileUuid",
                        "tag",
                        "type",
                        "network",
                        "security",
                        "port",
                        "rawInbound"
                      ]
                    }
                  }
                },
                "required": [
                  "activeConfigProfileUuid",
                  "activeInbounds"
                ]
              },
              "providerUuid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "provider": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string"
                  },
                  "faviconLink": {
                    "type": "string",
                    "nullable": true
                  },
                  "loginUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "uuid",
                  "name",
                  "faviconLink",
                  "loginUrl",
                  "createdAt",
                  "updatedAt"
                ],
                "nullable": true
              }
            },
            "required": [
              "uuid",
              "name",
              "address",
              "port",
              "isConnected",
              "isDisabled",
              "isConnecting",
              "isNodeOnline",
              "isXrayRunning",
              "lastStatusChange",
              "lastStatusMessage",
              "xrayVersion",
              "nodeVersion",
              "xrayUptime",
              "isTrafficTrackingActive",
              "trafficResetDay",
              "trafficLimitBytes",
              "trafficUsedBytes",
              "notifyPercent",
              "usersOnline",
              "viewPosition",
              "countryCode",
              "consumptionMultiplier",
              "cpuCount",
              "cpuModel",
              "totalRam",
              "createdAt",
              "updatedAt",
              "configProfile",
              "providerUuid",
              "provider"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get One Node Response Dto"
      },
      "EnableNodeResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "port": {
                "type": "integer",
                "nullable": true
              },
              "isConnected": {
                "type": "boolean"
              },
              "isDisabled": {
                "type": "boolean"
              },
              "isConnecting": {
                "type": "boolean"
              },
              "isNodeOnline": {
                "type": "boolean"
              },
              "isXrayRunning": {
                "type": "boolean"
              },
              "lastStatusChange": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastStatusMessage": {
                "type": "string",
                "nullable": true
              },
              "xrayVersion": {
                "type": "string",
                "nullable": true
              },
              "nodeVersion": {
                "type": "string",
                "nullable": true
              },
              "xrayUptime": {
                "type": "string"
              },
              "isTrafficTrackingActive": {
                "type": "boolean"
              },
              "trafficResetDay": {
                "type": "integer",
                "nullable": true
              },
              "trafficLimitBytes": {
                "type": "number",
                "nullable": true
              },
              "trafficUsedBytes": {
                "type": "number",
                "nullable": true
              },
              "notifyPercent": {
                "type": "integer",
                "nullable": true
              },
              "usersOnline": {
                "type": "integer",
                "nullable": true
              },
              "viewPosition": {
                "type": "integer"
              },
              "countryCode": {
                "type": "string"
              },
              "consumptionMultiplier": {
                "type": "number"
              },
              "cpuCount": {
                "type": "integer",
                "nullable": true
              },
              "cpuModel": {
                "type": "string",
                "nullable": true
              },
              "totalRam": {
                "type": "string",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "configProfile": {
                "type": "object",
                "properties": {
                  "activeConfigProfileUuid": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "activeInbounds": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "profileUuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "tag": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "network": {
                          "type": "string",
                          "nullable": true
                        },
                        "security": {
                          "type": "string",
                          "nullable": true
                        },
                        "port": {
                          "type": "number",
                          "nullable": true
                        },
                        "rawInbound": {
                          "nullable": true
                        }
                      },
                      "required": [
                        "uuid",
                        "profileUuid",
                        "tag",
                        "type",
                        "network",
                        "security",
                        "port",
                        "rawInbound"
                      ]
                    }
                  }
                },
                "required": [
                  "activeConfigProfileUuid",
                  "activeInbounds"
                ]
              },
              "providerUuid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "provider": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string"
                  },
                  "faviconLink": {
                    "type": "string",
                    "nullable": true
                  },
                  "loginUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "uuid",
                  "name",
                  "faviconLink",
                  "loginUrl",
                  "createdAt",
                  "updatedAt"
                ],
                "nullable": true
              }
            },
            "required": [
              "uuid",
              "name",
              "address",
              "port",
              "isConnected",
              "isDisabled",
              "isConnecting",
              "isNodeOnline",
              "isXrayRunning",
              "lastStatusChange",
              "lastStatusMessage",
              "xrayVersion",
              "nodeVersion",
              "xrayUptime",
              "isTrafficTrackingActive",
              "trafficResetDay",
              "trafficLimitBytes",
              "trafficUsedBytes",
              "notifyPercent",
              "usersOnline",
              "viewPosition",
              "countryCode",
              "consumptionMultiplier",
              "cpuCount",
              "cpuModel",
              "totalRam",
              "createdAt",
              "updatedAt",
              "configProfile",
              "providerUuid",
              "provider"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Enable Node Response Dto"
      },
      "DisableNodeResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "port": {
                "type": "integer",
                "nullable": true
              },
              "isConnected": {
                "type": "boolean"
              },
              "isDisabled": {
                "type": "boolean"
              },
              "isConnecting": {
                "type": "boolean"
              },
              "isNodeOnline": {
                "type": "boolean"
              },
              "isXrayRunning": {
                "type": "boolean"
              },
              "lastStatusChange": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastStatusMessage": {
                "type": "string",
                "nullable": true
              },
              "xrayVersion": {
                "type": "string",
                "nullable": true
              },
              "nodeVersion": {
                "type": "string",
                "nullable": true
              },
              "xrayUptime": {
                "type": "string"
              },
              "isTrafficTrackingActive": {
                "type": "boolean"
              },
              "trafficResetDay": {
                "type": "integer",
                "nullable": true
              },
              "trafficLimitBytes": {
                "type": "number",
                "nullable": true
              },
              "trafficUsedBytes": {
                "type": "number",
                "nullable": true
              },
              "notifyPercent": {
                "type": "integer",
                "nullable": true
              },
              "usersOnline": {
                "type": "integer",
                "nullable": true
              },
              "viewPosition": {
                "type": "integer"
              },
              "countryCode": {
                "type": "string"
              },
              "consumptionMultiplier": {
                "type": "number"
              },
              "cpuCount": {
                "type": "integer",
                "nullable": true
              },
              "cpuModel": {
                "type": "string",
                "nullable": true
              },
              "totalRam": {
                "type": "string",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "configProfile": {
                "type": "object",
                "properties": {
                  "activeConfigProfileUuid": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "activeInbounds": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "profileUuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "tag": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "network": {
                          "type": "string",
                          "nullable": true
                        },
                        "security": {
                          "type": "string",
                          "nullable": true
                        },
                        "port": {
                          "type": "number",
                          "nullable": true
                        },
                        "rawInbound": {
                          "nullable": true
                        }
                      },
                      "required": [
                        "uuid",
                        "profileUuid",
                        "tag",
                        "type",
                        "network",
                        "security",
                        "port",
                        "rawInbound"
                      ]
                    }
                  }
                },
                "required": [
                  "activeConfigProfileUuid",
                  "activeInbounds"
                ]
              },
              "providerUuid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "provider": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string"
                  },
                  "faviconLink": {
                    "type": "string",
                    "nullable": true
                  },
                  "loginUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "uuid",
                  "name",
                  "faviconLink",
                  "loginUrl",
                  "createdAt",
                  "updatedAt"
                ],
                "nullable": true
              }
            },
            "required": [
              "uuid",
              "name",
              "address",
              "port",
              "isConnected",
              "isDisabled",
              "isConnecting",
              "isNodeOnline",
              "isXrayRunning",
              "lastStatusChange",
              "lastStatusMessage",
              "xrayVersion",
              "nodeVersion",
              "xrayUptime",
              "isTrafficTrackingActive",
              "trafficResetDay",
              "trafficLimitBytes",
              "trafficUsedBytes",
              "notifyPercent",
              "usersOnline",
              "viewPosition",
              "countryCode",
              "consumptionMultiplier",
              "cpuCount",
              "cpuModel",
              "totalRam",
              "createdAt",
              "updatedAt",
              "configProfile",
              "providerUuid",
              "provider"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Disable Node Response Dto"
      },
      "DeleteNodeResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "isDeleted": {
                "type": "boolean"
              }
            },
            "required": [
              "isDeleted"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Delete Node Response Dto"
      },
      "UpdateNodeRequestDto": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 30
          },
          "address": {
            "type": "string",
            "minLength": 2
          },
          "port": {
            "type": "number",
            "minimum": 1,
            "maximum": 65535
          },
          "isTrafficTrackingActive": {
            "type": "boolean"
          },
          "trafficLimitBytes": {
            "type": "number",
            "minimum": 0
          },
          "notifyPercent": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "trafficResetDay": {
            "type": "number",
            "minimum": 1,
            "maximum": 31
          },
          "countryCode": {
            "type": "string",
            "maxLength": 2
          },
          "consumptionMultiplier": {
            "type": "number",
            "minimum": 0.1
          },
          "configProfile": {
            "type": "object",
            "properties": {
              "activeConfigProfileUuid": {
                "type": "string",
                "format": "uuid"
              },
              "activeInbounds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "required": [
              "activeConfigProfileUuid",
              "activeInbounds"
            ]
          },
          "providerUuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "required": [
          "uuid"
        ],
        "description": "Update Node Request Dto"
      },
      "UpdateNodeResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "port": {
                "type": "integer",
                "nullable": true
              },
              "isConnected": {
                "type": "boolean"
              },
              "isDisabled": {
                "type": "boolean"
              },
              "isConnecting": {
                "type": "boolean"
              },
              "isNodeOnline": {
                "type": "boolean"
              },
              "isXrayRunning": {
                "type": "boolean"
              },
              "lastStatusChange": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastStatusMessage": {
                "type": "string",
                "nullable": true
              },
              "xrayVersion": {
                "type": "string",
                "nullable": true
              },
              "nodeVersion": {
                "type": "string",
                "nullable": true
              },
              "xrayUptime": {
                "type": "string"
              },
              "isTrafficTrackingActive": {
                "type": "boolean"
              },
              "trafficResetDay": {
                "type": "integer",
                "nullable": true
              },
              "trafficLimitBytes": {
                "type": "number",
                "nullable": true
              },
              "trafficUsedBytes": {
                "type": "number",
                "nullable": true
              },
              "notifyPercent": {
                "type": "integer",
                "nullable": true
              },
              "usersOnline": {
                "type": "integer",
                "nullable": true
              },
              "viewPosition": {
                "type": "integer"
              },
              "countryCode": {
                "type": "string"
              },
              "consumptionMultiplier": {
                "type": "number"
              },
              "cpuCount": {
                "type": "integer",
                "nullable": true
              },
              "cpuModel": {
                "type": "string",
                "nullable": true
              },
              "totalRam": {
                "type": "string",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "configProfile": {
                "type": "object",
                "properties": {
                  "activeConfigProfileUuid": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "activeInbounds": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "profileUuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "tag": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "network": {
                          "type": "string",
                          "nullable": true
                        },
                        "security": {
                          "type": "string",
                          "nullable": true
                        },
                        "port": {
                          "type": "number",
                          "nullable": true
                        },
                        "rawInbound": {
                          "nullable": true
                        }
                      },
                      "required": [
                        "uuid",
                        "profileUuid",
                        "tag",
                        "type",
                        "network",
                        "security",
                        "port",
                        "rawInbound"
                      ]
                    }
                  }
                },
                "required": [
                  "activeConfigProfileUuid",
                  "activeInbounds"
                ]
              },
              "providerUuid": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "provider": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string"
                  },
                  "faviconLink": {
                    "type": "string",
                    "nullable": true
                  },
                  "loginUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "uuid",
                  "name",
                  "faviconLink",
                  "loginUrl",
                  "createdAt",
                  "updatedAt"
                ],
                "nullable": true
              }
            },
            "required": [
              "uuid",
              "name",
              "address",
              "port",
              "isConnected",
              "isDisabled",
              "isConnecting",
              "isNodeOnline",
              "isXrayRunning",
              "lastStatusChange",
              "lastStatusMessage",
              "xrayVersion",
              "nodeVersion",
              "xrayUptime",
              "isTrafficTrackingActive",
              "trafficResetDay",
              "trafficLimitBytes",
              "trafficUsedBytes",
              "notifyPercent",
              "usersOnline",
              "viewPosition",
              "countryCode",
              "consumptionMultiplier",
              "cpuCount",
              "cpuModel",
              "totalRam",
              "createdAt",
              "updatedAt",
              "configProfile",
              "providerUuid",
              "provider"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Update Node Response Dto"
      },
      "RestartNodeResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "eventSent": {
                "type": "boolean"
              }
            },
            "required": [
              "eventSent"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Restart Node Response Dto"
      },
      "RestartAllNodesRequestBodyDto": {
        "type": "object",
        "properties": {
          "forceRestart": {
            "type": "boolean"
          }
        },
        "description": "Restart All Nodes Request Body Dto"
      },
      "RestartAllNodesResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "eventSent": {
                "type": "boolean"
              }
            },
            "required": [
              "eventSent"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Restart All Nodes Response Dto"
      },
      "ReorderNodeRequestDto": {
        "type": "object",
        "properties": {
          "nodes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "viewPosition": {
                  "type": "integer"
                },
                "uuid": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "required": [
                "viewPosition",
                "uuid"
              ]
            }
          }
        },
        "required": [
          "nodes"
        ],
        "description": "Reorder Node Request Dto"
      },
      "ReorderNodeResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "name": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "port": {
                  "type": "integer",
                  "nullable": true
                },
                "isConnected": {
                  "type": "boolean"
                },
                "isDisabled": {
                  "type": "boolean"
                },
                "isConnecting": {
                  "type": "boolean"
                },
                "isNodeOnline": {
                  "type": "boolean"
                },
                "isXrayRunning": {
                  "type": "boolean"
                },
                "lastStatusChange": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "lastStatusMessage": {
                  "type": "string",
                  "nullable": true
                },
                "xrayVersion": {
                  "type": "string",
                  "nullable": true
                },
                "nodeVersion": {
                  "type": "string",
                  "nullable": true
                },
                "xrayUptime": {
                  "type": "string"
                },
                "isTrafficTrackingActive": {
                  "type": "boolean"
                },
                "trafficResetDay": {
                  "type": "integer",
                  "nullable": true
                },
                "trafficLimitBytes": {
                  "type": "number",
                  "nullable": true
                },
                "trafficUsedBytes": {
                  "type": "number",
                  "nullable": true
                },
                "notifyPercent": {
                  "type": "integer",
                  "nullable": true
                },
                "usersOnline": {
                  "type": "integer",
                  "nullable": true
                },
                "viewPosition": {
                  "type": "integer"
                },
                "countryCode": {
                  "type": "string"
                },
                "consumptionMultiplier": {
                  "type": "number"
                },
                "cpuCount": {
                  "type": "integer",
                  "nullable": true
                },
                "cpuModel": {
                  "type": "string",
                  "nullable": true
                },
                "totalRam": {
                  "type": "string",
                  "nullable": true
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "configProfile": {
                  "type": "object",
                  "properties": {
                    "activeConfigProfileUuid": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    },
                    "activeInbounds": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "profileUuid": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "tag": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "network": {
                            "type": "string",
                            "nullable": true
                          },
                          "security": {
                            "type": "string",
                            "nullable": true
                          },
                          "port": {
                            "type": "number",
                            "nullable": true
                          },
                          "rawInbound": {
                            "nullable": true
                          }
                        },
                        "required": [
                          "uuid",
                          "profileUuid",
                          "tag",
                          "type",
                          "network",
                          "security",
                          "port",
                          "rawInbound"
                        ]
                      }
                    }
                  },
                  "required": [
                    "activeConfigProfileUuid",
                    "activeInbounds"
                  ]
                },
                "providerUuid": {
                  "type": "string",
                  "format": "uuid",
                  "nullable": true
                },
                "provider": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "faviconLink": {
                      "type": "string",
                      "nullable": true
                    },
                    "loginUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "uuid",
                    "name",
                    "faviconLink",
                    "loginUrl",
                    "createdAt",
                    "updatedAt"
                  ],
                  "nullable": true
                }
              },
              "required": [
                "uuid",
                "name",
                "address",
                "port",
                "isConnected",
                "isDisabled",
                "isConnecting",
                "isNodeOnline",
                "isXrayRunning",
                "lastStatusChange",
                "lastStatusMessage",
                "xrayVersion",
                "nodeVersion",
                "xrayUptime",
                "isTrafficTrackingActive",
                "trafficResetDay",
                "trafficLimitBytes",
                "trafficUsedBytes",
                "notifyPercent",
                "usersOnline",
                "viewPosition",
                "countryCode",
                "consumptionMultiplier",
                "cpuCount",
                "cpuModel",
                "totalRam",
                "createdAt",
                "updatedAt",
                "configProfile",
                "providerUuid",
                "provider"
              ]
            }
          }
        },
        "required": [
          "response"
        ],
        "description": "Reorder Node Response Dto"
      },
      "GetAllHostTagsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "tags"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get All Host Tags Response Dto"
      },
      "CreateHostRequestDto": {
        "type": "object",
        "properties": {
          "inbound": {
            "type": "object",
            "properties": {
              "configProfileUuid": {
                "type": "string",
                "format": "uuid"
              },
              "configProfileInboundUuid": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "configProfileUuid",
              "configProfileInboundUuid"
            ]
          },
          "remark": {
            "type": "string",
            "minLength": 1,
            "maxLength": 40
          },
          "address": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "path": {
            "type": "string"
          },
          "sni": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "alpn": {
            "type": "string",
            "enum": [
              "h3",
              "h2",
              "http/1.1",
              "h2,http/1.1",
              "h3,h2,http/1.1",
              "h3,h2"
            ],
            "x-enumNames": [
              "H3",
              "H2",
              "HTTP_1_1",
              "H_COMBINED",
              "H3_H2_H1_COMBINED",
              "H3_H2_COMBINED"
            ],
            "nullable": true
          },
          "fingerprint": {
            "type": "string",
            "enum": [
              "chrome",
              "firefox",
              "safari",
              "ios",
              "android",
              "edge",
              "qq",
              "random",
              "randomized"
            ],
            "x-enumNames": [
              "CHROME",
              "FIREFOX",
              "SAFARI",
              "IOS",
              "ANDROID",
              "EDGE",
              "QQ",
              "RANDOM",
              "RANDOMIZED"
            ],
            "nullable": true
          },
          "isDisabled": {
            "type": "boolean",
            "default": false
          },
          "securityLayer": {
            "type": "string",
            "enum": [
              "DEFAULT",
              "TLS",
              "NONE"
            ],
            "x-enumNames": [
              "DEFAULT",
              "TLS",
              "NONE"
            ],
            "default": "DEFAULT"
          },
          "xHttpExtraParams": {
            "nullable": true
          },
          "muxParams": {
            "nullable": true
          },
          "sockoptParams": {
            "nullable": true
          },
          "serverDescription": {
            "type": "string",
            "maxLength": 30,
            "nullable": true
          },
          "tag": {
            "description": "Optional. Host tag for categorization. Max 32 characters, uppercase letters, numbers, underscores and colons are allowed.",
            "type": "string",
            "pattern": "^[A-Z0-9_:]+$",
            "maxLength": 32,
            "nullable": true
          },
          "isHidden": {
            "type": "boolean",
            "default": false
          },
          "overrideSniFromAddress": {
            "type": "boolean",
            "default": false
          },
          "allowInsecure": {
            "type": "boolean",
            "default": false
          },
          "vlessRouteId": {
            "type": "integer",
            "minimum": 0,
            "maximum": 65535,
            "nullable": true
          },
          "shuffleHost": {
            "type": "boolean",
            "default": false
          },
          "mihomoX25519": {
            "type": "boolean",
            "default": false
          },
          "nodes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "inbound",
          "remark",
          "address",
          "port"
        ],
        "description": "Create Host Request Dto"
      },
      "CreateHostResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "viewPosition": {
                "type": "integer"
              },
              "remark": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "port": {
                "type": "integer"
              },
              "path": {
                "type": "string",
                "nullable": true
              },
              "sni": {
                "type": "string",
                "nullable": true
              },
              "host": {
                "type": "string",
                "nullable": true
              },
              "alpn": {
                "type": "string",
                "nullable": true
              },
              "fingerprint": {
                "type": "string",
                "nullable": true
              },
              "isDisabled": {
                "type": "boolean",
                "default": false
              },
              "securityLayer": {
                "type": "string",
                "enum": [
                  "DEFAULT",
                  "TLS",
                  "NONE"
                ],
                "x-enumNames": [
                  "DEFAULT",
                  "TLS",
                  "NONE"
                ],
                "default": "DEFAULT"
              },
              "xHttpExtraParams": {
                "nullable": true
              },
              "muxParams": {
                "nullable": true
              },
              "sockoptParams": {
                "nullable": true
              },
              "inbound": {
                "type": "object",
                "properties": {
                  "configProfileUuid": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "configProfileInboundUuid": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  }
                },
                "required": [
                  "configProfileUuid",
                  "configProfileInboundUuid"
                ]
              },
              "serverDescription": {
                "type": "string",
                "nullable": true
              },
              "tag": {
                "type": "string",
                "nullable": true
              },
              "isHidden": {
                "type": "boolean",
                "default": false
              },
              "overrideSniFromAddress": {
                "type": "boolean",
                "default": false
              },
              "vlessRouteId": {
                "type": "integer",
                "nullable": true
              },
              "allowInsecure": {
                "type": "boolean",
                "default": false
              },
              "shuffleHost": {
                "type": "boolean"
              },
              "mihomoX25519": {
                "type": "boolean"
              },
              "nodes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "required": [
              "uuid",
              "viewPosition",
              "remark",
              "address",
              "port",
              "path",
              "sni",
              "host",
              "alpn",
              "fingerprint",
              "xHttpExtraParams",
              "muxParams",
              "sockoptParams",
              "inbound",
              "serverDescription",
              "tag",
              "vlessRouteId",
              "shuffleHost",
              "mihomoX25519",
              "nodes"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Create Host Response Dto"
      },
      "UpdateHostRequestDto": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "inbound": {
            "type": "object",
            "properties": {
              "configProfileUuid": {
                "type": "string",
                "format": "uuid"
              },
              "configProfileInboundUuid": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "configProfileUuid",
              "configProfileInboundUuid"
            ]
          },
          "remark": {
            "type": "string",
            "maxLength": 40
          },
          "address": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "path": {
            "type": "string"
          },
          "sni": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "alpn": {
            "type": "string",
            "enum": [
              "h3",
              "h2",
              "http/1.1",
              "h2,http/1.1",
              "h3,h2,http/1.1",
              "h3,h2"
            ],
            "x-enumNames": [
              "H3",
              "H2",
              "HTTP_1_1",
              "H_COMBINED",
              "H3_H2_H1_COMBINED",
              "H3_H2_COMBINED"
            ],
            "nullable": true
          },
          "fingerprint": {
            "type": "string",
            "enum": [
              "chrome",
              "firefox",
              "safari",
              "ios",
              "android",
              "edge",
              "qq",
              "random",
              "randomized"
            ],
            "x-enumNames": [
              "CHROME",
              "FIREFOX",
              "SAFARI",
              "IOS",
              "ANDROID",
              "EDGE",
              "QQ",
              "RANDOM",
              "RANDOMIZED"
            ],
            "nullable": true
          },
          "isDisabled": {
            "type": "boolean"
          },
          "securityLayer": {
            "type": "string",
            "enum": [
              "DEFAULT",
              "TLS",
              "NONE"
            ],
            "x-enumNames": [
              "DEFAULT",
              "TLS",
              "NONE"
            ]
          },
          "xHttpExtraParams": {
            "nullable": true
          },
          "muxParams": {
            "nullable": true
          },
          "sockoptParams": {
            "nullable": true
          },
          "serverDescription": {
            "type": "string",
            "maxLength": 30,
            "nullable": true
          },
          "tag": {
            "description": "Optional. Host tag for categorization. Max 32 characters, uppercase letters, numbers, underscores and colons are allowed.",
            "type": "string",
            "pattern": "^[A-Z0-9_:]+$",
            "maxLength": 32,
            "nullable": true
          },
          "isHidden": {
            "type": "boolean"
          },
          "overrideSniFromAddress": {
            "type": "boolean"
          },
          "vlessRouteId": {
            "type": "integer",
            "minimum": 0,
            "maximum": 65535,
            "nullable": true
          },
          "allowInsecure": {
            "type": "boolean"
          },
          "shuffleHost": {
            "type": "boolean"
          },
          "mihomoX25519": {
            "type": "boolean"
          },
          "nodes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "uuid"
        ],
        "description": "Update Host Request Dto"
      },
      "UpdateHostResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "viewPosition": {
                "type": "integer"
              },
              "remark": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "port": {
                "type": "integer"
              },
              "path": {
                "type": "string",
                "nullable": true
              },
              "sni": {
                "type": "string",
                "nullable": true
              },
              "host": {
                "type": "string",
                "nullable": true
              },
              "alpn": {
                "type": "string",
                "nullable": true
              },
              "fingerprint": {
                "type": "string",
                "nullable": true
              },
              "isDisabled": {
                "type": "boolean",
                "default": false
              },
              "securityLayer": {
                "type": "string",
                "enum": [
                  "DEFAULT",
                  "TLS",
                  "NONE"
                ],
                "x-enumNames": [
                  "DEFAULT",
                  "TLS",
                  "NONE"
                ],
                "default": "DEFAULT"
              },
              "xHttpExtraParams": {
                "nullable": true
              },
              "muxParams": {
                "nullable": true
              },
              "sockoptParams": {
                "nullable": true
              },
              "inbound": {
                "type": "object",
                "properties": {
                  "configProfileUuid": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "configProfileInboundUuid": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  }
                },
                "required": [
                  "configProfileUuid",
                  "configProfileInboundUuid"
                ]
              },
              "serverDescription": {
                "type": "string",
                "nullable": true
              },
              "tag": {
                "type": "string",
                "nullable": true
              },
              "isHidden": {
                "type": "boolean",
                "default": false
              },
              "overrideSniFromAddress": {
                "type": "boolean",
                "default": false
              },
              "vlessRouteId": {
                "type": "integer",
                "nullable": true
              },
              "allowInsecure": {
                "type": "boolean",
                "default": false
              },
              "shuffleHost": {
                "type": "boolean"
              },
              "mihomoX25519": {
                "type": "boolean"
              },
              "nodes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "required": [
              "uuid",
              "viewPosition",
              "remark",
              "address",
              "port",
              "path",
              "sni",
              "host",
              "alpn",
              "fingerprint",
              "xHttpExtraParams",
              "muxParams",
              "sockoptParams",
              "inbound",
              "serverDescription",
              "tag",
              "vlessRouteId",
              "shuffleHost",
              "mihomoX25519",
              "nodes"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Update Host Response Dto"
      },
      "GetAllHostsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "viewPosition": {
                  "type": "integer"
                },
                "remark": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "port": {
                  "type": "integer"
                },
                "path": {
                  "type": "string",
                  "nullable": true
                },
                "sni": {
                  "type": "string",
                  "nullable": true
                },
                "host": {
                  "type": "string",
                  "nullable": true
                },
                "alpn": {
                  "type": "string",
                  "nullable": true
                },
                "fingerprint": {
                  "type": "string",
                  "nullable": true
                },
                "isDisabled": {
                  "type": "boolean",
                  "default": false
                },
                "securityLayer": {
                  "type": "string",
                  "enum": [
                    "DEFAULT",
                    "TLS",
                    "NONE"
                  ],
                  "x-enumNames": [
                    "DEFAULT",
                    "TLS",
                    "NONE"
                  ],
                  "default": "DEFAULT"
                },
                "xHttpExtraParams": {
                  "nullable": true
                },
                "muxParams": {
                  "nullable": true
                },
                "sockoptParams": {
                  "nullable": true
                },
                "inbound": {
                  "type": "object",
                  "properties": {
                    "configProfileUuid": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    },
                    "configProfileInboundUuid": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    }
                  },
                  "required": [
                    "configProfileUuid",
                    "configProfileInboundUuid"
                  ]
                },
                "serverDescription": {
                  "type": "string",
                  "nullable": true
                },
                "tag": {
                  "type": "string",
                  "nullable": true
                },
                "isHidden": {
                  "type": "boolean",
                  "default": false
                },
                "overrideSniFromAddress": {
                  "type": "boolean",
                  "default": false
                },
                "vlessRouteId": {
                  "type": "integer",
                  "nullable": true
                },
                "allowInsecure": {
                  "type": "boolean",
                  "default": false
                },
                "shuffleHost": {
                  "type": "boolean"
                },
                "mihomoX25519": {
                  "type": "boolean"
                },
                "nodes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              "required": [
                "uuid",
                "viewPosition",
                "remark",
                "address",
                "port",
                "path",
                "sni",
                "host",
                "alpn",
                "fingerprint",
                "xHttpExtraParams",
                "muxParams",
                "sockoptParams",
                "inbound",
                "serverDescription",
                "tag",
                "vlessRouteId",
                "shuffleHost",
                "mihomoX25519",
                "nodes"
              ]
            }
          }
        },
        "required": [
          "response"
        ],
        "description": "Get All Hosts Response Dto"
      },
      "GetOneHostResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "viewPosition": {
                "type": "integer"
              },
              "remark": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "port": {
                "type": "integer"
              },
              "path": {
                "type": "string",
                "nullable": true
              },
              "sni": {
                "type": "string",
                "nullable": true
              },
              "host": {
                "type": "string",
                "nullable": true
              },
              "alpn": {
                "type": "string",
                "nullable": true
              },
              "fingerprint": {
                "type": "string",
                "nullable": true
              },
              "isDisabled": {
                "type": "boolean",
                "default": false
              },
              "securityLayer": {
                "type": "string",
                "enum": [
                  "DEFAULT",
                  "TLS",
                  "NONE"
                ],
                "x-enumNames": [
                  "DEFAULT",
                  "TLS",
                  "NONE"
                ],
                "default": "DEFAULT"
              },
              "xHttpExtraParams": {
                "nullable": true
              },
              "muxParams": {
                "nullable": true
              },
              "sockoptParams": {
                "nullable": true
              },
              "inbound": {
                "type": "object",
                "properties": {
                  "configProfileUuid": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "configProfileInboundUuid": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  }
                },
                "required": [
                  "configProfileUuid",
                  "configProfileInboundUuid"
                ]
              },
              "serverDescription": {
                "type": "string",
                "nullable": true
              },
              "tag": {
                "type": "string",
                "nullable": true
              },
              "isHidden": {
                "type": "boolean",
                "default": false
              },
              "overrideSniFromAddress": {
                "type": "boolean",
                "default": false
              },
              "vlessRouteId": {
                "type": "integer",
                "nullable": true
              },
              "allowInsecure": {
                "type": "boolean",
                "default": false
              },
              "shuffleHost": {
                "type": "boolean"
              },
              "mihomoX25519": {
                "type": "boolean"
              },
              "nodes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "required": [
              "uuid",
              "viewPosition",
              "remark",
              "address",
              "port",
              "path",
              "sni",
              "host",
              "alpn",
              "fingerprint",
              "xHttpExtraParams",
              "muxParams",
              "sockoptParams",
              "inbound",
              "serverDescription",
              "tag",
              "vlessRouteId",
              "shuffleHost",
              "mihomoX25519",
              "nodes"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get One Host Response Dto"
      },
      "ReorderHostRequestDto": {
        "type": "object",
        "properties": {
          "hosts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "viewPosition": {
                  "type": "integer"
                },
                "uuid": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "required": [
                "viewPosition",
                "uuid"
              ]
            }
          }
        },
        "required": [
          "hosts"
        ],
        "description": "Reorder Host Request Dto"
      },
      "ReorderHostResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "isUpdated": {
                "type": "boolean"
              }
            },
            "required": [
              "isUpdated"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Reorder Host Response Dto"
      },
      "DeleteHostResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "isDeleted": {
                "type": "boolean"
              }
            },
            "required": [
              "isDeleted"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Delete Host Response Dto"
      },
      "BulkDeleteHostsRequestDto": {
        "type": "object",
        "properties": {
          "uuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "uuids"
        ],
        "description": "Bulk Delete Hosts Request Dto"
      },
      "BulkDeleteHostsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "viewPosition": {
                  "type": "integer"
                },
                "remark": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "port": {
                  "type": "integer"
                },
                "path": {
                  "type": "string",
                  "nullable": true
                },
                "sni": {
                  "type": "string",
                  "nullable": true
                },
                "host": {
                  "type": "string",
                  "nullable": true
                },
                "alpn": {
                  "type": "string",
                  "nullable": true
                },
                "fingerprint": {
                  "type": "string",
                  "nullable": true
                },
                "isDisabled": {
                  "type": "boolean",
                  "default": false
                },
                "securityLayer": {
                  "type": "string",
                  "enum": [
                    "DEFAULT",
                    "TLS",
                    "NONE"
                  ],
                  "x-enumNames": [
                    "DEFAULT",
                    "TLS",
                    "NONE"
                  ],
                  "default": "DEFAULT"
                },
                "xHttpExtraParams": {
                  "nullable": true
                },
                "muxParams": {
                  "nullable": true
                },
                "sockoptParams": {
                  "nullable": true
                },
                "inbound": {
                  "type": "object",
                  "properties": {
                    "configProfileUuid": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    },
                    "configProfileInboundUuid": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    }
                  },
                  "required": [
                    "configProfileUuid",
                    "configProfileInboundUuid"
                  ]
                },
                "serverDescription": {
                  "type": "string",
                  "nullable": true
                },
                "tag": {
                  "type": "string",
                  "nullable": true
                },
                "isHidden": {
                  "type": "boolean",
                  "default": false
                },
                "overrideSniFromAddress": {
                  "type": "boolean",
                  "default": false
                },
                "vlessRouteId": {
                  "type": "integer",
                  "nullable": true
                },
                "allowInsecure": {
                  "type": "boolean",
                  "default": false
                },
                "shuffleHost": {
                  "type": "boolean"
                },
                "mihomoX25519": {
                  "type": "boolean"
                },
                "nodes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              "required": [
                "uuid",
                "viewPosition",
                "remark",
                "address",
                "port",
                "path",
                "sni",
                "host",
                "alpn",
                "fingerprint",
                "xHttpExtraParams",
                "muxParams",
                "sockoptParams",
                "inbound",
                "serverDescription",
                "tag",
                "vlessRouteId",
                "shuffleHost",
                "mihomoX25519",
                "nodes"
              ]
            }
          }
        },
        "required": [
          "response"
        ],
        "description": "Bulk Delete Hosts Response Dto"
      },
      "BulkDisableHostsRequestDto": {
        "type": "object",
        "properties": {
          "uuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "uuids"
        ],
        "description": "Bulk Disable Hosts Request Dto"
      },
      "BulkDisableHostsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "viewPosition": {
                  "type": "integer"
                },
                "remark": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "port": {
                  "type": "integer"
                },
                "path": {
                  "type": "string",
                  "nullable": true
                },
                "sni": {
                  "type": "string",
                  "nullable": true
                },
                "host": {
                  "type": "string",
                  "nullable": true
                },
                "alpn": {
                  "type": "string",
                  "nullable": true
                },
                "fingerprint": {
                  "type": "string",
                  "nullable": true
                },
                "isDisabled": {
                  "type": "boolean",
                  "default": false
                },
                "securityLayer": {
                  "type": "string",
                  "enum": [
                    "DEFAULT",
                    "TLS",
                    "NONE"
                  ],
                  "x-enumNames": [
                    "DEFAULT",
                    "TLS",
                    "NONE"
                  ],
                  "default": "DEFAULT"
                },
                "xHttpExtraParams": {
                  "nullable": true
                },
                "muxParams": {
                  "nullable": true
                },
                "sockoptParams": {
                  "nullable": true
                },
                "inbound": {
                  "type": "object",
                  "properties": {
                    "configProfileUuid": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    },
                    "configProfileInboundUuid": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    }
                  },
                  "required": [
                    "configProfileUuid",
                    "configProfileInboundUuid"
                  ]
                },
                "serverDescription": {
                  "type": "string",
                  "nullable": true
                },
                "tag": {
                  "type": "string",
                  "nullable": true
                },
                "isHidden": {
                  "type": "boolean",
                  "default": false
                },
                "overrideSniFromAddress": {
                  "type": "boolean",
                  "default": false
                },
                "vlessRouteId": {
                  "type": "integer",
                  "nullable": true
                },
                "allowInsecure": {
                  "type": "boolean",
                  "default": false
                },
                "shuffleHost": {
                  "type": "boolean"
                },
                "mihomoX25519": {
                  "type": "boolean"
                },
                "nodes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              "required": [
                "uuid",
                "viewPosition",
                "remark",
                "address",
                "port",
                "path",
                "sni",
                "host",
                "alpn",
                "fingerprint",
                "xHttpExtraParams",
                "muxParams",
                "sockoptParams",
                "inbound",
                "serverDescription",
                "tag",
                "vlessRouteId",
                "shuffleHost",
                "mihomoX25519",
                "nodes"
              ]
            }
          }
        },
        "required": [
          "response"
        ],
        "description": "Bulk Disable Hosts Response Dto"
      },
      "BulkEnableHostsRequestDto": {
        "type": "object",
        "properties": {
          "uuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "uuids"
        ],
        "description": "Bulk Enable Hosts Request Dto"
      },
      "BulkEnableHostsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "viewPosition": {
                  "type": "integer"
                },
                "remark": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "port": {
                  "type": "integer"
                },
                "path": {
                  "type": "string",
                  "nullable": true
                },
                "sni": {
                  "type": "string",
                  "nullable": true
                },
                "host": {
                  "type": "string",
                  "nullable": true
                },
                "alpn": {
                  "type": "string",
                  "nullable": true
                },
                "fingerprint": {
                  "type": "string",
                  "nullable": true
                },
                "isDisabled": {
                  "type": "boolean",
                  "default": false
                },
                "securityLayer": {
                  "type": "string",
                  "enum": [
                    "DEFAULT",
                    "TLS",
                    "NONE"
                  ],
                  "x-enumNames": [
                    "DEFAULT",
                    "TLS",
                    "NONE"
                  ],
                  "default": "DEFAULT"
                },
                "xHttpExtraParams": {
                  "nullable": true
                },
                "muxParams": {
                  "nullable": true
                },
                "sockoptParams": {
                  "nullable": true
                },
                "inbound": {
                  "type": "object",
                  "properties": {
                    "configProfileUuid": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    },
                    "configProfileInboundUuid": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    }
                  },
                  "required": [
                    "configProfileUuid",
                    "configProfileInboundUuid"
                  ]
                },
                "serverDescription": {
                  "type": "string",
                  "nullable": true
                },
                "tag": {
                  "type": "string",
                  "nullable": true
                },
                "isHidden": {
                  "type": "boolean",
                  "default": false
                },
                "overrideSniFromAddress": {
                  "type": "boolean",
                  "default": false
                },
                "vlessRouteId": {
                  "type": "integer",
                  "nullable": true
                },
                "allowInsecure": {
                  "type": "boolean",
                  "default": false
                },
                "shuffleHost": {
                  "type": "boolean"
                },
                "mihomoX25519": {
                  "type": "boolean"
                },
                "nodes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              "required": [
                "uuid",
                "viewPosition",
                "remark",
                "address",
                "port",
                "path",
                "sni",
                "host",
                "alpn",
                "fingerprint",
                "xHttpExtraParams",
                "muxParams",
                "sockoptParams",
                "inbound",
                "serverDescription",
                "tag",
                "vlessRouteId",
                "shuffleHost",
                "mihomoX25519",
                "nodes"
              ]
            }
          }
        },
        "required": [
          "response"
        ],
        "description": "Bulk Enable Hosts Response Dto"
      },
      "SetInboundToManyHostsRequestDto": {
        "type": "object",
        "properties": {
          "uuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "configProfileUuid": {
            "type": "string",
            "format": "uuid"
          },
          "configProfileInboundUuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "uuids",
          "configProfileUuid",
          "configProfileInboundUuid"
        ],
        "description": "Set Inbound To Many Hosts Request Dto"
      },
      "SetInboundToManyHostsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "viewPosition": {
                  "type": "integer"
                },
                "remark": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "port": {
                  "type": "integer"
                },
                "path": {
                  "type": "string",
                  "nullable": true
                },
                "sni": {
                  "type": "string",
                  "nullable": true
                },
                "host": {
                  "type": "string",
                  "nullable": true
                },
                "alpn": {
                  "type": "string",
                  "nullable": true
                },
                "fingerprint": {
                  "type": "string",
                  "nullable": true
                },
                "isDisabled": {
                  "type": "boolean",
                  "default": false
                },
                "securityLayer": {
                  "type": "string",
                  "enum": [
                    "DEFAULT",
                    "TLS",
                    "NONE"
                  ],
                  "x-enumNames": [
                    "DEFAULT",
                    "TLS",
                    "NONE"
                  ],
                  "default": "DEFAULT"
                },
                "xHttpExtraParams": {
                  "nullable": true
                },
                "muxParams": {
                  "nullable": true
                },
                "sockoptParams": {
                  "nullable": true
                },
                "inbound": {
                  "type": "object",
                  "properties": {
                    "configProfileUuid": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    },
                    "configProfileInboundUuid": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    }
                  },
                  "required": [
                    "configProfileUuid",
                    "configProfileInboundUuid"
                  ]
                },
                "serverDescription": {
                  "type": "string",
                  "nullable": true
                },
                "tag": {
                  "type": "string",
                  "nullable": true
                },
                "isHidden": {
                  "type": "boolean",
                  "default": false
                },
                "overrideSniFromAddress": {
                  "type": "boolean",
                  "default": false
                },
                "vlessRouteId": {
                  "type": "integer",
                  "nullable": true
                },
                "allowInsecure": {
                  "type": "boolean",
                  "default": false
                },
                "shuffleHost": {
                  "type": "boolean"
                },
                "mihomoX25519": {
                  "type": "boolean"
                },
                "nodes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              "required": [
                "uuid",
                "viewPosition",
                "remark",
                "address",
                "port",
                "path",
                "sni",
                "host",
                "alpn",
                "fingerprint",
                "xHttpExtraParams",
                "muxParams",
                "sockoptParams",
                "inbound",
                "serverDescription",
                "tag",
                "vlessRouteId",
                "shuffleHost",
                "mihomoX25519",
                "nodes"
              ]
            }
          }
        },
        "required": [
          "response"
        ],
        "description": "Set Inbound To Many Hosts Response Dto"
      },
      "SetPortToManyHostsRequestDto": {
        "type": "object",
        "properties": {
          "uuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "port": {
            "type": "integer",
            "minimum": 1,
            "maximum": 65535
          }
        },
        "required": [
          "uuids",
          "port"
        ],
        "description": "Set Port To Many Hosts Request Dto"
      },
      "SetPortToManyHostsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "viewPosition": {
                  "type": "integer"
                },
                "remark": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "port": {
                  "type": "integer"
                },
                "path": {
                  "type": "string",
                  "nullable": true
                },
                "sni": {
                  "type": "string",
                  "nullable": true
                },
                "host": {
                  "type": "string",
                  "nullable": true
                },
                "alpn": {
                  "type": "string",
                  "nullable": true
                },
                "fingerprint": {
                  "type": "string",
                  "nullable": true
                },
                "isDisabled": {
                  "type": "boolean",
                  "default": false
                },
                "securityLayer": {
                  "type": "string",
                  "enum": [
                    "DEFAULT",
                    "TLS",
                    "NONE"
                  ],
                  "x-enumNames": [
                    "DEFAULT",
                    "TLS",
                    "NONE"
                  ],
                  "default": "DEFAULT"
                },
                "xHttpExtraParams": {
                  "nullable": true
                },
                "muxParams": {
                  "nullable": true
                },
                "sockoptParams": {
                  "nullable": true
                },
                "inbound": {
                  "type": "object",
                  "properties": {
                    "configProfileUuid": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    },
                    "configProfileInboundUuid": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    }
                  },
                  "required": [
                    "configProfileUuid",
                    "configProfileInboundUuid"
                  ]
                },
                "serverDescription": {
                  "type": "string",
                  "nullable": true
                },
                "tag": {
                  "type": "string",
                  "nullable": true
                },
                "isHidden": {
                  "type": "boolean",
                  "default": false
                },
                "overrideSniFromAddress": {
                  "type": "boolean",
                  "default": false
                },
                "vlessRouteId": {
                  "type": "integer",
                  "nullable": true
                },
                "allowInsecure": {
                  "type": "boolean",
                  "default": false
                },
                "shuffleHost": {
                  "type": "boolean"
                },
                "mihomoX25519": {
                  "type": "boolean"
                },
                "nodes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              "required": [
                "uuid",
                "viewPosition",
                "remark",
                "address",
                "port",
                "path",
                "sni",
                "host",
                "alpn",
                "fingerprint",
                "xHttpExtraParams",
                "muxParams",
                "sockoptParams",
                "inbound",
                "serverDescription",
                "tag",
                "vlessRouteId",
                "shuffleHost",
                "mihomoX25519",
                "nodes"
              ]
            }
          }
        },
        "required": [
          "response"
        ],
        "description": "Set Port To Many Hosts Response Dto"
      },
      "GetNodeUserUsageByRangeResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "userUuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "username": {
                  "type": "string"
                },
                "nodeUuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "total": {
                  "type": "number"
                },
                "date": {
                  "type": "string"
                }
              },
              "required": [
                "userUuid",
                "username",
                "nodeUuid",
                "total",
                "date"
              ]
            }
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Node User Usage By Range Response Dto"
      },
      "GetNodesRealtimeUsageResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "nodeUuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "nodeName": {
                  "type": "string"
                },
                "countryCode": {
                  "type": "string"
                },
                "downloadBytes": {
                  "type": "number"
                },
                "uploadBytes": {
                  "type": "number"
                },
                "totalBytes": {
                  "type": "number"
                },
                "downloadSpeedBps": {
                  "type": "number"
                },
                "uploadSpeedBps": {
                  "type": "number"
                },
                "totalSpeedBps": {
                  "type": "number"
                }
              },
              "required": [
                "nodeUuid",
                "nodeName",
                "countryCode",
                "downloadBytes",
                "uploadBytes",
                "totalBytes",
                "downloadSpeedBps",
                "uploadSpeedBps",
                "totalSpeedBps"
              ]
            }
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Nodes Realtime Usage Response Dto"
      },
      "GetAllHwidDevicesResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "devices": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "hwid": {
                      "type": "string"
                    },
                    "userUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "platform": {
                      "type": "string",
                      "nullable": true
                    },
                    "osVersion": {
                      "type": "string",
                      "nullable": true
                    },
                    "deviceModel": {
                      "type": "string",
                      "nullable": true
                    },
                    "userAgent": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "hwid",
                    "userUuid",
                    "platform",
                    "osVersion",
                    "deviceModel",
                    "userAgent",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              },
              "total": {
                "type": "number"
              }
            },
            "required": [
              "devices",
              "total"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get All Hwid Devices Response Dto"
      },
      "CreateUserHwidDeviceRequestDto": {
        "type": "object",
        "properties": {
          "hwid": {
            "type": "string"
          },
          "userUuid": {
            "type": "string",
            "format": "uuid"
          },
          "platform": {
            "type": "string"
          },
          "osVersion": {
            "type": "string"
          },
          "deviceModel": {
            "type": "string"
          },
          "userAgent": {
            "type": "string"
          }
        },
        "required": [
          "hwid",
          "userUuid"
        ],
        "description": "Create User Hwid Device Request Dto"
      },
      "CreateUserHwidDeviceResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "devices": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "hwid": {
                      "type": "string"
                    },
                    "userUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "platform": {
                      "type": "string",
                      "nullable": true
                    },
                    "osVersion": {
                      "type": "string",
                      "nullable": true
                    },
                    "deviceModel": {
                      "type": "string",
                      "nullable": true
                    },
                    "userAgent": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "hwid",
                    "userUuid",
                    "platform",
                    "osVersion",
                    "deviceModel",
                    "userAgent",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "required": [
              "total",
              "devices"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Create User Hwid Device Response Dto"
      },
      "DeleteUserHwidDeviceRequestDto": {
        "type": "object",
        "properties": {
          "userUuid": {
            "type": "string",
            "format": "uuid"
          },
          "hwid": {
            "type": "string"
          }
        },
        "required": [
          "userUuid",
          "hwid"
        ],
        "description": "Delete User Hwid Device Request Dto"
      },
      "DeleteUserHwidDeviceResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "devices": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "hwid": {
                      "type": "string"
                    },
                    "userUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "platform": {
                      "type": "string",
                      "nullable": true
                    },
                    "osVersion": {
                      "type": "string",
                      "nullable": true
                    },
                    "deviceModel": {
                      "type": "string",
                      "nullable": true
                    },
                    "userAgent": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "hwid",
                    "userUuid",
                    "platform",
                    "osVersion",
                    "deviceModel",
                    "userAgent",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "required": [
              "total",
              "devices"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Delete User Hwid Device Response Dto"
      },
      "DeleteAllUserHwidDevicesRequestDto": {
        "type": "object",
        "properties": {
          "userUuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "userUuid"
        ],
        "description": "Delete All User Hwid Devices Request Dto"
      },
      "DeleteAllUserHwidDevicesResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "devices": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "hwid": {
                      "type": "string"
                    },
                    "userUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "platform": {
                      "type": "string",
                      "nullable": true
                    },
                    "osVersion": {
                      "type": "string",
                      "nullable": true
                    },
                    "deviceModel": {
                      "type": "string",
                      "nullable": true
                    },
                    "userAgent": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "hwid",
                    "userUuid",
                    "platform",
                    "osVersion",
                    "deviceModel",
                    "userAgent",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "required": [
              "total",
              "devices"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Delete All User Hwid Devices Response Dto"
      },
      "GetHwidDevicesStatsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "byPlatform": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "platform": {
                      "type": "string"
                    },
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "platform",
                    "count"
                  ]
                }
              },
              "byApp": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "app": {
                      "type": "string"
                    },
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "app",
                    "count"
                  ]
                }
              },
              "stats": {
                "type": "object",
                "properties": {
                  "totalUniqueDevices": {
                    "type": "number"
                  },
                  "totalHwidDevices": {
                    "type": "number"
                  },
                  "averageHwidDevicesPerUser": {
                    "type": "number"
                  }
                },
                "required": [
                  "totalUniqueDevices",
                  "totalHwidDevices",
                  "averageHwidDevicesPerUser"
                ]
              }
            },
            "required": [
              "byPlatform",
              "byApp",
              "stats"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Hwid Devices Stats Response Dto"
      },
      "GetUserHwidDevicesResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "devices": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "hwid": {
                      "type": "string"
                    },
                    "userUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "platform": {
                      "type": "string",
                      "nullable": true
                    },
                    "osVersion": {
                      "type": "string",
                      "nullable": true
                    },
                    "deviceModel": {
                      "type": "string",
                      "nullable": true
                    },
                    "userAgent": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "hwid",
                    "userUuid",
                    "platform",
                    "osVersion",
                    "deviceModel",
                    "userAgent",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "required": [
              "total",
              "devices"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get User Hwid Devices Response Dto"
      },
      "GetNodesUsageByRangeResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "nodeUuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "nodeName": {
                  "type": "string"
                },
                "nodeCountryCode": {
                  "type": "string"
                },
                "total": {
                  "type": "number"
                },
                "totalDownload": {
                  "type": "number"
                },
                "totalUpload": {
                  "type": "number"
                },
                "humanReadableTotal": {
                  "type": "string"
                },
                "humanReadableTotalDownload": {
                  "type": "string"
                },
                "humanReadableTotalUpload": {
                  "type": "string"
                },
                "date": {
                  "type": "string"
                }
              },
              "required": [
                "nodeUuid",
                "nodeName",
                "nodeCountryCode",
                "total",
                "totalDownload",
                "totalUpload",
                "humanReadableTotal",
                "humanReadableTotalDownload",
                "humanReadableTotalUpload",
                "date"
              ]
            }
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Nodes Usage By Range Response Dto"
      },
      "GetInfraProvidersResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "providers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "faviconLink": {
                      "type": "string",
                      "nullable": true
                    },
                    "loginUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "billingHistory": {
                      "type": "object",
                      "properties": {
                        "totalAmount": {
                          "type": "number"
                        },
                        "totalBills": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "totalAmount",
                        "totalBills"
                      ]
                    },
                    "billingNodes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "nodeUuid": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "name": {
                            "type": "string"
                          },
                          "countryCode": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "nodeUuid",
                          "name",
                          "countryCode"
                        ]
                      }
                    }
                  },
                  "required": [
                    "uuid",
                    "name",
                    "faviconLink",
                    "loginUrl",
                    "createdAt",
                    "updatedAt",
                    "billingHistory",
                    "billingNodes"
                  ]
                }
              }
            },
            "required": [
              "total",
              "providers"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Infra Providers Response Dto"
      },
      "GetInfraProviderByUuidResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "faviconLink": {
                "type": "string",
                "nullable": true
              },
              "loginUrl": {
                "type": "string",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "billingHistory": {
                "type": "object",
                "properties": {
                  "totalAmount": {
                    "type": "number"
                  },
                  "totalBills": {
                    "type": "number"
                  }
                },
                "required": [
                  "totalAmount",
                  "totalBills"
                ]
              },
              "billingNodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "nodeUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "countryCode": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "nodeUuid",
                    "name",
                    "countryCode"
                  ]
                }
              }
            },
            "required": [
              "uuid",
              "name",
              "faviconLink",
              "loginUrl",
              "createdAt",
              "updatedAt",
              "billingHistory",
              "billingNodes"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Infra Provider By Uuid Response Dto"
      },
      "DeleteInfraProviderByUuidResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "isDeleted": {
                "type": "boolean"
              }
            },
            "required": [
              "isDeleted"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Delete Infra Provider By Uuid Response Dto"
      },
      "CreateInfraProviderRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 30
          },
          "faviconLink": {
            "type": "string",
            "format": "uri"
          },
          "loginUrl": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "name"
        ],
        "description": "Create Infra Provider Request Dto"
      },
      "CreateInfraProviderResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "faviconLink": {
                "type": "string",
                "nullable": true
              },
              "loginUrl": {
                "type": "string",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "billingHistory": {
                "type": "object",
                "properties": {
                  "totalAmount": {
                    "type": "number"
                  },
                  "totalBills": {
                    "type": "number"
                  }
                },
                "required": [
                  "totalAmount",
                  "totalBills"
                ]
              },
              "billingNodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "nodeUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "countryCode": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "nodeUuid",
                    "name",
                    "countryCode"
                  ]
                }
              }
            },
            "required": [
              "uuid",
              "name",
              "faviconLink",
              "loginUrl",
              "createdAt",
              "updatedAt",
              "billingHistory",
              "billingNodes"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Create Infra Provider Response Dto"
      },
      "UpdateInfraProviderRequestDto": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 30
          },
          "faviconLink": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "loginUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "required": [
          "uuid"
        ],
        "description": "Update Infra Provider Request Dto"
      },
      "UpdateInfraProviderResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "faviconLink": {
                "type": "string",
                "nullable": true
              },
              "loginUrl": {
                "type": "string",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "billingHistory": {
                "type": "object",
                "properties": {
                  "totalAmount": {
                    "type": "number"
                  },
                  "totalBills": {
                    "type": "number"
                  }
                },
                "required": [
                  "totalAmount",
                  "totalBills"
                ]
              },
              "billingNodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "nodeUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "countryCode": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "nodeUuid",
                    "name",
                    "countryCode"
                  ]
                }
              }
            },
            "required": [
              "uuid",
              "name",
              "faviconLink",
              "loginUrl",
              "createdAt",
              "updatedAt",
              "billingHistory",
              "billingNodes"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Update Infra Provider Response Dto"
      },
      "CreateInfraBillingHistoryRecordRequestDto": {
        "type": "object",
        "properties": {
          "providerUuid": {
            "type": "string",
            "format": "uuid"
          },
          "amount": {
            "type": "number",
            "minimum": 0
          },
          "billedAt": {
            "description": "Billing date. Format: 2025-01-17T15:38:45.065Z",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "providerUuid",
          "amount",
          "billedAt"
        ],
        "description": "Create Infra Billing History Record Request Dto"
      },
      "CreateInfraBillingHistoryRecordResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "records": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "providerUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "billedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "provider": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "type": "string"
                        },
                        "faviconLink": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "uuid",
                        "name",
                        "faviconLink"
                      ]
                    }
                  },
                  "required": [
                    "uuid",
                    "providerUuid",
                    "amount",
                    "billedAt",
                    "provider"
                  ]
                }
              },
              "total": {
                "type": "number"
              }
            },
            "required": [
              "records",
              "total"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Create Infra Billing History Record Response Dto"
      },
      "GetInfraBillingHistoryRecordsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "records": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "providerUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "billedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "provider": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "type": "string"
                        },
                        "faviconLink": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "uuid",
                        "name",
                        "faviconLink"
                      ]
                    }
                  },
                  "required": [
                    "uuid",
                    "providerUuid",
                    "amount",
                    "billedAt",
                    "provider"
                  ]
                }
              },
              "total": {
                "type": "number"
              }
            },
            "required": [
              "records",
              "total"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Infra Billing History Records Response Dto"
      },
      "DeleteInfraBillingHistoryRecordByUuidResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "records": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "providerUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "billedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "provider": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "type": "string"
                        },
                        "faviconLink": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "uuid",
                        "name",
                        "faviconLink"
                      ]
                    }
                  },
                  "required": [
                    "uuid",
                    "providerUuid",
                    "amount",
                    "billedAt",
                    "provider"
                  ]
                }
              },
              "total": {
                "type": "number"
              }
            },
            "required": [
              "records",
              "total"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Delete Infra Billing History Record By Uuid Response Dto"
      },
      "GetInfraBillingNodesResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "totalBillingNodes": {
                "type": "number"
              },
              "billingNodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "nodeUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "providerUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "provider": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "type": "string"
                        },
                        "loginUrl": {
                          "type": "string",
                          "nullable": true
                        },
                        "faviconLink": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "uuid",
                        "name",
                        "loginUrl",
                        "faviconLink"
                      ]
                    },
                    "node": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "type": "string"
                        },
                        "countryCode": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "uuid",
                        "name",
                        "countryCode"
                      ]
                    },
                    "nextBillingAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "uuid",
                    "nodeUuid",
                    "providerUuid",
                    "provider",
                    "node",
                    "nextBillingAt",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              },
              "availableBillingNodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "countryCode": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "uuid",
                    "name",
                    "countryCode"
                  ]
                }
              },
              "totalAvailableBillingNodes": {
                "type": "number"
              },
              "stats": {
                "type": "object",
                "properties": {
                  "upcomingNodesCount": {
                    "type": "number"
                  },
                  "currentMonthPayments": {
                    "type": "number"
                  },
                  "totalSpent": {
                    "type": "number"
                  }
                },
                "required": [
                  "upcomingNodesCount",
                  "currentMonthPayments",
                  "totalSpent"
                ]
              }
            },
            "required": [
              "totalBillingNodes",
              "billingNodes",
              "availableBillingNodes",
              "totalAvailableBillingNodes",
              "stats"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Infra Billing Nodes Response Dto"
      },
      "UpdateInfraBillingNodeRequestDto": {
        "type": "object",
        "properties": {
          "uuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "nextBillingAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "uuids",
          "nextBillingAt"
        ],
        "description": "Update Infra Billing Node Request Dto"
      },
      "UpdateInfraBillingNodeResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "totalBillingNodes": {
                "type": "number"
              },
              "billingNodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "nodeUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "providerUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "provider": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "type": "string"
                        },
                        "loginUrl": {
                          "type": "string",
                          "nullable": true
                        },
                        "faviconLink": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "uuid",
                        "name",
                        "loginUrl",
                        "faviconLink"
                      ]
                    },
                    "node": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "type": "string"
                        },
                        "countryCode": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "uuid",
                        "name",
                        "countryCode"
                      ]
                    },
                    "nextBillingAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "uuid",
                    "nodeUuid",
                    "providerUuid",
                    "provider",
                    "node",
                    "nextBillingAt",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              },
              "availableBillingNodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "countryCode": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "uuid",
                    "name",
                    "countryCode"
                  ]
                }
              },
              "totalAvailableBillingNodes": {
                "type": "number"
              },
              "stats": {
                "type": "object",
                "properties": {
                  "upcomingNodesCount": {
                    "type": "number"
                  },
                  "currentMonthPayments": {
                    "type": "number"
                  },
                  "totalSpent": {
                    "type": "number"
                  }
                },
                "required": [
                  "upcomingNodesCount",
                  "currentMonthPayments",
                  "totalSpent"
                ]
              }
            },
            "required": [
              "totalBillingNodes",
              "billingNodes",
              "availableBillingNodes",
              "totalAvailableBillingNodes",
              "stats"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Update Infra Billing Node Response Dto"
      },
      "CreateInfraBillingNodeRequestDto": {
        "type": "object",
        "properties": {
          "providerUuid": {
            "type": "string",
            "format": "uuid"
          },
          "nodeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "nextBillingAt": {
            "description": "Next billing date. Format: 2025-01-17T15:38:45.065Z",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "providerUuid",
          "nodeUuid"
        ],
        "description": "Create Infra Billing Node Request Dto"
      },
      "CreateInfraBillingNodeResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "totalBillingNodes": {
                "type": "number"
              },
              "billingNodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "nodeUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "providerUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "provider": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "type": "string"
                        },
                        "loginUrl": {
                          "type": "string",
                          "nullable": true
                        },
                        "faviconLink": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "uuid",
                        "name",
                        "loginUrl",
                        "faviconLink"
                      ]
                    },
                    "node": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "type": "string"
                        },
                        "countryCode": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "uuid",
                        "name",
                        "countryCode"
                      ]
                    },
                    "nextBillingAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "uuid",
                    "nodeUuid",
                    "providerUuid",
                    "provider",
                    "node",
                    "nextBillingAt",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              },
              "availableBillingNodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "countryCode": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "uuid",
                    "name",
                    "countryCode"
                  ]
                }
              },
              "totalAvailableBillingNodes": {
                "type": "number"
              },
              "stats": {
                "type": "object",
                "properties": {
                  "upcomingNodesCount": {
                    "type": "number"
                  },
                  "currentMonthPayments": {
                    "type": "number"
                  },
                  "totalSpent": {
                    "type": "number"
                  }
                },
                "required": [
                  "upcomingNodesCount",
                  "currentMonthPayments",
                  "totalSpent"
                ]
              }
            },
            "required": [
              "totalBillingNodes",
              "billingNodes",
              "availableBillingNodes",
              "totalAvailableBillingNodes",
              "stats"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Create Infra Billing Node Response Dto"
      },
      "DeleteInfraBillingNodeByUuidResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "totalBillingNodes": {
                "type": "number"
              },
              "billingNodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "nodeUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "providerUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "provider": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "type": "string"
                        },
                        "loginUrl": {
                          "type": "string",
                          "nullable": true
                        },
                        "faviconLink": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "uuid",
                        "name",
                        "loginUrl",
                        "faviconLink"
                      ]
                    },
                    "node": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "type": "string"
                        },
                        "countryCode": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "uuid",
                        "name",
                        "countryCode"
                      ]
                    },
                    "nextBillingAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "uuid",
                    "nodeUuid",
                    "providerUuid",
                    "provider",
                    "node",
                    "nextBillingAt",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              },
              "availableBillingNodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "countryCode": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "uuid",
                    "name",
                    "countryCode"
                  ]
                }
              },
              "totalAvailableBillingNodes": {
                "type": "number"
              },
              "stats": {
                "type": "object",
                "properties": {
                  "upcomingNodesCount": {
                    "type": "number"
                  },
                  "currentMonthPayments": {
                    "type": "number"
                  },
                  "totalSpent": {
                    "type": "number"
                  }
                },
                "required": [
                  "upcomingNodesCount",
                  "currentMonthPayments",
                  "totalSpent"
                ]
              }
            },
            "required": [
              "totalBillingNodes",
              "billingNodes",
              "availableBillingNodes",
              "totalAvailableBillingNodes",
              "stats"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Delete Infra Billing Node By Uuid Response Dto"
      },
      "GetSubscriptionRequestHistoryResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "records": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "userUuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestIp": {
                      "type": "string",
                      "nullable": true
                    },
                    "userAgent": {
                      "type": "string",
                      "nullable": true
                    },
                    "requestAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "userUuid",
                    "requestIp",
                    "userAgent",
                    "requestAt"
                  ]
                }
              },
              "total": {
                "type": "number"
              }
            },
            "required": [
              "records",
              "total"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Subscription Request History Response Dto"
      },
      "GetSubscriptionRequestHistoryStatsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "byParsedApp": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "app": {
                      "type": "string"
                    },
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "app",
                    "count"
                  ]
                }
              },
              "hourlyRequestStats": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "dateTime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "requestCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "dateTime",
                    "requestCount"
                  ]
                }
              }
            },
            "required": [
              "byParsedApp",
              "hourlyRequestStats"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Subscription Request History Stats Response Dto"
      },
      "GetStatsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "cpu": {
                "type": "object",
                "properties": {
                  "cores": {
                    "type": "number"
                  },
                  "physicalCores": {
                    "type": "number"
                  }
                },
                "required": [
                  "cores",
                  "physicalCores"
                ]
              },
              "memory": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "number"
                  },
                  "free": {
                    "type": "number"
                  },
                  "used": {
                    "type": "number"
                  },
                  "active": {
                    "type": "number"
                  },
                  "available": {
                    "type": "number"
                  }
                },
                "required": [
                  "total",
                  "free",
                  "used",
                  "active",
                  "available"
                ]
              },
              "uptime": {
                "type": "number"
              },
              "timestamp": {
                "type": "number"
              },
              "users": {
                "type": "object",
                "properties": {
                  "statusCounts": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "number"
                    }
                  },
                  "totalUsers": {
                    "type": "number"
                  },
                  "totalTrafficBytes": {
                    "type": "string"
                  }
                },
                "required": [
                  "statusCounts",
                  "totalUsers",
                  "totalTrafficBytes"
                ]
              },
              "onlineStats": {
                "type": "object",
                "properties": {
                  "lastDay": {
                    "type": "number"
                  },
                  "lastWeek": {
                    "type": "number"
                  },
                  "neverOnline": {
                    "type": "number"
                  },
                  "onlineNow": {
                    "type": "number"
                  }
                },
                "required": [
                  "lastDay",
                  "lastWeek",
                  "neverOnline",
                  "onlineNow"
                ]
              },
              "nodes": {
                "type": "object",
                "properties": {
                  "totalOnline": {
                    "type": "number"
                  }
                },
                "required": [
                  "totalOnline"
                ]
              }
            },
            "required": [
              "cpu",
              "memory",
              "uptime",
              "timestamp",
              "users",
              "onlineStats",
              "nodes"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Stats Response Dto"
      },
      "GetBandwidthStatsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "bandwidthLastTwoDays": {
                "type": "object",
                "properties": {
                  "current": {
                    "type": "string"
                  },
                  "previous": {
                    "type": "string"
                  },
                  "difference": {
                    "type": "string"
                  }
                },
                "required": [
                  "current",
                  "previous",
                  "difference"
                ]
              },
              "bandwidthLastSevenDays": {
                "type": "object",
                "properties": {
                  "current": {
                    "type": "string"
                  },
                  "previous": {
                    "type": "string"
                  },
                  "difference": {
                    "type": "string"
                  }
                },
                "required": [
                  "current",
                  "previous",
                  "difference"
                ]
              },
              "bandwidthLast30Days": {
                "type": "object",
                "properties": {
                  "current": {
                    "type": "string"
                  },
                  "previous": {
                    "type": "string"
                  },
                  "difference": {
                    "type": "string"
                  }
                },
                "required": [
                  "current",
                  "previous",
                  "difference"
                ]
              },
              "bandwidthCalendarMonth": {
                "type": "object",
                "properties": {
                  "current": {
                    "type": "string"
                  },
                  "previous": {
                    "type": "string"
                  },
                  "difference": {
                    "type": "string"
                  }
                },
                "required": [
                  "current",
                  "previous",
                  "difference"
                ]
              },
              "bandwidthCurrentYear": {
                "type": "object",
                "properties": {
                  "current": {
                    "type": "string"
                  },
                  "previous": {
                    "type": "string"
                  },
                  "difference": {
                    "type": "string"
                  }
                },
                "required": [
                  "current",
                  "previous",
                  "difference"
                ]
              }
            },
            "required": [
              "bandwidthLastTwoDays",
              "bandwidthLastSevenDays",
              "bandwidthLast30Days",
              "bandwidthCalendarMonth",
              "bandwidthCurrentYear"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Bandwidth Stats Response Dto"
      },
      "GetNodesStatisticsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "lastSevenDays": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "nodeName": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string"
                    },
                    "totalBytes": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "nodeName",
                    "date",
                    "totalBytes"
                  ]
                }
              }
            },
            "required": [
              "lastSevenDays"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Nodes Statistics Response Dto"
      },
      "GetRemnawaveHealthResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "pm2Stats": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "memory": {
                      "type": "string"
                    },
                    "cpu": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "memory",
                    "cpu"
                  ]
                }
              }
            },
            "required": [
              "pm2Stats"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Remnawave Health Response Dto"
      },
      "GetNodesMetricsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "nodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "nodeUuid": {
                      "type": "string"
                    },
                    "nodeName": {
                      "type": "string"
                    },
                    "countryEmoji": {
                      "type": "string"
                    },
                    "providerName": {
                      "type": "string"
                    },
                    "usersOnline": {
                      "type": "number"
                    },
                    "inboundsStats": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tag": {
                            "type": "string"
                          },
                          "upload": {
                            "type": "string"
                          },
                          "download": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "tag",
                          "upload",
                          "download"
                        ]
                      }
                    },
                    "outboundsStats": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tag": {
                            "type": "string"
                          },
                          "upload": {
                            "type": "string"
                          },
                          "download": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "tag",
                          "upload",
                          "download"
                        ]
                      }
                    }
                  },
                  "required": [
                    "nodeUuid",
                    "nodeName",
                    "countryEmoji",
                    "providerName",
                    "usersOnline",
                    "inboundsStats",
                    "outboundsStats"
                  ]
                }
              }
            },
            "required": [
              "nodes"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Nodes Metrics Response Dto"
      },
      "GenerateX25519ResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "keypairs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "publicKey": {
                      "type": "string"
                    },
                    "privateKey": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "publicKey",
                    "privateKey"
                  ]
                }
              }
            },
            "required": [
              "keypairs"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Generate X25519Response Dto"
      },
      "EncryptHappCryptoLinkRequestDto": {
        "type": "object",
        "properties": {
          "linkToEncrypt": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "linkToEncrypt"
        ],
        "description": "Encrypt Happ Crypto Link Request Dto"
      },
      "EncryptHappCryptoLinkResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "encryptedLink": {
                "type": "string"
              }
            },
            "required": [
              "encryptedLink"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Encrypt Happ Crypto Link Response Dto"
      },
      "GetSubscriptionSettingsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "profileTitle": {
                "type": "string"
              },
              "supportLink": {
                "type": "string"
              },
              "profileUpdateInterval": {
                "type": "integer",
                "minimum": 1
              },
              "isProfileWebpageUrlEnabled": {
                "type": "boolean"
              },
              "serveJsonAtBaseSubscription": {
                "type": "boolean"
              },
              "addUsernameToBaseSubscription": {
                "type": "boolean"
              },
              "isShowCustomRemarks": {
                "type": "boolean"
              },
              "happAnnounce": {
                "type": "string",
                "nullable": true
              },
              "happRouting": {
                "type": "string",
                "nullable": true
              },
              "expiredUsersRemarks": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "limitedUsersRemarks": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "disabledUsersRemarks": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "customResponseHeaders": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "nullable": true
              },
              "randomizeHosts": {
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "uuid",
              "profileTitle",
              "supportLink",
              "profileUpdateInterval",
              "isProfileWebpageUrlEnabled",
              "serveJsonAtBaseSubscription",
              "addUsernameToBaseSubscription",
              "isShowCustomRemarks",
              "happAnnounce",
              "happRouting",
              "expiredUsersRemarks",
              "limitedUsersRemarks",
              "disabledUsersRemarks",
              "customResponseHeaders",
              "randomizeHosts",
              "createdAt",
              "updatedAt"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Get Subscription Settings Response Dto"
      },
      "UpdateSubscriptionSettingsRequestDto": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "profileTitle": {
            "type": "string"
          },
          "supportLink": {
            "type": "string"
          },
          "profileUpdateInterval": {
            "type": "integer"
          },
          "isProfileWebpageUrlEnabled": {
            "type": "boolean"
          },
          "serveJsonAtBaseSubscription": {
            "type": "boolean"
          },
          "addUsernameToBaseSubscription": {
            "type": "boolean"
          },
          "isShowCustomRemarks": {
            "type": "boolean"
          },
          "happAnnounce": {
            "type": "string",
            "maxLength": 200,
            "nullable": true
          },
          "happRouting": {
            "type": "string",
            "nullable": true
          },
          "expiredUsersRemarks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "limitedUsersRemarks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "disabledUsersRemarks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customResponseHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "randomizeHosts": {
            "type": "boolean"
          }
        },
        "required": [
          "uuid"
        ],
        "description": "Update Subscription Settings Request Dto"
      },
      "UpdateSubscriptionSettingsResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "profileTitle": {
                "type": "string"
              },
              "supportLink": {
                "type": "string"
              },
              "profileUpdateInterval": {
                "type": "integer",
                "minimum": 1
              },
              "isProfileWebpageUrlEnabled": {
                "type": "boolean"
              },
              "serveJsonAtBaseSubscription": {
                "type": "boolean"
              },
              "addUsernameToBaseSubscription": {
                "type": "boolean"
              },
              "isShowCustomRemarks": {
                "type": "boolean"
              },
              "happAnnounce": {
                "type": "string",
                "nullable": true
              },
              "happRouting": {
                "type": "string",
                "nullable": true
              },
              "expiredUsersRemarks": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "limitedUsersRemarks": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "disabledUsersRemarks": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "customResponseHeaders": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "nullable": true
              },
              "randomizeHosts": {
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "uuid",
              "profileTitle",
              "supportLink",
              "profileUpdateInterval",
              "isProfileWebpageUrlEnabled",
              "serveJsonAtBaseSubscription",
              "addUsernameToBaseSubscription",
              "isShowCustomRemarks",
              "happAnnounce",
              "happRouting",
              "expiredUsersRemarks",
              "limitedUsersRemarks",
              "disabledUsersRemarks",
              "customResponseHeaders",
              "randomizeHosts",
              "createdAt",
              "updatedAt"
            ]
          }
        },
        "required": [
          "response"
        ],
        "description": "Update Subscription Settings Response Dto"
      },
      "ValidationError": {
        "type": "object",
        "description": "Validation error details",
        "properties": {
          "statusCode": {
            "type": "number"
          },
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "NotFoundError": {
        "type": "object",
        "description": "Resource not found",
        "properties": {
          "statusCode": {
            "type": "number"
          },
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "UnauthorizedError": {
        "type": "object",
        "description": "Unauthorized access",
        "properties": {
          "statusCode": {
            "type": "number"
          },
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "ConflictError": {
        "type": "object",
        "description": "Conflict error",
        "properties": {
          "statusCode": {
            "type": "number"
          },
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "ServerError": {
        "type": "object",
        "description": "Server error",
        "properties": {
          "statusCode": {
            "type": "number"
          },
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      }
    }
  }
}