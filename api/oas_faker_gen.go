// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"net/url"
	"time"

	"github.com/google/uuid"
)

// SetFake set fake values.
func (s *ApiTokensControllerCreateBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem ApiTokensControllerCreateBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ApiTokensControllerCreateBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *ApiTokensControllerCreateInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ApiTokensControllerDeleteBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem ApiTokensControllerDeleteBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ApiTokensControllerDeleteBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *ApiTokensControllerDeleteInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ApiTokensControllerFindAllBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem ApiTokensControllerFindAllBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ApiTokensControllerFindAllBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *ApiTokensControllerFindAllInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerGetStatusBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem AuthControllerGetStatusBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerGetStatusBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *AuthControllerGetStatusInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerLoginBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem AuthControllerLoginBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerLoginBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *AuthControllerLoginInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerLoginUnauthorized) SetFake() {
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Error.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerOauth2AuthorizeBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem AuthControllerOauth2AuthorizeBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerOauth2AuthorizeBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *AuthControllerOauth2AuthorizeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerOauth2CallbackBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem AuthControllerOauth2CallbackBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerOauth2CallbackBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *AuthControllerOauth2CallbackInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerPasskeyAuthenticationOptionsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem AuthControllerPasskeyAuthenticationOptionsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerPasskeyAuthenticationOptionsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *AuthControllerPasskeyAuthenticationOptionsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerPasskeyAuthenticationVerifyBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem AuthControllerPasskeyAuthenticationVerifyBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerPasskeyAuthenticationVerifyBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *AuthControllerPasskeyAuthenticationVerifyInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerRegisterBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem AuthControllerRegisterBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerRegisterBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *AuthControllerRegisterForbidden) SetFake() {
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Error.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerRegisterInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerTelegramCallbackBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem AuthControllerTelegramCallbackBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerTelegramCallbackBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *AuthControllerTelegramCallbackInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BillingHistoryResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BillingHistoryResponseResponse) SetFake() {
	{
		{
			s.Records = nil
			for i := 0; i < 0; i++ {
				var elem BillingHistoryResponseResponseRecordsItem
				{
					elem.SetFake()
				}
				s.Records = append(s.Records, elem)
			}
		}
	}
	{
		{
			s.Total = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *BillingHistoryResponseResponseRecordsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProviderUuid = uuid.New()
		}
	}
	{
		{
			s.Amount = float64(0)
		}
	}
	{
		{
			s.BilledAt = time.Now()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BillingHistoryResponseResponseRecordsItemProvider) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BillingNodesResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BillingNodesResponseResponse) SetFake() {
	{
		{
			s.TotalBillingNodes = float64(0)
		}
	}
	{
		{
			s.BillingNodes = nil
			for i := 0; i < 0; i++ {
				var elem BillingNodesResponseResponseBillingNodesItem
				{
					elem.SetFake()
				}
				s.BillingNodes = append(s.BillingNodes, elem)
			}
		}
	}
	{
		{
			s.AvailableBillingNodes = nil
			for i := 0; i < 0; i++ {
				var elem BillingNodesResponseResponseAvailableBillingNodesItem
				{
					elem.SetFake()
				}
				s.AvailableBillingNodes = append(s.AvailableBillingNodes, elem)
			}
		}
	}
	{
		{
			s.TotalAvailableBillingNodes = float64(0)
		}
	}
	{
		{
			s.Stats.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BillingNodesResponseResponseAvailableBillingNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *BillingNodesResponseResponseBillingNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.ProviderUuid = uuid.New()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
	{
		{
			s.Node.SetFake()
		}
	}
	{
		{
			s.NextBillingAt = time.Now()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *BillingNodesResponseResponseBillingNodesItemNode) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *BillingNodesResponseResponseBillingNodesItemProvider) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BillingNodesResponseResponseStats) SetFake() {
	{
		{
			s.UpcomingNodesCount = float64(0)
		}
	}
	{
		{
			s.CurrentMonthPayments = float64(0)
		}
	}
	{
		{
			s.TotalSpent = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *BulkActionResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkActionResponseResponse) SetFake() {
	{
		{
			s.AffectedRows = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *BulkAllUpdateUsersRequestDto) SetFake() {
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.ExpireAt.SetFake()
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkAllUpdateUsersRequestDtoStatus) SetFake() {
	*s = BulkAllUpdateUsersRequestDtoStatusACTIVE
}

// SetFake set fake values.
func (s *BulkAllUpdateUsersRequestDtoTrafficLimitStrategy) SetFake() {
	*s = BulkAllUpdateUsersRequestDtoTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *BulkDeleteUsersByStatusRequestDto) SetFake() {
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkDeleteUsersByStatusRequestDtoStatus) SetFake() {
	*s = BulkDeleteUsersByStatusRequestDtoStatusACTIVE
}

// SetFake set fake values.
func (s *BulkUpdateUsersRequestDto) SetFake() {
	{
		{
			s.Uuids = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Uuids = append(s.Uuids, elem)
			}
		}
	}
	{
		{
			s.Fields.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkUpdateUsersRequestDtoFields) SetFake() {
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.ExpireAt.SetFake()
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.ExternalSquadUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkUpdateUsersRequestDtoFieldsStatus) SetFake() {
	*s = BulkUpdateUsersRequestDtoFieldsStatusACTIVE
}

// SetFake set fake values.
func (s *BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) SetFake() {
	*s = BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *BulkUpdateUsersSquadsRequestDto) SetFake() {
	{
		{
			s.Uuids = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Uuids = append(s.Uuids, elem)
			}
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *BulkUuidsRequest) SetFake() {
	{
		{
			s.Uuids = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Uuids = append(s.Uuids, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerCreateConfigProfileBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem ConfigProfileControllerCreateConfigProfileBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerCreateConfigProfileBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *ConfigProfileControllerCreateConfigProfileInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerDeleteConfigProfileByUuidBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem ConfigProfileControllerDeleteConfigProfileByUuidBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerDeleteConfigProfileByUuidBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *ConfigProfileControllerDeleteConfigProfileByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerGetAllInboundsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem ConfigProfileControllerGetAllInboundsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerGetAllInboundsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *ConfigProfileControllerGetAllInboundsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerGetConfigProfileByUuidBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem ConfigProfileControllerGetConfigProfileByUuidBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerGetConfigProfileByUuidBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *ConfigProfileControllerGetConfigProfileByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerGetConfigProfilesBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem ConfigProfileControllerGetConfigProfilesBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerGetConfigProfilesBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *ConfigProfileControllerGetConfigProfilesInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerGetInboundsByProfileUuidBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem ConfigProfileControllerGetInboundsByProfileUuidBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerGetInboundsByProfileUuidBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *ConfigProfileControllerGetInboundsByProfileUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerUpdateConfigProfileBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem ConfigProfileControllerUpdateConfigProfileBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerUpdateConfigProfileBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *ConfigProfileControllerUpdateConfigProfileInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileResponseResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Config = []byte("null")
		}
	}
	{
		{
			s.Inbounds = nil
			for i := 0; i < 0; i++ {
				var elem ConfigProfileResponseResponseInboundsItem
				{
					elem.SetFake()
				}
				s.Inbounds = append(s.Inbounds, elem)
			}
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem ConfigProfileResponseResponseNodesItem
				{
					elem.SetFake()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileResponseResponseInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileResponseResponseNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *CreateApiTokenRequestDto) SetFake() {
	{
		{
			s.TokenName = "string"
		}
	}
}

// SetFake set fake values.
func (s *CreateApiTokenResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateApiTokenResponseDtoResponse) SetFake() {
	{
		{
			s.Token = "string"
		}
	}
	{
		{
			s.UUID = "string"
		}
	}
}

// SetFake set fake values.
func (s *CreateConfigProfileRequestDto) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Config.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateConfigProfileRequestDtoConfig) SetFake() {
}

// SetFake set fake values.
func (s *CreateExternalSquadRequestDto) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *CreateHostRequestDto) SetFake() {
	{
		{
			s.Inbound.SetFake()
		}
	}
	{
		{
			s.Remark = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port = int(0)
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Sni.SetFake()
		}
	}
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.Alpn.SetFake()
		}
	}
	{
		{
			s.Fingerprint.SetFake()
		}
	}
	{
		{
			s.IsDisabled.SetFake()
		}
	}
	{
		{
			s.SecurityLayer.SetFake()
		}
	}
	{
		{
			s.XHttpExtraParams = []byte("null")
		}
	}
	{
		{
			s.MuxParams = []byte("null")
		}
	}
	{
		{
			s.SockoptParams = []byte("null")
		}
	}
	{
		{
			s.ServerDescription.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.IsHidden.SetFake()
		}
	}
	{
		{
			s.OverrideSniFromAddress.SetFake()
		}
	}
	{
		{
			s.AllowInsecure.SetFake()
		}
	}
	{
		{
			s.VlessRouteId.SetFake()
		}
	}
	{
		{
			s.ShuffleHost.SetFake()
		}
	}
	{
		{
			s.MihomoX25519.SetFake()
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *CreateHostRequestDtoAlpn) SetFake() {
	*s = CreateHostRequestDtoAlpnH3
}

// SetFake set fake values.
func (s *CreateHostRequestDtoFingerprint) SetFake() {
	*s = CreateHostRequestDtoFingerprintChrome
}

// SetFake set fake values.
func (s *CreateHostRequestDtoInbound) SetFake() {
	{
		{
			s.ConfigProfileUuid = uuid.New()
		}
	}
	{
		{
			s.ConfigProfileInboundUuid = uuid.New()
		}
	}
}

// SetFake set fake values.
func (s *CreateHostRequestDtoSecurityLayer) SetFake() {
	*s = CreateHostRequestDtoSecurityLayerDEFAULT
}

// SetFake set fake values.
func (s *CreateInfraBillingHistoryRecordRequestDto) SetFake() {
	{
		{
			s.ProviderUuid = uuid.New()
		}
	}
	{
		{
			s.Amount = float64(0)
		}
	}
	{
		{
			s.BilledAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *CreateInfraBillingNodeRequestDto) SetFake() {
	{
		{
			s.ProviderUuid = uuid.New()
		}
	}
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.NextBillingAt.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateInfraProviderRequestDto) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateInternalSquadRequestDto) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Inbounds = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Inbounds = append(s.Inbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *CreateNodeRequestDto) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.IsTrafficTrackingActive.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.NotifyPercent.SetFake()
		}
	}
	{
		{
			s.TrafficResetDay.SetFake()
		}
	}
	{
		{
			s.CountryCode.SetFake()
		}
	}
	{
		{
			s.ConsumptionMultiplier.SetFake()
		}
	}
	{
		{
			s.ConfigProfile.SetFake()
		}
	}
	{
		{
			s.ProviderUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateNodeRequestDtoConfigProfile) SetFake() {
	{
		{
			s.ActiveConfigProfileUuid = uuid.New()
		}
	}
	{
		{
			s.ActiveInbounds = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.ActiveInbounds = append(s.ActiveInbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *CreateSubscriptionTemplateRequestDto) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.TemplateType.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateSubscriptionTemplateRequestDtoTemplateType) SetFake() {
	*s = CreateSubscriptionTemplateRequestDtoTemplateTypeXRAYJSON
}

// SetFake set fake values.
func (s *CreateUserHwidDeviceRequestDto) SetFake() {
	{
		{
			s.Hwid = "string"
		}
	}
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.Platform.SetFake()
		}
	}
	{
		{
			s.OsVersion.SetFake()
		}
	}
	{
		{
			s.DeviceModel.SetFake()
		}
	}
	{
		{
			s.UserAgent.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateUserRequestDto) SetFake() {
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.ShortUuid.SetFake()
		}
	}
	{
		{
			s.TrojanPassword.SetFake()
		}
	}
	{
		{
			s.VlessUuid.SetFake()
		}
	}
	{
		{
			s.SsPassword.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.CreatedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.UUID.SetFake()
		}
	}
	{
		{
			s.ExternalSquadUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateUserRequestDtoStatus) SetFake() {
	*s = CreateUserRequestDtoStatusACTIVE
}

// SetFake set fake values.
func (s *CreateUserRequestDtoTrafficLimitStrategy) SetFake() {
	*s = CreateUserRequestDtoTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *DebugSrrMatcherRequestDto) SetFake() {
	{
		{
			s.ResponseRules.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DebugSrrMatcherRequestDtoResponseRules) SetFake() {
	{
		{
			s.Version.SetFake()
		}
	}
	{
		{
			s.Rules = nil
			for i := 0; i < 0; i++ {
				var elem DebugSrrMatcherRequestDtoResponseRulesRulesItem
				{
					elem.SetFake()
				}
				s.Rules = append(s.Rules, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItem) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Enabled = true
		}
	}
	{
		{
			s.Operator.SetFake()
		}
	}
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItem
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.ResponseType.SetFake()
		}
	}
	{
		{
			s.ResponseModifications.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItem) SetFake() {
	{
		{
			s.HeaderName = "string"
		}
	}
	{
		{
			s.Operator.SetFake()
		}
	}
	{
		{
			s.Value = "string"
		}
	}
	{
		{
			s.CaseSensitive = true
		}
	}
}

// SetFake set fake values.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator) SetFake() {
	*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorEQUALS
}

// SetFake set fake values.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemOperator) SetFake() {
	*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemOperatorAND
}

// SetFake set fake values.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications) SetFake() {
	{
		{
			s.Headers = nil
			for i := 0; i < 0; i++ {
				var elem DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem
				{
					elem.SetFake()
				}
				s.Headers = append(s.Headers, elem)
			}
		}
	}
	{
		{
			s.SubscriptionTemplate.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem) SetFake() {
	{
		{
			s.Key = "string"
		}
	}
	{
		{
			s.Value = "string"
		}
	}
}

// SetFake set fake values.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType) SetFake() {
	*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeXRAYJSON
}

// SetFake set fake values.
func (s *DebugSrrMatcherRequestDtoResponseRulesVersion) SetFake() {
	*s = DebugSrrMatcherRequestDtoResponseRulesVersion1
}

// SetFake set fake values.
func (s *DebugSrrMatcherResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DebugSrrMatcherResponseDtoResponse) SetFake() {
	{
		{
			s.Matched = true
		}
	}
	{
		{
			s.ResponseType.SetFake()
		}
	}
	{
		{
			s.MatchedRule.SetFake()
		}
	}
	{
		{
			s.InputHeaders.SetFake()
		}
	}
	{
		{
			s.OutputHeaders.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DebugSrrMatcherResponseDtoResponseInputHeaders) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRule) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Enabled = true
		}
	}
	{
		{
			s.Operator.SetFake()
		}
	}
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItem
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.ResponseType.SetFake()
		}
	}
	{
		{
			s.ResponseModifications.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItem) SetFake() {
	{
		{
			s.HeaderName = "string"
		}
	}
	{
		{
			s.Operator.SetFake()
		}
	}
	{
		{
			s.Value = "string"
		}
	}
	{
		{
			s.CaseSensitive = true
		}
	}
}

// SetFake set fake values.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator) SetFake() {
	*s = DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorEQUALS
}

// SetFake set fake values.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleOperator) SetFake() {
	*s = DebugSrrMatcherResponseDtoResponseMatchedRuleOperatorAND
}

// SetFake set fake values.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications) SetFake() {
	{
		{
			s.Headers = nil
			for i := 0; i < 0; i++ {
				var elem DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModificationsHeadersItem
				{
					elem.SetFake()
				}
				s.Headers = append(s.Headers, elem)
			}
		}
	}
	{
		{
			s.SubscriptionTemplate.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModificationsHeadersItem) SetFake() {
	{
		{
			s.Key = "string"
		}
	}
	{
		{
			s.Value = "string"
		}
	}
}

// SetFake set fake values.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType) SetFake() {
	*s = DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeXRAYJSON
}

// SetFake set fake values.
func (s *DebugSrrMatcherResponseDtoResponseOutputHeaders) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *DebugSrrMatcherResponseDtoResponseResponseType) SetFake() {
	*s = DebugSrrMatcherResponseDtoResponseResponseTypeXRAYJSON
}

// SetFake set fake values.
func (s *DeleteAllUserHwidDevicesRequestDto) SetFake() {
	{
		{
			s.UserUuid = uuid.New()
		}
	}
}

// SetFake set fake values.
func (s *DeleteApiTokenResponseDto) SetFake() {
	{
		{
			s.Response = true
		}
	}
}

// SetFake set fake values.
func (s *DeletePasskeyRequestDto) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
}

// SetFake set fake values.
func (s *DeleteResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DeleteResponseResponse) SetFake() {
	{
		{
			s.IsDeleted = true
		}
	}
}

// SetFake set fake values.
func (s *DeleteSnippetRequestDto) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *DeleteUserHwidDeviceRequestDto) SetFake() {
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.Hwid = "string"
		}
	}
}

// SetFake set fake values.
func (s *EncryptHappCryptoLinkRequestDto) SetFake() {
	{
		{
			s.LinkToEncrypt = url.URL{Scheme: "https", Host: "github.com", Path: "/ogen-go/ogen"}
		}
	}
}

// SetFake set fake values.
func (s *EncryptHappCryptoLinkResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *EncryptHappCryptoLinkResponseDtoResponse) SetFake() {
	{
		{
			s.EncryptedLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *EventResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *EventResponseResponse) SetFake() {
	{
		{
			s.EventSent = true
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadControllerAddUsersToExternalSquadBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem ExternalSquadControllerAddUsersToExternalSquadBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadControllerAddUsersToExternalSquadBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *ExternalSquadControllerAddUsersToExternalSquadInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadControllerCreateExternalSquadBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem ExternalSquadControllerCreateExternalSquadBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadControllerCreateExternalSquadBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *ExternalSquadControllerCreateExternalSquadInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadControllerDeleteExternalSquadBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem ExternalSquadControllerDeleteExternalSquadBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadControllerDeleteExternalSquadBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *ExternalSquadControllerDeleteExternalSquadInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadControllerGetExternalSquadByUuidBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem ExternalSquadControllerGetExternalSquadByUuidBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadControllerGetExternalSquadByUuidBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *ExternalSquadControllerGetExternalSquadByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadControllerGetExternalSquadsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem ExternalSquadControllerGetExternalSquadsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadControllerGetExternalSquadsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *ExternalSquadControllerGetExternalSquadsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadControllerRemoveUsersFromExternalSquadBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem ExternalSquadControllerRemoveUsersFromExternalSquadBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadControllerRemoveUsersFromExternalSquadBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *ExternalSquadControllerRemoveUsersFromExternalSquadInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadControllerUpdateExternalSquadBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem ExternalSquadControllerUpdateExternalSquadBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadControllerUpdateExternalSquadBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *ExternalSquadControllerUpdateExternalSquadInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadResponseResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Info.SetFake()
		}
	}
	{
		{
			s.Templates = nil
			for i := 0; i < 0; i++ {
				var elem ExternalSquadResponseResponseTemplatesItem
				{
					elem.SetFake()
				}
				s.Templates = append(s.Templates, elem)
			}
		}
	}
	{
		{
			s.SubscriptionSettings.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadResponseResponseInfo) SetFake() {
	{
		{
			s.MembersCount = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadResponseResponseSubscriptionSettings) SetFake() {
	{
		{
			s.ProfileTitle.SetFake()
		}
	}
	{
		{
			s.SupportLink.SetFake()
		}
	}
	{
		{
			s.ProfileUpdateInterval.SetFake()
		}
	}
	{
		{
			s.IsProfileWebpageUrlEnabled.SetFake()
		}
	}
	{
		{
			s.ServeJsonAtBaseSubscription.SetFake()
		}
	}
	{
		{
			s.AddUsernameToBaseSubscription.SetFake()
		}
	}
	{
		{
			s.IsShowCustomRemarks.SetFake()
		}
	}
	{
		{
			s.HappAnnounce.SetFake()
		}
	}
	{
		{
			s.HappRouting.SetFake()
		}
	}
	{
		{
			s.RandomizeHosts.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadResponseResponseTemplatesItem) SetFake() {
	{
		{
			s.TemplateUuid = uuid.New()
		}
	}
	{
		{
			s.TemplateType.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ExternalSquadResponseResponseTemplatesItemTemplateType) SetFake() {
	*s = ExternalSquadResponseResponseTemplatesItemTemplateTypeXRAYJSON
}

// SetFake set fake values.
func (s *FindAllApiTokensResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *FindAllApiTokensResponseDtoResponse) SetFake() {
	{
		{
			s.ApiKeys = nil
			for i := 0; i < 0; i++ {
				var elem FindAllApiTokensResponseDtoResponseApiKeysItem
				{
					elem.SetFake()
				}
				s.ApiKeys = append(s.ApiKeys, elem)
			}
		}
	}
	{
		{
			s.Docs.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Token = "string"
		}
	}
	{
		{
			s.TokenName = "string"
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *FindAllApiTokensResponseDtoResponseDocs) SetFake() {
	{
		{
			s.IsDocsEnabled = true
		}
	}
	{
		{
			s.ScalarPath.SetFake()
		}
	}
	{
		{
			s.SwaggerPath.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GenerateX25519ResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GenerateX25519ResponseDtoResponse) SetFake() {
	{
		{
			s.Keypairs = nil
			for i := 0; i < 0; i++ {
				var elem GenerateX25519ResponseDtoResponseKeypairsItem
				{
					elem.SetFake()
				}
				s.Keypairs = append(s.Keypairs, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GenerateX25519ResponseDtoResponseKeypairsItem) SetFake() {
	{
		{
			s.PublicKey = "string"
		}
	}
	{
		{
			s.PrivateKey = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetAllHwidDevicesResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetAllHwidDevicesResponseDtoResponse) SetFake() {
	{
		{
			s.Devices = nil
			for i := 0; i < 0; i++ {
				var elem GetAllHwidDevicesResponseDtoResponseDevicesItem
				{
					elem.SetFake()
				}
				s.Devices = append(s.Devices, elem)
			}
		}
	}
	{
		{
			s.Total = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetAllHwidDevicesResponseDtoResponseDevicesItem) SetFake() {
	{
		{
			s.Hwid = "string"
		}
	}
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.Platform.SetFake()
		}
	}
	{
		{
			s.OsVersion.SetFake()
		}
	}
	{
		{
			s.DeviceModel.SetFake()
		}
	}
	{
		{
			s.UserAgent.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *GetAllSubscriptionsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetAllSubscriptionsResponseDtoResponse) SetFake() {
	{
		{
			s.Subscriptions = nil
			for i := 0; i < 0; i++ {
				var elem GetAllSubscriptionsResponseDtoResponseSubscriptionsItem
				{
					elem.SetFake()
				}
				s.Subscriptions = append(s.Subscriptions, elem)
			}
		}
	}
	{
		{
			s.Total = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) SetFake() {
	{
		{
			s.IsFound = true
		}
	}
	{
		{
			s.User.SetFake()
		}
	}
	{
		{
			s.Links = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Links = append(s.Links, elem)
			}
		}
	}
	{
		{
			s.SsConfLinks.SetFake()
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemSsConfLinks) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetFake() {
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.DaysLeft = float64(0)
		}
	}
	{
		{
			s.TrafficUsed = "string"
		}
	}
	{
		{
			s.TrafficLimit = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.ExpiresAt = time.Now()
		}
	}
	{
		{
			s.IsActive = true
		}
	}
	{
		{
			s.UserStatus.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy) SetFake() {
	*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus) SetFake() {
	*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusACTIVE
}

// SetFake set fake values.
func (s *GetAllUsersResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetAllUsersResponseDtoResponse) SetFake() {
	{
		{
			s.Users = nil
			for i := 0; i < 0; i++ {
				var elem GetAllUsersResponseDtoResponseUsersItem
				{
					elem.SetFake()
				}
				s.Users = append(s.Users, elem)
			}
		}
	}
	{
		{
			s.Total = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.UsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.LifetimeUsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.SubLastUserAgent.SetFake()
		}
	}
	{
		{
			s.SubLastOpenedAt.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.OnlineAt.SetFake()
		}
	}
	{
		{
			s.SubRevokedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessUuid = uuid.New()
		}
	}
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.FirstConnectedAt.SetFake()
		}
	}
	{
		{
			s.LastTriggeredThreshold.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem GetAllUsersResponseDtoResponseUsersItemActiveInternalSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.ExternalSquadUuid.SetFake()
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.LastConnectedNode.SetFake()
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetAllUsersResponseDtoResponseUsersItemActiveInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetAllUsersResponseDtoResponseUsersItemHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetAllUsersResponseDtoResponseUsersItemLastConnectedNode) SetFake() {
	{
		{
			s.ConnectedAt = time.Now()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetAllUsersResponseDtoResponseUsersItemStatus) SetFake() {
	*s = GetAllUsersResponseDtoResponseUsersItemStatusACTIVE
}

// SetFake set fake values.
func (s *GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy) SetFake() {
	*s = GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *GetBandwidthStatsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetBandwidthStatsResponseDtoResponse) SetFake() {
	{
		{
			s.BandwidthLastTwoDays.SetFake()
		}
	}
	{
		{
			s.BandwidthLastSevenDays.SetFake()
		}
	}
	{
		{
			s.BandwidthLast30Days.SetFake()
		}
	}
	{
		{
			s.BandwidthCalendarMonth.SetFake()
		}
	}
	{
		{
			s.BandwidthCurrentYear.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth) SetFake() {
	{
		{
			s.Current = "string"
		}
	}
	{
		{
			s.Previous = "string"
		}
	}
	{
		{
			s.Difference = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear) SetFake() {
	{
		{
			s.Current = "string"
		}
	}
	{
		{
			s.Previous = "string"
		}
	}
	{
		{
			s.Difference = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLast30Days) SetFake() {
	{
		{
			s.Current = "string"
		}
	}
	{
		{
			s.Previous = "string"
		}
	}
	{
		{
			s.Difference = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays) SetFake() {
	{
		{
			s.Current = "string"
		}
	}
	{
		{
			s.Previous = "string"
		}
	}
	{
		{
			s.Difference = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays) SetFake() {
	{
		{
			s.Current = "string"
		}
	}
	{
		{
			s.Previous = "string"
		}
	}
	{
		{
			s.Difference = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetConfigProfilesResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetConfigProfilesResponseDtoResponse) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.ConfigProfiles = nil
			for i := 0; i < 0; i++ {
				var elem GetConfigProfilesResponseDtoResponseConfigProfilesItem
				{
					elem.SetFake()
				}
				s.ConfigProfiles = append(s.ConfigProfiles, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Config = []byte("null")
		}
	}
	{
		{
			s.Inbounds = nil
			for i := 0; i < 0; i++ {
				var elem GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem
				{
					elem.SetFake()
				}
				s.Inbounds = append(s.Inbounds, elem)
			}
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem GetConfigProfilesResponseDtoResponseConfigProfilesItemNodesItem
				{
					elem.SetFake()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetExternalSquadsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetExternalSquadsResponseDtoResponse) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.ExternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem GetExternalSquadsResponseDtoResponseExternalSquadsItem
				{
					elem.SetFake()
				}
				s.ExternalSquads = append(s.ExternalSquads, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Info.SetFake()
		}
	}
	{
		{
			s.Templates = nil
			for i := 0; i < 0; i++ {
				var elem GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItem
				{
					elem.SetFake()
				}
				s.Templates = append(s.Templates, elem)
			}
		}
	}
	{
		{
			s.SubscriptionSettings.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemInfo) SetFake() {
	{
		{
			s.MembersCount = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) SetFake() {
	{
		{
			s.ProfileTitle.SetFake()
		}
	}
	{
		{
			s.SupportLink.SetFake()
		}
	}
	{
		{
			s.ProfileUpdateInterval.SetFake()
		}
	}
	{
		{
			s.IsProfileWebpageUrlEnabled.SetFake()
		}
	}
	{
		{
			s.ServeJsonAtBaseSubscription.SetFake()
		}
	}
	{
		{
			s.AddUsernameToBaseSubscription.SetFake()
		}
	}
	{
		{
			s.IsShowCustomRemarks.SetFake()
		}
	}
	{
		{
			s.HappAnnounce.SetFake()
		}
	}
	{
		{
			s.HappRouting.SetFake()
		}
	}
	{
		{
			s.RandomizeHosts.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItem) SetFake() {
	{
		{
			s.TemplateUuid = uuid.New()
		}
	}
	{
		{
			s.TemplateType.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateType) SetFake() {
	*s = GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeXRAYJSON
}

// SetFake set fake values.
func (s *GetHwidDevicesStatsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetHwidDevicesStatsResponseDtoResponse) SetFake() {
	{
		{
			s.ByPlatform = nil
			for i := 0; i < 0; i++ {
				var elem GetHwidDevicesStatsResponseDtoResponseByPlatformItem
				{
					elem.SetFake()
				}
				s.ByPlatform = append(s.ByPlatform, elem)
			}
		}
	}
	{
		{
			s.ByApp = nil
			for i := 0; i < 0; i++ {
				var elem GetHwidDevicesStatsResponseDtoResponseByAppItem
				{
					elem.SetFake()
				}
				s.ByApp = append(s.ByApp, elem)
			}
		}
	}
	{
		{
			s.Stats.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetHwidDevicesStatsResponseDtoResponseByAppItem) SetFake() {
	{
		{
			s.App = "string"
		}
	}
	{
		{
			s.Count = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetHwidDevicesStatsResponseDtoResponseByPlatformItem) SetFake() {
	{
		{
			s.Platform = "string"
		}
	}
	{
		{
			s.Count = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetHwidDevicesStatsResponseDtoResponseStats) SetFake() {
	{
		{
			s.TotalUniqueDevices = float64(0)
		}
	}
	{
		{
			s.TotalHwidDevices = float64(0)
		}
	}
	{
		{
			s.AverageHwidDevicesPerUser = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetInfraProvidersResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetInfraProvidersResponseDtoResponse) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Providers = nil
			for i := 0; i < 0; i++ {
				var elem GetInfraProvidersResponseDtoResponseProvidersItem
				{
					elem.SetFake()
				}
				s.Providers = append(s.Providers, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetInfraProvidersResponseDtoResponseProvidersItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.BillingHistory.SetFake()
		}
	}
	{
		{
			s.BillingNodes = nil
			for i := 0; i < 0; i++ {
				var elem GetInfraProvidersResponseDtoResponseProvidersItemBillingNodesItem
				{
					elem.SetFake()
				}
				s.BillingNodes = append(s.BillingNodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetInfraProvidersResponseDtoResponseProvidersItemBillingHistory) SetFake() {
	{
		{
			s.TotalAmount = float64(0)
		}
	}
	{
		{
			s.TotalBills = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetInfraProvidersResponseDtoResponseProvidersItemBillingNodesItem) SetFake() {
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadAccessibleNodesResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponse) SetFake() {
	{
		{
			s.SquadUuid = uuid.New()
		}
	}
	{
		{
			s.AccessibleNodes = nil
			for i := 0; i < 0; i++ {
				var elem GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem
				{
					elem.SetFake()
				}
				s.AccessibleNodes = append(s.AccessibleNodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
	{
		{
			s.ConfigProfileUuid = uuid.New()
		}
	}
	{
		{
			s.ConfigProfileName = "string"
		}
	}
	{
		{
			s.ActiveInbounds = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ActiveInbounds = append(s.ActiveInbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadsResponseDtoResponse) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.InternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem GetInternalSquadsResponseDtoResponseInternalSquadsItem
				{
					elem.SetFake()
				}
				s.InternalSquads = append(s.InternalSquads, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Info.SetFake()
		}
	}
	{
		{
			s.Inbounds = nil
			for i := 0; i < 0; i++ {
				var elem GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem
				{
					elem.SetFake()
				}
				s.Inbounds = append(s.Inbounds, elem)
			}
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInfo) SetFake() {
	{
		{
			s.MembersCount = float64(0)
		}
	}
	{
		{
			s.InboundsCount = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetNodeUserUsageByRangeResponseDto) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem GetNodeUserUsageByRangeResponseDtoResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) SetFake() {
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Date = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetNodesMetricsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetNodesMetricsResponseDtoResponse) SetFake() {
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem GetNodesMetricsResponseDtoResponseNodesItem
				{
					elem.SetFake()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetNodesMetricsResponseDtoResponseNodesItem) SetFake() {
	{
		{
			s.NodeUuid = "string"
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryEmoji = "string"
		}
	}
	{
		{
			s.ProviderName = "string"
		}
	}
	{
		{
			s.UsersOnline = float64(0)
		}
	}
	{
		{
			s.InboundsStats = nil
			for i := 0; i < 0; i++ {
				var elem GetNodesMetricsResponseDtoResponseNodesItemInboundsStatsItem
				{
					elem.SetFake()
				}
				s.InboundsStats = append(s.InboundsStats, elem)
			}
		}
	}
	{
		{
			s.OutboundsStats = nil
			for i := 0; i < 0; i++ {
				var elem GetNodesMetricsResponseDtoResponseNodesItemOutboundsStatsItem
				{
					elem.SetFake()
				}
				s.OutboundsStats = append(s.OutboundsStats, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetNodesMetricsResponseDtoResponseNodesItemInboundsStatsItem) SetFake() {
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Upload = "string"
		}
	}
	{
		{
			s.Download = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetNodesMetricsResponseDtoResponseNodesItemOutboundsStatsItem) SetFake() {
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Upload = "string"
		}
	}
	{
		{
			s.Download = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetNodesRealtimeUsageResponseDto) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem GetNodesRealtimeUsageResponseDtoResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetFake() {
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
	{
		{
			s.DownloadBytes = float64(0)
		}
	}
	{
		{
			s.UploadBytes = float64(0)
		}
	}
	{
		{
			s.TotalBytes = float64(0)
		}
	}
	{
		{
			s.DownloadSpeedBps = float64(0)
		}
	}
	{
		{
			s.UploadSpeedBps = float64(0)
		}
	}
	{
		{
			s.TotalSpeedBps = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetNodesStatisticsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetNodesStatisticsResponseDtoResponse) SetFake() {
	{
		{
			s.LastSevenDays = nil
			for i := 0; i < 0; i++ {
				var elem GetNodesStatisticsResponseDtoResponseLastSevenDaysItem
				{
					elem.SetFake()
				}
				s.LastSevenDays = append(s.LastSevenDays, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetNodesStatisticsResponseDtoResponseLastSevenDaysItem) SetFake() {
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.Date = "string"
		}
	}
	{
		{
			s.TotalBytes = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetNodesUsageByRangeResponseDto) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem GetNodesUsageByRangeResponseDtoResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetFake() {
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.NodeCountryCode = "string"
		}
	}
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.TotalDownload = float64(0)
		}
	}
	{
		{
			s.TotalUpload = float64(0)
		}
	}
	{
		{
			s.HumanReadableTotal = "string"
		}
	}
	{
		{
			s.HumanReadableTotalDownload = "string"
		}
	}
	{
		{
			s.HumanReadableTotalUpload = "string"
		}
	}
	{
		{
			s.Date = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetPubKeyResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetPubKeyResponseDtoResponse) SetFake() {
	{
		{
			s.PubKey = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponse) SetFake() {
	{
		{
			s.User.SetFake()
		}
	}
	{
		{
			s.ConvertedUserInfo.SetFake()
		}
	}
	{
		{
			s.Headers.SetFake()
		}
	}
	{
		{
			s.RawHosts = nil
			for i := 0; i < 0; i++ {
				var elem GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem
				{
					elem.SetFake()
				}
				s.RawHosts = append(s.RawHosts, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseConvertedUserInfo) SetFake() {
	{
		{
			s.DaysLeft = float64(0)
		}
	}
	{
		{
			s.TrafficLimit = "string"
		}
	}
	{
		{
			s.TrafficUsed = "string"
		}
	}
	{
		{
			s.LifetimeTrafficUsed = "string"
		}
	}
	{
		{
			s.IsHwidLimited = true
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseHeaders) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetFake() {
	{
		{
			s.Address.SetFake()
		}
	}
	{
		{
			s.Alpn.SetFake()
		}
	}
	{
		{
			s.Fingerprint.SetFake()
		}
	}
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Password.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.PublicKey.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.Protocol.SetFake()
		}
	}
	{
		{
			s.Remark.SetFake()
		}
	}
	{
		{
			s.ShortId.SetFake()
		}
	}
	{
		{
			s.Sni.SetFake()
		}
	}
	{
		{
			s.SpiderX.SetFake()
		}
	}
	{
		{
			s.TLS.SetFake()
		}
	}
	{
		{
			s.HeaderType.SetFake()
		}
	}
	{
		{
			s.AdditionalParams.SetFake()
		}
	}
	{
		{
			s.XHttpExtraParams.SetFake()
		}
	}
	{
		{
			s.MuxParams.SetFake()
		}
	}
	{
		{
			s.SockoptParams.SetFake()
		}
	}
	{
		{
			s.ServerDescription.SetFake()
		}
	}
	{
		{
			s.Flow.SetFake()
		}
	}
	{
		{
			s.AllowInsecure.SetFake()
		}
	}
	{
		{
			s.ShuffleHost.SetFake()
		}
	}
	{
		{
			s.MihomoX25519.SetFake()
		}
	}
	{
		{
			s.Mldsa65Verify.SetFake()
		}
	}
	{
		{
			s.Encryption.SetFake()
		}
	}
	{
		{
			s.ProtocolOptions.SetFake()
		}
	}
	{
		{
			s.DbData.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams) SetFake() {
	{
		{
			s.Mode.SetFake()
		}
	}
	{
		{
			s.HeartbeatPeriod.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) SetFake() {
	{
		{ // Keep pointer nil to prevent infinite recursion.
			s.RawInbound = nil
		}
	}
	{
		{
			s.InboundTag = "string"
		}
	}
	{
		{
			s.UUID = "string"
		}
	}
	{
		{
			s.ConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ConfigProfileInboundUuid.SetFake()
		}
	}
	{
		{
			s.IsDisabled = true
		}
	}
	{
		{
			s.ViewPosition = float64(0)
		}
	}
	{
		{
			s.Remark = "string"
		}
	}
	{
		{
			s.IsHidden = true
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.VlessRouteId.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbDataRawInbound) SetFake() {
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams) SetFake() {
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemPassword) SetFake() {
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessPassword = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions) SetFake() {
	{
		{
			s.Ss.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs) SetFake() {
	{
		{
			s.Method.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams) SetFake() {
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams) SetFake() {
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.UsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.LifetimeUsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.SubLastUserAgent.SetFake()
		}
	}
	{
		{
			s.SubLastOpenedAt.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.OnlineAt.SetFake()
		}
	}
	{
		{
			s.SubRevokedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessUuid = uuid.New()
		}
	}
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.FirstConnectedAt.SetFake()
		}
	}
	{
		{
			s.LastTriggeredThreshold.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem GetRawSubscriptionByShortUuidResponseDtoResponseUserActiveInternalSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.ExternalSquadUuid.SetFake()
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.LastConnectedNode.SetFake()
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserActiveInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode) SetFake() {
	{
		{
			s.ConnectedAt = time.Now()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus) SetFake() {
	*s = GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusACTIVE
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy) SetFake() {
	*s = GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *GetRemnawaveHealthResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetRemnawaveHealthResponseDtoResponse) SetFake() {
	{
		{
			s.Pm2Stats = nil
			for i := 0; i < 0; i++ {
				var elem GetRemnawaveHealthResponseDtoResponsePm2StatsItem
				{
					elem.SetFake()
				}
				s.Pm2Stats = append(s.Pm2Stats, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetRemnawaveHealthResponseDtoResponsePm2StatsItem) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Memory = "string"
		}
	}
	{
		{
			s.CPU = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetStatsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetStatsResponseDtoResponse) SetFake() {
	{
		{
			s.CPU.SetFake()
		}
	}
	{
		{
			s.Memory.SetFake()
		}
	}
	{
		{
			s.Uptime = float64(0)
		}
	}
	{
		{
			s.Timestamp = float64(0)
		}
	}
	{
		{
			s.Users.SetFake()
		}
	}
	{
		{
			s.OnlineStats.SetFake()
		}
	}
	{
		{
			s.Nodes.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetStatsResponseDtoResponseCPU) SetFake() {
	{
		{
			s.Cores = float64(0)
		}
	}
	{
		{
			s.PhysicalCores = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetStatsResponseDtoResponseMemory) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Free = float64(0)
		}
	}
	{
		{
			s.Used = float64(0)
		}
	}
	{
		{
			s.Active = float64(0)
		}
	}
	{
		{
			s.Available = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetStatsResponseDtoResponseNodes) SetFake() {
	{
		{
			s.TotalOnline = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetStatsResponseDtoResponseOnlineStats) SetFake() {
	{
		{
			s.LastDay = float64(0)
		}
	}
	{
		{
			s.LastWeek = float64(0)
		}
	}
	{
		{
			s.NeverOnline = float64(0)
		}
	}
	{
		{
			s.OnlineNow = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetStatsResponseDtoResponseUsers) SetFake() {
	{
		{
			s.StatusCounts.SetFake()
		}
	}
	{
		{
			s.TotalUsers = float64(0)
		}
	}
	{
		{
			s.TotalTrafficBytes = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetStatsResponseDtoResponseUsersStatusCounts) SetFake() {
	var (
		elem float64
		m    map[string]float64 = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *GetStatusResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetStatusResponseDtoResponse) SetFake() {
	{
		{
			s.IsLoginAllowed = true
		}
	}
	{
		{
			s.IsRegisterAllowed = true
		}
	}
	{
		{
			s.Authentication.SetFake()
		}
	}
	{
		{
			s.Branding.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetStatusResponseDtoResponseAuthentication) SetFake() {
	{
		{
			s.Passkey.SetFake()
		}
	}
	{
		{
			s.TgAuth.SetFake()
		}
	}
	{
		{
			s.OAuth2.SetFake()
		}
	}
	{
		{
			s.Password.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetStatusResponseDtoResponseAuthenticationOAuth2) SetFake() {
	{
		{
			s.Providers.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetStatusResponseDtoResponseAuthenticationOAuth2Providers) SetFake() {
	var (
		elem bool
		m    map[string]bool = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *GetStatusResponseDtoResponseAuthenticationPasskey) SetFake() {
	{
		{
			s.Enabled = true
		}
	}
}

// SetFake set fake values.
func (s *GetStatusResponseDtoResponseAuthenticationPassword) SetFake() {
	{
		{
			s.Enabled = true
		}
	}
}

// SetFake set fake values.
func (s *GetStatusResponseDtoResponseAuthenticationTgAuth) SetFake() {
	{
		{
			s.Enabled = true
		}
	}
	{
		{
			s.BotId.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetStatusResponseDtoResponseBranding) SetFake() {
	{
		{
			s.Title.SetFake()
		}
	}
	{
		{
			s.LogoUrl.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionRequestHistoryResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionRequestHistoryResponseDtoResponse) SetFake() {
	{
		{
			s.Records = nil
			for i := 0; i < 0; i++ {
				var elem GetSubscriptionRequestHistoryResponseDtoResponseRecordsItem
				{
					elem.SetFake()
				}
				s.Records = append(s.Records, elem)
			}
		}
	}
	{
		{
			s.Total = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionRequestHistoryResponseDtoResponseRecordsItem) SetFake() {
	{
		{
			s.ID = float64(0)
		}
	}
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.RequestIp.SetFake()
		}
	}
	{
		{
			s.UserAgent.SetFake()
		}
	}
	{
		{
			s.RequestAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionRequestHistoryStatsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionRequestHistoryStatsResponseDtoResponse) SetFake() {
	{
		{
			s.ByParsedApp = nil
			for i := 0; i < 0; i++ {
				var elem GetSubscriptionRequestHistoryStatsResponseDtoResponseByParsedAppItem
				{
					elem.SetFake()
				}
				s.ByParsedApp = append(s.ByParsedApp, elem)
			}
		}
	}
	{
		{
			s.HourlyRequestStats = nil
			for i := 0; i < 0; i++ {
				var elem GetSubscriptionRequestHistoryStatsResponseDtoResponseHourlyRequestStatsItem
				{
					elem.SetFake()
				}
				s.HourlyRequestStats = append(s.HourlyRequestStats, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionRequestHistoryStatsResponseDtoResponseByParsedAppItem) SetFake() {
	{
		{
			s.App = "string"
		}
	}
	{
		{
			s.Count = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionRequestHistoryStatsResponseDtoResponseHourlyRequestStatsItem) SetFake() {
	{
		{
			s.DateTime = time.Now()
		}
	}
	{
		{
			s.RequestCount = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetTemplatesResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetTemplatesResponseDtoResponse) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Templates = nil
			for i := 0; i < 0; i++ {
				var elem GetTemplatesResponseDtoResponseTemplatesItem
				{
					elem.SetFake()
				}
				s.Templates = append(s.Templates, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetTemplatesResponseDtoResponseTemplatesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.TemplateType.SetFake()
		}
	}
	{
		{
			s.TemplateJson = []byte("null")
		}
	}
	{
		{
			s.EncodedTemplateYaml.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetTemplatesResponseDtoResponseTemplatesItemTemplateType) SetFake() {
	*s = GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeXRAYJSON
}

// SetFake set fake values.
func (s *GetUserAccessibleNodesResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetUserAccessibleNodesResponseDtoResponse) SetFake() {
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.ActiveNodes = nil
			for i := 0; i < 0; i++ {
				var elem GetUserAccessibleNodesResponseDtoResponseActiveNodesItem
				{
					elem.SetFake()
				}
				s.ActiveNodes = append(s.ActiveNodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
	{
		{
			s.ConfigProfileUuid = uuid.New()
		}
	}
	{
		{
			s.ConfigProfileName = "string"
		}
	}
	{
		{
			s.ActiveSquads = nil
			for i := 0; i < 0; i++ {
				var elem GetUserAccessibleNodesResponseDtoResponseActiveNodesItemActiveSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveSquads = append(s.ActiveSquads, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItemActiveSquadsItem) SetFake() {
	{
		{
			s.SquadName = "string"
		}
	}
	{
		{
			s.ActiveInbounds = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ActiveInbounds = append(s.ActiveInbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetUserSubscriptionRequestHistoryResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetUserSubscriptionRequestHistoryResponseDtoResponse) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Records = nil
			for i := 0; i < 0; i++ {
				var elem GetUserSubscriptionRequestHistoryResponseDtoResponseRecordsItem
				{
					elem.SetFake()
				}
				s.Records = append(s.Records, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetUserSubscriptionRequestHistoryResponseDtoResponseRecordsItem) SetFake() {
	{
		{
			s.ID = float64(0)
		}
	}
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.RequestAt = time.Now()
		}
	}
	{
		{
			s.RequestIp.SetFake()
		}
	}
	{
		{
			s.UserAgent.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetUserUsageByRangeResponseDto) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem GetUserUsageByRangeResponseDtoResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetUserUsageByRangeResponseDtoResponseItem) SetFake() {
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Date = "string"
		}
	}
}

// SetFake set fake values.
func (s *HostListResponse) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem HostListResponseResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HostListResponseResponseItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.Remark = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port = int(0)
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Sni.SetFake()
		}
	}
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.Alpn.SetFake()
		}
	}
	{
		{
			s.Fingerprint.SetFake()
		}
	}
	{
		{
			s.IsDisabled.SetFake()
		}
	}
	{
		{
			s.SecurityLayer.SetFake()
		}
	}
	{
		{
			s.XHttpExtraParams = []byte("null")
		}
	}
	{
		{
			s.MuxParams = []byte("null")
		}
	}
	{
		{
			s.SockoptParams = []byte("null")
		}
	}
	{
		{
			s.Inbound.SetFake()
		}
	}
	{
		{
			s.ServerDescription.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.IsHidden.SetFake()
		}
	}
	{
		{
			s.OverrideSniFromAddress.SetFake()
		}
	}
	{
		{
			s.VlessRouteId.SetFake()
		}
	}
	{
		{
			s.AllowInsecure.SetFake()
		}
	}
	{
		{
			s.ShuffleHost = true
		}
	}
	{
		{
			s.MihomoX25519 = true
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HostListResponseResponseItemInbound) SetFake() {
	{
		{
			s.ConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ConfigProfileInboundUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostListResponseResponseItemSecurityLayer) SetFake() {
	*s = HostListResponseResponseItemSecurityLayerDEFAULT
}

// SetFake set fake values.
func (s *HostResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostResponseResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.Remark = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port = int(0)
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Sni.SetFake()
		}
	}
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.Alpn.SetFake()
		}
	}
	{
		{
			s.Fingerprint.SetFake()
		}
	}
	{
		{
			s.IsDisabled.SetFake()
		}
	}
	{
		{
			s.SecurityLayer.SetFake()
		}
	}
	{
		{
			s.XHttpExtraParams = []byte("null")
		}
	}
	{
		{
			s.MuxParams = []byte("null")
		}
	}
	{
		{
			s.SockoptParams = []byte("null")
		}
	}
	{
		{
			s.Inbound.SetFake()
		}
	}
	{
		{
			s.ServerDescription.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.IsHidden.SetFake()
		}
	}
	{
		{
			s.OverrideSniFromAddress.SetFake()
		}
	}
	{
		{
			s.VlessRouteId.SetFake()
		}
	}
	{
		{
			s.AllowInsecure.SetFake()
		}
	}
	{
		{
			s.ShuffleHost = true
		}
	}
	{
		{
			s.MihomoX25519 = true
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HostResponseResponseInbound) SetFake() {
	{
		{
			s.ConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ConfigProfileInboundUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostResponseResponseSecurityLayer) SetFake() {
	*s = HostResponseResponseSecurityLayerDEFAULT
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerDeleteHostsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem HostsBulkActionsControllerDeleteHostsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerDeleteHostsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerDeleteHostsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerDisableHostsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem HostsBulkActionsControllerDisableHostsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerDisableHostsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerDisableHostsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerEnableHostsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem HostsBulkActionsControllerEnableHostsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerEnableHostsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerEnableHostsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerSetInboundToHostsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem HostsBulkActionsControllerSetInboundToHostsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerSetInboundToHostsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerSetInboundToHostsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerSetPortToHostsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem HostsBulkActionsControllerSetPortToHostsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerSetPortToHostsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerSetPortToHostsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerCreateHostBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem HostsControllerCreateHostBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerCreateHostBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *HostsControllerCreateHostInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerDeleteHostBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem HostsControllerDeleteHostBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerDeleteHostBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *HostsControllerDeleteHostInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerGetAllHostTagsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem HostsControllerGetAllHostTagsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerGetAllHostTagsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *HostsControllerGetAllHostTagsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerGetAllHostsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem HostsControllerGetAllHostsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerGetAllHostsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *HostsControllerGetAllHostsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerGetOneHostBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem HostsControllerGetOneHostBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerGetOneHostBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *HostsControllerGetOneHostInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerReorderHostsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem HostsControllerReorderHostsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerReorderHostsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *HostsControllerReorderHostsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerUpdateHostBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem HostsControllerUpdateHostBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerUpdateHostBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *HostsControllerUpdateHostInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HwidDevicesResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HwidDevicesResponseResponse) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Devices = nil
			for i := 0; i < 0; i++ {
				var elem HwidDevicesResponseResponseDevicesItem
				{
					elem.SetFake()
				}
				s.Devices = append(s.Devices, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HwidDevicesResponseResponseDevicesItem) SetFake() {
	{
		{
			s.Hwid = "string"
		}
	}
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.Platform.SetFake()
		}
	}
	{
		{
			s.OsVersion.SetFake()
		}
	}
	{
		{
			s.DeviceModel.SetFake()
		}
	}
	{
		{
			s.UserAgent.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerCreateUserHwidDeviceBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem HwidUserDevicesControllerCreateUserHwidDeviceBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerCreateUserHwidDeviceBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerCreateUserHwidDeviceInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerDeleteAllUserHwidDevicesBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem HwidUserDevicesControllerDeleteAllUserHwidDevicesBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerDeleteAllUserHwidDevicesBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerDeleteAllUserHwidDevicesInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerDeleteUserHwidDeviceBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem HwidUserDevicesControllerDeleteUserHwidDeviceBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerDeleteUserHwidDeviceBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerDeleteUserHwidDeviceInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerGetAllUsersBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem HwidUserDevicesControllerGetAllUsersBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerGetAllUsersBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerGetAllUsersInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerGetHwidDevicesStatsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem HwidUserDevicesControllerGetHwidDevicesStatsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerGetHwidDevicesStatsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerGetHwidDevicesStatsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerGetUserHwidDevicesBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem HwidUserDevicesControllerGetUserHwidDevicesBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerGetUserHwidDevicesBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerGetUserHwidDevicesInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InboundsResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InboundsResponseResponse) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Inbounds = nil
			for i := 0; i < 0; i++ {
				var elem InboundsResponseResponseInboundsItem
				{
					elem.SetFake()
				}
				s.Inbounds = append(s.Inbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InboundsResponseResponseInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
	{
		{
			s.ActiveSquads = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.ActiveSquads = append(s.ActiveSquads, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerCreateInfraBillingHistoryRecordBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InfraBillingControllerCreateInfraBillingHistoryRecordBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerCreateInfraBillingHistoryRecordBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InfraBillingControllerCreateInfraBillingHistoryRecordInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerCreateInfraBillingNodeBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InfraBillingControllerCreateInfraBillingNodeBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerCreateInfraBillingNodeBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InfraBillingControllerCreateInfraBillingNodeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerCreateInfraProviderBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InfraBillingControllerCreateInfraProviderBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerCreateInfraProviderBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InfraBillingControllerCreateInfraProviderInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerDeleteInfraBillingNodeByUuidBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InfraBillingControllerDeleteInfraBillingNodeByUuidBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerDeleteInfraBillingNodeByUuidBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InfraBillingControllerDeleteInfraBillingNodeByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerDeleteInfraProviderByUuidBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InfraBillingControllerDeleteInfraProviderByUuidBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerDeleteInfraProviderByUuidBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InfraBillingControllerDeleteInfraProviderByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerGetBillingNodesBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InfraBillingControllerGetBillingNodesBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerGetBillingNodesBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InfraBillingControllerGetBillingNodesInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerGetInfraBillingHistoryRecordsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InfraBillingControllerGetInfraBillingHistoryRecordsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerGetInfraBillingHistoryRecordsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InfraBillingControllerGetInfraBillingHistoryRecordsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerGetInfraProviderByUuidBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InfraBillingControllerGetInfraProviderByUuidBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerGetInfraProviderByUuidBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InfraBillingControllerGetInfraProviderByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerGetInfraProvidersBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InfraBillingControllerGetInfraProvidersBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerGetInfraProvidersBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InfraBillingControllerGetInfraProvidersInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerUpdateInfraBillingNodeBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InfraBillingControllerUpdateInfraBillingNodeBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerUpdateInfraBillingNodeBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InfraBillingControllerUpdateInfraBillingNodeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerUpdateInfraProviderBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InfraBillingControllerUpdateInfraProviderBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerUpdateInfraProviderBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InfraBillingControllerUpdateInfraProviderInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraProviderResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraProviderResponseResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.BillingHistory.SetFake()
		}
	}
	{
		{
			s.BillingNodes = nil
			for i := 0; i < 0; i++ {
				var elem InfraProviderResponseResponseBillingNodesItem
				{
					elem.SetFake()
				}
				s.BillingNodes = append(s.BillingNodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InfraProviderResponseResponseBillingHistory) SetFake() {
	{
		{
			s.TotalAmount = float64(0)
		}
	}
	{
		{
			s.TotalBills = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *InfraProviderResponseResponseBillingNodesItem) SetFake() {
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerAddUsersToInternalSquadBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InternalSquadControllerAddUsersToInternalSquadBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerAddUsersToInternalSquadBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InternalSquadControllerAddUsersToInternalSquadInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerCreateInternalSquadBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InternalSquadControllerCreateInternalSquadBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerCreateInternalSquadBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InternalSquadControllerCreateInternalSquadInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerDeleteInternalSquadBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InternalSquadControllerDeleteInternalSquadBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerDeleteInternalSquadBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InternalSquadControllerDeleteInternalSquadInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerGetInternalSquadAccessibleNodesBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InternalSquadControllerGetInternalSquadAccessibleNodesBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerGetInternalSquadAccessibleNodesBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InternalSquadControllerGetInternalSquadAccessibleNodesInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerGetInternalSquadByUuidBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InternalSquadControllerGetInternalSquadByUuidBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerGetInternalSquadByUuidBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InternalSquadControllerGetInternalSquadByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerGetInternalSquadsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InternalSquadControllerGetInternalSquadsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerGetInternalSquadsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InternalSquadControllerGetInternalSquadsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerRemoveUsersFromInternalSquadBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InternalSquadControllerRemoveUsersFromInternalSquadBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerRemoveUsersFromInternalSquadBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InternalSquadControllerRemoveUsersFromInternalSquadInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerUpdateInternalSquadBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem InternalSquadControllerUpdateInternalSquadBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerUpdateInternalSquadBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *InternalSquadControllerUpdateInternalSquadInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadResponseResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Info.SetFake()
		}
	}
	{
		{
			s.Inbounds = nil
			for i := 0; i < 0; i++ {
				var elem InternalSquadResponseResponseInboundsItem
				{
					elem.SetFake()
				}
				s.Inbounds = append(s.Inbounds, elem)
			}
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadResponseResponseInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadResponseResponseInfo) SetFake() {
	{
		{
			s.MembersCount = float64(0)
		}
	}
	{
		{
			s.InboundsCount = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *KeygenControllerGenerateKeyBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem KeygenControllerGenerateKeyBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *KeygenControllerGenerateKeyBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *KeygenControllerGenerateKeyInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *LoginRequestDto) SetFake() {
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Password = "string"
		}
	}
}

// SetFake set fake values.
func (s *NilDateTime) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilDebugSrrMatcherResponseDtoResponseMatchedRule) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilExternalSquadResponseResponseSubscriptionSettings) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilFloat64) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilGetAllUsersResponseDtoResponseUsersItemLastConnectedNode) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilGetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilGetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilGetStatusResponseDtoResponseAuthentication) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilInt) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilNodeResponseResponseProvider) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilNodesResponseResponseItemProvider) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilSettingsResponseResponseBrandingSettings) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilSettingsResponseResponseOauth2Settings) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilSettingsResponseResponsePasskeySettings) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilSettingsResponseResponsePasswordSettings) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilSettingsResponseResponseTgAuthSettings) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilString) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilSubscriptionSettingsResponseResponseCustomResponseHeaders) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilSubscriptionSettingsResponseResponseResponseRules) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilURI) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilUUID) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilUserResponseResponseLastConnectedNode) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilUsersResponseResponseItemLastConnectedNode) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NodeResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodeResponseResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.IsConnected = true
		}
	}
	{
		{
			s.IsDisabled = true
		}
	}
	{
		{
			s.IsConnecting = true
		}
	}
	{
		{
			s.IsNodeOnline = true
		}
	}
	{
		{
			s.IsXrayRunning = true
		}
	}
	{
		{
			s.LastStatusChange.SetFake()
		}
	}
	{
		{
			s.LastStatusMessage.SetFake()
		}
	}
	{
		{
			s.XrayVersion.SetFake()
		}
	}
	{
		{
			s.NodeVersion.SetFake()
		}
	}
	{
		{
			s.XrayUptime = "string"
		}
	}
	{
		{
			s.IsTrafficTrackingActive = true
		}
	}
	{
		{
			s.TrafficResetDay.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficUsedBytes.SetFake()
		}
	}
	{
		{
			s.NotifyPercent.SetFake()
		}
	}
	{
		{
			s.UsersOnline.SetFake()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
	{
		{
			s.ConsumptionMultiplier = float64(0)
		}
	}
	{
		{
			s.CpuCount.SetFake()
		}
	}
	{
		{
			s.CpuModel.SetFake()
		}
	}
	{
		{
			s.TotalRam.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ConfigProfile.SetFake()
		}
	}
	{
		{
			s.ProviderUuid.SetFake()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodeResponseResponseConfigProfile) SetFake() {
	{
		{
			s.ActiveConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ActiveInbounds = nil
			for i := 0; i < 0; i++ {
				var elem NodeResponseResponseConfigProfileActiveInboundsItem
				{
					elem.SetFake()
				}
				s.ActiveInbounds = append(s.ActiveInbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *NodeResponseResponseConfigProfileActiveInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *NodeResponseResponseProvider) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerCreateNodeBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem NodesControllerCreateNodeBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerCreateNodeBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *NodesControllerCreateNodeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerDeleteNodeBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem NodesControllerDeleteNodeBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerDeleteNodeBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *NodesControllerDeleteNodeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerDisableNodeBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem NodesControllerDisableNodeBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerDisableNodeBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *NodesControllerDisableNodeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerEnableNodeBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem NodesControllerEnableNodeBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerEnableNodeBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *NodesControllerEnableNodeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerGetAllNodesBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem NodesControllerGetAllNodesBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerGetAllNodesBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *NodesControllerGetAllNodesInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerGetOneNodeBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem NodesControllerGetOneNodeBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerGetOneNodeBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *NodesControllerGetOneNodeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerReorderNodesBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem NodesControllerReorderNodesBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerReorderNodesBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *NodesControllerReorderNodesInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerRestartAllNodesBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem NodesControllerRestartAllNodesBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerRestartAllNodesBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *NodesControllerRestartAllNodesInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerRestartNodeBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem NodesControllerRestartNodeBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerRestartNodeBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *NodesControllerRestartNodeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerUpdateNodeBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem NodesControllerUpdateNodeBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerUpdateNodeBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *NodesControllerUpdateNodeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesResponse) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem NodesResponseResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *NodesResponseResponseItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.IsConnected = true
		}
	}
	{
		{
			s.IsDisabled = true
		}
	}
	{
		{
			s.IsConnecting = true
		}
	}
	{
		{
			s.IsNodeOnline = true
		}
	}
	{
		{
			s.IsXrayRunning = true
		}
	}
	{
		{
			s.LastStatusChange.SetFake()
		}
	}
	{
		{
			s.LastStatusMessage.SetFake()
		}
	}
	{
		{
			s.XrayVersion.SetFake()
		}
	}
	{
		{
			s.NodeVersion.SetFake()
		}
	}
	{
		{
			s.XrayUptime = "string"
		}
	}
	{
		{
			s.IsTrafficTrackingActive = true
		}
	}
	{
		{
			s.TrafficResetDay.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficUsedBytes.SetFake()
		}
	}
	{
		{
			s.NotifyPercent.SetFake()
		}
	}
	{
		{
			s.UsersOnline.SetFake()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
	{
		{
			s.ConsumptionMultiplier = float64(0)
		}
	}
	{
		{
			s.CpuCount.SetFake()
		}
	}
	{
		{
			s.CpuModel.SetFake()
		}
	}
	{
		{
			s.TotalRam.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ConfigProfile.SetFake()
		}
	}
	{
		{
			s.ProviderUuid.SetFake()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesResponseResponseItemConfigProfile) SetFake() {
	{
		{
			s.ActiveConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ActiveInbounds = nil
			for i := 0; i < 0; i++ {
				var elem NodesResponseResponseItemConfigProfileActiveInboundsItem
				{
					elem.SetFake()
				}
				s.ActiveInbounds = append(s.ActiveInbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *NodesResponseResponseItemConfigProfileActiveInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *NodesResponseResponseItemProvider) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *NodesUsageHistoryControllerGetNodesUsageByRangeBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem NodesUsageHistoryControllerGetNodesUsageByRangeBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *NodesUsageHistoryControllerGetNodesUsageByRangeBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *NodesUsageHistoryControllerGetNodesUsageByRangeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesUserUsageHistoryControllerGetNodeUserUsageBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem NodesUserUsageHistoryControllerGetNodeUserUsageBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *NodesUserUsageHistoryControllerGetNodeUserUsageBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *NodesUserUsageHistoryControllerGetNodeUserUsageInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesUserUsageHistoryControllerGetNodesRealtimeUsageBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem NodesUserUsageHistoryControllerGetNodesRealtimeUsageBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *NodesUserUsageHistoryControllerGetNodesRealtimeUsageBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *NodesUserUsageHistoryControllerGetNodesRealtimeUsageInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *OAuth2AuthorizeRequestDto) SetFake() {
	{
		{
			s.Provider.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *OAuth2AuthorizeRequestDtoProvider) SetFake() {
	*s = OAuth2AuthorizeRequestDtoProviderGithub
}

// SetFake set fake values.
func (s *OAuth2AuthorizeResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *OAuth2AuthorizeResponseDtoResponse) SetFake() {
	{
		{
			s.AuthorizationUrl.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *OAuth2CallbackRequestDto) SetFake() {
	{
		{
			s.Provider.SetFake()
		}
	}
	{
		{
			s.Code = "string"
		}
	}
	{
		{
			s.State = "string"
		}
	}
}

// SetFake set fake values.
func (s *OAuth2CallbackRequestDtoProvider) SetFake() {
	*s = OAuth2CallbackRequestDtoProviderGithub
}

// SetFake set fake values.
func (s *OptBool) SetFake() {
	var elem bool
	{
		elem = true
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptBulkAllUpdateUsersRequestDtoStatus) SetFake() {
	var elem BulkAllUpdateUsersRequestDtoStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy) SetFake() {
	var elem BulkAllUpdateUsersRequestDtoTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptBulkDeleteUsersByStatusRequestDtoStatus) SetFake() {
	var elem BulkDeleteUsersByStatusRequestDtoStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptBulkUpdateUsersRequestDtoFieldsStatus) SetFake() {
	var elem BulkUpdateUsersRequestDtoFieldsStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) SetFake() {
	var elem BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptCreateHostRequestDtoSecurityLayer) SetFake() {
	var elem CreateHostRequestDtoSecurityLayer
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptCreateUserRequestDtoStatus) SetFake() {
	var elem CreateUserRequestDtoStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptCreateUserRequestDtoTrafficLimitStrategy) SetFake() {
	var elem CreateUserRequestDtoTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptDateTime) SetFake() {
	var elem time.Time
	{
		elem = time.Now()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptDebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications) SetFake() {
	var elem DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptDebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications) SetFake() {
	var elem DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptFloat64) SetFake() {
	var elem float64
	{
		elem = float64(0)
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetAllUsersResponseDtoResponseUsersItemStatus) SetFake() {
	var elem GetAllUsersResponseDtoResponseUsersItemStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy) SetFake() {
	var elem GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) SetFake() {
	var elem GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams) SetFake() {
	var elem *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams
	{ // Keep pointer nil to prevent infinite recursion.
		elem = nil
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams) SetFake() {
	var elem *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams
	{ // Keep pointer nil to prevent infinite recursion.
		elem = nil
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams) SetFake() {
	var elem *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams
	{ // Keep pointer nil to prevent infinite recursion.
		elem = nil
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetRawSubscriptionByShortUuidResponseDtoResponseUserStatus) SetFake() {
	var elem GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy) SetFake() {
	var elem GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptHostListResponseResponseItemSecurityLayer) SetFake() {
	var elem HostListResponseResponseItemSecurityLayer
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptHostResponseResponseSecurityLayer) SetFake() {
	var elem HostResponseResponseSecurityLayer
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptInt) SetFake() {
	var elem int
	{
		elem = int(0)
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptNilBool) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilCreateHostRequestDtoAlpn) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilCreateHostRequestDtoFingerprint) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilFloat64) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilInt) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilString) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilURI) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilUUID) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilUpdateHostRequestDtoAlpn) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilUpdateHostRequestDtoFingerprint) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptString) SetFake() {
	var elem string
	{
		elem = "string"
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptSubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications) SetFake() {
	var elem SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptURI) SetFake() {
	var elem url.URL
	{
		elem = url.URL{Scheme: "https", Host: "github.com", Path: "/ogen-go/ogen"}
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUUID) SetFake() {
	var elem uuid.UUID
	{
		elem = uuid.New()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateExternalSquadRequestDtoSubscriptionSettings) SetFake() {
	var elem UpdateExternalSquadRequestDtoSubscriptionSettings
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateHostRequestDtoInbound) SetFake() {
	var elem UpdateHostRequestDtoInbound
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateHostRequestDtoSecurityLayer) SetFake() {
	var elem UpdateHostRequestDtoSecurityLayer
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateNodeRequestDtoConfigProfile) SetFake() {
	var elem UpdateNodeRequestDtoConfigProfile
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateRemnawaveSettingsRequestDtoBrandingSettings) SetFake() {
	var elem UpdateRemnawaveSettingsRequestDtoBrandingSettings
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateRemnawaveSettingsRequestDtoOauth2Settings) SetFake() {
	var elem UpdateRemnawaveSettingsRequestDtoOauth2Settings
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateRemnawaveSettingsRequestDtoPasskeySettings) SetFake() {
	var elem UpdateRemnawaveSettingsRequestDtoPasskeySettings
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateRemnawaveSettingsRequestDtoPasswordSettings) SetFake() {
	var elem UpdateRemnawaveSettingsRequestDtoPasswordSettings
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateRemnawaveSettingsRequestDtoTgAuthSettings) SetFake() {
	var elem UpdateRemnawaveSettingsRequestDtoTgAuthSettings
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) SetFake() {
	var elem UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateSubscriptionSettingsRequestDtoResponseRules) SetFake() {
	var elem UpdateSubscriptionSettingsRequestDtoResponseRules
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications) SetFake() {
	var elem UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateUserRequestDtoStatus) SetFake() {
	var elem UpdateUserRequestDtoStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateUserRequestDtoTrafficLimitStrategy) SetFake() {
	var elem UpdateUserRequestDtoTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUserResponseResponseStatus) SetFake() {
	var elem UserResponseResponseStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUserResponseResponseTrafficLimitStrategy) SetFake() {
	var elem UserResponseResponseTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUsersResponseResponseItemStatus) SetFake() {
	var elem UsersResponseResponseItemStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUsersResponseResponseItemTrafficLimitStrategy) SetFake() {
	var elem UsersResponseResponseItemTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *PasskeyControllerDeletePasskeyBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem PasskeyControllerDeletePasskeyBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *PasskeyControllerDeletePasskeyBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *PasskeyControllerDeletePasskeyInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *PasskeyControllerGetActivePasskeysBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem PasskeyControllerGetActivePasskeysBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *PasskeyControllerGetActivePasskeysBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *PasskeyControllerGetActivePasskeysInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *PasskeyControllerPasskeyRegistrationOptionsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem PasskeyControllerPasskeyRegistrationOptionsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *PasskeyControllerPasskeyRegistrationOptionsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *PasskeyControllerPasskeyRegistrationOptionsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *PasskeyControllerPasskeyRegistrationVerifyBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem PasskeyControllerPasskeyRegistrationVerifyBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *PasskeyControllerPasskeyRegistrationVerifyBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *PasskeyControllerPasskeyRegistrationVerifyInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *PasskeyOptionsResponse) SetFake() {
	{
		{
			s.Response = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *PasskeysResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *PasskeysResponseResponse) SetFake() {
	{
		{
			s.Passkeys = nil
			for i := 0; i < 0; i++ {
				var elem PasskeysResponseResponsePasskeysItem
				{
					elem.SetFake()
				}
				s.Passkeys = append(s.Passkeys, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *PasskeysResponseResponsePasskeysItem) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.LastUsedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *RegisterRequestDto) SetFake() {
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Password = "string"
		}
	}
}

// SetFake set fake values.
func (s *RemnawaveSettingsControllerGetSettingsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem RemnawaveSettingsControllerGetSettingsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *RemnawaveSettingsControllerGetSettingsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *RemnawaveSettingsControllerGetSettingsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *RemnawaveSettingsControllerUpdateSettingsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem RemnawaveSettingsControllerUpdateSettingsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *RemnawaveSettingsControllerUpdateSettingsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *RemnawaveSettingsControllerUpdateSettingsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ReorderHostRequestDto) SetFake() {
	{
		{
			s.Hosts = nil
			for i := 0; i < 0; i++ {
				var elem ReorderHostRequestDtoHostsItem
				{
					elem.SetFake()
				}
				s.Hosts = append(s.Hosts, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ReorderHostRequestDtoHostsItem) SetFake() {
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.UUID = uuid.New()
		}
	}
}

// SetFake set fake values.
func (s *ReorderHostResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ReorderHostResponseDtoResponse) SetFake() {
	{
		{
			s.IsUpdated = true
		}
	}
}

// SetFake set fake values.
func (s *ReorderNodeRequestDto) SetFake() {
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem ReorderNodeRequestDtoNodesItem
				{
					elem.SetFake()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ReorderNodeRequestDtoNodesItem) SetFake() {
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.UUID = uuid.New()
		}
	}
}

// SetFake set fake values.
func (s *RestartAllNodesRequestBodyDto) SetFake() {
	{
		{
			s.ForceRestart.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *RevokeUserSubscriptionBodyDto) SetFake() {
	{
		{
			s.ShortUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SetInboundToManyHostsRequestDto) SetFake() {
	{
		{
			s.Uuids = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Uuids = append(s.Uuids, elem)
			}
		}
	}
	{
		{
			s.ConfigProfileUuid = uuid.New()
		}
	}
	{
		{
			s.ConfigProfileInboundUuid = uuid.New()
		}
	}
}

// SetFake set fake values.
func (s *SetPortToManyHostsRequestDto) SetFake() {
	{
		{
			s.Uuids = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Uuids = append(s.Uuids, elem)
			}
		}
	}
	{
		{
			s.Port = int(0)
		}
	}
}

// SetFake set fake values.
func (s *SettingsResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SettingsResponseResponse) SetFake() {
	{
		{
			s.PasskeySettings.SetFake()
		}
	}
	{
		{
			s.Oauth2Settings.SetFake()
		}
	}
	{
		{
			s.TgAuthSettings.SetFake()
		}
	}
	{
		{
			s.PasswordSettings.SetFake()
		}
	}
	{
		{
			s.BrandingSettings.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SettingsResponseResponseBrandingSettings) SetFake() {
	{
		{
			s.Title.SetFake()
		}
	}
	{
		{
			s.LogoUrl.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SettingsResponseResponseOauth2Settings) SetFake() {
	{
		{
			s.Github.SetFake()
		}
	}
	{
		{
			s.Pocketid.SetFake()
		}
	}
	{
		{
			s.Yandex.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SettingsResponseResponseOauth2SettingsGithub) SetFake() {
	{
		{
			s.Enabled = true
		}
	}
	{
		{
			s.ClientId.SetFake()
		}
	}
	{
		{
			s.ClientSecret.SetFake()
		}
	}
	{
		{
			s.AllowedEmails = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.AllowedEmails = append(s.AllowedEmails, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SettingsResponseResponseOauth2SettingsPocketid) SetFake() {
	{
		{
			s.Enabled = true
		}
	}
	{
		{
			s.ClientId.SetFake()
		}
	}
	{
		{
			s.ClientSecret.SetFake()
		}
	}
	{
		{
			s.PlainDomain.SetFake()
		}
	}
	{
		{
			s.AllowedEmails = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.AllowedEmails = append(s.AllowedEmails, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SettingsResponseResponseOauth2SettingsYandex) SetFake() {
	{
		{
			s.Enabled = true
		}
	}
	{
		{
			s.ClientId.SetFake()
		}
	}
	{
		{
			s.ClientSecret.SetFake()
		}
	}
	{
		{
			s.AllowedEmails = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.AllowedEmails = append(s.AllowedEmails, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SettingsResponseResponsePasskeySettings) SetFake() {
	{
		{
			s.Enabled = true
		}
	}
	{
		{
			s.RpId.SetFake()
		}
	}
	{
		{
			s.Origin.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SettingsResponseResponsePasswordSettings) SetFake() {
	{
		{
			s.Enabled = true
		}
	}
}

// SetFake set fake values.
func (s *SettingsResponseResponseTgAuthSettings) SetFake() {
	{
		{
			s.Enabled = true
		}
	}
	{
		{
			s.BotToken.SetFake()
		}
	}
	{
		{
			s.AdminIds = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.AdminIds = append(s.AdminIds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SnippetRequest) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Snippet = nil
			for i := 0; i < 0; i++ {
				var elem SnippetRequestSnippetItem
				{
					elem.SetFake()
				}
				s.Snippet = append(s.Snippet, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SnippetRequestSnippetItem) SetFake() {
}

// SetFake set fake values.
func (s *SnippetsControllerCreateSnippetBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SnippetsControllerCreateSnippetBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SnippetsControllerCreateSnippetBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SnippetsControllerCreateSnippetInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SnippetsControllerDeleteSnippetByNameBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SnippetsControllerDeleteSnippetByNameBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SnippetsControllerDeleteSnippetByNameBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SnippetsControllerDeleteSnippetByNameInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SnippetsControllerGetSnippetsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SnippetsControllerGetSnippetsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SnippetsControllerGetSnippetsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SnippetsControllerGetSnippetsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SnippetsControllerUpdateSnippetBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SnippetsControllerUpdateSnippetBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SnippetsControllerUpdateSnippetBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SnippetsControllerUpdateSnippetInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SnippetsResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SnippetsResponseResponse) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Snippets = nil
			for i := 0; i < 0; i++ {
				var elem SnippetsResponseResponseSnippetsItem
				{
					elem.SetFake()
				}
				s.Snippets = append(s.Snippets, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SnippetsResponseResponseSnippetsItem) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Snippet = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionControllerGetSubscriptionInfoByShortUuidBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SubscriptionControllerGetSubscriptionInfoByShortUuidBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionControllerGetSubscriptionInfoByShortUuidBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SubscriptionControllerGetSubscriptionInfoByShortUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionResponseResponse) SetFake() {
	{
		{
			s.IsFound = true
		}
	}
	{
		{
			s.User.SetFake()
		}
	}
	{
		{
			s.Links = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Links = append(s.Links, elem)
			}
		}
	}
	{
		{
			s.SsConfLinks.SetFake()
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionResponseResponseHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionResponseResponseSsConfLinks) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *SubscriptionResponseResponseUser) SetFake() {
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.DaysLeft = float64(0)
		}
	}
	{
		{
			s.TrafficUsed = "string"
		}
	}
	{
		{
			s.TrafficLimit = "string"
		}
	}
	{
		{
			s.LifetimeTrafficUsed = "string"
		}
	}
	{
		{
			s.TrafficUsedBytes = "string"
		}
	}
	{
		{
			s.TrafficLimitBytes = "string"
		}
	}
	{
		{
			s.LifetimeTrafficUsedBytes = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.ExpiresAt = time.Now()
		}
	}
	{
		{
			s.IsActive = true
		}
	}
	{
		{
			s.UserStatus.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionResponseResponseUserTrafficLimitStrategy) SetFake() {
	*s = SubscriptionResponseResponseUserTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *SubscriptionResponseResponseUserUserStatus) SetFake() {
	*s = SubscriptionResponseResponseUserUserStatusACTIVE
}

// SetFake set fake values.
func (s *SubscriptionSettingsControllerGetSettingsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SubscriptionSettingsControllerGetSettingsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionSettingsControllerGetSettingsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SubscriptionSettingsControllerGetSettingsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionSettingsControllerUpdateSettingsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SubscriptionSettingsControllerUpdateSettingsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionSettingsControllerUpdateSettingsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SubscriptionSettingsControllerUpdateSettingsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionSettingsResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionSettingsResponseResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileTitle = "string"
		}
	}
	{
		{
			s.SupportLink = "string"
		}
	}
	{
		{
			s.ProfileUpdateInterval = int(0)
		}
	}
	{
		{
			s.IsProfileWebpageUrlEnabled = true
		}
	}
	{
		{
			s.ServeJsonAtBaseSubscription = true
		}
	}
	{
		{
			s.AddUsernameToBaseSubscription = true
		}
	}
	{
		{
			s.IsShowCustomRemarks = true
		}
	}
	{
		{
			s.HappAnnounce.SetFake()
		}
	}
	{
		{
			s.HappRouting.SetFake()
		}
	}
	{
		{
			s.ExpiredUsersRemarks = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ExpiredUsersRemarks = append(s.ExpiredUsersRemarks, elem)
			}
		}
	}
	{
		{
			s.LimitedUsersRemarks = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.LimitedUsersRemarks = append(s.LimitedUsersRemarks, elem)
			}
		}
	}
	{
		{
			s.DisabledUsersRemarks = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.DisabledUsersRemarks = append(s.DisabledUsersRemarks, elem)
			}
		}
	}
	{
		{
			s.CustomResponseHeaders.SetFake()
		}
	}
	{
		{
			s.RandomizeHosts = true
		}
	}
	{
		{
			s.ResponseRules.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionSettingsResponseResponseCustomResponseHeaders) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *SubscriptionSettingsResponseResponseResponseRules) SetFake() {
	{
		{
			s.Version.SetFake()
		}
	}
	{
		{
			s.Rules = nil
			for i := 0; i < 0; i++ {
				var elem SubscriptionSettingsResponseResponseResponseRulesRulesItem
				{
					elem.SetFake()
				}
				s.Rules = append(s.Rules, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItem) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Enabled = true
		}
	}
	{
		{
			s.Operator.SetFake()
		}
	}
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItem
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.ResponseType.SetFake()
		}
	}
	{
		{
			s.ResponseModifications.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItem) SetFake() {
	{
		{
			s.HeaderName = "string"
		}
	}
	{
		{
			s.Operator.SetFake()
		}
	}
	{
		{
			s.Value = "string"
		}
	}
	{
		{
			s.CaseSensitive = true
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator) SetFake() {
	*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorEQUALS
}

// SetFake set fake values.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemOperator) SetFake() {
	*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemOperatorAND
}

// SetFake set fake values.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications) SetFake() {
	{
		{
			s.Headers = nil
			for i := 0; i < 0; i++ {
				var elem SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModificationsHeadersItem
				{
					elem.SetFake()
				}
				s.Headers = append(s.Headers, elem)
			}
		}
	}
	{
		{
			s.SubscriptionTemplate.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModificationsHeadersItem) SetFake() {
	{
		{
			s.Key = "string"
		}
	}
	{
		{
			s.Value = "string"
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType) SetFake() {
	*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeXRAYJSON
}

// SetFake set fake values.
func (s *SubscriptionSettingsResponseResponseResponseRulesVersion) SetFake() {
	*s = SubscriptionSettingsResponseResponseResponseRulesVersion1
}

// SetFake set fake values.
func (s *SubscriptionTemplateControllerCreateTemplateBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SubscriptionTemplateControllerCreateTemplateBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionTemplateControllerCreateTemplateBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SubscriptionTemplateControllerCreateTemplateInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionTemplateControllerDeleteTemplateBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SubscriptionTemplateControllerDeleteTemplateBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionTemplateControllerDeleteTemplateBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SubscriptionTemplateControllerDeleteTemplateInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionTemplateControllerGetAllTemplatesBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SubscriptionTemplateControllerGetAllTemplatesBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionTemplateControllerGetAllTemplatesBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SubscriptionTemplateControllerGetAllTemplatesInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionTemplateControllerGetTemplateByUuidBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SubscriptionTemplateControllerGetTemplateByUuidBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionTemplateControllerGetTemplateByUuidBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SubscriptionTemplateControllerGetTemplateByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionTemplateControllerUpdateTemplateBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SubscriptionTemplateControllerUpdateTemplateBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionTemplateControllerUpdateTemplateBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SubscriptionTemplateControllerUpdateTemplateInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetAllSubscriptionsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SubscriptionsControllerGetAllSubscriptionsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetAllSubscriptionsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetAllSubscriptionsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetRawSubscriptionByShortUuidBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SubscriptionsControllerGetRawSubscriptionByShortUuidBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetRawSubscriptionByShortUuidBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetRawSubscriptionByShortUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SubscriptionsControllerGetSubscriptionByShortUuidProtectedBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedNotFound) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetSubscriptionByUsernameBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SubscriptionsControllerGetSubscriptionByUsernameBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetSubscriptionByUsernameBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetSubscriptionByUsernameInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetSubscriptionByUsernameNotFound) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetSubscriptionByUuidBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SubscriptionsControllerGetSubscriptionByUuidBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetSubscriptionByUuidBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetSubscriptionByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetSubscriptionByUuidNotFound) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerDebugSrrMatcherBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SystemControllerDebugSrrMatcherBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerDebugSrrMatcherBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SystemControllerDebugSrrMatcherInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerEncryptHappCryptoLinkBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SystemControllerEncryptHappCryptoLinkBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerEncryptHappCryptoLinkBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SystemControllerEncryptHappCryptoLinkInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerGetBandwidthStatsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SystemControllerGetBandwidthStatsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerGetBandwidthStatsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SystemControllerGetBandwidthStatsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerGetNodesMetricsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SystemControllerGetNodesMetricsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerGetNodesMetricsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SystemControllerGetNodesMetricsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerGetNodesStatisticsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SystemControllerGetNodesStatisticsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerGetNodesStatisticsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SystemControllerGetNodesStatisticsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerGetRemnawaveHealthBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SystemControllerGetRemnawaveHealthBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerGetRemnawaveHealthBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SystemControllerGetRemnawaveHealthInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerGetStatsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SystemControllerGetStatsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerGetStatsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SystemControllerGetStatsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerGetX25519KeypairsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem SystemControllerGetX25519KeypairsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerGetX25519KeypairsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *SystemControllerGetX25519KeypairsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *TagsResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *TagsResponseResponse) SetFake() {
	{
		{
			s.Tags = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Tags = append(s.Tags, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *TelegramCallbackRequestDto) SetFake() {
	{
		{
			s.ID = float64(0)
		}
	}
	{
		{
			s.FirstName = "string"
		}
	}
	{
		{
			s.LastName.SetFake()
		}
	}
	{
		{
			s.Username.SetFake()
		}
	}
	{
		{
			s.PhotoURL.SetFake()
		}
	}
	{
		{
			s.AuthDate = float64(0)
		}
	}
	{
		{
			s.Hash = "string"
		}
	}
}

// SetFake set fake values.
func (s *TemplateResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *TemplateResponseResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.TemplateType.SetFake()
		}
	}
	{
		{
			s.TemplateJson = []byte("null")
		}
	}
	{
		{
			s.EncodedTemplateYaml.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *TemplateResponseResponseTemplateType) SetFake() {
	*s = TemplateResponseResponseTemplateTypeXRAYJSON
}

// SetFake set fake values.
func (s *TokenResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *TokenResponseResponse) SetFake() {
	{
		{
			s.AccessToken = "string"
		}
	}
}

// SetFake set fake values.
func (s *UpdateConfigProfileRequestDto) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{ // Keep pointer nil to prevent infinite recursion.
			s.Config = nil
		}
	}
}

// SetFake set fake values.
func (s *UpdateConfigProfileRequestDtoConfig) SetFake() {
}

// SetFake set fake values.
func (s *UpdateExternalSquadRequestDto) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Templates = nil
			for i := 0; i < 0; i++ {
				var elem UpdateExternalSquadRequestDtoTemplatesItem
				{
					elem.SetFake()
				}
				s.Templates = append(s.Templates, elem)
			}
		}
	}
	{
		{
			s.SubscriptionSettings.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) SetFake() {
	{
		{
			s.ProfileTitle.SetFake()
		}
	}
	{
		{
			s.SupportLink.SetFake()
		}
	}
	{
		{
			s.ProfileUpdateInterval.SetFake()
		}
	}
	{
		{
			s.IsProfileWebpageUrlEnabled.SetFake()
		}
	}
	{
		{
			s.ServeJsonAtBaseSubscription.SetFake()
		}
	}
	{
		{
			s.AddUsernameToBaseSubscription.SetFake()
		}
	}
	{
		{
			s.IsShowCustomRemarks.SetFake()
		}
	}
	{
		{
			s.HappAnnounce.SetFake()
		}
	}
	{
		{
			s.HappRouting.SetFake()
		}
	}
	{
		{
			s.RandomizeHosts.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateExternalSquadRequestDtoTemplatesItem) SetFake() {
	{
		{
			s.TemplateUuid = uuid.New()
		}
	}
	{
		{
			s.TemplateType.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateExternalSquadRequestDtoTemplatesItemTemplateType) SetFake() {
	*s = UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeXRAYJSON
}

// SetFake set fake values.
func (s *UpdateHostRequestDto) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Inbound.SetFake()
		}
	}
	{
		{
			s.Remark.SetFake()
		}
	}
	{
		{
			s.Address.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Sni.SetFake()
		}
	}
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.Alpn.SetFake()
		}
	}
	{
		{
			s.Fingerprint.SetFake()
		}
	}
	{
		{
			s.IsDisabled.SetFake()
		}
	}
	{
		{
			s.SecurityLayer.SetFake()
		}
	}
	{
		{
			s.XHttpExtraParams = []byte("null")
		}
	}
	{
		{
			s.MuxParams = []byte("null")
		}
	}
	{
		{
			s.SockoptParams = []byte("null")
		}
	}
	{
		{
			s.ServerDescription.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.IsHidden.SetFake()
		}
	}
	{
		{
			s.OverrideSniFromAddress.SetFake()
		}
	}
	{
		{
			s.VlessRouteId.SetFake()
		}
	}
	{
		{
			s.AllowInsecure.SetFake()
		}
	}
	{
		{
			s.ShuffleHost.SetFake()
		}
	}
	{
		{
			s.MihomoX25519.SetFake()
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UpdateHostRequestDtoAlpn) SetFake() {
	*s = UpdateHostRequestDtoAlpnH3
}

// SetFake set fake values.
func (s *UpdateHostRequestDtoFingerprint) SetFake() {
	*s = UpdateHostRequestDtoFingerprintChrome
}

// SetFake set fake values.
func (s *UpdateHostRequestDtoInbound) SetFake() {
	{
		{
			s.ConfigProfileUuid = uuid.New()
		}
	}
	{
		{
			s.ConfigProfileInboundUuid = uuid.New()
		}
	}
}

// SetFake set fake values.
func (s *UpdateHostRequestDtoSecurityLayer) SetFake() {
	*s = UpdateHostRequestDtoSecurityLayerDEFAULT
}

// SetFake set fake values.
func (s *UpdateInfraBillingNodeRequestDto) SetFake() {
	{
		{
			s.Uuids = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Uuids = append(s.Uuids, elem)
			}
		}
	}
	{
		{
			s.NextBillingAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *UpdateInfraProviderRequestDto) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateInternalSquadRequestDto) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Inbounds = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Inbounds = append(s.Inbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UpdateNodeRequestDto) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Address.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.IsTrafficTrackingActive.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.NotifyPercent.SetFake()
		}
	}
	{
		{
			s.TrafficResetDay.SetFake()
		}
	}
	{
		{
			s.CountryCode.SetFake()
		}
	}
	{
		{
			s.ConsumptionMultiplier.SetFake()
		}
	}
	{
		{
			s.ConfigProfile.SetFake()
		}
	}
	{
		{
			s.ProviderUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateNodeRequestDtoConfigProfile) SetFake() {
	{
		{
			s.ActiveConfigProfileUuid = uuid.New()
		}
	}
	{
		{
			s.ActiveInbounds = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.ActiveInbounds = append(s.ActiveInbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UpdateRemnawaveSettingsRequestDto) SetFake() {
	{
		{
			s.PasskeySettings.SetFake()
		}
	}
	{
		{
			s.Oauth2Settings.SetFake()
		}
	}
	{
		{
			s.TgAuthSettings.SetFake()
		}
	}
	{
		{
			s.PasswordSettings.SetFake()
		}
	}
	{
		{
			s.BrandingSettings.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateRemnawaveSettingsRequestDtoBrandingSettings) SetFake() {
	{
		{
			s.Title.SetFake()
		}
	}
	{
		{
			s.LogoUrl.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2Settings) SetFake() {
	{
		{
			s.Github.SetFake()
		}
	}
	{
		{
			s.Pocketid.SetFake()
		}
	}
	{
		{
			s.Yandex.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsGithub) SetFake() {
	{
		{
			s.Enabled = true
		}
	}
	{
		{
			s.ClientId.SetFake()
		}
	}
	{
		{
			s.ClientSecret.SetFake()
		}
	}
	{
		{
			s.AllowedEmails = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.AllowedEmails = append(s.AllowedEmails, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsPocketid) SetFake() {
	{
		{
			s.Enabled = true
		}
	}
	{
		{
			s.ClientId.SetFake()
		}
	}
	{
		{
			s.ClientSecret.SetFake()
		}
	}
	{
		{
			s.PlainDomain.SetFake()
		}
	}
	{
		{
			s.AllowedEmails = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.AllowedEmails = append(s.AllowedEmails, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsYandex) SetFake() {
	{
		{
			s.Enabled = true
		}
	}
	{
		{
			s.ClientId.SetFake()
		}
	}
	{
		{
			s.ClientSecret.SetFake()
		}
	}
	{
		{
			s.AllowedEmails = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.AllowedEmails = append(s.AllowedEmails, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UpdateRemnawaveSettingsRequestDtoPasskeySettings) SetFake() {
	{
		{
			s.Enabled = true
		}
	}
	{
		{
			s.RpId.SetFake()
		}
	}
	{
		{
			s.Origin.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateRemnawaveSettingsRequestDtoPasswordSettings) SetFake() {
	{
		{
			s.Enabled = true
		}
	}
}

// SetFake set fake values.
func (s *UpdateRemnawaveSettingsRequestDtoTgAuthSettings) SetFake() {
	{
		{
			s.Enabled = true
		}
	}
	{
		{
			s.BotToken.SetFake()
		}
	}
	{
		{
			s.AdminIds = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.AdminIds = append(s.AdminIds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UpdateSubscriptionSettingsRequestDto) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileTitle.SetFake()
		}
	}
	{
		{
			s.SupportLink.SetFake()
		}
	}
	{
		{
			s.ProfileUpdateInterval.SetFake()
		}
	}
	{
		{
			s.IsProfileWebpageUrlEnabled.SetFake()
		}
	}
	{
		{
			s.ServeJsonAtBaseSubscription.SetFake()
		}
	}
	{
		{
			s.AddUsernameToBaseSubscription.SetFake()
		}
	}
	{
		{
			s.IsShowCustomRemarks.SetFake()
		}
	}
	{
		{
			s.HappAnnounce.SetFake()
		}
	}
	{
		{
			s.HappRouting.SetFake()
		}
	}
	{
		{
			s.ExpiredUsersRemarks = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ExpiredUsersRemarks = append(s.ExpiredUsersRemarks, elem)
			}
		}
	}
	{
		{
			s.LimitedUsersRemarks = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.LimitedUsersRemarks = append(s.LimitedUsersRemarks, elem)
			}
		}
	}
	{
		{
			s.DisabledUsersRemarks = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.DisabledUsersRemarks = append(s.DisabledUsersRemarks, elem)
			}
		}
	}
	{
		{
			s.CustomResponseHeaders.SetFake()
		}
	}
	{
		{
			s.RandomizeHosts.SetFake()
		}
	}
	{
		{
			s.ResponseRules.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRules) SetFake() {
	{
		{
			s.Version.SetFake()
		}
	}
	{
		{
			s.Rules = nil
			for i := 0; i < 0; i++ {
				var elem UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem
				{
					elem.SetFake()
				}
				s.Rules = append(s.Rules, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Enabled = true
		}
	}
	{
		{
			s.Operator.SetFake()
		}
	}
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItem
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.ResponseType.SetFake()
		}
	}
	{
		{
			s.ResponseModifications.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItem) SetFake() {
	{
		{
			s.HeaderName = "string"
		}
	}
	{
		{
			s.Operator.SetFake()
		}
	}
	{
		{
			s.Value = "string"
		}
	}
	{
		{
			s.CaseSensitive = true
		}
	}
}

// SetFake set fake values.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator) SetFake() {
	*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorEQUALS
}

// SetFake set fake values.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperator) SetFake() {
	*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperatorAND
}

// SetFake set fake values.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications) SetFake() {
	{
		{
			s.Headers = nil
			for i := 0; i < 0; i++ {
				var elem UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem
				{
					elem.SetFake()
				}
				s.Headers = append(s.Headers, elem)
			}
		}
	}
	{
		{
			s.SubscriptionTemplate.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem) SetFake() {
	{
		{
			s.Key = "string"
		}
	}
	{
		{
			s.Value = "string"
		}
	}
}

// SetFake set fake values.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType) SetFake() {
	*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeXRAYJSON
}

// SetFake set fake values.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesVersion) SetFake() {
	*s = UpdateSubscriptionSettingsRequestDtoResponseRulesVersion1
}

// SetFake set fake values.
func (s *UpdateTemplateRequestDto) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{ // Keep pointer nil to prevent infinite recursion.
			s.TemplateJson = nil
		}
	}
	{
		{
			s.EncodedTemplateYaml.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateTemplateRequestDtoTemplateJson) SetFake() {
}

// SetFake set fake values.
func (s *UpdateUserRequestDto) SetFake() {
	{
		{
			s.Username.SetFake()
		}
	}
	{
		{
			s.UUID.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.ExpireAt.SetFake()
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.ExternalSquadUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateUserRequestDtoStatus) SetFake() {
	*s = UpdateUserRequestDtoStatusACTIVE
}

// SetFake set fake values.
func (s *UpdateUserRequestDtoTrafficLimitStrategy) SetFake() {
	*s = UpdateUserRequestDtoTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *UserResponse) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UserResponseResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.UsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.LifetimeUsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.SubLastUserAgent.SetFake()
		}
	}
	{
		{
			s.SubLastOpenedAt.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.OnlineAt.SetFake()
		}
	}
	{
		{
			s.SubRevokedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessUuid = uuid.New()
		}
	}
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.FirstConnectedAt.SetFake()
		}
	}
	{
		{
			s.LastTriggeredThreshold.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem UserResponseResponseActiveInternalSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.ExternalSquadUuid.SetFake()
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.LastConnectedNode.SetFake()
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UserResponseResponseActiveInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *UserResponseResponseHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *UserResponseResponseLastConnectedNode) SetFake() {
	{
		{
			s.ConnectedAt = time.Now()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *UserResponseResponseStatus) SetFake() {
	*s = UserResponseResponseStatusACTIVE
}

// SetFake set fake values.
func (s *UserResponseResponseTrafficLimitStrategy) SetFake() {
	*s = UserResponseResponseTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkAllResetUserTrafficBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersBulkActionsControllerBulkAllResetUserTrafficBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkAllResetUserTrafficBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkAllResetUserTrafficInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkDeleteUsersBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersBulkActionsControllerBulkDeleteUsersBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkDeleteUsersBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkDeleteUsersByStatusBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersBulkActionsControllerBulkDeleteUsersByStatusBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkDeleteUsersByStatusBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkDeleteUsersByStatusInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkDeleteUsersInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkResetUserTrafficBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersBulkActionsControllerBulkResetUserTrafficBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkResetUserTrafficBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkResetUserTrafficInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkRevokeUsersSubscriptionBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersBulkActionsControllerBulkRevokeUsersSubscriptionBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkRevokeUsersSubscriptionBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkRevokeUsersSubscriptionInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkUpdateAllUsersBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersBulkActionsControllerBulkUpdateAllUsersBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkUpdateAllUsersBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkUpdateAllUsersInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkUpdateUsersBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersBulkActionsControllerBulkUpdateUsersBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkUpdateUsersBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalSquadsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersBulkActionsControllerBulkUpdateUsersInternalSquadsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalSquadsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalSquadsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerCreateUserBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersControllerCreateUserBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerCreateUserBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersControllerCreateUserInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerDeleteUserBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersControllerDeleteUserBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerDeleteUserBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersControllerDeleteUserInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerDisableUserBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersControllerDisableUserBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerDisableUserBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersControllerDisableUserInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerEnableUserBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersControllerEnableUserBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerEnableUserBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersControllerEnableUserInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetAllTagsBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersControllerGetAllTagsBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetAllTagsBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersControllerGetAllTagsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetAllUsersBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersControllerGetAllUsersBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetAllUsersBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersControllerGetAllUsersInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUserAccessibleNodesBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersControllerGetUserAccessibleNodesBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUserAccessibleNodesBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersControllerGetUserAccessibleNodesInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUserByShortUuidBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersControllerGetUserByShortUuidBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUserByShortUuidBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersControllerGetUserByShortUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUserByTelegramIdBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersControllerGetUserByTelegramIdBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUserByTelegramIdBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersControllerGetUserByTelegramIdInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUserByUsernameBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersControllerGetUserByUsernameBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUserByUsernameBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersControllerGetUserByUsernameInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUserByUuidBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersControllerGetUserByUuidBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUserByUuidBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersControllerGetUserByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUserSubscriptionRequestHistoryBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersControllerGetUserSubscriptionRequestHistoryBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUserSubscriptionRequestHistoryBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersControllerGetUserSubscriptionRequestHistoryInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUsersByEmailBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersControllerGetUsersByEmailBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUsersByEmailBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersControllerGetUsersByEmailInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUsersByTagBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersControllerGetUsersByTagBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUsersByTagBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersControllerGetUsersByTagInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerResetUserTrafficBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersControllerResetUserTrafficBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerResetUserTrafficBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersControllerResetUserTrafficInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerRevokeUserSubscriptionBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersControllerRevokeUserSubscriptionBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerRevokeUserSubscriptionBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersControllerRevokeUserSubscriptionInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerUpdateUserBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersControllerUpdateUserBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerUpdateUserBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersControllerUpdateUserInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersResponse) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem UsersResponseResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersResponseResponseItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.UsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.LifetimeUsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.SubLastUserAgent.SetFake()
		}
	}
	{
		{
			s.SubLastOpenedAt.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.OnlineAt.SetFake()
		}
	}
	{
		{
			s.SubRevokedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessUuid = uuid.New()
		}
	}
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.FirstConnectedAt.SetFake()
		}
	}
	{
		{
			s.LastTriggeredThreshold.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem UsersResponseResponseItemActiveInternalSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.ExternalSquadUuid.SetFake()
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.LastConnectedNode.SetFake()
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersResponseResponseItemActiveInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *UsersResponseResponseItemHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *UsersResponseResponseItemLastConnectedNode) SetFake() {
	{
		{
			s.ConnectedAt = time.Now()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *UsersResponseResponseItemStatus) SetFake() {
	*s = UsersResponseResponseItemStatusACTIVE
}

// SetFake set fake values.
func (s *UsersResponseResponseItemTrafficLimitStrategy) SetFake() {
	*s = UsersResponseResponseItemTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *UsersStatsControllerGetUserUsageByRangeBadRequest) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem UsersStatsControllerGetUserUsageByRangeBadRequestErrorsItem
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UsersStatsControllerGetUserUsageByRangeBadRequestErrorsItem) SetFake() {
}

// SetFake set fake values.
func (s *UsersStatsControllerGetUserUsageByRangeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *VerifyPasskeyRegistrationResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *VerifyPasskeyRegistrationResponseDtoResponse) SetFake() {
	{
		{
			s.Verified = true
		}
	}
}
