// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"net/url"
	"time"

	"github.com/google/uuid"
)

// SetFake set fake values.
func (s *AddUsersToInternalSquadResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AddUsersToInternalSquadResponseDtoResponse) SetFake() {
	{
		{
			s.EventSent = true
		}
	}
}

// SetFake set fake values.
func (s *ApiTokensControllerCreateInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ApiTokensControllerDeleteInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ApiTokensControllerFindAllInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerGetStatusInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerLoginInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerLoginUnauthorized) SetFake() {
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Error.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerOauth2AuthorizeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerOauth2CallbackInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerRegisterForbidden) SetFake() {
	{
		{
			s.StatusCode.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Error.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerRegisterInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AuthControllerTelegramCallbackInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkAllResetTrafficUsersResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkAllResetTrafficUsersResponseDtoResponse) SetFake() {
	{
		{
			s.EventSent = true
		}
	}
}

// SetFake set fake values.
func (s *BulkAllUpdateUsersRequestDto) SetFake() {
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.ExpireAt.SetFake()
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkAllUpdateUsersRequestDtoStatus) SetFake() {
	*s = BulkAllUpdateUsersRequestDtoStatusACTIVE
}

// SetFake set fake values.
func (s *BulkAllUpdateUsersRequestDtoTrafficLimitStrategy) SetFake() {
	*s = BulkAllUpdateUsersRequestDtoTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *BulkAllUpdateUsersResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkAllUpdateUsersResponseDtoResponse) SetFake() {
	{
		{
			s.EventSent = true
		}
	}
}

// SetFake set fake values.
func (s *BulkDeleteHostsRequestDto) SetFake() {
	{
		{
			s.Uuids = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Uuids = append(s.Uuids, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *BulkDeleteHostsResponseDto) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem BulkDeleteHostsResponseDtoResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *BulkDeleteHostsResponseDtoResponseItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.Remark = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port = int(0)
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Sni.SetFake()
		}
	}
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.Alpn.SetFake()
		}
	}
	{
		{
			s.Fingerprint.SetFake()
		}
	}
	{
		{
			s.IsDisabled.SetFake()
		}
	}
	{
		{
			s.SecurityLayer.SetFake()
		}
	}
	{
		{
			s.XHttpExtraParams = []byte("null")
		}
	}
	{
		{
			s.MuxParams = []byte("null")
		}
	}
	{
		{
			s.SockoptParams = []byte("null")
		}
	}
	{
		{
			s.Inbound.SetFake()
		}
	}
	{
		{
			s.ServerDescription.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.IsHidden.SetFake()
		}
	}
	{
		{
			s.OverrideSniFromAddress.SetFake()
		}
	}
	{
		{
			s.VlessRouteId.SetFake()
		}
	}
	{
		{
			s.AllowInsecure.SetFake()
		}
	}
	{
		{
			s.ShuffleHost = true
		}
	}
	{
		{
			s.MihomoX25519 = true
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *BulkDeleteHostsResponseDtoResponseItemInbound) SetFake() {
	{
		{
			s.ConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ConfigProfileInboundUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkDeleteHostsResponseDtoResponseItemSecurityLayer) SetFake() {
	*s = BulkDeleteHostsResponseDtoResponseItemSecurityLayerDEFAULT
}

// SetFake set fake values.
func (s *BulkDeleteUsersByStatusRequestDto) SetFake() {
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkDeleteUsersByStatusRequestDtoStatus) SetFake() {
	*s = BulkDeleteUsersByStatusRequestDtoStatusACTIVE
}

// SetFake set fake values.
func (s *BulkDeleteUsersByStatusResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkDeleteUsersByStatusResponseDtoResponse) SetFake() {
	{
		{
			s.AffectedRows = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *BulkDeleteUsersRequestDto) SetFake() {
	{
		{
			s.Uuids = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Uuids = append(s.Uuids, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *BulkDeleteUsersResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkDeleteUsersResponseDtoResponse) SetFake() {
	{
		{
			s.AffectedRows = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *BulkDisableHostsRequestDto) SetFake() {
	{
		{
			s.Uuids = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Uuids = append(s.Uuids, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *BulkDisableHostsResponseDto) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem BulkDisableHostsResponseDtoResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *BulkDisableHostsResponseDtoResponseItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.Remark = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port = int(0)
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Sni.SetFake()
		}
	}
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.Alpn.SetFake()
		}
	}
	{
		{
			s.Fingerprint.SetFake()
		}
	}
	{
		{
			s.IsDisabled.SetFake()
		}
	}
	{
		{
			s.SecurityLayer.SetFake()
		}
	}
	{
		{
			s.XHttpExtraParams = []byte("null")
		}
	}
	{
		{
			s.MuxParams = []byte("null")
		}
	}
	{
		{
			s.SockoptParams = []byte("null")
		}
	}
	{
		{
			s.Inbound.SetFake()
		}
	}
	{
		{
			s.ServerDescription.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.IsHidden.SetFake()
		}
	}
	{
		{
			s.OverrideSniFromAddress.SetFake()
		}
	}
	{
		{
			s.VlessRouteId.SetFake()
		}
	}
	{
		{
			s.AllowInsecure.SetFake()
		}
	}
	{
		{
			s.ShuffleHost = true
		}
	}
	{
		{
			s.MihomoX25519 = true
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *BulkDisableHostsResponseDtoResponseItemInbound) SetFake() {
	{
		{
			s.ConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ConfigProfileInboundUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkDisableHostsResponseDtoResponseItemSecurityLayer) SetFake() {
	*s = BulkDisableHostsResponseDtoResponseItemSecurityLayerDEFAULT
}

// SetFake set fake values.
func (s *BulkEnableHostsRequestDto) SetFake() {
	{
		{
			s.Uuids = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Uuids = append(s.Uuids, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *BulkEnableHostsResponseDto) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem BulkEnableHostsResponseDtoResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *BulkEnableHostsResponseDtoResponseItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.Remark = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port = int(0)
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Sni.SetFake()
		}
	}
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.Alpn.SetFake()
		}
	}
	{
		{
			s.Fingerprint.SetFake()
		}
	}
	{
		{
			s.IsDisabled.SetFake()
		}
	}
	{
		{
			s.SecurityLayer.SetFake()
		}
	}
	{
		{
			s.XHttpExtraParams = []byte("null")
		}
	}
	{
		{
			s.MuxParams = []byte("null")
		}
	}
	{
		{
			s.SockoptParams = []byte("null")
		}
	}
	{
		{
			s.Inbound.SetFake()
		}
	}
	{
		{
			s.ServerDescription.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.IsHidden.SetFake()
		}
	}
	{
		{
			s.OverrideSniFromAddress.SetFake()
		}
	}
	{
		{
			s.VlessRouteId.SetFake()
		}
	}
	{
		{
			s.AllowInsecure.SetFake()
		}
	}
	{
		{
			s.ShuffleHost = true
		}
	}
	{
		{
			s.MihomoX25519 = true
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *BulkEnableHostsResponseDtoResponseItemInbound) SetFake() {
	{
		{
			s.ConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ConfigProfileInboundUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkEnableHostsResponseDtoResponseItemSecurityLayer) SetFake() {
	*s = BulkEnableHostsResponseDtoResponseItemSecurityLayerDEFAULT
}

// SetFake set fake values.
func (s *BulkResetTrafficUsersRequestDto) SetFake() {
	{
		{
			s.Uuids = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Uuids = append(s.Uuids, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *BulkResetTrafficUsersResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkResetTrafficUsersResponseDtoResponse) SetFake() {
	{
		{
			s.AffectedRows = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *BulkRevokeUsersSubscriptionRequestDto) SetFake() {
	{
		{
			s.Uuids = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Uuids = append(s.Uuids, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *BulkRevokeUsersSubscriptionResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkRevokeUsersSubscriptionResponseDtoResponse) SetFake() {
	{
		{
			s.AffectedRows = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *BulkUpdateUsersRequestDto) SetFake() {
	{
		{
			s.Uuids = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Uuids = append(s.Uuids, elem)
			}
		}
	}
	{
		{
			s.Fields.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkUpdateUsersRequestDtoFields) SetFake() {
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.ExpireAt.SetFake()
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkUpdateUsersRequestDtoFieldsStatus) SetFake() {
	*s = BulkUpdateUsersRequestDtoFieldsStatusACTIVE
}

// SetFake set fake values.
func (s *BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) SetFake() {
	*s = BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *BulkUpdateUsersResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkUpdateUsersResponseDtoResponse) SetFake() {
	{
		{
			s.AffectedRows = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *BulkUpdateUsersSquadsRequestDto) SetFake() {
	{
		{
			s.Uuids = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Uuids = append(s.Uuids, elem)
			}
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *BulkUpdateUsersSquadsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BulkUpdateUsersSquadsResponseDtoResponse) SetFake() {
	{
		{
			s.AffectedRows = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerCreateConfigProfileInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerDeleteConfigProfileByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerGetAllInboundsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerGetConfigProfileByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerGetConfigProfilesInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerGetInboundsByProfileUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ConfigProfileControllerUpdateConfigProfileInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateApiTokenRequestDto) SetFake() {
	{
		{
			s.TokenName = "string"
		}
	}
}

// SetFake set fake values.
func (s *CreateApiTokenResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateApiTokenResponseDtoResponse) SetFake() {
	{
		{
			s.Token = "string"
		}
	}
	{
		{
			s.UUID = "string"
		}
	}
}

// SetFake set fake values.
func (s *CreateConfigProfileRequestDto) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Config.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateConfigProfileRequestDtoConfig) SetFake() {
}

// SetFake set fake values.
func (s *CreateConfigProfileResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateConfigProfileResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Config = []byte("null")
		}
	}
	{
		{
			s.Inbounds = nil
			for i := 0; i < 0; i++ {
				var elem CreateConfigProfileResponseDtoResponseInboundsItem
				{
					elem.SetFake()
				}
				s.Inbounds = append(s.Inbounds, elem)
			}
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem CreateConfigProfileResponseDtoResponseNodesItem
				{
					elem.SetFake()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *CreateConfigProfileResponseDtoResponseInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *CreateConfigProfileResponseDtoResponseNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *CreateHostRequestDto) SetFake() {
	{
		{
			s.Inbound.SetFake()
		}
	}
	{
		{
			s.Remark = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port = int(0)
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Sni.SetFake()
		}
	}
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.Alpn.SetFake()
		}
	}
	{
		{
			s.Fingerprint.SetFake()
		}
	}
	{
		{
			s.IsDisabled.SetFake()
		}
	}
	{
		{
			s.SecurityLayer.SetFake()
		}
	}
	{
		{
			s.XHttpExtraParams = []byte("null")
		}
	}
	{
		{
			s.MuxParams = []byte("null")
		}
	}
	{
		{
			s.SockoptParams = []byte("null")
		}
	}
	{
		{
			s.ServerDescription.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.IsHidden.SetFake()
		}
	}
	{
		{
			s.OverrideSniFromAddress.SetFake()
		}
	}
	{
		{
			s.AllowInsecure.SetFake()
		}
	}
	{
		{
			s.VlessRouteId.SetFake()
		}
	}
	{
		{
			s.ShuffleHost.SetFake()
		}
	}
	{
		{
			s.MihomoX25519.SetFake()
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *CreateHostRequestDtoAlpn) SetFake() {
	*s = CreateHostRequestDtoAlpnH3
}

// SetFake set fake values.
func (s *CreateHostRequestDtoFingerprint) SetFake() {
	*s = CreateHostRequestDtoFingerprintChrome
}

// SetFake set fake values.
func (s *CreateHostRequestDtoInbound) SetFake() {
	{
		{
			s.ConfigProfileUuid = uuid.New()
		}
	}
	{
		{
			s.ConfigProfileInboundUuid = uuid.New()
		}
	}
}

// SetFake set fake values.
func (s *CreateHostRequestDtoSecurityLayer) SetFake() {
	*s = CreateHostRequestDtoSecurityLayerDEFAULT
}

// SetFake set fake values.
func (s *CreateHostResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateHostResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.Remark = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port = int(0)
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Sni.SetFake()
		}
	}
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.Alpn.SetFake()
		}
	}
	{
		{
			s.Fingerprint.SetFake()
		}
	}
	{
		{
			s.IsDisabled.SetFake()
		}
	}
	{
		{
			s.SecurityLayer.SetFake()
		}
	}
	{
		{
			s.XHttpExtraParams = []byte("null")
		}
	}
	{
		{
			s.MuxParams = []byte("null")
		}
	}
	{
		{
			s.SockoptParams = []byte("null")
		}
	}
	{
		{
			s.Inbound.SetFake()
		}
	}
	{
		{
			s.ServerDescription.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.IsHidden.SetFake()
		}
	}
	{
		{
			s.OverrideSniFromAddress.SetFake()
		}
	}
	{
		{
			s.VlessRouteId.SetFake()
		}
	}
	{
		{
			s.AllowInsecure.SetFake()
		}
	}
	{
		{
			s.ShuffleHost = true
		}
	}
	{
		{
			s.MihomoX25519 = true
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *CreateHostResponseDtoResponseInbound) SetFake() {
	{
		{
			s.ConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ConfigProfileInboundUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateHostResponseDtoResponseSecurityLayer) SetFake() {
	*s = CreateHostResponseDtoResponseSecurityLayerDEFAULT
}

// SetFake set fake values.
func (s *CreateInfraBillingHistoryRecordRequestDto) SetFake() {
	{
		{
			s.ProviderUuid = uuid.New()
		}
	}
	{
		{
			s.Amount = float64(0)
		}
	}
	{
		{
			s.BilledAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *CreateInfraBillingHistoryRecordResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateInfraBillingHistoryRecordResponseDtoResponse) SetFake() {
	{
		{
			s.Records = nil
			for i := 0; i < 0; i++ {
				var elem CreateInfraBillingHistoryRecordResponseDtoResponseRecordsItem
				{
					elem.SetFake()
				}
				s.Records = append(s.Records, elem)
			}
		}
	}
	{
		{
			s.Total = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *CreateInfraBillingHistoryRecordResponseDtoResponseRecordsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProviderUuid = uuid.New()
		}
	}
	{
		{
			s.Amount = float64(0)
		}
	}
	{
		{
			s.BilledAt = time.Now()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateInfraBillingHistoryRecordResponseDtoResponseRecordsItemProvider) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateInfraBillingNodeRequestDto) SetFake() {
	{
		{
			s.ProviderUuid = uuid.New()
		}
	}
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.NextBillingAt.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateInfraBillingNodeResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateInfraBillingNodeResponseDtoResponse) SetFake() {
	{
		{
			s.TotalBillingNodes = float64(0)
		}
	}
	{
		{
			s.BillingNodes = nil
			for i := 0; i < 0; i++ {
				var elem CreateInfraBillingNodeResponseDtoResponseBillingNodesItem
				{
					elem.SetFake()
				}
				s.BillingNodes = append(s.BillingNodes, elem)
			}
		}
	}
	{
		{
			s.AvailableBillingNodes = nil
			for i := 0; i < 0; i++ {
				var elem CreateInfraBillingNodeResponseDtoResponseAvailableBillingNodesItem
				{
					elem.SetFake()
				}
				s.AvailableBillingNodes = append(s.AvailableBillingNodes, elem)
			}
		}
	}
	{
		{
			s.TotalAvailableBillingNodes = float64(0)
		}
	}
	{
		{
			s.Stats.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateInfraBillingNodeResponseDtoResponseAvailableBillingNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *CreateInfraBillingNodeResponseDtoResponseBillingNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.ProviderUuid = uuid.New()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
	{
		{
			s.Node.SetFake()
		}
	}
	{
		{
			s.NextBillingAt = time.Now()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *CreateInfraBillingNodeResponseDtoResponseBillingNodesItemNode) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *CreateInfraBillingNodeResponseDtoResponseBillingNodesItemProvider) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateInfraBillingNodeResponseDtoResponseStats) SetFake() {
	{
		{
			s.UpcomingNodesCount = float64(0)
		}
	}
	{
		{
			s.CurrentMonthPayments = float64(0)
		}
	}
	{
		{
			s.TotalSpent = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *CreateInfraProviderRequestDto) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateInfraProviderResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateInfraProviderResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.BillingHistory.SetFake()
		}
	}
	{
		{
			s.BillingNodes = nil
			for i := 0; i < 0; i++ {
				var elem CreateInfraProviderResponseDtoResponseBillingNodesItem
				{
					elem.SetFake()
				}
				s.BillingNodes = append(s.BillingNodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *CreateInfraProviderResponseDtoResponseBillingHistory) SetFake() {
	{
		{
			s.TotalAmount = float64(0)
		}
	}
	{
		{
			s.TotalBills = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *CreateInfraProviderResponseDtoResponseBillingNodesItem) SetFake() {
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *CreateInternalSquadRequestDto) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Inbounds = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Inbounds = append(s.Inbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *CreateInternalSquadResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateInternalSquadResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Info.SetFake()
		}
	}
	{
		{
			s.Inbounds = nil
			for i := 0; i < 0; i++ {
				var elem CreateInternalSquadResponseDtoResponseInboundsItem
				{
					elem.SetFake()
				}
				s.Inbounds = append(s.Inbounds, elem)
			}
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *CreateInternalSquadResponseDtoResponseInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *CreateInternalSquadResponseDtoResponseInfo) SetFake() {
	{
		{
			s.MembersCount = float64(0)
		}
	}
	{
		{
			s.InboundsCount = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *CreateNodeRequestDto) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.IsTrafficTrackingActive.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.NotifyPercent.SetFake()
		}
	}
	{
		{
			s.TrafficResetDay.SetFake()
		}
	}
	{
		{
			s.CountryCode.SetFake()
		}
	}
	{
		{
			s.ConsumptionMultiplier.SetFake()
		}
	}
	{
		{
			s.ConfigProfile.SetFake()
		}
	}
	{
		{
			s.ProviderUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateNodeRequestDtoConfigProfile) SetFake() {
	{
		{
			s.ActiveConfigProfileUuid = uuid.New()
		}
	}
	{
		{
			s.ActiveInbounds = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.ActiveInbounds = append(s.ActiveInbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *CreateNodeResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateNodeResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.IsConnected = true
		}
	}
	{
		{
			s.IsDisabled = true
		}
	}
	{
		{
			s.IsConnecting = true
		}
	}
	{
		{
			s.IsNodeOnline = true
		}
	}
	{
		{
			s.IsXrayRunning = true
		}
	}
	{
		{
			s.LastStatusChange.SetFake()
		}
	}
	{
		{
			s.LastStatusMessage.SetFake()
		}
	}
	{
		{
			s.XrayVersion.SetFake()
		}
	}
	{
		{
			s.NodeVersion.SetFake()
		}
	}
	{
		{
			s.XrayUptime = "string"
		}
	}
	{
		{
			s.IsTrafficTrackingActive = true
		}
	}
	{
		{
			s.TrafficResetDay.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficUsedBytes.SetFake()
		}
	}
	{
		{
			s.NotifyPercent.SetFake()
		}
	}
	{
		{
			s.UsersOnline.SetFake()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
	{
		{
			s.ConsumptionMultiplier = float64(0)
		}
	}
	{
		{
			s.CpuCount.SetFake()
		}
	}
	{
		{
			s.CpuModel.SetFake()
		}
	}
	{
		{
			s.TotalRam.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ConfigProfile.SetFake()
		}
	}
	{
		{
			s.ProviderUuid.SetFake()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateNodeResponseDtoResponseConfigProfile) SetFake() {
	{
		{
			s.ActiveConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ActiveInbounds = nil
			for i := 0; i < 0; i++ {
				var elem CreateNodeResponseDtoResponseConfigProfileActiveInboundsItem
				{
					elem.SetFake()
				}
				s.ActiveInbounds = append(s.ActiveInbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *CreateNodeResponseDtoResponseConfigProfileActiveInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *CreateNodeResponseDtoResponseProvider) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *CreateUserHwidDeviceRequestDto) SetFake() {
	{
		{
			s.Hwid = "string"
		}
	}
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.Platform.SetFake()
		}
	}
	{
		{
			s.OsVersion.SetFake()
		}
	}
	{
		{
			s.DeviceModel.SetFake()
		}
	}
	{
		{
			s.UserAgent.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateUserHwidDeviceResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateUserHwidDeviceResponseDtoResponse) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Devices = nil
			for i := 0; i < 0; i++ {
				var elem CreateUserHwidDeviceResponseDtoResponseDevicesItem
				{
					elem.SetFake()
				}
				s.Devices = append(s.Devices, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *CreateUserHwidDeviceResponseDtoResponseDevicesItem) SetFake() {
	{
		{
			s.Hwid = "string"
		}
	}
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.Platform.SetFake()
		}
	}
	{
		{
			s.OsVersion.SetFake()
		}
	}
	{
		{
			s.DeviceModel.SetFake()
		}
	}
	{
		{
			s.UserAgent.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *CreateUserRequestDto) SetFake() {
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.ShortUuid.SetFake()
		}
	}
	{
		{
			s.TrojanPassword.SetFake()
		}
	}
	{
		{
			s.VlessUuid.SetFake()
		}
	}
	{
		{
			s.SsPassword.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.CreatedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.UUID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateUserRequestDtoStatus) SetFake() {
	*s = CreateUserRequestDtoStatusACTIVE
}

// SetFake set fake values.
func (s *CreateUserRequestDtoTrafficLimitStrategy) SetFake() {
	*s = CreateUserRequestDtoTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *CreateUserResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateUserResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.UsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.LifetimeUsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.SubLastUserAgent.SetFake()
		}
	}
	{
		{
			s.SubLastOpenedAt.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.OnlineAt.SetFake()
		}
	}
	{
		{
			s.SubRevokedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessUuid = uuid.New()
		}
	}
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.FirstConnectedAt.SetFake()
		}
	}
	{
		{
			s.LastTriggeredThreshold.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem CreateUserResponseDtoResponseActiveInternalSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.LastConnectedNode.SetFake()
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateUserResponseDtoResponseActiveInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *CreateUserResponseDtoResponseHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *CreateUserResponseDtoResponseLastConnectedNode) SetFake() {
	{
		{
			s.ConnectedAt = time.Now()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *CreateUserResponseDtoResponseStatus) SetFake() {
	*s = CreateUserResponseDtoResponseStatusACTIVE
}

// SetFake set fake values.
func (s *CreateUserResponseDtoResponseTrafficLimitStrategy) SetFake() {
	*s = CreateUserResponseDtoResponseTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *DeleteAllUserHwidDevicesRequestDto) SetFake() {
	{
		{
			s.UserUuid = uuid.New()
		}
	}
}

// SetFake set fake values.
func (s *DeleteAllUserHwidDevicesResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DeleteAllUserHwidDevicesResponseDtoResponse) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Devices = nil
			for i := 0; i < 0; i++ {
				var elem DeleteAllUserHwidDevicesResponseDtoResponseDevicesItem
				{
					elem.SetFake()
				}
				s.Devices = append(s.Devices, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *DeleteAllUserHwidDevicesResponseDtoResponseDevicesItem) SetFake() {
	{
		{
			s.Hwid = "string"
		}
	}
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.Platform.SetFake()
		}
	}
	{
		{
			s.OsVersion.SetFake()
		}
	}
	{
		{
			s.DeviceModel.SetFake()
		}
	}
	{
		{
			s.UserAgent.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *DeleteApiTokenResponseDto) SetFake() {
	{
		{
			s.Response = true
		}
	}
}

// SetFake set fake values.
func (s *DeleteConfigProfileResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DeleteConfigProfileResponseDtoResponse) SetFake() {
	{
		{
			s.IsDeleted = true
		}
	}
}

// SetFake set fake values.
func (s *DeleteHostResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DeleteHostResponseDtoResponse) SetFake() {
	{
		{
			s.IsDeleted = true
		}
	}
}

// SetFake set fake values.
func (s *DeleteInfraBillingHistoryRecordByUuidResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DeleteInfraBillingHistoryRecordByUuidResponseDtoResponse) SetFake() {
	{
		{
			s.Records = nil
			for i := 0; i < 0; i++ {
				var elem DeleteInfraBillingHistoryRecordByUuidResponseDtoResponseRecordsItem
				{
					elem.SetFake()
				}
				s.Records = append(s.Records, elem)
			}
		}
	}
	{
		{
			s.Total = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *DeleteInfraBillingHistoryRecordByUuidResponseDtoResponseRecordsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProviderUuid = uuid.New()
		}
	}
	{
		{
			s.Amount = float64(0)
		}
	}
	{
		{
			s.BilledAt = time.Now()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DeleteInfraBillingHistoryRecordByUuidResponseDtoResponseRecordsItemProvider) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DeleteInfraBillingNodeByUuidResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DeleteInfraBillingNodeByUuidResponseDtoResponse) SetFake() {
	{
		{
			s.TotalBillingNodes = float64(0)
		}
	}
	{
		{
			s.BillingNodes = nil
			for i := 0; i < 0; i++ {
				var elem DeleteInfraBillingNodeByUuidResponseDtoResponseBillingNodesItem
				{
					elem.SetFake()
				}
				s.BillingNodes = append(s.BillingNodes, elem)
			}
		}
	}
	{
		{
			s.AvailableBillingNodes = nil
			for i := 0; i < 0; i++ {
				var elem DeleteInfraBillingNodeByUuidResponseDtoResponseAvailableBillingNodesItem
				{
					elem.SetFake()
				}
				s.AvailableBillingNodes = append(s.AvailableBillingNodes, elem)
			}
		}
	}
	{
		{
			s.TotalAvailableBillingNodes = float64(0)
		}
	}
	{
		{
			s.Stats.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DeleteInfraBillingNodeByUuidResponseDtoResponseAvailableBillingNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *DeleteInfraBillingNodeByUuidResponseDtoResponseBillingNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.ProviderUuid = uuid.New()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
	{
		{
			s.Node.SetFake()
		}
	}
	{
		{
			s.NextBillingAt = time.Now()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *DeleteInfraBillingNodeByUuidResponseDtoResponseBillingNodesItemNode) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *DeleteInfraBillingNodeByUuidResponseDtoResponseBillingNodesItemProvider) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DeleteInfraBillingNodeByUuidResponseDtoResponseStats) SetFake() {
	{
		{
			s.UpcomingNodesCount = float64(0)
		}
	}
	{
		{
			s.CurrentMonthPayments = float64(0)
		}
	}
	{
		{
			s.TotalSpent = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *DeleteInfraProviderByUuidResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DeleteInfraProviderByUuidResponseDtoResponse) SetFake() {
	{
		{
			s.IsDeleted = true
		}
	}
}

// SetFake set fake values.
func (s *DeleteInternalSquadResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DeleteInternalSquadResponseDtoResponse) SetFake() {
	{
		{
			s.IsDeleted = true
		}
	}
}

// SetFake set fake values.
func (s *DeleteNodeResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DeleteNodeResponseDtoResponse) SetFake() {
	{
		{
			s.IsDeleted = true
		}
	}
}

// SetFake set fake values.
func (s *DeleteUserHwidDeviceRequestDto) SetFake() {
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.Hwid = "string"
		}
	}
}

// SetFake set fake values.
func (s *DeleteUserHwidDeviceResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DeleteUserHwidDeviceResponseDtoResponse) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Devices = nil
			for i := 0; i < 0; i++ {
				var elem DeleteUserHwidDeviceResponseDtoResponseDevicesItem
				{
					elem.SetFake()
				}
				s.Devices = append(s.Devices, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *DeleteUserHwidDeviceResponseDtoResponseDevicesItem) SetFake() {
	{
		{
			s.Hwid = "string"
		}
	}
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.Platform.SetFake()
		}
	}
	{
		{
			s.OsVersion.SetFake()
		}
	}
	{
		{
			s.DeviceModel.SetFake()
		}
	}
	{
		{
			s.UserAgent.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *DeleteUserResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DeleteUserResponseDtoResponse) SetFake() {
	{
		{
			s.IsDeleted = true
		}
	}
}

// SetFake set fake values.
func (s *DisableNodeResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DisableNodeResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.IsConnected = true
		}
	}
	{
		{
			s.IsDisabled = true
		}
	}
	{
		{
			s.IsConnecting = true
		}
	}
	{
		{
			s.IsNodeOnline = true
		}
	}
	{
		{
			s.IsXrayRunning = true
		}
	}
	{
		{
			s.LastStatusChange.SetFake()
		}
	}
	{
		{
			s.LastStatusMessage.SetFake()
		}
	}
	{
		{
			s.XrayVersion.SetFake()
		}
	}
	{
		{
			s.NodeVersion.SetFake()
		}
	}
	{
		{
			s.XrayUptime = "string"
		}
	}
	{
		{
			s.IsTrafficTrackingActive = true
		}
	}
	{
		{
			s.TrafficResetDay.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficUsedBytes.SetFake()
		}
	}
	{
		{
			s.NotifyPercent.SetFake()
		}
	}
	{
		{
			s.UsersOnline.SetFake()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
	{
		{
			s.ConsumptionMultiplier = float64(0)
		}
	}
	{
		{
			s.CpuCount.SetFake()
		}
	}
	{
		{
			s.CpuModel.SetFake()
		}
	}
	{
		{
			s.TotalRam.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ConfigProfile.SetFake()
		}
	}
	{
		{
			s.ProviderUuid.SetFake()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DisableNodeResponseDtoResponseConfigProfile) SetFake() {
	{
		{
			s.ActiveConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ActiveInbounds = nil
			for i := 0; i < 0; i++ {
				var elem DisableNodeResponseDtoResponseConfigProfileActiveInboundsItem
				{
					elem.SetFake()
				}
				s.ActiveInbounds = append(s.ActiveInbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *DisableNodeResponseDtoResponseConfigProfileActiveInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *DisableNodeResponseDtoResponseProvider) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *DisableUserResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DisableUserResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.UsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.LifetimeUsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.SubLastUserAgent.SetFake()
		}
	}
	{
		{
			s.SubLastOpenedAt.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.OnlineAt.SetFake()
		}
	}
	{
		{
			s.SubRevokedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessUuid = uuid.New()
		}
	}
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.FirstConnectedAt.SetFake()
		}
	}
	{
		{
			s.LastTriggeredThreshold.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem DisableUserResponseDtoResponseActiveInternalSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.LastConnectedNode.SetFake()
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DisableUserResponseDtoResponseActiveInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *DisableUserResponseDtoResponseHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *DisableUserResponseDtoResponseLastConnectedNode) SetFake() {
	{
		{
			s.ConnectedAt = time.Now()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *DisableUserResponseDtoResponseStatus) SetFake() {
	*s = DisableUserResponseDtoResponseStatusACTIVE
}

// SetFake set fake values.
func (s *DisableUserResponseDtoResponseTrafficLimitStrategy) SetFake() {
	*s = DisableUserResponseDtoResponseTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *EnableNodeResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *EnableNodeResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.IsConnected = true
		}
	}
	{
		{
			s.IsDisabled = true
		}
	}
	{
		{
			s.IsConnecting = true
		}
	}
	{
		{
			s.IsNodeOnline = true
		}
	}
	{
		{
			s.IsXrayRunning = true
		}
	}
	{
		{
			s.LastStatusChange.SetFake()
		}
	}
	{
		{
			s.LastStatusMessage.SetFake()
		}
	}
	{
		{
			s.XrayVersion.SetFake()
		}
	}
	{
		{
			s.NodeVersion.SetFake()
		}
	}
	{
		{
			s.XrayUptime = "string"
		}
	}
	{
		{
			s.IsTrafficTrackingActive = true
		}
	}
	{
		{
			s.TrafficResetDay.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficUsedBytes.SetFake()
		}
	}
	{
		{
			s.NotifyPercent.SetFake()
		}
	}
	{
		{
			s.UsersOnline.SetFake()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
	{
		{
			s.ConsumptionMultiplier = float64(0)
		}
	}
	{
		{
			s.CpuCount.SetFake()
		}
	}
	{
		{
			s.CpuModel.SetFake()
		}
	}
	{
		{
			s.TotalRam.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ConfigProfile.SetFake()
		}
	}
	{
		{
			s.ProviderUuid.SetFake()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *EnableNodeResponseDtoResponseConfigProfile) SetFake() {
	{
		{
			s.ActiveConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ActiveInbounds = nil
			for i := 0; i < 0; i++ {
				var elem EnableNodeResponseDtoResponseConfigProfileActiveInboundsItem
				{
					elem.SetFake()
				}
				s.ActiveInbounds = append(s.ActiveInbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *EnableNodeResponseDtoResponseConfigProfileActiveInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *EnableNodeResponseDtoResponseProvider) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *EnableUserResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *EnableUserResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.UsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.LifetimeUsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.SubLastUserAgent.SetFake()
		}
	}
	{
		{
			s.SubLastOpenedAt.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.OnlineAt.SetFake()
		}
	}
	{
		{
			s.SubRevokedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessUuid = uuid.New()
		}
	}
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.FirstConnectedAt.SetFake()
		}
	}
	{
		{
			s.LastTriggeredThreshold.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem EnableUserResponseDtoResponseActiveInternalSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.LastConnectedNode.SetFake()
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *EnableUserResponseDtoResponseActiveInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *EnableUserResponseDtoResponseHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *EnableUserResponseDtoResponseLastConnectedNode) SetFake() {
	{
		{
			s.ConnectedAt = time.Now()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *EnableUserResponseDtoResponseStatus) SetFake() {
	*s = EnableUserResponseDtoResponseStatusACTIVE
}

// SetFake set fake values.
func (s *EnableUserResponseDtoResponseTrafficLimitStrategy) SetFake() {
	*s = EnableUserResponseDtoResponseTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *EncryptHappCryptoLinkRequestDto) SetFake() {
	{
		{
			s.LinkToEncrypt = url.URL{Scheme: "https", Host: "github.com", Path: "/ogen-go/ogen"}
		}
	}
}

// SetFake set fake values.
func (s *EncryptHappCryptoLinkResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *EncryptHappCryptoLinkResponseDtoResponse) SetFake() {
	{
		{
			s.EncryptedLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *FindAllApiTokensResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *FindAllApiTokensResponseDtoResponse) SetFake() {
	{
		{
			s.ApiKeys = nil
			for i := 0; i < 0; i++ {
				var elem FindAllApiTokensResponseDtoResponseApiKeysItem
				{
					elem.SetFake()
				}
				s.ApiKeys = append(s.ApiKeys, elem)
			}
		}
	}
	{
		{
			s.Docs.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Token = "string"
		}
	}
	{
		{
			s.TokenName = "string"
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *FindAllApiTokensResponseDtoResponseDocs) SetFake() {
	{
		{
			s.IsDocsEnabled = true
		}
	}
	{
		{
			s.ScalarPath.SetFake()
		}
	}
	{
		{
			s.SwaggerPath.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GenerateX25519ResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GenerateX25519ResponseDtoResponse) SetFake() {
	{
		{
			s.Keypairs = nil
			for i := 0; i < 0; i++ {
				var elem GenerateX25519ResponseDtoResponseKeypairsItem
				{
					elem.SetFake()
				}
				s.Keypairs = append(s.Keypairs, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GenerateX25519ResponseDtoResponseKeypairsItem) SetFake() {
	{
		{
			s.PublicKey = "string"
		}
	}
	{
		{
			s.PrivateKey = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetAllHostTagsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetAllHostTagsResponseDtoResponse) SetFake() {
	{
		{
			s.Tags = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Tags = append(s.Tags, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetAllHostsResponseDto) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem GetAllHostsResponseDtoResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetAllHostsResponseDtoResponseItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.Remark = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port = int(0)
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Sni.SetFake()
		}
	}
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.Alpn.SetFake()
		}
	}
	{
		{
			s.Fingerprint.SetFake()
		}
	}
	{
		{
			s.IsDisabled.SetFake()
		}
	}
	{
		{
			s.SecurityLayer.SetFake()
		}
	}
	{
		{
			s.XHttpExtraParams = []byte("null")
		}
	}
	{
		{
			s.MuxParams = []byte("null")
		}
	}
	{
		{
			s.SockoptParams = []byte("null")
		}
	}
	{
		{
			s.Inbound.SetFake()
		}
	}
	{
		{
			s.ServerDescription.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.IsHidden.SetFake()
		}
	}
	{
		{
			s.OverrideSniFromAddress.SetFake()
		}
	}
	{
		{
			s.VlessRouteId.SetFake()
		}
	}
	{
		{
			s.AllowInsecure.SetFake()
		}
	}
	{
		{
			s.ShuffleHost = true
		}
	}
	{
		{
			s.MihomoX25519 = true
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetAllHostsResponseDtoResponseItemInbound) SetFake() {
	{
		{
			s.ConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ConfigProfileInboundUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetAllHostsResponseDtoResponseItemSecurityLayer) SetFake() {
	*s = GetAllHostsResponseDtoResponseItemSecurityLayerDEFAULT
}

// SetFake set fake values.
func (s *GetAllHwidDevicesResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetAllHwidDevicesResponseDtoResponse) SetFake() {
	{
		{
			s.Devices = nil
			for i := 0; i < 0; i++ {
				var elem GetAllHwidDevicesResponseDtoResponseDevicesItem
				{
					elem.SetFake()
				}
				s.Devices = append(s.Devices, elem)
			}
		}
	}
	{
		{
			s.Total = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetAllHwidDevicesResponseDtoResponseDevicesItem) SetFake() {
	{
		{
			s.Hwid = "string"
		}
	}
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.Platform.SetFake()
		}
	}
	{
		{
			s.OsVersion.SetFake()
		}
	}
	{
		{
			s.DeviceModel.SetFake()
		}
	}
	{
		{
			s.UserAgent.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *GetAllInboundsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetAllInboundsResponseDtoResponse) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Inbounds = nil
			for i := 0; i < 0; i++ {
				var elem GetAllInboundsResponseDtoResponseInboundsItem
				{
					elem.SetFake()
				}
				s.Inbounds = append(s.Inbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetAllInboundsResponseDtoResponseInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
	{
		{
			s.ActiveSquads = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.ActiveSquads = append(s.ActiveSquads, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetAllNodesResponseDto) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem GetAllNodesResponseDtoResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetAllNodesResponseDtoResponseItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.IsConnected = true
		}
	}
	{
		{
			s.IsDisabled = true
		}
	}
	{
		{
			s.IsConnecting = true
		}
	}
	{
		{
			s.IsNodeOnline = true
		}
	}
	{
		{
			s.IsXrayRunning = true
		}
	}
	{
		{
			s.LastStatusChange.SetFake()
		}
	}
	{
		{
			s.LastStatusMessage.SetFake()
		}
	}
	{
		{
			s.XrayVersion.SetFake()
		}
	}
	{
		{
			s.NodeVersion.SetFake()
		}
	}
	{
		{
			s.XrayUptime = "string"
		}
	}
	{
		{
			s.IsTrafficTrackingActive = true
		}
	}
	{
		{
			s.TrafficResetDay.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficUsedBytes.SetFake()
		}
	}
	{
		{
			s.NotifyPercent.SetFake()
		}
	}
	{
		{
			s.UsersOnline.SetFake()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
	{
		{
			s.ConsumptionMultiplier = float64(0)
		}
	}
	{
		{
			s.CpuCount.SetFake()
		}
	}
	{
		{
			s.CpuModel.SetFake()
		}
	}
	{
		{
			s.TotalRam.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ConfigProfile.SetFake()
		}
	}
	{
		{
			s.ProviderUuid.SetFake()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetAllNodesResponseDtoResponseItemConfigProfile) SetFake() {
	{
		{
			s.ActiveConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ActiveInbounds = nil
			for i := 0; i < 0; i++ {
				var elem GetAllNodesResponseDtoResponseItemConfigProfileActiveInboundsItem
				{
					elem.SetFake()
				}
				s.ActiveInbounds = append(s.ActiveInbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetAllNodesResponseDtoResponseItemConfigProfileActiveInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *GetAllNodesResponseDtoResponseItemProvider) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *GetAllSubscriptionsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetAllSubscriptionsResponseDtoResponse) SetFake() {
	{
		{
			s.Subscriptions = nil
			for i := 0; i < 0; i++ {
				var elem GetAllSubscriptionsResponseDtoResponseSubscriptionsItem
				{
					elem.SetFake()
				}
				s.Subscriptions = append(s.Subscriptions, elem)
			}
		}
	}
	{
		{
			s.Total = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) SetFake() {
	{
		{
			s.IsFound = true
		}
	}
	{
		{
			s.User.SetFake()
		}
	}
	{
		{
			s.Links = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Links = append(s.Links, elem)
			}
		}
	}
	{
		{
			s.SsConfLinks.SetFake()
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemSsConfLinks) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetFake() {
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.DaysLeft = float64(0)
		}
	}
	{
		{
			s.TrafficUsed = "string"
		}
	}
	{
		{
			s.TrafficLimit = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.ExpiresAt = time.Now()
		}
	}
	{
		{
			s.IsActive = true
		}
	}
	{
		{
			s.UserStatus.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy) SetFake() {
	*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus) SetFake() {
	*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusACTIVE
}

// SetFake set fake values.
func (s *GetAllTagsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetAllTagsResponseDtoResponse) SetFake() {
	{
		{
			s.Tags = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Tags = append(s.Tags, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetAllUsersResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetAllUsersResponseDtoResponse) SetFake() {
	{
		{
			s.Users = nil
			for i := 0; i < 0; i++ {
				var elem GetAllUsersResponseDtoResponseUsersItem
				{
					elem.SetFake()
				}
				s.Users = append(s.Users, elem)
			}
		}
	}
	{
		{
			s.Total = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.UsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.LifetimeUsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.SubLastUserAgent.SetFake()
		}
	}
	{
		{
			s.SubLastOpenedAt.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.OnlineAt.SetFake()
		}
	}
	{
		{
			s.SubRevokedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessUuid = uuid.New()
		}
	}
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.FirstConnectedAt.SetFake()
		}
	}
	{
		{
			s.LastTriggeredThreshold.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem GetAllUsersResponseDtoResponseUsersItemActiveInternalSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.LastConnectedNode.SetFake()
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetAllUsersResponseDtoResponseUsersItemActiveInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetAllUsersResponseDtoResponseUsersItemHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetAllUsersResponseDtoResponseUsersItemLastConnectedNode) SetFake() {
	{
		{
			s.ConnectedAt = time.Now()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetAllUsersResponseDtoResponseUsersItemStatus) SetFake() {
	*s = GetAllUsersResponseDtoResponseUsersItemStatusACTIVE
}

// SetFake set fake values.
func (s *GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy) SetFake() {
	*s = GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *GetBandwidthStatsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetBandwidthStatsResponseDtoResponse) SetFake() {
	{
		{
			s.BandwidthLastTwoDays.SetFake()
		}
	}
	{
		{
			s.BandwidthLastSevenDays.SetFake()
		}
	}
	{
		{
			s.BandwidthLast30Days.SetFake()
		}
	}
	{
		{
			s.BandwidthCalendarMonth.SetFake()
		}
	}
	{
		{
			s.BandwidthCurrentYear.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth) SetFake() {
	{
		{
			s.Current = "string"
		}
	}
	{
		{
			s.Previous = "string"
		}
	}
	{
		{
			s.Difference = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear) SetFake() {
	{
		{
			s.Current = "string"
		}
	}
	{
		{
			s.Previous = "string"
		}
	}
	{
		{
			s.Difference = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLast30Days) SetFake() {
	{
		{
			s.Current = "string"
		}
	}
	{
		{
			s.Previous = "string"
		}
	}
	{
		{
			s.Difference = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays) SetFake() {
	{
		{
			s.Current = "string"
		}
	}
	{
		{
			s.Previous = "string"
		}
	}
	{
		{
			s.Difference = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays) SetFake() {
	{
		{
			s.Current = "string"
		}
	}
	{
		{
			s.Previous = "string"
		}
	}
	{
		{
			s.Difference = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetConfigProfileByUuidResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetConfigProfileByUuidResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Config = []byte("null")
		}
	}
	{
		{
			s.Inbounds = nil
			for i := 0; i < 0; i++ {
				var elem GetConfigProfileByUuidResponseDtoResponseInboundsItem
				{
					elem.SetFake()
				}
				s.Inbounds = append(s.Inbounds, elem)
			}
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem GetConfigProfileByUuidResponseDtoResponseNodesItem
				{
					elem.SetFake()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *GetConfigProfileByUuidResponseDtoResponseInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *GetConfigProfileByUuidResponseDtoResponseNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetConfigProfilesResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetConfigProfilesResponseDtoResponse) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.ConfigProfiles = nil
			for i := 0; i < 0; i++ {
				var elem GetConfigProfilesResponseDtoResponseConfigProfilesItem
				{
					elem.SetFake()
				}
				s.ConfigProfiles = append(s.ConfigProfiles, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Config = []byte("null")
		}
	}
	{
		{
			s.Inbounds = nil
			for i := 0; i < 0; i++ {
				var elem GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem
				{
					elem.SetFake()
				}
				s.Inbounds = append(s.Inbounds, elem)
			}
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem GetConfigProfilesResponseDtoResponseConfigProfilesItemNodesItem
				{
					elem.SetFake()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetHwidDevicesStatsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetHwidDevicesStatsResponseDtoResponse) SetFake() {
	{
		{
			s.ByPlatform = nil
			for i := 0; i < 0; i++ {
				var elem GetHwidDevicesStatsResponseDtoResponseByPlatformItem
				{
					elem.SetFake()
				}
				s.ByPlatform = append(s.ByPlatform, elem)
			}
		}
	}
	{
		{
			s.ByApp = nil
			for i := 0; i < 0; i++ {
				var elem GetHwidDevicesStatsResponseDtoResponseByAppItem
				{
					elem.SetFake()
				}
				s.ByApp = append(s.ByApp, elem)
			}
		}
	}
	{
		{
			s.Stats.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetHwidDevicesStatsResponseDtoResponseByAppItem) SetFake() {
	{
		{
			s.App = "string"
		}
	}
	{
		{
			s.Count = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetHwidDevicesStatsResponseDtoResponseByPlatformItem) SetFake() {
	{
		{
			s.Platform = "string"
		}
	}
	{
		{
			s.Count = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetHwidDevicesStatsResponseDtoResponseStats) SetFake() {
	{
		{
			s.TotalUniqueDevices = float64(0)
		}
	}
	{
		{
			s.TotalHwidDevices = float64(0)
		}
	}
	{
		{
			s.AverageHwidDevicesPerUser = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetInboundsByProfileUuidResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetInboundsByProfileUuidResponseDtoResponse) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Inbounds = nil
			for i := 0; i < 0; i++ {
				var elem GetInboundsByProfileUuidResponseDtoResponseInboundsItem
				{
					elem.SetFake()
				}
				s.Inbounds = append(s.Inbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetInboundsByProfileUuidResponseDtoResponseInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
	{
		{
			s.ActiveSquads = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.ActiveSquads = append(s.ActiveSquads, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetInfraBillingHistoryRecordsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetInfraBillingHistoryRecordsResponseDtoResponse) SetFake() {
	{
		{
			s.Records = nil
			for i := 0; i < 0; i++ {
				var elem GetInfraBillingHistoryRecordsResponseDtoResponseRecordsItem
				{
					elem.SetFake()
				}
				s.Records = append(s.Records, elem)
			}
		}
	}
	{
		{
			s.Total = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetInfraBillingHistoryRecordsResponseDtoResponseRecordsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProviderUuid = uuid.New()
		}
	}
	{
		{
			s.Amount = float64(0)
		}
	}
	{
		{
			s.BilledAt = time.Now()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetInfraBillingHistoryRecordsResponseDtoResponseRecordsItemProvider) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetInfraBillingNodesResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetInfraBillingNodesResponseDtoResponse) SetFake() {
	{
		{
			s.TotalBillingNodes = float64(0)
		}
	}
	{
		{
			s.BillingNodes = nil
			for i := 0; i < 0; i++ {
				var elem GetInfraBillingNodesResponseDtoResponseBillingNodesItem
				{
					elem.SetFake()
				}
				s.BillingNodes = append(s.BillingNodes, elem)
			}
		}
	}
	{
		{
			s.AvailableBillingNodes = nil
			for i := 0; i < 0; i++ {
				var elem GetInfraBillingNodesResponseDtoResponseAvailableBillingNodesItem
				{
					elem.SetFake()
				}
				s.AvailableBillingNodes = append(s.AvailableBillingNodes, elem)
			}
		}
	}
	{
		{
			s.TotalAvailableBillingNodes = float64(0)
		}
	}
	{
		{
			s.Stats.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetInfraBillingNodesResponseDtoResponseAvailableBillingNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetInfraBillingNodesResponseDtoResponseBillingNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.ProviderUuid = uuid.New()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
	{
		{
			s.Node.SetFake()
		}
	}
	{
		{
			s.NextBillingAt = time.Now()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *GetInfraBillingNodesResponseDtoResponseBillingNodesItemNode) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetInfraBillingNodesResponseDtoResponseBillingNodesItemProvider) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetInfraBillingNodesResponseDtoResponseStats) SetFake() {
	{
		{
			s.UpcomingNodesCount = float64(0)
		}
	}
	{
		{
			s.CurrentMonthPayments = float64(0)
		}
	}
	{
		{
			s.TotalSpent = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetInfraProviderByUuidResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetInfraProviderByUuidResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.BillingHistory.SetFake()
		}
	}
	{
		{
			s.BillingNodes = nil
			for i := 0; i < 0; i++ {
				var elem GetInfraProviderByUuidResponseDtoResponseBillingNodesItem
				{
					elem.SetFake()
				}
				s.BillingNodes = append(s.BillingNodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetInfraProviderByUuidResponseDtoResponseBillingHistory) SetFake() {
	{
		{
			s.TotalAmount = float64(0)
		}
	}
	{
		{
			s.TotalBills = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetInfraProviderByUuidResponseDtoResponseBillingNodesItem) SetFake() {
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetInfraProvidersResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetInfraProvidersResponseDtoResponse) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Providers = nil
			for i := 0; i < 0; i++ {
				var elem GetInfraProvidersResponseDtoResponseProvidersItem
				{
					elem.SetFake()
				}
				s.Providers = append(s.Providers, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetInfraProvidersResponseDtoResponseProvidersItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.BillingHistory.SetFake()
		}
	}
	{
		{
			s.BillingNodes = nil
			for i := 0; i < 0; i++ {
				var elem GetInfraProvidersResponseDtoResponseProvidersItemBillingNodesItem
				{
					elem.SetFake()
				}
				s.BillingNodes = append(s.BillingNodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetInfraProvidersResponseDtoResponseProvidersItemBillingHistory) SetFake() {
	{
		{
			s.TotalAmount = float64(0)
		}
	}
	{
		{
			s.TotalBills = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetInfraProvidersResponseDtoResponseProvidersItemBillingNodesItem) SetFake() {
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadAccessibleNodesResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponse) SetFake() {
	{
		{
			s.SquadUuid = uuid.New()
		}
	}
	{
		{
			s.AccessibleNodes = nil
			for i := 0; i < 0; i++ {
				var elem GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem
				{
					elem.SetFake()
				}
				s.AccessibleNodes = append(s.AccessibleNodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
	{
		{
			s.ConfigProfileUuid = uuid.New()
		}
	}
	{
		{
			s.ConfigProfileName = "string"
		}
	}
	{
		{
			s.ActiveInbounds = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ActiveInbounds = append(s.ActiveInbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadByUuidResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadByUuidResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Info.SetFake()
		}
	}
	{
		{
			s.Inbounds = nil
			for i := 0; i < 0; i++ {
				var elem GetInternalSquadByUuidResponseDtoResponseInboundsItem
				{
					elem.SetFake()
				}
				s.Inbounds = append(s.Inbounds, elem)
			}
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadByUuidResponseDtoResponseInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadByUuidResponseDtoResponseInfo) SetFake() {
	{
		{
			s.MembersCount = float64(0)
		}
	}
	{
		{
			s.InboundsCount = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadsResponseDtoResponse) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.InternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem GetInternalSquadsResponseDtoResponseInternalSquadsItem
				{
					elem.SetFake()
				}
				s.InternalSquads = append(s.InternalSquads, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Info.SetFake()
		}
	}
	{
		{
			s.Inbounds = nil
			for i := 0; i < 0; i++ {
				var elem GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem
				{
					elem.SetFake()
				}
				s.Inbounds = append(s.Inbounds, elem)
			}
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInfo) SetFake() {
	{
		{
			s.MembersCount = float64(0)
		}
	}
	{
		{
			s.InboundsCount = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetNodeUserUsageByRangeResponseDto) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem GetNodeUserUsageByRangeResponseDtoResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) SetFake() {
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Date = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetNodesMetricsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetNodesMetricsResponseDtoResponse) SetFake() {
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem GetNodesMetricsResponseDtoResponseNodesItem
				{
					elem.SetFake()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetNodesMetricsResponseDtoResponseNodesItem) SetFake() {
	{
		{
			s.NodeUuid = "string"
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryEmoji = "string"
		}
	}
	{
		{
			s.ProviderName = "string"
		}
	}
	{
		{
			s.UsersOnline = float64(0)
		}
	}
	{
		{
			s.InboundsStats = nil
			for i := 0; i < 0; i++ {
				var elem GetNodesMetricsResponseDtoResponseNodesItemInboundsStatsItem
				{
					elem.SetFake()
				}
				s.InboundsStats = append(s.InboundsStats, elem)
			}
		}
	}
	{
		{
			s.OutboundsStats = nil
			for i := 0; i < 0; i++ {
				var elem GetNodesMetricsResponseDtoResponseNodesItemOutboundsStatsItem
				{
					elem.SetFake()
				}
				s.OutboundsStats = append(s.OutboundsStats, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetNodesMetricsResponseDtoResponseNodesItemInboundsStatsItem) SetFake() {
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Upload = "string"
		}
	}
	{
		{
			s.Download = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetNodesMetricsResponseDtoResponseNodesItemOutboundsStatsItem) SetFake() {
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Upload = "string"
		}
	}
	{
		{
			s.Download = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetNodesRealtimeUsageResponseDto) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem GetNodesRealtimeUsageResponseDtoResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetFake() {
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
	{
		{
			s.DownloadBytes = float64(0)
		}
	}
	{
		{
			s.UploadBytes = float64(0)
		}
	}
	{
		{
			s.TotalBytes = float64(0)
		}
	}
	{
		{
			s.DownloadSpeedBps = float64(0)
		}
	}
	{
		{
			s.UploadSpeedBps = float64(0)
		}
	}
	{
		{
			s.TotalSpeedBps = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetNodesStatisticsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetNodesStatisticsResponseDtoResponse) SetFake() {
	{
		{
			s.LastSevenDays = nil
			for i := 0; i < 0; i++ {
				var elem GetNodesStatisticsResponseDtoResponseLastSevenDaysItem
				{
					elem.SetFake()
				}
				s.LastSevenDays = append(s.LastSevenDays, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetNodesStatisticsResponseDtoResponseLastSevenDaysItem) SetFake() {
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.Date = "string"
		}
	}
	{
		{
			s.TotalBytes = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetNodesUsageByRangeResponseDto) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem GetNodesUsageByRangeResponseDtoResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetFake() {
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.NodeCountryCode = "string"
		}
	}
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.TotalDownload = float64(0)
		}
	}
	{
		{
			s.TotalUpload = float64(0)
		}
	}
	{
		{
			s.HumanReadableTotal = "string"
		}
	}
	{
		{
			s.HumanReadableTotalDownload = "string"
		}
	}
	{
		{
			s.HumanReadableTotalUpload = "string"
		}
	}
	{
		{
			s.Date = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetOneHostResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetOneHostResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.Remark = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port = int(0)
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Sni.SetFake()
		}
	}
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.Alpn.SetFake()
		}
	}
	{
		{
			s.Fingerprint.SetFake()
		}
	}
	{
		{
			s.IsDisabled.SetFake()
		}
	}
	{
		{
			s.SecurityLayer.SetFake()
		}
	}
	{
		{
			s.XHttpExtraParams = []byte("null")
		}
	}
	{
		{
			s.MuxParams = []byte("null")
		}
	}
	{
		{
			s.SockoptParams = []byte("null")
		}
	}
	{
		{
			s.Inbound.SetFake()
		}
	}
	{
		{
			s.ServerDescription.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.IsHidden.SetFake()
		}
	}
	{
		{
			s.OverrideSniFromAddress.SetFake()
		}
	}
	{
		{
			s.VlessRouteId.SetFake()
		}
	}
	{
		{
			s.AllowInsecure.SetFake()
		}
	}
	{
		{
			s.ShuffleHost = true
		}
	}
	{
		{
			s.MihomoX25519 = true
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetOneHostResponseDtoResponseInbound) SetFake() {
	{
		{
			s.ConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ConfigProfileInboundUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetOneHostResponseDtoResponseSecurityLayer) SetFake() {
	*s = GetOneHostResponseDtoResponseSecurityLayerDEFAULT
}

// SetFake set fake values.
func (s *GetOneNodeResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetOneNodeResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.IsConnected = true
		}
	}
	{
		{
			s.IsDisabled = true
		}
	}
	{
		{
			s.IsConnecting = true
		}
	}
	{
		{
			s.IsNodeOnline = true
		}
	}
	{
		{
			s.IsXrayRunning = true
		}
	}
	{
		{
			s.LastStatusChange.SetFake()
		}
	}
	{
		{
			s.LastStatusMessage.SetFake()
		}
	}
	{
		{
			s.XrayVersion.SetFake()
		}
	}
	{
		{
			s.NodeVersion.SetFake()
		}
	}
	{
		{
			s.XrayUptime = "string"
		}
	}
	{
		{
			s.IsTrafficTrackingActive = true
		}
	}
	{
		{
			s.TrafficResetDay.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficUsedBytes.SetFake()
		}
	}
	{
		{
			s.NotifyPercent.SetFake()
		}
	}
	{
		{
			s.UsersOnline.SetFake()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
	{
		{
			s.ConsumptionMultiplier = float64(0)
		}
	}
	{
		{
			s.CpuCount.SetFake()
		}
	}
	{
		{
			s.CpuModel.SetFake()
		}
	}
	{
		{
			s.TotalRam.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ConfigProfile.SetFake()
		}
	}
	{
		{
			s.ProviderUuid.SetFake()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetOneNodeResponseDtoResponseConfigProfile) SetFake() {
	{
		{
			s.ActiveConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ActiveInbounds = nil
			for i := 0; i < 0; i++ {
				var elem GetOneNodeResponseDtoResponseConfigProfileActiveInboundsItem
				{
					elem.SetFake()
				}
				s.ActiveInbounds = append(s.ActiveInbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetOneNodeResponseDtoResponseConfigProfileActiveInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *GetOneNodeResponseDtoResponseProvider) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *GetPubKeyResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetPubKeyResponseDtoResponse) SetFake() {
	{
		{
			s.PubKey = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponse) SetFake() {
	{
		{
			s.User.SetFake()
		}
	}
	{
		{
			s.ConvertedUserInfo.SetFake()
		}
	}
	{
		{
			s.Headers.SetFake()
		}
	}
	{
		{
			s.RawHosts = nil
			for i := 0; i < 0; i++ {
				var elem GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem
				{
					elem.SetFake()
				}
				s.RawHosts = append(s.RawHosts, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseConvertedUserInfo) SetFake() {
	{
		{
			s.DaysLeft = float64(0)
		}
	}
	{
		{
			s.TrafficLimit = "string"
		}
	}
	{
		{
			s.TrafficUsed = "string"
		}
	}
	{
		{
			s.LifetimeTrafficUsed = "string"
		}
	}
	{
		{
			s.IsHwidLimited = true
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseHeaders) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetFake() {
	{
		{
			s.Address.SetFake()
		}
	}
	{
		{
			s.Alpn.SetFake()
		}
	}
	{
		{
			s.Fingerprint.SetFake()
		}
	}
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Password.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.PublicKey.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.Protocol.SetFake()
		}
	}
	{
		{
			s.Remark.SetFake()
		}
	}
	{
		{
			s.ShortId.SetFake()
		}
	}
	{
		{
			s.Sni.SetFake()
		}
	}
	{
		{
			s.SpiderX.SetFake()
		}
	}
	{
		{
			s.TLS.SetFake()
		}
	}
	{
		{
			s.HeaderType.SetFake()
		}
	}
	{
		{
			s.AdditionalParams.SetFake()
		}
	}
	{
		{
			s.XHttpExtraParams.SetFake()
		}
	}
	{
		{
			s.MuxParams.SetFake()
		}
	}
	{
		{
			s.SockoptParams.SetFake()
		}
	}
	{
		{
			s.ServerDescription.SetFake()
		}
	}
	{
		{
			s.Flow.SetFake()
		}
	}
	{
		{
			s.AllowInsecure.SetFake()
		}
	}
	{
		{
			s.ShuffleHost.SetFake()
		}
	}
	{
		{
			s.MihomoX25519.SetFake()
		}
	}
	{
		{
			s.Mldsa65Verify.SetFake()
		}
	}
	{
		{
			s.Encryption.SetFake()
		}
	}
	{
		{
			s.ProtocolOptions.SetFake()
		}
	}
	{
		{
			s.DbData.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams) SetFake() {
	{
		{
			s.Mode.SetFake()
		}
	}
	{
		{
			s.HeartbeatPeriod.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) SetFake() {
	{
		{ // Keep pointer nil to prevent infinite recursion.
			s.RawInbound = nil
		}
	}
	{
		{
			s.InboundTag = "string"
		}
	}
	{
		{
			s.UUID = "string"
		}
	}
	{
		{
			s.ConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ConfigProfileInboundUuid.SetFake()
		}
	}
	{
		{
			s.IsDisabled = true
		}
	}
	{
		{
			s.ViewPosition = float64(0)
		}
	}
	{
		{
			s.Remark = "string"
		}
	}
	{
		{
			s.IsHidden = true
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.VlessRouteId.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbDataRawInbound) SetFake() {
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams) SetFake() {
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemPassword) SetFake() {
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessPassword = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions) SetFake() {
	{
		{
			s.Ss.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs) SetFake() {
	{
		{
			s.Method.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams) SetFake() {
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams) SetFake() {
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.UsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.LifetimeUsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.SubLastUserAgent.SetFake()
		}
	}
	{
		{
			s.SubLastOpenedAt.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.OnlineAt.SetFake()
		}
	}
	{
		{
			s.SubRevokedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessUuid = uuid.New()
		}
	}
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.FirstConnectedAt.SetFake()
		}
	}
	{
		{
			s.LastTriggeredThreshold.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem GetRawSubscriptionByShortUuidResponseDtoResponseUserActiveInternalSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.LastConnectedNode.SetFake()
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserActiveInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode) SetFake() {
	{
		{
			s.ConnectedAt = time.Now()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus) SetFake() {
	*s = GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusACTIVE
}

// SetFake set fake values.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy) SetFake() {
	*s = GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *GetRemnawaveHealthResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetRemnawaveHealthResponseDtoResponse) SetFake() {
	{
		{
			s.Pm2Stats = nil
			for i := 0; i < 0; i++ {
				var elem GetRemnawaveHealthResponseDtoResponsePm2StatsItem
				{
					elem.SetFake()
				}
				s.Pm2Stats = append(s.Pm2Stats, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetRemnawaveHealthResponseDtoResponsePm2StatsItem) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Memory = "string"
		}
	}
	{
		{
			s.CPU = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetStatsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetStatsResponseDtoResponse) SetFake() {
	{
		{
			s.CPU.SetFake()
		}
	}
	{
		{
			s.Memory.SetFake()
		}
	}
	{
		{
			s.Uptime = float64(0)
		}
	}
	{
		{
			s.Timestamp = float64(0)
		}
	}
	{
		{
			s.Users.SetFake()
		}
	}
	{
		{
			s.OnlineStats.SetFake()
		}
	}
	{
		{
			s.Nodes.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetStatsResponseDtoResponseCPU) SetFake() {
	{
		{
			s.Cores = float64(0)
		}
	}
	{
		{
			s.PhysicalCores = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetStatsResponseDtoResponseMemory) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Free = float64(0)
		}
	}
	{
		{
			s.Used = float64(0)
		}
	}
	{
		{
			s.Active = float64(0)
		}
	}
	{
		{
			s.Available = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetStatsResponseDtoResponseNodes) SetFake() {
	{
		{
			s.TotalOnline = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetStatsResponseDtoResponseOnlineStats) SetFake() {
	{
		{
			s.LastDay = float64(0)
		}
	}
	{
		{
			s.LastWeek = float64(0)
		}
	}
	{
		{
			s.NeverOnline = float64(0)
		}
	}
	{
		{
			s.OnlineNow = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetStatsResponseDtoResponseUsers) SetFake() {
	{
		{
			s.StatusCounts.SetFake()
		}
	}
	{
		{
			s.TotalUsers = float64(0)
		}
	}
	{
		{
			s.TotalTrafficBytes = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetStatsResponseDtoResponseUsersStatusCounts) SetFake() {
	var (
		elem float64
		m    map[string]float64 = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *GetSubscriptionByShortUuidProtectedResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionByShortUuidProtectedResponseDtoResponse) SetFake() {
	{
		{
			s.IsFound = true
		}
	}
	{
		{
			s.User.SetFake()
		}
	}
	{
		{
			s.Links = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Links = append(s.Links, elem)
			}
		}
	}
	{
		{
			s.SsConfLinks.SetFake()
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionByShortUuidProtectedResponseDtoResponseHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionByShortUuidProtectedResponseDtoResponseSsConfLinks) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *GetSubscriptionByShortUuidProtectedResponseDtoResponseUser) SetFake() {
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.DaysLeft = float64(0)
		}
	}
	{
		{
			s.TrafficUsed = "string"
		}
	}
	{
		{
			s.TrafficLimit = "string"
		}
	}
	{
		{
			s.LifetimeTrafficUsed = "string"
		}
	}
	{
		{
			s.TrafficUsedBytes = "string"
		}
	}
	{
		{
			s.TrafficLimitBytes = "string"
		}
	}
	{
		{
			s.LifetimeTrafficUsedBytes = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.ExpiresAt = time.Now()
		}
	}
	{
		{
			s.IsActive = true
		}
	}
	{
		{
			s.UserStatus.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionByShortUuidProtectedResponseDtoResponseUserTrafficLimitStrategy) SetFake() {
	*s = GetSubscriptionByShortUuidProtectedResponseDtoResponseUserTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *GetSubscriptionByShortUuidProtectedResponseDtoResponseUserUserStatus) SetFake() {
	*s = GetSubscriptionByShortUuidProtectedResponseDtoResponseUserUserStatusACTIVE
}

// SetFake set fake values.
func (s *GetSubscriptionByUsernameResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionByUsernameResponseDtoResponse) SetFake() {
	{
		{
			s.IsFound = true
		}
	}
	{
		{
			s.User.SetFake()
		}
	}
	{
		{
			s.Links = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Links = append(s.Links, elem)
			}
		}
	}
	{
		{
			s.SsConfLinks.SetFake()
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionByUsernameResponseDtoResponseHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionByUsernameResponseDtoResponseSsConfLinks) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *GetSubscriptionByUsernameResponseDtoResponseUser) SetFake() {
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.DaysLeft = float64(0)
		}
	}
	{
		{
			s.TrafficUsed = "string"
		}
	}
	{
		{
			s.TrafficLimit = "string"
		}
	}
	{
		{
			s.LifetimeTrafficUsed = "string"
		}
	}
	{
		{
			s.TrafficUsedBytes = "string"
		}
	}
	{
		{
			s.TrafficLimitBytes = "string"
		}
	}
	{
		{
			s.LifetimeTrafficUsedBytes = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.ExpiresAt = time.Now()
		}
	}
	{
		{
			s.IsActive = true
		}
	}
	{
		{
			s.UserStatus.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategy) SetFake() {
	*s = GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *GetSubscriptionByUsernameResponseDtoResponseUserUserStatus) SetFake() {
	*s = GetSubscriptionByUsernameResponseDtoResponseUserUserStatusACTIVE
}

// SetFake set fake values.
func (s *GetSubscriptionByUuidResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionByUuidResponseDtoResponse) SetFake() {
	{
		{
			s.IsFound = true
		}
	}
	{
		{
			s.User.SetFake()
		}
	}
	{
		{
			s.Links = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Links = append(s.Links, elem)
			}
		}
	}
	{
		{
			s.SsConfLinks.SetFake()
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionByUuidResponseDtoResponseHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionByUuidResponseDtoResponseSsConfLinks) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *GetSubscriptionByUuidResponseDtoResponseUser) SetFake() {
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.DaysLeft = float64(0)
		}
	}
	{
		{
			s.TrafficUsed = "string"
		}
	}
	{
		{
			s.TrafficLimit = "string"
		}
	}
	{
		{
			s.LifetimeTrafficUsed = "string"
		}
	}
	{
		{
			s.TrafficUsedBytes = "string"
		}
	}
	{
		{
			s.TrafficLimitBytes = "string"
		}
	}
	{
		{
			s.LifetimeTrafficUsedBytes = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.ExpiresAt = time.Now()
		}
	}
	{
		{
			s.IsActive = true
		}
	}
	{
		{
			s.UserStatus.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionByUuidResponseDtoResponseUserTrafficLimitStrategy) SetFake() {
	*s = GetSubscriptionByUuidResponseDtoResponseUserTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *GetSubscriptionByUuidResponseDtoResponseUserUserStatus) SetFake() {
	*s = GetSubscriptionByUuidResponseDtoResponseUserUserStatusACTIVE
}

// SetFake set fake values.
func (s *GetSubscriptionInfoResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionInfoResponseDtoResponse) SetFake() {
	{
		{
			s.IsFound = true
		}
	}
	{
		{
			s.User.SetFake()
		}
	}
	{
		{
			s.Links = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Links = append(s.Links, elem)
			}
		}
	}
	{
		{
			s.SsConfLinks.SetFake()
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionInfoResponseDtoResponseHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionInfoResponseDtoResponseSsConfLinks) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *GetSubscriptionInfoResponseDtoResponseUser) SetFake() {
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.DaysLeft = float64(0)
		}
	}
	{
		{
			s.TrafficUsed = "string"
		}
	}
	{
		{
			s.TrafficLimit = "string"
		}
	}
	{
		{
			s.LifetimeTrafficUsed = "string"
		}
	}
	{
		{
			s.TrafficUsedBytes = "string"
		}
	}
	{
		{
			s.TrafficLimitBytes = "string"
		}
	}
	{
		{
			s.LifetimeTrafficUsedBytes = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.ExpiresAt = time.Now()
		}
	}
	{
		{
			s.IsActive = true
		}
	}
	{
		{
			s.UserStatus.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategy) SetFake() {
	*s = GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *GetSubscriptionInfoResponseDtoResponseUserUserStatus) SetFake() {
	*s = GetSubscriptionInfoResponseDtoResponseUserUserStatusACTIVE
}

// SetFake set fake values.
func (s *GetSubscriptionRequestHistoryResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionRequestHistoryResponseDtoResponse) SetFake() {
	{
		{
			s.Records = nil
			for i := 0; i < 0; i++ {
				var elem GetSubscriptionRequestHistoryResponseDtoResponseRecordsItem
				{
					elem.SetFake()
				}
				s.Records = append(s.Records, elem)
			}
		}
	}
	{
		{
			s.Total = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionRequestHistoryResponseDtoResponseRecordsItem) SetFake() {
	{
		{
			s.ID = float64(0)
		}
	}
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.RequestIp.SetFake()
		}
	}
	{
		{
			s.UserAgent.SetFake()
		}
	}
	{
		{
			s.RequestAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionRequestHistoryStatsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionRequestHistoryStatsResponseDtoResponse) SetFake() {
	{
		{
			s.ByParsedApp = nil
			for i := 0; i < 0; i++ {
				var elem GetSubscriptionRequestHistoryStatsResponseDtoResponseByParsedAppItem
				{
					elem.SetFake()
				}
				s.ByParsedApp = append(s.ByParsedApp, elem)
			}
		}
	}
	{
		{
			s.HourlyRequestStats = nil
			for i := 0; i < 0; i++ {
				var elem GetSubscriptionRequestHistoryStatsResponseDtoResponseHourlyRequestStatsItem
				{
					elem.SetFake()
				}
				s.HourlyRequestStats = append(s.HourlyRequestStats, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionRequestHistoryStatsResponseDtoResponseByParsedAppItem) SetFake() {
	{
		{
			s.App = "string"
		}
	}
	{
		{
			s.Count = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionRequestHistoryStatsResponseDtoResponseHourlyRequestStatsItem) SetFake() {
	{
		{
			s.DateTime = time.Now()
		}
	}
	{
		{
			s.RequestCount = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionSettingsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionSettingsResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileTitle = "string"
		}
	}
	{
		{
			s.SupportLink = "string"
		}
	}
	{
		{
			s.ProfileUpdateInterval = int(0)
		}
	}
	{
		{
			s.IsProfileWebpageUrlEnabled = true
		}
	}
	{
		{
			s.ServeJsonAtBaseSubscription = true
		}
	}
	{
		{
			s.AddUsernameToBaseSubscription = true
		}
	}
	{
		{
			s.IsShowCustomRemarks = true
		}
	}
	{
		{
			s.HappAnnounce.SetFake()
		}
	}
	{
		{
			s.HappRouting.SetFake()
		}
	}
	{
		{
			s.ExpiredUsersRemarks = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ExpiredUsersRemarks = append(s.ExpiredUsersRemarks, elem)
			}
		}
	}
	{
		{
			s.LimitedUsersRemarks = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.LimitedUsersRemarks = append(s.LimitedUsersRemarks, elem)
			}
		}
	}
	{
		{
			s.DisabledUsersRemarks = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.DisabledUsersRemarks = append(s.DisabledUsersRemarks, elem)
			}
		}
	}
	{
		{
			s.CustomResponseHeaders.SetFake()
		}
	}
	{
		{
			s.RandomizeHosts = true
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *GetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *GetTemplateResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetTemplateResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.TemplateType.SetFake()
		}
	}
	{
		{
			s.TemplateJson = []byte("null")
		}
	}
	{
		{
			s.EncodedTemplateYaml.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetTemplateResponseDtoResponseTemplateType) SetFake() {
	*s = GetTemplateResponseDtoResponseTemplateTypeSTASH
}

// SetFake set fake values.
func (s *GetUserAccessibleNodesResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetUserAccessibleNodesResponseDtoResponse) SetFake() {
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.ActiveNodes = nil
			for i := 0; i < 0; i++ {
				var elem GetUserAccessibleNodesResponseDtoResponseActiveNodesItem
				{
					elem.SetFake()
				}
				s.ActiveNodes = append(s.ActiveNodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
	{
		{
			s.ConfigProfileUuid = uuid.New()
		}
	}
	{
		{
			s.ConfigProfileName = "string"
		}
	}
	{
		{
			s.ActiveSquads = nil
			for i := 0; i < 0; i++ {
				var elem GetUserAccessibleNodesResponseDtoResponseActiveNodesItemActiveSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveSquads = append(s.ActiveSquads, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItemActiveSquadsItem) SetFake() {
	{
		{
			s.SquadName = "string"
		}
	}
	{
		{
			s.ActiveInbounds = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ActiveInbounds = append(s.ActiveInbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetUserByEmailResponseDto) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem GetUserByEmailResponseDtoResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetUserByEmailResponseDtoResponseItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.UsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.LifetimeUsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.SubLastUserAgent.SetFake()
		}
	}
	{
		{
			s.SubLastOpenedAt.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.OnlineAt.SetFake()
		}
	}
	{
		{
			s.SubRevokedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessUuid = uuid.New()
		}
	}
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.FirstConnectedAt.SetFake()
		}
	}
	{
		{
			s.LastTriggeredThreshold.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem GetUserByEmailResponseDtoResponseItemActiveInternalSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.LastConnectedNode.SetFake()
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetUserByEmailResponseDtoResponseItemActiveInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetUserByEmailResponseDtoResponseItemHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetUserByEmailResponseDtoResponseItemLastConnectedNode) SetFake() {
	{
		{
			s.ConnectedAt = time.Now()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetUserByEmailResponseDtoResponseItemStatus) SetFake() {
	*s = GetUserByEmailResponseDtoResponseItemStatusACTIVE
}

// SetFake set fake values.
func (s *GetUserByEmailResponseDtoResponseItemTrafficLimitStrategy) SetFake() {
	*s = GetUserByEmailResponseDtoResponseItemTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *GetUserByShortUuidResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetUserByShortUuidResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.UsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.LifetimeUsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.SubLastUserAgent.SetFake()
		}
	}
	{
		{
			s.SubLastOpenedAt.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.OnlineAt.SetFake()
		}
	}
	{
		{
			s.SubRevokedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessUuid = uuid.New()
		}
	}
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.FirstConnectedAt.SetFake()
		}
	}
	{
		{
			s.LastTriggeredThreshold.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem GetUserByShortUuidResponseDtoResponseActiveInternalSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.LastConnectedNode.SetFake()
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetUserByShortUuidResponseDtoResponseActiveInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetUserByShortUuidResponseDtoResponseHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetUserByShortUuidResponseDtoResponseLastConnectedNode) SetFake() {
	{
		{
			s.ConnectedAt = time.Now()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetUserByShortUuidResponseDtoResponseStatus) SetFake() {
	*s = GetUserByShortUuidResponseDtoResponseStatusACTIVE
}

// SetFake set fake values.
func (s *GetUserByShortUuidResponseDtoResponseTrafficLimitStrategy) SetFake() {
	*s = GetUserByShortUuidResponseDtoResponseTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *GetUserByTagResponseDto) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem GetUserByTagResponseDtoResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetUserByTagResponseDtoResponseItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.UsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.LifetimeUsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.SubLastUserAgent.SetFake()
		}
	}
	{
		{
			s.SubLastOpenedAt.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.OnlineAt.SetFake()
		}
	}
	{
		{
			s.SubRevokedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessUuid = uuid.New()
		}
	}
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.FirstConnectedAt.SetFake()
		}
	}
	{
		{
			s.LastTriggeredThreshold.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem GetUserByTagResponseDtoResponseItemActiveInternalSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.LastConnectedNode.SetFake()
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetUserByTagResponseDtoResponseItemActiveInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetUserByTagResponseDtoResponseItemHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetUserByTagResponseDtoResponseItemLastConnectedNode) SetFake() {
	{
		{
			s.ConnectedAt = time.Now()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetUserByTagResponseDtoResponseItemStatus) SetFake() {
	*s = GetUserByTagResponseDtoResponseItemStatusACTIVE
}

// SetFake set fake values.
func (s *GetUserByTagResponseDtoResponseItemTrafficLimitStrategy) SetFake() {
	*s = GetUserByTagResponseDtoResponseItemTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *GetUserByTelegramIdResponseDto) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem GetUserByTelegramIdResponseDtoResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetUserByTelegramIdResponseDtoResponseItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.UsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.LifetimeUsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.SubLastUserAgent.SetFake()
		}
	}
	{
		{
			s.SubLastOpenedAt.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.OnlineAt.SetFake()
		}
	}
	{
		{
			s.SubRevokedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessUuid = uuid.New()
		}
	}
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.FirstConnectedAt.SetFake()
		}
	}
	{
		{
			s.LastTriggeredThreshold.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem GetUserByTelegramIdResponseDtoResponseItemActiveInternalSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.LastConnectedNode.SetFake()
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetUserByTelegramIdResponseDtoResponseItemActiveInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetUserByTelegramIdResponseDtoResponseItemHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetUserByTelegramIdResponseDtoResponseItemLastConnectedNode) SetFake() {
	{
		{
			s.ConnectedAt = time.Now()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetUserByTelegramIdResponseDtoResponseItemStatus) SetFake() {
	*s = GetUserByTelegramIdResponseDtoResponseItemStatusACTIVE
}

// SetFake set fake values.
func (s *GetUserByTelegramIdResponseDtoResponseItemTrafficLimitStrategy) SetFake() {
	*s = GetUserByTelegramIdResponseDtoResponseItemTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *GetUserByUsernameResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetUserByUsernameResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.UsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.LifetimeUsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.SubLastUserAgent.SetFake()
		}
	}
	{
		{
			s.SubLastOpenedAt.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.OnlineAt.SetFake()
		}
	}
	{
		{
			s.SubRevokedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessUuid = uuid.New()
		}
	}
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.FirstConnectedAt.SetFake()
		}
	}
	{
		{
			s.LastTriggeredThreshold.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem GetUserByUsernameResponseDtoResponseActiveInternalSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.LastConnectedNode.SetFake()
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetUserByUsernameResponseDtoResponseActiveInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetUserByUsernameResponseDtoResponseHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetUserByUsernameResponseDtoResponseLastConnectedNode) SetFake() {
	{
		{
			s.ConnectedAt = time.Now()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetUserByUsernameResponseDtoResponseStatus) SetFake() {
	*s = GetUserByUsernameResponseDtoResponseStatusACTIVE
}

// SetFake set fake values.
func (s *GetUserByUsernameResponseDtoResponseTrafficLimitStrategy) SetFake() {
	*s = GetUserByUsernameResponseDtoResponseTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *GetUserByUuidResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetUserByUuidResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.UsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.LifetimeUsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.SubLastUserAgent.SetFake()
		}
	}
	{
		{
			s.SubLastOpenedAt.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.OnlineAt.SetFake()
		}
	}
	{
		{
			s.SubRevokedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessUuid = uuid.New()
		}
	}
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.FirstConnectedAt.SetFake()
		}
	}
	{
		{
			s.LastTriggeredThreshold.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem GetUserByUuidResponseDtoResponseActiveInternalSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.LastConnectedNode.SetFake()
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetUserByUuidResponseDtoResponseActiveInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetUserByUuidResponseDtoResponseHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetUserByUuidResponseDtoResponseLastConnectedNode) SetFake() {
	{
		{
			s.ConnectedAt = time.Now()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetUserByUuidResponseDtoResponseStatus) SetFake() {
	*s = GetUserByUuidResponseDtoResponseStatusACTIVE
}

// SetFake set fake values.
func (s *GetUserByUuidResponseDtoResponseTrafficLimitStrategy) SetFake() {
	*s = GetUserByUuidResponseDtoResponseTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *GetUserHwidDevicesResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetUserHwidDevicesResponseDtoResponse) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Devices = nil
			for i := 0; i < 0; i++ {
				var elem GetUserHwidDevicesResponseDtoResponseDevicesItem
				{
					elem.SetFake()
				}
				s.Devices = append(s.Devices, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetUserHwidDevicesResponseDtoResponseDevicesItem) SetFake() {
	{
		{
			s.Hwid = "string"
		}
	}
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.Platform.SetFake()
		}
	}
	{
		{
			s.OsVersion.SetFake()
		}
	}
	{
		{
			s.DeviceModel.SetFake()
		}
	}
	{
		{
			s.UserAgent.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *GetUserSubscriptionRequestHistoryResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetUserSubscriptionRequestHistoryResponseDtoResponse) SetFake() {
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Records = nil
			for i := 0; i < 0; i++ {
				var elem GetUserSubscriptionRequestHistoryResponseDtoResponseRecordsItem
				{
					elem.SetFake()
				}
				s.Records = append(s.Records, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetUserSubscriptionRequestHistoryResponseDtoResponseRecordsItem) SetFake() {
	{
		{
			s.ID = float64(0)
		}
	}
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.RequestAt = time.Now()
		}
	}
	{
		{
			s.RequestIp.SetFake()
		}
	}
	{
		{
			s.UserAgent.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetUserUsageByRangeResponseDto) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem GetUserUsageByRangeResponseDtoResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *GetUserUsageByRangeResponseDtoResponseItem) SetFake() {
	{
		{
			s.UserUuid = uuid.New()
		}
	}
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
	{
		{
			s.Total = float64(0)
		}
	}
	{
		{
			s.Date = "string"
		}
	}
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerDeleteHostsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerDisableHostsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerEnableHostsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerSetInboundToHostsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsBulkActionsControllerSetPortToHostsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerCreateHostInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerDeleteHostInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerGetAllHostTagsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerGetAllHostsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerGetOneHostInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerReorderHostsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HostsControllerUpdateHostInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerCreateUserHwidDeviceInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerDeleteAllUserHwidDevicesInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerDeleteUserHwidDeviceInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerGetAllUsersInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerGetHwidDevicesStatsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *HwidUserDevicesControllerGetUserHwidDevicesInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerCreateInfraBillingHistoryRecordInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerCreateInfraBillingNodeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerCreateInfraProviderInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerDeleteInfraBillingNodeByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerDeleteInfraProviderByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerGetBillingNodesInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerGetInfraBillingHistoryRecordsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerGetInfraProviderByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerGetInfraProvidersInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerUpdateInfraBillingNodeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InfraBillingControllerUpdateInfraProviderInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerAddUsersToInternalSquadInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerCreateInternalSquadInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerDeleteInternalSquadInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerGetInternalSquadAccessibleNodesInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerGetInternalSquadByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerGetInternalSquadsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerRemoveUsersFromInternalSquadInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InternalSquadControllerUpdateInternalSquadInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *KeygenControllerGenerateKeyInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *LoginRequestDto) SetFake() {
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Password = "string"
		}
	}
}

// SetFake set fake values.
func (s *NilCreateNodeResponseDtoResponseProvider) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilCreateUserResponseDtoResponseLastConnectedNode) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilDateTime) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilDisableNodeResponseDtoResponseProvider) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilDisableUserResponseDtoResponseLastConnectedNode) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilEnableNodeResponseDtoResponseProvider) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilEnableUserResponseDtoResponseLastConnectedNode) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilFloat64) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilGetAllNodesResponseDtoResponseItemProvider) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilGetAllUsersResponseDtoResponseUsersItemLastConnectedNode) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilGetOneNodeResponseDtoResponseProvider) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilGetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilGetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilGetUserByEmailResponseDtoResponseItemLastConnectedNode) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilGetUserByShortUuidResponseDtoResponseLastConnectedNode) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilGetUserByTagResponseDtoResponseItemLastConnectedNode) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilGetUserByTelegramIdResponseDtoResponseItemLastConnectedNode) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilGetUserByUsernameResponseDtoResponseLastConnectedNode) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilGetUserByUuidResponseDtoResponseLastConnectedNode) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilInt) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilReorderNodeResponseDtoResponseItemProvider) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilResetUserTrafficResponseDtoResponseLastConnectedNode) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilRevokeUserSubscriptionResponseDtoResponseLastConnectedNode) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilString) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilUUID) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilUpdateNodeResponseDtoResponseProvider) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilUpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilUpdateUserResponseDtoResponseLastConnectedNode) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NodesControllerCreateNodeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerDeleteNodeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerDisableNodeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerEnableNodeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerGetAllNodesInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerGetOneNodeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerReorderNodesInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerRestartAllNodesInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerRestartNodeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesControllerUpdateNodeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesUsageHistoryControllerGetNodesUsageByRangeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesUserUsageHistoryControllerGetNodeUserUsageInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NodesUserUsageHistoryControllerGetNodesRealtimeUsageInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *OAuth2AuthorizeRequestDto) SetFake() {
	{
		{
			s.Provider.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *OAuth2AuthorizeRequestDtoProvider) SetFake() {
	*s = OAuth2AuthorizeRequestDtoProviderGithub
}

// SetFake set fake values.
func (s *OAuth2CallbackRequestDto) SetFake() {
	{
		{
			s.Provider.SetFake()
		}
	}
	{
		{
			s.Code = "string"
		}
	}
	{
		{
			s.State = "string"
		}
	}
}

// SetFake set fake values.
func (s *OAuth2CallbackRequestDtoProvider) SetFake() {
	*s = OAuth2CallbackRequestDtoProviderGithub
}

// SetFake set fake values.
func (s *OptBool) SetFake() {
	var elem bool
	{
		elem = true
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptBulkAllUpdateUsersRequestDtoStatus) SetFake() {
	var elem BulkAllUpdateUsersRequestDtoStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy) SetFake() {
	var elem BulkAllUpdateUsersRequestDtoTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptBulkDeleteHostsResponseDtoResponseItemSecurityLayer) SetFake() {
	var elem BulkDeleteHostsResponseDtoResponseItemSecurityLayer
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptBulkDeleteUsersByStatusRequestDtoStatus) SetFake() {
	var elem BulkDeleteUsersByStatusRequestDtoStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptBulkDisableHostsResponseDtoResponseItemSecurityLayer) SetFake() {
	var elem BulkDisableHostsResponseDtoResponseItemSecurityLayer
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptBulkEnableHostsResponseDtoResponseItemSecurityLayer) SetFake() {
	var elem BulkEnableHostsResponseDtoResponseItemSecurityLayer
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptBulkUpdateUsersRequestDtoFieldsStatus) SetFake() {
	var elem BulkUpdateUsersRequestDtoFieldsStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) SetFake() {
	var elem BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptCreateHostRequestDtoSecurityLayer) SetFake() {
	var elem CreateHostRequestDtoSecurityLayer
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptCreateHostResponseDtoResponseSecurityLayer) SetFake() {
	var elem CreateHostResponseDtoResponseSecurityLayer
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptCreateUserRequestDtoStatus) SetFake() {
	var elem CreateUserRequestDtoStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptCreateUserRequestDtoTrafficLimitStrategy) SetFake() {
	var elem CreateUserRequestDtoTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptCreateUserResponseDtoResponseStatus) SetFake() {
	var elem CreateUserResponseDtoResponseStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptCreateUserResponseDtoResponseTrafficLimitStrategy) SetFake() {
	var elem CreateUserResponseDtoResponseTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptDateTime) SetFake() {
	var elem time.Time
	{
		elem = time.Now()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptDisableUserResponseDtoResponseStatus) SetFake() {
	var elem DisableUserResponseDtoResponseStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptDisableUserResponseDtoResponseTrafficLimitStrategy) SetFake() {
	var elem DisableUserResponseDtoResponseTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptEnableUserResponseDtoResponseStatus) SetFake() {
	var elem EnableUserResponseDtoResponseStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptEnableUserResponseDtoResponseTrafficLimitStrategy) SetFake() {
	var elem EnableUserResponseDtoResponseTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptFloat64) SetFake() {
	var elem float64
	{
		elem = float64(0)
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetAllHostsResponseDtoResponseItemSecurityLayer) SetFake() {
	var elem GetAllHostsResponseDtoResponseItemSecurityLayer
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetAllUsersResponseDtoResponseUsersItemStatus) SetFake() {
	var elem GetAllUsersResponseDtoResponseUsersItemStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy) SetFake() {
	var elem GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetOneHostResponseDtoResponseSecurityLayer) SetFake() {
	var elem GetOneHostResponseDtoResponseSecurityLayer
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) SetFake() {
	var elem GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams) SetFake() {
	var elem *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams
	{ // Keep pointer nil to prevent infinite recursion.
		elem = nil
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams) SetFake() {
	var elem *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams
	{ // Keep pointer nil to prevent infinite recursion.
		elem = nil
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams) SetFake() {
	var elem *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams
	{ // Keep pointer nil to prevent infinite recursion.
		elem = nil
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetRawSubscriptionByShortUuidResponseDtoResponseUserStatus) SetFake() {
	var elem GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy) SetFake() {
	var elem GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetUserByEmailResponseDtoResponseItemStatus) SetFake() {
	var elem GetUserByEmailResponseDtoResponseItemStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetUserByEmailResponseDtoResponseItemTrafficLimitStrategy) SetFake() {
	var elem GetUserByEmailResponseDtoResponseItemTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetUserByShortUuidResponseDtoResponseStatus) SetFake() {
	var elem GetUserByShortUuidResponseDtoResponseStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetUserByShortUuidResponseDtoResponseTrafficLimitStrategy) SetFake() {
	var elem GetUserByShortUuidResponseDtoResponseTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetUserByTagResponseDtoResponseItemStatus) SetFake() {
	var elem GetUserByTagResponseDtoResponseItemStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetUserByTagResponseDtoResponseItemTrafficLimitStrategy) SetFake() {
	var elem GetUserByTagResponseDtoResponseItemTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetUserByTelegramIdResponseDtoResponseItemStatus) SetFake() {
	var elem GetUserByTelegramIdResponseDtoResponseItemStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetUserByTelegramIdResponseDtoResponseItemTrafficLimitStrategy) SetFake() {
	var elem GetUserByTelegramIdResponseDtoResponseItemTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetUserByUsernameResponseDtoResponseStatus) SetFake() {
	var elem GetUserByUsernameResponseDtoResponseStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetUserByUsernameResponseDtoResponseTrafficLimitStrategy) SetFake() {
	var elem GetUserByUsernameResponseDtoResponseTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetUserByUuidResponseDtoResponseStatus) SetFake() {
	var elem GetUserByUuidResponseDtoResponseStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGetUserByUuidResponseDtoResponseTrafficLimitStrategy) SetFake() {
	var elem GetUserByUuidResponseDtoResponseTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptInt) SetFake() {
	var elem int
	{
		elem = int(0)
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptNilBool) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilCreateHostRequestDtoAlpn) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilCreateHostRequestDtoFingerprint) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilFloat64) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilInt) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilString) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilURI) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilUUID) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilUpdateHostRequestDtoAlpn) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilUpdateHostRequestDtoFingerprint) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptResetUserTrafficResponseDtoResponseStatus) SetFake() {
	var elem ResetUserTrafficResponseDtoResponseStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptResetUserTrafficResponseDtoResponseTrafficLimitStrategy) SetFake() {
	var elem ResetUserTrafficResponseDtoResponseTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptRevokeUserSubscriptionResponseDtoResponseStatus) SetFake() {
	var elem RevokeUserSubscriptionResponseDtoResponseStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptRevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy) SetFake() {
	var elem RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptSetInboundToManyHostsResponseDtoResponseItemSecurityLayer) SetFake() {
	var elem SetInboundToManyHostsResponseDtoResponseItemSecurityLayer
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptSetPortToManyHostsResponseDtoResponseItemSecurityLayer) SetFake() {
	var elem SetPortToManyHostsResponseDtoResponseItemSecurityLayer
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptString) SetFake() {
	var elem string
	{
		elem = "string"
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptURI) SetFake() {
	var elem url.URL
	{
		elem = url.URL{Scheme: "https", Host: "github.com", Path: "/ogen-go/ogen"}
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUUID) SetFake() {
	var elem uuid.UUID
	{
		elem = uuid.New()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateHostRequestDtoInbound) SetFake() {
	var elem UpdateHostRequestDtoInbound
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateHostRequestDtoSecurityLayer) SetFake() {
	var elem UpdateHostRequestDtoSecurityLayer
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateHostResponseDtoResponseSecurityLayer) SetFake() {
	var elem UpdateHostResponseDtoResponseSecurityLayer
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateNodeRequestDtoConfigProfile) SetFake() {
	var elem UpdateNodeRequestDtoConfigProfile
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) SetFake() {
	var elem UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateUserRequestDtoStatus) SetFake() {
	var elem UpdateUserRequestDtoStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateUserRequestDtoTrafficLimitStrategy) SetFake() {
	var elem UpdateUserRequestDtoTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateUserResponseDtoResponseStatus) SetFake() {
	var elem UpdateUserResponseDtoResponseStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptUpdateUserResponseDtoResponseTrafficLimitStrategy) SetFake() {
	var elem UpdateUserResponseDtoResponseTrafficLimitStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *RegisterRequestDto) SetFake() {
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Password = "string"
		}
	}
}

// SetFake set fake values.
func (s *RemoveUsersFromInternalSquadResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *RemoveUsersFromInternalSquadResponseDtoResponse) SetFake() {
	{
		{
			s.EventSent = true
		}
	}
}

// SetFake set fake values.
func (s *ReorderHostRequestDto) SetFake() {
	{
		{
			s.Hosts = nil
			for i := 0; i < 0; i++ {
				var elem ReorderHostRequestDtoHostsItem
				{
					elem.SetFake()
				}
				s.Hosts = append(s.Hosts, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ReorderHostRequestDtoHostsItem) SetFake() {
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.UUID = uuid.New()
		}
	}
}

// SetFake set fake values.
func (s *ReorderHostResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ReorderHostResponseDtoResponse) SetFake() {
	{
		{
			s.IsUpdated = true
		}
	}
}

// SetFake set fake values.
func (s *ReorderNodeRequestDto) SetFake() {
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem ReorderNodeRequestDtoNodesItem
				{
					elem.SetFake()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ReorderNodeRequestDtoNodesItem) SetFake() {
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.UUID = uuid.New()
		}
	}
}

// SetFake set fake values.
func (s *ReorderNodeResponseDto) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem ReorderNodeResponseDtoResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ReorderNodeResponseDtoResponseItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.IsConnected = true
		}
	}
	{
		{
			s.IsDisabled = true
		}
	}
	{
		{
			s.IsConnecting = true
		}
	}
	{
		{
			s.IsNodeOnline = true
		}
	}
	{
		{
			s.IsXrayRunning = true
		}
	}
	{
		{
			s.LastStatusChange.SetFake()
		}
	}
	{
		{
			s.LastStatusMessage.SetFake()
		}
	}
	{
		{
			s.XrayVersion.SetFake()
		}
	}
	{
		{
			s.NodeVersion.SetFake()
		}
	}
	{
		{
			s.XrayUptime = "string"
		}
	}
	{
		{
			s.IsTrafficTrackingActive = true
		}
	}
	{
		{
			s.TrafficResetDay.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficUsedBytes.SetFake()
		}
	}
	{
		{
			s.NotifyPercent.SetFake()
		}
	}
	{
		{
			s.UsersOnline.SetFake()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
	{
		{
			s.ConsumptionMultiplier = float64(0)
		}
	}
	{
		{
			s.CpuCount.SetFake()
		}
	}
	{
		{
			s.CpuModel.SetFake()
		}
	}
	{
		{
			s.TotalRam.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ConfigProfile.SetFake()
		}
	}
	{
		{
			s.ProviderUuid.SetFake()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ReorderNodeResponseDtoResponseItemConfigProfile) SetFake() {
	{
		{
			s.ActiveConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ActiveInbounds = nil
			for i := 0; i < 0; i++ {
				var elem ReorderNodeResponseDtoResponseItemConfigProfileActiveInboundsItem
				{
					elem.SetFake()
				}
				s.ActiveInbounds = append(s.ActiveInbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *ReorderNodeResponseDtoResponseItemConfigProfileActiveInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *ReorderNodeResponseDtoResponseItemProvider) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *ResetUserTrafficResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ResetUserTrafficResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.UsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.LifetimeUsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.SubLastUserAgent.SetFake()
		}
	}
	{
		{
			s.SubLastOpenedAt.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.OnlineAt.SetFake()
		}
	}
	{
		{
			s.SubRevokedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessUuid = uuid.New()
		}
	}
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.FirstConnectedAt.SetFake()
		}
	}
	{
		{
			s.LastTriggeredThreshold.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem ResetUserTrafficResponseDtoResponseActiveInternalSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.LastConnectedNode.SetFake()
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ResetUserTrafficResponseDtoResponseActiveInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *ResetUserTrafficResponseDtoResponseHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *ResetUserTrafficResponseDtoResponseLastConnectedNode) SetFake() {
	{
		{
			s.ConnectedAt = time.Now()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *ResetUserTrafficResponseDtoResponseStatus) SetFake() {
	*s = ResetUserTrafficResponseDtoResponseStatusACTIVE
}

// SetFake set fake values.
func (s *ResetUserTrafficResponseDtoResponseTrafficLimitStrategy) SetFake() {
	*s = ResetUserTrafficResponseDtoResponseTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *RestartAllNodesRequestBodyDto) SetFake() {
	{
		{
			s.ForceRestart.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *RestartAllNodesResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *RestartAllNodesResponseDtoResponse) SetFake() {
	{
		{
			s.EventSent = true
		}
	}
}

// SetFake set fake values.
func (s *RestartNodeResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *RestartNodeResponseDtoResponse) SetFake() {
	{
		{
			s.EventSent = true
		}
	}
}

// SetFake set fake values.
func (s *RevokeUserSubscriptionBodyDto) SetFake() {
	{
		{
			s.ShortUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *RevokeUserSubscriptionResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.UsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.LifetimeUsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.SubLastUserAgent.SetFake()
		}
	}
	{
		{
			s.SubLastOpenedAt.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.OnlineAt.SetFake()
		}
	}
	{
		{
			s.SubRevokedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessUuid = uuid.New()
		}
	}
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.FirstConnectedAt.SetFake()
		}
	}
	{
		{
			s.LastTriggeredThreshold.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem RevokeUserSubscriptionResponseDtoResponseActiveInternalSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.LastConnectedNode.SetFake()
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *RevokeUserSubscriptionResponseDtoResponseActiveInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *RevokeUserSubscriptionResponseDtoResponseHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *RevokeUserSubscriptionResponseDtoResponseLastConnectedNode) SetFake() {
	{
		{
			s.ConnectedAt = time.Now()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *RevokeUserSubscriptionResponseDtoResponseStatus) SetFake() {
	*s = RevokeUserSubscriptionResponseDtoResponseStatusACTIVE
}

// SetFake set fake values.
func (s *RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy) SetFake() {
	*s = RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *SetInboundToManyHostsRequestDto) SetFake() {
	{
		{
			s.Uuids = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Uuids = append(s.Uuids, elem)
			}
		}
	}
	{
		{
			s.ConfigProfileUuid = uuid.New()
		}
	}
	{
		{
			s.ConfigProfileInboundUuid = uuid.New()
		}
	}
}

// SetFake set fake values.
func (s *SetInboundToManyHostsResponseDto) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem SetInboundToManyHostsResponseDtoResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SetInboundToManyHostsResponseDtoResponseItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.Remark = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port = int(0)
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Sni.SetFake()
		}
	}
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.Alpn.SetFake()
		}
	}
	{
		{
			s.Fingerprint.SetFake()
		}
	}
	{
		{
			s.IsDisabled.SetFake()
		}
	}
	{
		{
			s.SecurityLayer.SetFake()
		}
	}
	{
		{
			s.XHttpExtraParams = []byte("null")
		}
	}
	{
		{
			s.MuxParams = []byte("null")
		}
	}
	{
		{
			s.SockoptParams = []byte("null")
		}
	}
	{
		{
			s.Inbound.SetFake()
		}
	}
	{
		{
			s.ServerDescription.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.IsHidden.SetFake()
		}
	}
	{
		{
			s.OverrideSniFromAddress.SetFake()
		}
	}
	{
		{
			s.VlessRouteId.SetFake()
		}
	}
	{
		{
			s.AllowInsecure.SetFake()
		}
	}
	{
		{
			s.ShuffleHost = true
		}
	}
	{
		{
			s.MihomoX25519 = true
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SetInboundToManyHostsResponseDtoResponseItemInbound) SetFake() {
	{
		{
			s.ConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ConfigProfileInboundUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SetInboundToManyHostsResponseDtoResponseItemSecurityLayer) SetFake() {
	*s = SetInboundToManyHostsResponseDtoResponseItemSecurityLayerDEFAULT
}

// SetFake set fake values.
func (s *SetPortToManyHostsRequestDto) SetFake() {
	{
		{
			s.Uuids = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Uuids = append(s.Uuids, elem)
			}
		}
	}
	{
		{
			s.Port = int(0)
		}
	}
}

// SetFake set fake values.
func (s *SetPortToManyHostsResponseDto) SetFake() {
	{
		{
			s.Response = nil
			for i := 0; i < 0; i++ {
				var elem SetPortToManyHostsResponseDtoResponseItem
				{
					elem.SetFake()
				}
				s.Response = append(s.Response, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SetPortToManyHostsResponseDtoResponseItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.Remark = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port = int(0)
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Sni.SetFake()
		}
	}
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.Alpn.SetFake()
		}
	}
	{
		{
			s.Fingerprint.SetFake()
		}
	}
	{
		{
			s.IsDisabled.SetFake()
		}
	}
	{
		{
			s.SecurityLayer.SetFake()
		}
	}
	{
		{
			s.XHttpExtraParams = []byte("null")
		}
	}
	{
		{
			s.MuxParams = []byte("null")
		}
	}
	{
		{
			s.SockoptParams = []byte("null")
		}
	}
	{
		{
			s.Inbound.SetFake()
		}
	}
	{
		{
			s.ServerDescription.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.IsHidden.SetFake()
		}
	}
	{
		{
			s.OverrideSniFromAddress.SetFake()
		}
	}
	{
		{
			s.VlessRouteId.SetFake()
		}
	}
	{
		{
			s.AllowInsecure.SetFake()
		}
	}
	{
		{
			s.ShuffleHost = true
		}
	}
	{
		{
			s.MihomoX25519 = true
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SetPortToManyHostsResponseDtoResponseItemInbound) SetFake() {
	{
		{
			s.ConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ConfigProfileInboundUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SetPortToManyHostsResponseDtoResponseItemSecurityLayer) SetFake() {
	*s = SetPortToManyHostsResponseDtoResponseItemSecurityLayerDEFAULT
}

// SetFake set fake values.
func (s *SubscriptionControllerGetSubscriptionInfoByShortUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionSettingsControllerGetSettingsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionSettingsControllerUpdateSettingsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionTemplateControllerGetTemplateInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionTemplateControllerUpdateTemplateInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetAllSubscriptionsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetRawSubscriptionByShortUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedNotFound) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetSubscriptionByUsernameInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetSubscriptionByUsernameNotFound) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetSubscriptionByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SubscriptionsControllerGetSubscriptionByUuidNotFound) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerEncryptHappCryptoLinkInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerGetBandwidthStatsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerGetNodesMetricsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerGetNodesStatisticsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerGetRemnawaveHealthInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerGetStatsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SystemControllerGetX25519KeypairsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *TelegramCallbackRequestDto) SetFake() {
	{
		{
			s.ID = float64(0)
		}
	}
	{
		{
			s.FirstName = "string"
		}
	}
	{
		{
			s.LastName.SetFake()
		}
	}
	{
		{
			s.Username.SetFake()
		}
	}
	{
		{
			s.PhotoURL.SetFake()
		}
	}
	{
		{
			s.AuthDate = float64(0)
		}
	}
	{
		{
			s.Hash = "string"
		}
	}
}

// SetFake set fake values.
func (s *UpdateConfigProfileRequestDto) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{ // Keep pointer nil to prevent infinite recursion.
			s.Config = nil
		}
	}
}

// SetFake set fake values.
func (s *UpdateConfigProfileRequestDtoConfig) SetFake() {
}

// SetFake set fake values.
func (s *UpdateConfigProfileResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateConfigProfileResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Config = []byte("null")
		}
	}
	{
		{
			s.Inbounds = nil
			for i := 0; i < 0; i++ {
				var elem UpdateConfigProfileResponseDtoResponseInboundsItem
				{
					elem.SetFake()
				}
				s.Inbounds = append(s.Inbounds, elem)
			}
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem UpdateConfigProfileResponseDtoResponseNodesItem
				{
					elem.SetFake()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *UpdateConfigProfileResponseDtoResponseInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *UpdateConfigProfileResponseDtoResponseNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *UpdateHostRequestDto) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Inbound.SetFake()
		}
	}
	{
		{
			s.Remark.SetFake()
		}
	}
	{
		{
			s.Address.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Sni.SetFake()
		}
	}
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.Alpn.SetFake()
		}
	}
	{
		{
			s.Fingerprint.SetFake()
		}
	}
	{
		{
			s.IsDisabled.SetFake()
		}
	}
	{
		{
			s.SecurityLayer.SetFake()
		}
	}
	{
		{
			s.XHttpExtraParams = []byte("null")
		}
	}
	{
		{
			s.MuxParams = []byte("null")
		}
	}
	{
		{
			s.SockoptParams = []byte("null")
		}
	}
	{
		{
			s.ServerDescription.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.IsHidden.SetFake()
		}
	}
	{
		{
			s.OverrideSniFromAddress.SetFake()
		}
	}
	{
		{
			s.VlessRouteId.SetFake()
		}
	}
	{
		{
			s.AllowInsecure.SetFake()
		}
	}
	{
		{
			s.ShuffleHost.SetFake()
		}
	}
	{
		{
			s.MihomoX25519.SetFake()
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UpdateHostRequestDtoAlpn) SetFake() {
	*s = UpdateHostRequestDtoAlpnH3
}

// SetFake set fake values.
func (s *UpdateHostRequestDtoFingerprint) SetFake() {
	*s = UpdateHostRequestDtoFingerprintChrome
}

// SetFake set fake values.
func (s *UpdateHostRequestDtoInbound) SetFake() {
	{
		{
			s.ConfigProfileUuid = uuid.New()
		}
	}
	{
		{
			s.ConfigProfileInboundUuid = uuid.New()
		}
	}
}

// SetFake set fake values.
func (s *UpdateHostRequestDtoSecurityLayer) SetFake() {
	*s = UpdateHostRequestDtoSecurityLayerDEFAULT
}

// SetFake set fake values.
func (s *UpdateHostResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateHostResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.Remark = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port = int(0)
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Sni.SetFake()
		}
	}
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.Alpn.SetFake()
		}
	}
	{
		{
			s.Fingerprint.SetFake()
		}
	}
	{
		{
			s.IsDisabled.SetFake()
		}
	}
	{
		{
			s.SecurityLayer.SetFake()
		}
	}
	{
		{
			s.XHttpExtraParams = []byte("null")
		}
	}
	{
		{
			s.MuxParams = []byte("null")
		}
	}
	{
		{
			s.SockoptParams = []byte("null")
		}
	}
	{
		{
			s.Inbound.SetFake()
		}
	}
	{
		{
			s.ServerDescription.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.IsHidden.SetFake()
		}
	}
	{
		{
			s.OverrideSniFromAddress.SetFake()
		}
	}
	{
		{
			s.VlessRouteId.SetFake()
		}
	}
	{
		{
			s.AllowInsecure.SetFake()
		}
	}
	{
		{
			s.ShuffleHost = true
		}
	}
	{
		{
			s.MihomoX25519 = true
		}
	}
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UpdateHostResponseDtoResponseInbound) SetFake() {
	{
		{
			s.ConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ConfigProfileInboundUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateHostResponseDtoResponseSecurityLayer) SetFake() {
	*s = UpdateHostResponseDtoResponseSecurityLayerDEFAULT
}

// SetFake set fake values.
func (s *UpdateInfraBillingNodeRequestDto) SetFake() {
	{
		{
			s.Uuids = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Uuids = append(s.Uuids, elem)
			}
		}
	}
	{
		{
			s.NextBillingAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *UpdateInfraBillingNodeResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateInfraBillingNodeResponseDtoResponse) SetFake() {
	{
		{
			s.TotalBillingNodes = float64(0)
		}
	}
	{
		{
			s.BillingNodes = nil
			for i := 0; i < 0; i++ {
				var elem UpdateInfraBillingNodeResponseDtoResponseBillingNodesItem
				{
					elem.SetFake()
				}
				s.BillingNodes = append(s.BillingNodes, elem)
			}
		}
	}
	{
		{
			s.AvailableBillingNodes = nil
			for i := 0; i < 0; i++ {
				var elem UpdateInfraBillingNodeResponseDtoResponseAvailableBillingNodesItem
				{
					elem.SetFake()
				}
				s.AvailableBillingNodes = append(s.AvailableBillingNodes, elem)
			}
		}
	}
	{
		{
			s.TotalAvailableBillingNodes = float64(0)
		}
	}
	{
		{
			s.Stats.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateInfraBillingNodeResponseDtoResponseAvailableBillingNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *UpdateInfraBillingNodeResponseDtoResponseBillingNodesItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.ProviderUuid = uuid.New()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
	{
		{
			s.Node.SetFake()
		}
	}
	{
		{
			s.NextBillingAt = time.Now()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *UpdateInfraBillingNodeResponseDtoResponseBillingNodesItemNode) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *UpdateInfraBillingNodeResponseDtoResponseBillingNodesItemProvider) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateInfraBillingNodeResponseDtoResponseStats) SetFake() {
	{
		{
			s.UpcomingNodesCount = float64(0)
		}
	}
	{
		{
			s.CurrentMonthPayments = float64(0)
		}
	}
	{
		{
			s.TotalSpent = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *UpdateInfraProviderRequestDto) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateInfraProviderResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateInfraProviderResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.BillingHistory.SetFake()
		}
	}
	{
		{
			s.BillingNodes = nil
			for i := 0; i < 0; i++ {
				var elem UpdateInfraProviderResponseDtoResponseBillingNodesItem
				{
					elem.SetFake()
				}
				s.BillingNodes = append(s.BillingNodes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UpdateInfraProviderResponseDtoResponseBillingHistory) SetFake() {
	{
		{
			s.TotalAmount = float64(0)
		}
	}
	{
		{
			s.TotalBills = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *UpdateInfraProviderResponseDtoResponseBillingNodesItem) SetFake() {
	{
		{
			s.NodeUuid = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *UpdateInternalSquadRequestDto) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Inbounds = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.Inbounds = append(s.Inbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UpdateInternalSquadResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateInternalSquadResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Info.SetFake()
		}
	}
	{
		{
			s.Inbounds = nil
			for i := 0; i < 0; i++ {
				var elem UpdateInternalSquadResponseDtoResponseInboundsItem
				{
					elem.SetFake()
				}
				s.Inbounds = append(s.Inbounds, elem)
			}
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *UpdateInternalSquadResponseDtoResponseInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *UpdateInternalSquadResponseDtoResponseInfo) SetFake() {
	{
		{
			s.MembersCount = float64(0)
		}
	}
	{
		{
			s.InboundsCount = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *UpdateNodeRequestDto) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Address.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.IsTrafficTrackingActive.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.NotifyPercent.SetFake()
		}
	}
	{
		{
			s.TrafficResetDay.SetFake()
		}
	}
	{
		{
			s.CountryCode.SetFake()
		}
	}
	{
		{
			s.ConsumptionMultiplier.SetFake()
		}
	}
	{
		{
			s.ConfigProfile.SetFake()
		}
	}
	{
		{
			s.ProviderUuid.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateNodeRequestDtoConfigProfile) SetFake() {
	{
		{
			s.ActiveConfigProfileUuid = uuid.New()
		}
	}
	{
		{
			s.ActiveInbounds = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.ActiveInbounds = append(s.ActiveInbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UpdateNodeResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateNodeResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.IsConnected = true
		}
	}
	{
		{
			s.IsDisabled = true
		}
	}
	{
		{
			s.IsConnecting = true
		}
	}
	{
		{
			s.IsNodeOnline = true
		}
	}
	{
		{
			s.IsXrayRunning = true
		}
	}
	{
		{
			s.LastStatusChange.SetFake()
		}
	}
	{
		{
			s.LastStatusMessage.SetFake()
		}
	}
	{
		{
			s.XrayVersion.SetFake()
		}
	}
	{
		{
			s.NodeVersion.SetFake()
		}
	}
	{
		{
			s.XrayUptime = "string"
		}
	}
	{
		{
			s.IsTrafficTrackingActive = true
		}
	}
	{
		{
			s.TrafficResetDay.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficUsedBytes.SetFake()
		}
	}
	{
		{
			s.NotifyPercent.SetFake()
		}
	}
	{
		{
			s.UsersOnline.SetFake()
		}
	}
	{
		{
			s.ViewPosition = int(0)
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
	{
		{
			s.ConsumptionMultiplier = float64(0)
		}
	}
	{
		{
			s.CpuCount.SetFake()
		}
	}
	{
		{
			s.CpuModel.SetFake()
		}
	}
	{
		{
			s.TotalRam.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ConfigProfile.SetFake()
		}
	}
	{
		{
			s.ProviderUuid.SetFake()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateNodeResponseDtoResponseConfigProfile) SetFake() {
	{
		{
			s.ActiveConfigProfileUuid.SetFake()
		}
	}
	{
		{
			s.ActiveInbounds = nil
			for i := 0; i < 0; i++ {
				var elem UpdateNodeResponseDtoResponseConfigProfileActiveInboundsItem
				{
					elem.SetFake()
				}
				s.ActiveInbounds = append(s.ActiveInbounds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UpdateNodeResponseDtoResponseConfigProfileActiveInboundsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileUuid = uuid.New()
		}
	}
	{
		{
			s.Tag = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Network.SetFake()
		}
	}
	{
		{
			s.Security.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.RawInbound = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *UpdateNodeResponseDtoResponseProvider) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.FaviconLink.SetFake()
		}
	}
	{
		{
			s.LoginUrl.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *UpdateSubscriptionSettingsRequestDto) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileTitle.SetFake()
		}
	}
	{
		{
			s.SupportLink.SetFake()
		}
	}
	{
		{
			s.ProfileUpdateInterval.SetFake()
		}
	}
	{
		{
			s.IsProfileWebpageUrlEnabled.SetFake()
		}
	}
	{
		{
			s.ServeJsonAtBaseSubscription.SetFake()
		}
	}
	{
		{
			s.AddUsernameToBaseSubscription.SetFake()
		}
	}
	{
		{
			s.IsShowCustomRemarks.SetFake()
		}
	}
	{
		{
			s.HappAnnounce.SetFake()
		}
	}
	{
		{
			s.HappRouting.SetFake()
		}
	}
	{
		{
			s.ExpiredUsersRemarks = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ExpiredUsersRemarks = append(s.ExpiredUsersRemarks, elem)
			}
		}
	}
	{
		{
			s.LimitedUsersRemarks = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.LimitedUsersRemarks = append(s.LimitedUsersRemarks, elem)
			}
		}
	}
	{
		{
			s.DisabledUsersRemarks = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.DisabledUsersRemarks = append(s.DisabledUsersRemarks, elem)
			}
		}
	}
	{
		{
			s.CustomResponseHeaders.SetFake()
		}
	}
	{
		{
			s.RandomizeHosts.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *UpdateSubscriptionSettingsResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ProfileTitle = "string"
		}
	}
	{
		{
			s.SupportLink = "string"
		}
	}
	{
		{
			s.ProfileUpdateInterval = int(0)
		}
	}
	{
		{
			s.IsProfileWebpageUrlEnabled = true
		}
	}
	{
		{
			s.ServeJsonAtBaseSubscription = true
		}
	}
	{
		{
			s.AddUsernameToBaseSubscription = true
		}
	}
	{
		{
			s.IsShowCustomRemarks = true
		}
	}
	{
		{
			s.HappAnnounce.SetFake()
		}
	}
	{
		{
			s.HappRouting.SetFake()
		}
	}
	{
		{
			s.ExpiredUsersRemarks = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ExpiredUsersRemarks = append(s.ExpiredUsersRemarks, elem)
			}
		}
	}
	{
		{
			s.LimitedUsersRemarks = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.LimitedUsersRemarks = append(s.LimitedUsersRemarks, elem)
			}
		}
	}
	{
		{
			s.DisabledUsersRemarks = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.DisabledUsersRemarks = append(s.DisabledUsersRemarks, elem)
			}
		}
	}
	{
		{
			s.CustomResponseHeaders.SetFake()
		}
	}
	{
		{
			s.RandomizeHosts = true
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *UpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *UpdateTemplateRequestDto) SetFake() {
	{
		{
			s.TemplateType.SetFake()
		}
	}
	{
		{ // Keep pointer nil to prevent infinite recursion.
			s.TemplateJson = nil
		}
	}
	{
		{
			s.EncodedTemplateYaml.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateTemplateRequestDtoTemplateJson) SetFake() {
}

// SetFake set fake values.
func (s *UpdateTemplateRequestDtoTemplateType) SetFake() {
	*s = UpdateTemplateRequestDtoTemplateTypeSTASH
}

// SetFake set fake values.
func (s *UpdateTemplateResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateTemplateResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.TemplateType.SetFake()
		}
	}
	{
		{
			s.TemplateJson = []byte("null")
		}
	}
	{
		{
			s.EncodedTemplateYaml.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateTemplateResponseDtoResponseTemplateType) SetFake() {
	*s = UpdateTemplateResponseDtoResponseTemplateTypeSTASH
}

// SetFake set fake values.
func (s *UpdateUserRequestDto) SetFake() {
	{
		{
			s.Username.SetFake()
		}
	}
	{
		{
			s.UUID.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.ExpireAt.SetFake()
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UpdateUserRequestDtoStatus) SetFake() {
	*s = UpdateUserRequestDtoStatusACTIVE
}

// SetFake set fake values.
func (s *UpdateUserRequestDtoTrafficLimitStrategy) SetFake() {
	*s = UpdateUserRequestDtoTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *UpdateUserResponseDto) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateUserResponseDtoResponse) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.ShortUuid = "string"
		}
	}
	{
		{
			s.Username = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.UsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.LifetimeUsedTrafficBytes = float64(0)
		}
	}
	{
		{
			s.TrafficLimitBytes.SetFake()
		}
	}
	{
		{
			s.TrafficLimitStrategy.SetFake()
		}
	}
	{
		{
			s.SubLastUserAgent.SetFake()
		}
	}
	{
		{
			s.SubLastOpenedAt.SetFake()
		}
	}
	{
		{
			s.ExpireAt = time.Now()
		}
	}
	{
		{
			s.OnlineAt.SetFake()
		}
	}
	{
		{
			s.SubRevokedAt.SetFake()
		}
	}
	{
		{
			s.LastTrafficResetAt.SetFake()
		}
	}
	{
		{
			s.TrojanPassword = "string"
		}
	}
	{
		{
			s.VlessUuid = uuid.New()
		}
	}
	{
		{
			s.SsPassword = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Tag.SetFake()
		}
	}
	{
		{
			s.TelegramId.SetFake()
		}
	}
	{
		{
			s.Email.SetFake()
		}
	}
	{
		{
			s.HwidDeviceLimit.SetFake()
		}
	}
	{
		{
			s.FirstConnectedAt.SetFake()
		}
	}
	{
		{
			s.LastTriggeredThreshold.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
	{
		{
			s.ActiveInternalSquads = nil
			for i := 0; i < 0; i++ {
				var elem UpdateUserResponseDtoResponseActiveInternalSquadsItem
				{
					elem.SetFake()
				}
				s.ActiveInternalSquads = append(s.ActiveInternalSquads, elem)
			}
		}
	}
	{
		{
			s.SubscriptionUrl = "string"
		}
	}
	{
		{
			s.LastConnectedNode.SetFake()
		}
	}
	{
		{
			s.Happ.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UpdateUserResponseDtoResponseActiveInternalSquadsItem) SetFake() {
	{
		{
			s.UUID = uuid.New()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *UpdateUserResponseDtoResponseHapp) SetFake() {
	{
		{
			s.CryptoLink = "string"
		}
	}
}

// SetFake set fake values.
func (s *UpdateUserResponseDtoResponseLastConnectedNode) SetFake() {
	{
		{
			s.ConnectedAt = time.Now()
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.CountryCode = "string"
		}
	}
}

// SetFake set fake values.
func (s *UpdateUserResponseDtoResponseStatus) SetFake() {
	*s = UpdateUserResponseDtoResponseStatusACTIVE
}

// SetFake set fake values.
func (s *UpdateUserResponseDtoResponseTrafficLimitStrategy) SetFake() {
	*s = UpdateUserResponseDtoResponseTrafficLimitStrategyNORESET
}

// SetFake set fake values.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkAllResetUserTrafficInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkDeleteUsersByStatusInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkDeleteUsersInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkResetUserTrafficInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkRevokeUsersSubscriptionInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkUpdateAllUsersInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalSquadsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerCreateUserInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerDeleteUserInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerDisableUserInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerEnableUserInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetAllTagsInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetAllUsersInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUserAccessibleNodesInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUserByShortUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUserByTelegramIdInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUserByUsernameInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUserByUuidInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUserSubscriptionRequestHistoryInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUsersByEmailInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerGetUsersByTagInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerResetUserTrafficInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerRevokeUserSubscriptionInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersControllerUpdateUserInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UsersStatsControllerGetUserUsageByRangeInternalServerError) SetFake() {
	{
		{
			s.Timestamp.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
}
