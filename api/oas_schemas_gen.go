// Code generated by ogen, DO NOT EDIT.

package api

import (
	"net/url"
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
	"github.com/google/uuid"
)

type ApiTokensControllerCreateBadRequest struct {
	Message    OptString                                       `json:"message"`
	StatusCode OptFloat64                                      `json:"statusCode"`
	Errors     []ApiTokensControllerCreateBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *ApiTokensControllerCreateBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *ApiTokensControllerCreateBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *ApiTokensControllerCreateBadRequest) GetErrors() []ApiTokensControllerCreateBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *ApiTokensControllerCreateBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *ApiTokensControllerCreateBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *ApiTokensControllerCreateBadRequest) SetErrors(val []ApiTokensControllerCreateBadRequestErrorsItem) {
	s.Errors = val
}

func (*ApiTokensControllerCreateBadRequest) apiTokensControllerCreateRes() {}

type ApiTokensControllerCreateBadRequestErrorsItem struct{}

type ApiTokensControllerCreateInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *ApiTokensControllerCreateInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *ApiTokensControllerCreateInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *ApiTokensControllerCreateInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *ApiTokensControllerCreateInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *ApiTokensControllerCreateInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *ApiTokensControllerCreateInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *ApiTokensControllerCreateInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *ApiTokensControllerCreateInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*ApiTokensControllerCreateInternalServerError) apiTokensControllerCreateRes() {}

type ApiTokensControllerDeleteBadRequest struct {
	Message    OptString                                       `json:"message"`
	StatusCode OptFloat64                                      `json:"statusCode"`
	Errors     []ApiTokensControllerDeleteBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *ApiTokensControllerDeleteBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *ApiTokensControllerDeleteBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *ApiTokensControllerDeleteBadRequest) GetErrors() []ApiTokensControllerDeleteBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *ApiTokensControllerDeleteBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *ApiTokensControllerDeleteBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *ApiTokensControllerDeleteBadRequest) SetErrors(val []ApiTokensControllerDeleteBadRequestErrorsItem) {
	s.Errors = val
}

func (*ApiTokensControllerDeleteBadRequest) apiTokensControllerDeleteRes() {}

type ApiTokensControllerDeleteBadRequestErrorsItem struct{}

type ApiTokensControllerDeleteInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *ApiTokensControllerDeleteInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *ApiTokensControllerDeleteInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *ApiTokensControllerDeleteInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *ApiTokensControllerDeleteInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *ApiTokensControllerDeleteInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *ApiTokensControllerDeleteInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *ApiTokensControllerDeleteInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *ApiTokensControllerDeleteInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*ApiTokensControllerDeleteInternalServerError) apiTokensControllerDeleteRes() {}

type ApiTokensControllerFindAllBadRequest struct {
	Message    OptString                                        `json:"message"`
	StatusCode OptFloat64                                       `json:"statusCode"`
	Errors     []ApiTokensControllerFindAllBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *ApiTokensControllerFindAllBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *ApiTokensControllerFindAllBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *ApiTokensControllerFindAllBadRequest) GetErrors() []ApiTokensControllerFindAllBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *ApiTokensControllerFindAllBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *ApiTokensControllerFindAllBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *ApiTokensControllerFindAllBadRequest) SetErrors(val []ApiTokensControllerFindAllBadRequestErrorsItem) {
	s.Errors = val
}

func (*ApiTokensControllerFindAllBadRequest) apiTokensControllerFindAllRes() {}

type ApiTokensControllerFindAllBadRequestErrorsItem struct{}

type ApiTokensControllerFindAllInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *ApiTokensControllerFindAllInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *ApiTokensControllerFindAllInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *ApiTokensControllerFindAllInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *ApiTokensControllerFindAllInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *ApiTokensControllerFindAllInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *ApiTokensControllerFindAllInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *ApiTokensControllerFindAllInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *ApiTokensControllerFindAllInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*ApiTokensControllerFindAllInternalServerError) apiTokensControllerFindAllRes() {}

type AuthControllerGetStatusBadRequest struct {
	Message    OptString                                     `json:"message"`
	StatusCode OptFloat64                                    `json:"statusCode"`
	Errors     []AuthControllerGetStatusBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *AuthControllerGetStatusBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *AuthControllerGetStatusBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *AuthControllerGetStatusBadRequest) GetErrors() []AuthControllerGetStatusBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *AuthControllerGetStatusBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *AuthControllerGetStatusBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *AuthControllerGetStatusBadRequest) SetErrors(val []AuthControllerGetStatusBadRequestErrorsItem) {
	s.Errors = val
}

func (*AuthControllerGetStatusBadRequest) authControllerGetStatusRes() {}

type AuthControllerGetStatusBadRequestErrorsItem struct{}

type AuthControllerGetStatusInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *AuthControllerGetStatusInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *AuthControllerGetStatusInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *AuthControllerGetStatusInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *AuthControllerGetStatusInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *AuthControllerGetStatusInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *AuthControllerGetStatusInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *AuthControllerGetStatusInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *AuthControllerGetStatusInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*AuthControllerGetStatusInternalServerError) authControllerGetStatusRes() {}

type AuthControllerLoginBadRequest struct {
	Message    OptString                                 `json:"message"`
	StatusCode OptFloat64                                `json:"statusCode"`
	Errors     []AuthControllerLoginBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *AuthControllerLoginBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *AuthControllerLoginBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *AuthControllerLoginBadRequest) GetErrors() []AuthControllerLoginBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *AuthControllerLoginBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *AuthControllerLoginBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *AuthControllerLoginBadRequest) SetErrors(val []AuthControllerLoginBadRequestErrorsItem) {
	s.Errors = val
}

func (*AuthControllerLoginBadRequest) authControllerLoginRes() {}

type AuthControllerLoginBadRequestErrorsItem struct{}

type AuthControllerLoginInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *AuthControllerLoginInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *AuthControllerLoginInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *AuthControllerLoginInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *AuthControllerLoginInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *AuthControllerLoginInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *AuthControllerLoginInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *AuthControllerLoginInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *AuthControllerLoginInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*AuthControllerLoginInternalServerError) authControllerLoginRes() {}

type AuthControllerLoginUnauthorized struct {
	StatusCode OptFloat64 `json:"statusCode"`
	Message    OptString  `json:"message"`
	Error      OptString  `json:"error"`
}

// GetStatusCode returns the value of StatusCode.
func (s *AuthControllerLoginUnauthorized) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetMessage returns the value of Message.
func (s *AuthControllerLoginUnauthorized) GetMessage() OptString {
	return s.Message
}

// GetError returns the value of Error.
func (s *AuthControllerLoginUnauthorized) GetError() OptString {
	return s.Error
}

// SetStatusCode sets the value of StatusCode.
func (s *AuthControllerLoginUnauthorized) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetMessage sets the value of Message.
func (s *AuthControllerLoginUnauthorized) SetMessage(val OptString) {
	s.Message = val
}

// SetError sets the value of Error.
func (s *AuthControllerLoginUnauthorized) SetError(val OptString) {
	s.Error = val
}

func (*AuthControllerLoginUnauthorized) authControllerLoginRes() {}

type AuthControllerOauth2AuthorizeBadRequest struct {
	Message    OptString                                           `json:"message"`
	StatusCode OptFloat64                                          `json:"statusCode"`
	Errors     []AuthControllerOauth2AuthorizeBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *AuthControllerOauth2AuthorizeBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *AuthControllerOauth2AuthorizeBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *AuthControllerOauth2AuthorizeBadRequest) GetErrors() []AuthControllerOauth2AuthorizeBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *AuthControllerOauth2AuthorizeBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *AuthControllerOauth2AuthorizeBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *AuthControllerOauth2AuthorizeBadRequest) SetErrors(val []AuthControllerOauth2AuthorizeBadRequestErrorsItem) {
	s.Errors = val
}

func (*AuthControllerOauth2AuthorizeBadRequest) authControllerOauth2AuthorizeRes() {}

type AuthControllerOauth2AuthorizeBadRequestErrorsItem struct{}

type AuthControllerOauth2AuthorizeInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *AuthControllerOauth2AuthorizeInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *AuthControllerOauth2AuthorizeInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *AuthControllerOauth2AuthorizeInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *AuthControllerOauth2AuthorizeInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *AuthControllerOauth2AuthorizeInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *AuthControllerOauth2AuthorizeInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *AuthControllerOauth2AuthorizeInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *AuthControllerOauth2AuthorizeInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*AuthControllerOauth2AuthorizeInternalServerError) authControllerOauth2AuthorizeRes() {}

type AuthControllerOauth2CallbackBadRequest struct {
	Message    OptString                                          `json:"message"`
	StatusCode OptFloat64                                         `json:"statusCode"`
	Errors     []AuthControllerOauth2CallbackBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *AuthControllerOauth2CallbackBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *AuthControllerOauth2CallbackBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *AuthControllerOauth2CallbackBadRequest) GetErrors() []AuthControllerOauth2CallbackBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *AuthControllerOauth2CallbackBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *AuthControllerOauth2CallbackBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *AuthControllerOauth2CallbackBadRequest) SetErrors(val []AuthControllerOauth2CallbackBadRequestErrorsItem) {
	s.Errors = val
}

func (*AuthControllerOauth2CallbackBadRequest) authControllerOauth2CallbackRes() {}

type AuthControllerOauth2CallbackBadRequestErrorsItem struct{}

type AuthControllerOauth2CallbackInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *AuthControllerOauth2CallbackInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *AuthControllerOauth2CallbackInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *AuthControllerOauth2CallbackInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *AuthControllerOauth2CallbackInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *AuthControllerOauth2CallbackInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *AuthControllerOauth2CallbackInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *AuthControllerOauth2CallbackInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *AuthControllerOauth2CallbackInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*AuthControllerOauth2CallbackInternalServerError) authControllerOauth2CallbackRes() {}

type AuthControllerPasskeyAuthenticationOptionsBadRequest struct {
	Message    OptString                                                        `json:"message"`
	StatusCode OptFloat64                                                       `json:"statusCode"`
	Errors     []AuthControllerPasskeyAuthenticationOptionsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *AuthControllerPasskeyAuthenticationOptionsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *AuthControllerPasskeyAuthenticationOptionsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *AuthControllerPasskeyAuthenticationOptionsBadRequest) GetErrors() []AuthControllerPasskeyAuthenticationOptionsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *AuthControllerPasskeyAuthenticationOptionsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *AuthControllerPasskeyAuthenticationOptionsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *AuthControllerPasskeyAuthenticationOptionsBadRequest) SetErrors(val []AuthControllerPasskeyAuthenticationOptionsBadRequestErrorsItem) {
	s.Errors = val
}

func (*AuthControllerPasskeyAuthenticationOptionsBadRequest) authControllerPasskeyAuthenticationOptionsRes() {
}

type AuthControllerPasskeyAuthenticationOptionsBadRequestErrorsItem struct{}

type AuthControllerPasskeyAuthenticationOptionsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *AuthControllerPasskeyAuthenticationOptionsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *AuthControllerPasskeyAuthenticationOptionsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *AuthControllerPasskeyAuthenticationOptionsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *AuthControllerPasskeyAuthenticationOptionsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *AuthControllerPasskeyAuthenticationOptionsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *AuthControllerPasskeyAuthenticationOptionsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *AuthControllerPasskeyAuthenticationOptionsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *AuthControllerPasskeyAuthenticationOptionsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*AuthControllerPasskeyAuthenticationOptionsInternalServerError) authControllerPasskeyAuthenticationOptionsRes() {
}

type AuthControllerPasskeyAuthenticationVerifyBadRequest struct {
	Message    OptString                                                       `json:"message"`
	StatusCode OptFloat64                                                      `json:"statusCode"`
	Errors     []AuthControllerPasskeyAuthenticationVerifyBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *AuthControllerPasskeyAuthenticationVerifyBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *AuthControllerPasskeyAuthenticationVerifyBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *AuthControllerPasskeyAuthenticationVerifyBadRequest) GetErrors() []AuthControllerPasskeyAuthenticationVerifyBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *AuthControllerPasskeyAuthenticationVerifyBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *AuthControllerPasskeyAuthenticationVerifyBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *AuthControllerPasskeyAuthenticationVerifyBadRequest) SetErrors(val []AuthControllerPasskeyAuthenticationVerifyBadRequestErrorsItem) {
	s.Errors = val
}

func (*AuthControllerPasskeyAuthenticationVerifyBadRequest) authControllerPasskeyAuthenticationVerifyRes() {
}

type AuthControllerPasskeyAuthenticationVerifyBadRequestErrorsItem struct{}

type AuthControllerPasskeyAuthenticationVerifyInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *AuthControllerPasskeyAuthenticationVerifyInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *AuthControllerPasskeyAuthenticationVerifyInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *AuthControllerPasskeyAuthenticationVerifyInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *AuthControllerPasskeyAuthenticationVerifyInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *AuthControllerPasskeyAuthenticationVerifyInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *AuthControllerPasskeyAuthenticationVerifyInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *AuthControllerPasskeyAuthenticationVerifyInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *AuthControllerPasskeyAuthenticationVerifyInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*AuthControllerPasskeyAuthenticationVerifyInternalServerError) authControllerPasskeyAuthenticationVerifyRes() {
}

type AuthControllerRegisterBadRequest struct {
	Message    OptString                                    `json:"message"`
	StatusCode OptFloat64                                   `json:"statusCode"`
	Errors     []AuthControllerRegisterBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *AuthControllerRegisterBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *AuthControllerRegisterBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *AuthControllerRegisterBadRequest) GetErrors() []AuthControllerRegisterBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *AuthControllerRegisterBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *AuthControllerRegisterBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *AuthControllerRegisterBadRequest) SetErrors(val []AuthControllerRegisterBadRequestErrorsItem) {
	s.Errors = val
}

func (*AuthControllerRegisterBadRequest) authControllerRegisterRes() {}

type AuthControllerRegisterBadRequestErrorsItem struct{}

type AuthControllerRegisterForbidden struct {
	StatusCode OptFloat64 `json:"statusCode"`
	Message    OptString  `json:"message"`
	Error      OptString  `json:"error"`
}

// GetStatusCode returns the value of StatusCode.
func (s *AuthControllerRegisterForbidden) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetMessage returns the value of Message.
func (s *AuthControllerRegisterForbidden) GetMessage() OptString {
	return s.Message
}

// GetError returns the value of Error.
func (s *AuthControllerRegisterForbidden) GetError() OptString {
	return s.Error
}

// SetStatusCode sets the value of StatusCode.
func (s *AuthControllerRegisterForbidden) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetMessage sets the value of Message.
func (s *AuthControllerRegisterForbidden) SetMessage(val OptString) {
	s.Message = val
}

// SetError sets the value of Error.
func (s *AuthControllerRegisterForbidden) SetError(val OptString) {
	s.Error = val
}

func (*AuthControllerRegisterForbidden) authControllerRegisterRes() {}

type AuthControllerRegisterInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *AuthControllerRegisterInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *AuthControllerRegisterInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *AuthControllerRegisterInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *AuthControllerRegisterInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *AuthControllerRegisterInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *AuthControllerRegisterInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *AuthControllerRegisterInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *AuthControllerRegisterInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*AuthControllerRegisterInternalServerError) authControllerRegisterRes() {}

type AuthControllerTelegramCallbackBadRequest struct {
	Message    OptString                                            `json:"message"`
	StatusCode OptFloat64                                           `json:"statusCode"`
	Errors     []AuthControllerTelegramCallbackBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *AuthControllerTelegramCallbackBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *AuthControllerTelegramCallbackBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *AuthControllerTelegramCallbackBadRequest) GetErrors() []AuthControllerTelegramCallbackBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *AuthControllerTelegramCallbackBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *AuthControllerTelegramCallbackBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *AuthControllerTelegramCallbackBadRequest) SetErrors(val []AuthControllerTelegramCallbackBadRequestErrorsItem) {
	s.Errors = val
}

func (*AuthControllerTelegramCallbackBadRequest) authControllerTelegramCallbackRes() {}

type AuthControllerTelegramCallbackBadRequestErrorsItem struct{}

type AuthControllerTelegramCallbackInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *AuthControllerTelegramCallbackInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *AuthControllerTelegramCallbackInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *AuthControllerTelegramCallbackInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *AuthControllerTelegramCallbackInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *AuthControllerTelegramCallbackInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *AuthControllerTelegramCallbackInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *AuthControllerTelegramCallbackInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *AuthControllerTelegramCallbackInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*AuthControllerTelegramCallbackInternalServerError) authControllerTelegramCallbackRes() {}

type Authorization struct {
	Token string
	Roles []string
}

// GetToken returns the value of Token.
func (s *Authorization) GetToken() string {
	return s.Token
}

// GetRoles returns the value of Roles.
func (s *Authorization) GetRoles() []string {
	return s.Roles
}

// SetToken sets the value of Token.
func (s *Authorization) SetToken(val string) {
	s.Token = val
}

// SetRoles sets the value of Roles.
func (s *Authorization) SetRoles(val []string) {
	s.Roles = val
}

// Ref: #/components/schemas/BillingHistoryResponse
type BillingHistoryResponse struct {
	Response BillingHistoryResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *BillingHistoryResponse) GetResponse() BillingHistoryResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *BillingHistoryResponse) SetResponse(val BillingHistoryResponseResponse) {
	s.Response = val
}

func (*BillingHistoryResponse) infraBillingControllerCreateInfraBillingHistoryRecordRes()       {}
func (*BillingHistoryResponse) infraBillingControllerDeleteInfraBillingHistoryRecordByUuidRes() {}
func (*BillingHistoryResponse) infraBillingControllerGetInfraBillingHistoryRecordsRes()         {}

type BillingHistoryResponseResponse struct {
	Records []BillingHistoryResponseResponseRecordsItem `json:"records"`
	Total   float64                                     `json:"total"`
}

// GetRecords returns the value of Records.
func (s *BillingHistoryResponseResponse) GetRecords() []BillingHistoryResponseResponseRecordsItem {
	return s.Records
}

// GetTotal returns the value of Total.
func (s *BillingHistoryResponseResponse) GetTotal() float64 {
	return s.Total
}

// SetRecords sets the value of Records.
func (s *BillingHistoryResponseResponse) SetRecords(val []BillingHistoryResponseResponseRecordsItem) {
	s.Records = val
}

// SetTotal sets the value of Total.
func (s *BillingHistoryResponseResponse) SetTotal(val float64) {
	s.Total = val
}

type BillingHistoryResponseResponseRecordsItem struct {
	UUID         uuid.UUID                                         `json:"uuid"`
	ProviderUuid uuid.UUID                                         `json:"providerUuid"`
	Amount       float64                                           `json:"amount"`
	BilledAt     time.Time                                         `json:"billedAt"`
	Provider     BillingHistoryResponseResponseRecordsItemProvider `json:"provider"`
}

// GetUUID returns the value of UUID.
func (s *BillingHistoryResponseResponseRecordsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetProviderUuid returns the value of ProviderUuid.
func (s *BillingHistoryResponseResponseRecordsItem) GetProviderUuid() uuid.UUID {
	return s.ProviderUuid
}

// GetAmount returns the value of Amount.
func (s *BillingHistoryResponseResponseRecordsItem) GetAmount() float64 {
	return s.Amount
}

// GetBilledAt returns the value of BilledAt.
func (s *BillingHistoryResponseResponseRecordsItem) GetBilledAt() time.Time {
	return s.BilledAt
}

// GetProvider returns the value of Provider.
func (s *BillingHistoryResponseResponseRecordsItem) GetProvider() BillingHistoryResponseResponseRecordsItemProvider {
	return s.Provider
}

// SetUUID sets the value of UUID.
func (s *BillingHistoryResponseResponseRecordsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetProviderUuid sets the value of ProviderUuid.
func (s *BillingHistoryResponseResponseRecordsItem) SetProviderUuid(val uuid.UUID) {
	s.ProviderUuid = val
}

// SetAmount sets the value of Amount.
func (s *BillingHistoryResponseResponseRecordsItem) SetAmount(val float64) {
	s.Amount = val
}

// SetBilledAt sets the value of BilledAt.
func (s *BillingHistoryResponseResponseRecordsItem) SetBilledAt(val time.Time) {
	s.BilledAt = val
}

// SetProvider sets the value of Provider.
func (s *BillingHistoryResponseResponseRecordsItem) SetProvider(val BillingHistoryResponseResponseRecordsItemProvider) {
	s.Provider = val
}

type BillingHistoryResponseResponseRecordsItemProvider struct {
	UUID        uuid.UUID `json:"uuid"`
	Name        string    `json:"name"`
	FaviconLink NilString `json:"faviconLink"`
}

// GetUUID returns the value of UUID.
func (s *BillingHistoryResponseResponseRecordsItemProvider) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *BillingHistoryResponseResponseRecordsItemProvider) GetName() string {
	return s.Name
}

// GetFaviconLink returns the value of FaviconLink.
func (s *BillingHistoryResponseResponseRecordsItemProvider) GetFaviconLink() NilString {
	return s.FaviconLink
}

// SetUUID sets the value of UUID.
func (s *BillingHistoryResponseResponseRecordsItemProvider) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *BillingHistoryResponseResponseRecordsItemProvider) SetName(val string) {
	s.Name = val
}

// SetFaviconLink sets the value of FaviconLink.
func (s *BillingHistoryResponseResponseRecordsItemProvider) SetFaviconLink(val NilString) {
	s.FaviconLink = val
}

// Ref: #/components/schemas/BillingNodesResponse
type BillingNodesResponse struct {
	Response BillingNodesResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *BillingNodesResponse) GetResponse() BillingNodesResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *BillingNodesResponse) SetResponse(val BillingNodesResponseResponse) {
	s.Response = val
}

func (*BillingNodesResponse) infraBillingControllerCreateInfraBillingNodeRes()       {}
func (*BillingNodesResponse) infraBillingControllerDeleteInfraBillingNodeByUuidRes() {}
func (*BillingNodesResponse) infraBillingControllerGetBillingNodesRes()              {}
func (*BillingNodesResponse) infraBillingControllerUpdateInfraBillingNodeRes()       {}

type BillingNodesResponseResponse struct {
	TotalBillingNodes          float64                                                 `json:"totalBillingNodes"`
	BillingNodes               []BillingNodesResponseResponseBillingNodesItem          `json:"billingNodes"`
	AvailableBillingNodes      []BillingNodesResponseResponseAvailableBillingNodesItem `json:"availableBillingNodes"`
	TotalAvailableBillingNodes float64                                                 `json:"totalAvailableBillingNodes"`
	Stats                      BillingNodesResponseResponseStats                       `json:"stats"`
}

// GetTotalBillingNodes returns the value of TotalBillingNodes.
func (s *BillingNodesResponseResponse) GetTotalBillingNodes() float64 {
	return s.TotalBillingNodes
}

// GetBillingNodes returns the value of BillingNodes.
func (s *BillingNodesResponseResponse) GetBillingNodes() []BillingNodesResponseResponseBillingNodesItem {
	return s.BillingNodes
}

// GetAvailableBillingNodes returns the value of AvailableBillingNodes.
func (s *BillingNodesResponseResponse) GetAvailableBillingNodes() []BillingNodesResponseResponseAvailableBillingNodesItem {
	return s.AvailableBillingNodes
}

// GetTotalAvailableBillingNodes returns the value of TotalAvailableBillingNodes.
func (s *BillingNodesResponseResponse) GetTotalAvailableBillingNodes() float64 {
	return s.TotalAvailableBillingNodes
}

// GetStats returns the value of Stats.
func (s *BillingNodesResponseResponse) GetStats() BillingNodesResponseResponseStats {
	return s.Stats
}

// SetTotalBillingNodes sets the value of TotalBillingNodes.
func (s *BillingNodesResponseResponse) SetTotalBillingNodes(val float64) {
	s.TotalBillingNodes = val
}

// SetBillingNodes sets the value of BillingNodes.
func (s *BillingNodesResponseResponse) SetBillingNodes(val []BillingNodesResponseResponseBillingNodesItem) {
	s.BillingNodes = val
}

// SetAvailableBillingNodes sets the value of AvailableBillingNodes.
func (s *BillingNodesResponseResponse) SetAvailableBillingNodes(val []BillingNodesResponseResponseAvailableBillingNodesItem) {
	s.AvailableBillingNodes = val
}

// SetTotalAvailableBillingNodes sets the value of TotalAvailableBillingNodes.
func (s *BillingNodesResponseResponse) SetTotalAvailableBillingNodes(val float64) {
	s.TotalAvailableBillingNodes = val
}

// SetStats sets the value of Stats.
func (s *BillingNodesResponseResponse) SetStats(val BillingNodesResponseResponseStats) {
	s.Stats = val
}

type BillingNodesResponseResponseAvailableBillingNodesItem struct {
	UUID        uuid.UUID `json:"uuid"`
	Name        string    `json:"name"`
	CountryCode string    `json:"countryCode"`
}

// GetUUID returns the value of UUID.
func (s *BillingNodesResponseResponseAvailableBillingNodesItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *BillingNodesResponseResponseAvailableBillingNodesItem) GetName() string {
	return s.Name
}

// GetCountryCode returns the value of CountryCode.
func (s *BillingNodesResponseResponseAvailableBillingNodesItem) GetCountryCode() string {
	return s.CountryCode
}

// SetUUID sets the value of UUID.
func (s *BillingNodesResponseResponseAvailableBillingNodesItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *BillingNodesResponseResponseAvailableBillingNodesItem) SetName(val string) {
	s.Name = val
}

// SetCountryCode sets the value of CountryCode.
func (s *BillingNodesResponseResponseAvailableBillingNodesItem) SetCountryCode(val string) {
	s.CountryCode = val
}

type BillingNodesResponseResponseBillingNodesItem struct {
	UUID          uuid.UUID                                            `json:"uuid"`
	NodeUuid      uuid.UUID                                            `json:"nodeUuid"`
	ProviderUuid  uuid.UUID                                            `json:"providerUuid"`
	Provider      BillingNodesResponseResponseBillingNodesItemProvider `json:"provider"`
	Node          BillingNodesResponseResponseBillingNodesItemNode     `json:"node"`
	NextBillingAt time.Time                                            `json:"nextBillingAt"`
	CreatedAt     time.Time                                            `json:"createdAt"`
	UpdatedAt     time.Time                                            `json:"updatedAt"`
}

// GetUUID returns the value of UUID.
func (s *BillingNodesResponseResponseBillingNodesItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetNodeUuid returns the value of NodeUuid.
func (s *BillingNodesResponseResponseBillingNodesItem) GetNodeUuid() uuid.UUID {
	return s.NodeUuid
}

// GetProviderUuid returns the value of ProviderUuid.
func (s *BillingNodesResponseResponseBillingNodesItem) GetProviderUuid() uuid.UUID {
	return s.ProviderUuid
}

// GetProvider returns the value of Provider.
func (s *BillingNodesResponseResponseBillingNodesItem) GetProvider() BillingNodesResponseResponseBillingNodesItemProvider {
	return s.Provider
}

// GetNode returns the value of Node.
func (s *BillingNodesResponseResponseBillingNodesItem) GetNode() BillingNodesResponseResponseBillingNodesItemNode {
	return s.Node
}

// GetNextBillingAt returns the value of NextBillingAt.
func (s *BillingNodesResponseResponseBillingNodesItem) GetNextBillingAt() time.Time {
	return s.NextBillingAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *BillingNodesResponseResponseBillingNodesItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *BillingNodesResponseResponseBillingNodesItem) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetUUID sets the value of UUID.
func (s *BillingNodesResponseResponseBillingNodesItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetNodeUuid sets the value of NodeUuid.
func (s *BillingNodesResponseResponseBillingNodesItem) SetNodeUuid(val uuid.UUID) {
	s.NodeUuid = val
}

// SetProviderUuid sets the value of ProviderUuid.
func (s *BillingNodesResponseResponseBillingNodesItem) SetProviderUuid(val uuid.UUID) {
	s.ProviderUuid = val
}

// SetProvider sets the value of Provider.
func (s *BillingNodesResponseResponseBillingNodesItem) SetProvider(val BillingNodesResponseResponseBillingNodesItemProvider) {
	s.Provider = val
}

// SetNode sets the value of Node.
func (s *BillingNodesResponseResponseBillingNodesItem) SetNode(val BillingNodesResponseResponseBillingNodesItemNode) {
	s.Node = val
}

// SetNextBillingAt sets the value of NextBillingAt.
func (s *BillingNodesResponseResponseBillingNodesItem) SetNextBillingAt(val time.Time) {
	s.NextBillingAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *BillingNodesResponseResponseBillingNodesItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *BillingNodesResponseResponseBillingNodesItem) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type BillingNodesResponseResponseBillingNodesItemNode struct {
	UUID        uuid.UUID `json:"uuid"`
	Name        string    `json:"name"`
	CountryCode string    `json:"countryCode"`
}

// GetUUID returns the value of UUID.
func (s *BillingNodesResponseResponseBillingNodesItemNode) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *BillingNodesResponseResponseBillingNodesItemNode) GetName() string {
	return s.Name
}

// GetCountryCode returns the value of CountryCode.
func (s *BillingNodesResponseResponseBillingNodesItemNode) GetCountryCode() string {
	return s.CountryCode
}

// SetUUID sets the value of UUID.
func (s *BillingNodesResponseResponseBillingNodesItemNode) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *BillingNodesResponseResponseBillingNodesItemNode) SetName(val string) {
	s.Name = val
}

// SetCountryCode sets the value of CountryCode.
func (s *BillingNodesResponseResponseBillingNodesItemNode) SetCountryCode(val string) {
	s.CountryCode = val
}

type BillingNodesResponseResponseBillingNodesItemProvider struct {
	UUID        uuid.UUID `json:"uuid"`
	Name        string    `json:"name"`
	LoginUrl    NilString `json:"loginUrl"`
	FaviconLink NilString `json:"faviconLink"`
}

// GetUUID returns the value of UUID.
func (s *BillingNodesResponseResponseBillingNodesItemProvider) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *BillingNodesResponseResponseBillingNodesItemProvider) GetName() string {
	return s.Name
}

// GetLoginUrl returns the value of LoginUrl.
func (s *BillingNodesResponseResponseBillingNodesItemProvider) GetLoginUrl() NilString {
	return s.LoginUrl
}

// GetFaviconLink returns the value of FaviconLink.
func (s *BillingNodesResponseResponseBillingNodesItemProvider) GetFaviconLink() NilString {
	return s.FaviconLink
}

// SetUUID sets the value of UUID.
func (s *BillingNodesResponseResponseBillingNodesItemProvider) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *BillingNodesResponseResponseBillingNodesItemProvider) SetName(val string) {
	s.Name = val
}

// SetLoginUrl sets the value of LoginUrl.
func (s *BillingNodesResponseResponseBillingNodesItemProvider) SetLoginUrl(val NilString) {
	s.LoginUrl = val
}

// SetFaviconLink sets the value of FaviconLink.
func (s *BillingNodesResponseResponseBillingNodesItemProvider) SetFaviconLink(val NilString) {
	s.FaviconLink = val
}

type BillingNodesResponseResponseStats struct {
	UpcomingNodesCount   float64 `json:"upcomingNodesCount"`
	CurrentMonthPayments float64 `json:"currentMonthPayments"`
	TotalSpent           float64 `json:"totalSpent"`
}

// GetUpcomingNodesCount returns the value of UpcomingNodesCount.
func (s *BillingNodesResponseResponseStats) GetUpcomingNodesCount() float64 {
	return s.UpcomingNodesCount
}

// GetCurrentMonthPayments returns the value of CurrentMonthPayments.
func (s *BillingNodesResponseResponseStats) GetCurrentMonthPayments() float64 {
	return s.CurrentMonthPayments
}

// GetTotalSpent returns the value of TotalSpent.
func (s *BillingNodesResponseResponseStats) GetTotalSpent() float64 {
	return s.TotalSpent
}

// SetUpcomingNodesCount sets the value of UpcomingNodesCount.
func (s *BillingNodesResponseResponseStats) SetUpcomingNodesCount(val float64) {
	s.UpcomingNodesCount = val
}

// SetCurrentMonthPayments sets the value of CurrentMonthPayments.
func (s *BillingNodesResponseResponseStats) SetCurrentMonthPayments(val float64) {
	s.CurrentMonthPayments = val
}

// SetTotalSpent sets the value of TotalSpent.
func (s *BillingNodesResponseResponseStats) SetTotalSpent(val float64) {
	s.TotalSpent = val
}

// Ref: #/components/schemas/BulkActionResponse
type BulkActionResponse struct {
	Response BulkActionResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *BulkActionResponse) GetResponse() BulkActionResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *BulkActionResponse) SetResponse(val BulkActionResponseResponse) {
	s.Response = val
}

func (*BulkActionResponse) usersBulkActionsControllerBulkDeleteUsersByStatusRes()       {}
func (*BulkActionResponse) usersBulkActionsControllerBulkDeleteUsersRes()               {}
func (*BulkActionResponse) usersBulkActionsControllerBulkResetUserTrafficRes()          {}
func (*BulkActionResponse) usersBulkActionsControllerBulkRevokeUsersSubscriptionRes()   {}
func (*BulkActionResponse) usersBulkActionsControllerBulkUpdateUsersInternalSquadsRes() {}
func (*BulkActionResponse) usersBulkActionsControllerBulkUpdateUsersRes()               {}

type BulkActionResponseResponse struct {
	AffectedRows float64 `json:"affectedRows"`
}

// GetAffectedRows returns the value of AffectedRows.
func (s *BulkActionResponseResponse) GetAffectedRows() float64 {
	return s.AffectedRows
}

// SetAffectedRows sets the value of AffectedRows.
func (s *BulkActionResponseResponse) SetAffectedRows(val float64) {
	s.AffectedRows = val
}

// Ref: #/components/schemas/BulkAllUpdateUsersRequestDto
type BulkAllUpdateUsersRequestDto struct {
	Status OptBulkAllUpdateUsersRequestDtoStatus `json:"status"`
	// Traffic limit in bytes. 0 - unlimited.
	TrafficLimitBytes OptInt `json:"trafficLimitBytes"`
	// Traffic limit reset strategy.
	TrafficLimitStrategy OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy `json:"trafficLimitStrategy"`
	// Expiration date: 2025-01-17T15:38:45.065Z.
	ExpireAt        OptDateTime  `json:"expireAt"`
	Description     OptNilString `json:"description"`
	TelegramId      OptNilInt    `json:"telegramId"`
	Email           OptNilString `json:"email"`
	Tag             OptNilString `json:"tag"`
	HwidDeviceLimit OptNilInt    `json:"hwidDeviceLimit"`
}

// GetStatus returns the value of Status.
func (s *BulkAllUpdateUsersRequestDto) GetStatus() OptBulkAllUpdateUsersRequestDtoStatus {
	return s.Status
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *BulkAllUpdateUsersRequestDto) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *BulkAllUpdateUsersRequestDto) GetTrafficLimitStrategy() OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetExpireAt returns the value of ExpireAt.
func (s *BulkAllUpdateUsersRequestDto) GetExpireAt() OptDateTime {
	return s.ExpireAt
}

// GetDescription returns the value of Description.
func (s *BulkAllUpdateUsersRequestDto) GetDescription() OptNilString {
	return s.Description
}

// GetTelegramId returns the value of TelegramId.
func (s *BulkAllUpdateUsersRequestDto) GetTelegramId() OptNilInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *BulkAllUpdateUsersRequestDto) GetEmail() OptNilString {
	return s.Email
}

// GetTag returns the value of Tag.
func (s *BulkAllUpdateUsersRequestDto) GetTag() OptNilString {
	return s.Tag
}

// GetHwidDeviceLimit returns the value of HwidDeviceLimit.
func (s *BulkAllUpdateUsersRequestDto) GetHwidDeviceLimit() OptNilInt {
	return s.HwidDeviceLimit
}

// SetStatus sets the value of Status.
func (s *BulkAllUpdateUsersRequestDto) SetStatus(val OptBulkAllUpdateUsersRequestDtoStatus) {
	s.Status = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *BulkAllUpdateUsersRequestDto) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *BulkAllUpdateUsersRequestDto) SetTrafficLimitStrategy(val OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *BulkAllUpdateUsersRequestDto) SetExpireAt(val OptDateTime) {
	s.ExpireAt = val
}

// SetDescription sets the value of Description.
func (s *BulkAllUpdateUsersRequestDto) SetDescription(val OptNilString) {
	s.Description = val
}

// SetTelegramId sets the value of TelegramId.
func (s *BulkAllUpdateUsersRequestDto) SetTelegramId(val OptNilInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *BulkAllUpdateUsersRequestDto) SetEmail(val OptNilString) {
	s.Email = val
}

// SetTag sets the value of Tag.
func (s *BulkAllUpdateUsersRequestDto) SetTag(val OptNilString) {
	s.Tag = val
}

// SetHwidDeviceLimit sets the value of HwidDeviceLimit.
func (s *BulkAllUpdateUsersRequestDto) SetHwidDeviceLimit(val OptNilInt) {
	s.HwidDeviceLimit = val
}

type BulkAllUpdateUsersRequestDtoStatus string

const (
	BulkAllUpdateUsersRequestDtoStatusACTIVE   BulkAllUpdateUsersRequestDtoStatus = "ACTIVE"
	BulkAllUpdateUsersRequestDtoStatusDISABLED BulkAllUpdateUsersRequestDtoStatus = "DISABLED"
	BulkAllUpdateUsersRequestDtoStatusLIMITED  BulkAllUpdateUsersRequestDtoStatus = "LIMITED"
	BulkAllUpdateUsersRequestDtoStatusEXPIRED  BulkAllUpdateUsersRequestDtoStatus = "EXPIRED"
)

// AllValues returns all BulkAllUpdateUsersRequestDtoStatus values.
func (BulkAllUpdateUsersRequestDtoStatus) AllValues() []BulkAllUpdateUsersRequestDtoStatus {
	return []BulkAllUpdateUsersRequestDtoStatus{
		BulkAllUpdateUsersRequestDtoStatusACTIVE,
		BulkAllUpdateUsersRequestDtoStatusDISABLED,
		BulkAllUpdateUsersRequestDtoStatusLIMITED,
		BulkAllUpdateUsersRequestDtoStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BulkAllUpdateUsersRequestDtoStatus) MarshalText() ([]byte, error) {
	switch s {
	case BulkAllUpdateUsersRequestDtoStatusACTIVE:
		return []byte(s), nil
	case BulkAllUpdateUsersRequestDtoStatusDISABLED:
		return []byte(s), nil
	case BulkAllUpdateUsersRequestDtoStatusLIMITED:
		return []byte(s), nil
	case BulkAllUpdateUsersRequestDtoStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BulkAllUpdateUsersRequestDtoStatus) UnmarshalText(data []byte) error {
	switch BulkAllUpdateUsersRequestDtoStatus(data) {
	case BulkAllUpdateUsersRequestDtoStatusACTIVE:
		*s = BulkAllUpdateUsersRequestDtoStatusACTIVE
		return nil
	case BulkAllUpdateUsersRequestDtoStatusDISABLED:
		*s = BulkAllUpdateUsersRequestDtoStatusDISABLED
		return nil
	case BulkAllUpdateUsersRequestDtoStatusLIMITED:
		*s = BulkAllUpdateUsersRequestDtoStatusLIMITED
		return nil
	case BulkAllUpdateUsersRequestDtoStatusEXPIRED:
		*s = BulkAllUpdateUsersRequestDtoStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Traffic limit reset strategy.
type BulkAllUpdateUsersRequestDtoTrafficLimitStrategy string

const (
	BulkAllUpdateUsersRequestDtoTrafficLimitStrategyNORESET BulkAllUpdateUsersRequestDtoTrafficLimitStrategy = "NO_RESET"
	BulkAllUpdateUsersRequestDtoTrafficLimitStrategyDAY     BulkAllUpdateUsersRequestDtoTrafficLimitStrategy = "DAY"
	BulkAllUpdateUsersRequestDtoTrafficLimitStrategyWEEK    BulkAllUpdateUsersRequestDtoTrafficLimitStrategy = "WEEK"
	BulkAllUpdateUsersRequestDtoTrafficLimitStrategyMONTH   BulkAllUpdateUsersRequestDtoTrafficLimitStrategy = "MONTH"
)

// AllValues returns all BulkAllUpdateUsersRequestDtoTrafficLimitStrategy values.
func (BulkAllUpdateUsersRequestDtoTrafficLimitStrategy) AllValues() []BulkAllUpdateUsersRequestDtoTrafficLimitStrategy {
	return []BulkAllUpdateUsersRequestDtoTrafficLimitStrategy{
		BulkAllUpdateUsersRequestDtoTrafficLimitStrategyNORESET,
		BulkAllUpdateUsersRequestDtoTrafficLimitStrategyDAY,
		BulkAllUpdateUsersRequestDtoTrafficLimitStrategyWEEK,
		BulkAllUpdateUsersRequestDtoTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BulkAllUpdateUsersRequestDtoTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case BulkAllUpdateUsersRequestDtoTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case BulkAllUpdateUsersRequestDtoTrafficLimitStrategyDAY:
		return []byte(s), nil
	case BulkAllUpdateUsersRequestDtoTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case BulkAllUpdateUsersRequestDtoTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BulkAllUpdateUsersRequestDtoTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch BulkAllUpdateUsersRequestDtoTrafficLimitStrategy(data) {
	case BulkAllUpdateUsersRequestDtoTrafficLimitStrategyNORESET:
		*s = BulkAllUpdateUsersRequestDtoTrafficLimitStrategyNORESET
		return nil
	case BulkAllUpdateUsersRequestDtoTrafficLimitStrategyDAY:
		*s = BulkAllUpdateUsersRequestDtoTrafficLimitStrategyDAY
		return nil
	case BulkAllUpdateUsersRequestDtoTrafficLimitStrategyWEEK:
		*s = BulkAllUpdateUsersRequestDtoTrafficLimitStrategyWEEK
		return nil
	case BulkAllUpdateUsersRequestDtoTrafficLimitStrategyMONTH:
		*s = BulkAllUpdateUsersRequestDtoTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/BulkDeleteUsersByStatusRequestDto
type BulkDeleteUsersByStatusRequestDto struct {
	Status OptBulkDeleteUsersByStatusRequestDtoStatus `json:"status"`
}

// GetStatus returns the value of Status.
func (s *BulkDeleteUsersByStatusRequestDto) GetStatus() OptBulkDeleteUsersByStatusRequestDtoStatus {
	return s.Status
}

// SetStatus sets the value of Status.
func (s *BulkDeleteUsersByStatusRequestDto) SetStatus(val OptBulkDeleteUsersByStatusRequestDtoStatus) {
	s.Status = val
}

type BulkDeleteUsersByStatusRequestDtoStatus string

const (
	BulkDeleteUsersByStatusRequestDtoStatusACTIVE   BulkDeleteUsersByStatusRequestDtoStatus = "ACTIVE"
	BulkDeleteUsersByStatusRequestDtoStatusDISABLED BulkDeleteUsersByStatusRequestDtoStatus = "DISABLED"
	BulkDeleteUsersByStatusRequestDtoStatusLIMITED  BulkDeleteUsersByStatusRequestDtoStatus = "LIMITED"
	BulkDeleteUsersByStatusRequestDtoStatusEXPIRED  BulkDeleteUsersByStatusRequestDtoStatus = "EXPIRED"
)

// AllValues returns all BulkDeleteUsersByStatusRequestDtoStatus values.
func (BulkDeleteUsersByStatusRequestDtoStatus) AllValues() []BulkDeleteUsersByStatusRequestDtoStatus {
	return []BulkDeleteUsersByStatusRequestDtoStatus{
		BulkDeleteUsersByStatusRequestDtoStatusACTIVE,
		BulkDeleteUsersByStatusRequestDtoStatusDISABLED,
		BulkDeleteUsersByStatusRequestDtoStatusLIMITED,
		BulkDeleteUsersByStatusRequestDtoStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BulkDeleteUsersByStatusRequestDtoStatus) MarshalText() ([]byte, error) {
	switch s {
	case BulkDeleteUsersByStatusRequestDtoStatusACTIVE:
		return []byte(s), nil
	case BulkDeleteUsersByStatusRequestDtoStatusDISABLED:
		return []byte(s), nil
	case BulkDeleteUsersByStatusRequestDtoStatusLIMITED:
		return []byte(s), nil
	case BulkDeleteUsersByStatusRequestDtoStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BulkDeleteUsersByStatusRequestDtoStatus) UnmarshalText(data []byte) error {
	switch BulkDeleteUsersByStatusRequestDtoStatus(data) {
	case BulkDeleteUsersByStatusRequestDtoStatusACTIVE:
		*s = BulkDeleteUsersByStatusRequestDtoStatusACTIVE
		return nil
	case BulkDeleteUsersByStatusRequestDtoStatusDISABLED:
		*s = BulkDeleteUsersByStatusRequestDtoStatusDISABLED
		return nil
	case BulkDeleteUsersByStatusRequestDtoStatusLIMITED:
		*s = BulkDeleteUsersByStatusRequestDtoStatusLIMITED
		return nil
	case BulkDeleteUsersByStatusRequestDtoStatusEXPIRED:
		*s = BulkDeleteUsersByStatusRequestDtoStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/BulkUpdateUsersRequestDto
type BulkUpdateUsersRequestDto struct {
	Uuids  []uuid.UUID                     `json:"uuids"`
	Fields BulkUpdateUsersRequestDtoFields `json:"fields"`
}

// GetUuids returns the value of Uuids.
func (s *BulkUpdateUsersRequestDto) GetUuids() []uuid.UUID {
	return s.Uuids
}

// GetFields returns the value of Fields.
func (s *BulkUpdateUsersRequestDto) GetFields() BulkUpdateUsersRequestDtoFields {
	return s.Fields
}

// SetUuids sets the value of Uuids.
func (s *BulkUpdateUsersRequestDto) SetUuids(val []uuid.UUID) {
	s.Uuids = val
}

// SetFields sets the value of Fields.
func (s *BulkUpdateUsersRequestDto) SetFields(val BulkUpdateUsersRequestDtoFields) {
	s.Fields = val
}

type BulkUpdateUsersRequestDtoFields struct {
	Status OptBulkUpdateUsersRequestDtoFieldsStatus `json:"status"`
	// Traffic limit in bytes. 0 - unlimited.
	TrafficLimitBytes OptInt `json:"trafficLimitBytes"`
	// Traffic limit reset strategy.
	TrafficLimitStrategy OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy `json:"trafficLimitStrategy"`
	// Expiration date: 2025-01-17T15:38:45.065Z.
	ExpireAt        OptDateTime  `json:"expireAt"`
	Description     OptNilString `json:"description"`
	TelegramId      OptNilInt    `json:"telegramId"`
	Email           OptNilString `json:"email"`
	Tag             OptNilString `json:"tag"`
	HwidDeviceLimit OptNilInt    `json:"hwidDeviceLimit"`
	// Optional. External squad UUID.
	ExternalSquadUuid OptNilUUID `json:"externalSquadUuid"`
}

// GetStatus returns the value of Status.
func (s *BulkUpdateUsersRequestDtoFields) GetStatus() OptBulkUpdateUsersRequestDtoFieldsStatus {
	return s.Status
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *BulkUpdateUsersRequestDtoFields) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *BulkUpdateUsersRequestDtoFields) GetTrafficLimitStrategy() OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetExpireAt returns the value of ExpireAt.
func (s *BulkUpdateUsersRequestDtoFields) GetExpireAt() OptDateTime {
	return s.ExpireAt
}

// GetDescription returns the value of Description.
func (s *BulkUpdateUsersRequestDtoFields) GetDescription() OptNilString {
	return s.Description
}

// GetTelegramId returns the value of TelegramId.
func (s *BulkUpdateUsersRequestDtoFields) GetTelegramId() OptNilInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *BulkUpdateUsersRequestDtoFields) GetEmail() OptNilString {
	return s.Email
}

// GetTag returns the value of Tag.
func (s *BulkUpdateUsersRequestDtoFields) GetTag() OptNilString {
	return s.Tag
}

// GetHwidDeviceLimit returns the value of HwidDeviceLimit.
func (s *BulkUpdateUsersRequestDtoFields) GetHwidDeviceLimit() OptNilInt {
	return s.HwidDeviceLimit
}

// GetExternalSquadUuid returns the value of ExternalSquadUuid.
func (s *BulkUpdateUsersRequestDtoFields) GetExternalSquadUuid() OptNilUUID {
	return s.ExternalSquadUuid
}

// SetStatus sets the value of Status.
func (s *BulkUpdateUsersRequestDtoFields) SetStatus(val OptBulkUpdateUsersRequestDtoFieldsStatus) {
	s.Status = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *BulkUpdateUsersRequestDtoFields) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *BulkUpdateUsersRequestDtoFields) SetTrafficLimitStrategy(val OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *BulkUpdateUsersRequestDtoFields) SetExpireAt(val OptDateTime) {
	s.ExpireAt = val
}

// SetDescription sets the value of Description.
func (s *BulkUpdateUsersRequestDtoFields) SetDescription(val OptNilString) {
	s.Description = val
}

// SetTelegramId sets the value of TelegramId.
func (s *BulkUpdateUsersRequestDtoFields) SetTelegramId(val OptNilInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *BulkUpdateUsersRequestDtoFields) SetEmail(val OptNilString) {
	s.Email = val
}

// SetTag sets the value of Tag.
func (s *BulkUpdateUsersRequestDtoFields) SetTag(val OptNilString) {
	s.Tag = val
}

// SetHwidDeviceLimit sets the value of HwidDeviceLimit.
func (s *BulkUpdateUsersRequestDtoFields) SetHwidDeviceLimit(val OptNilInt) {
	s.HwidDeviceLimit = val
}

// SetExternalSquadUuid sets the value of ExternalSquadUuid.
func (s *BulkUpdateUsersRequestDtoFields) SetExternalSquadUuid(val OptNilUUID) {
	s.ExternalSquadUuid = val
}

type BulkUpdateUsersRequestDtoFieldsStatus string

const (
	BulkUpdateUsersRequestDtoFieldsStatusACTIVE   BulkUpdateUsersRequestDtoFieldsStatus = "ACTIVE"
	BulkUpdateUsersRequestDtoFieldsStatusDISABLED BulkUpdateUsersRequestDtoFieldsStatus = "DISABLED"
	BulkUpdateUsersRequestDtoFieldsStatusLIMITED  BulkUpdateUsersRequestDtoFieldsStatus = "LIMITED"
	BulkUpdateUsersRequestDtoFieldsStatusEXPIRED  BulkUpdateUsersRequestDtoFieldsStatus = "EXPIRED"
)

// AllValues returns all BulkUpdateUsersRequestDtoFieldsStatus values.
func (BulkUpdateUsersRequestDtoFieldsStatus) AllValues() []BulkUpdateUsersRequestDtoFieldsStatus {
	return []BulkUpdateUsersRequestDtoFieldsStatus{
		BulkUpdateUsersRequestDtoFieldsStatusACTIVE,
		BulkUpdateUsersRequestDtoFieldsStatusDISABLED,
		BulkUpdateUsersRequestDtoFieldsStatusLIMITED,
		BulkUpdateUsersRequestDtoFieldsStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BulkUpdateUsersRequestDtoFieldsStatus) MarshalText() ([]byte, error) {
	switch s {
	case BulkUpdateUsersRequestDtoFieldsStatusACTIVE:
		return []byte(s), nil
	case BulkUpdateUsersRequestDtoFieldsStatusDISABLED:
		return []byte(s), nil
	case BulkUpdateUsersRequestDtoFieldsStatusLIMITED:
		return []byte(s), nil
	case BulkUpdateUsersRequestDtoFieldsStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BulkUpdateUsersRequestDtoFieldsStatus) UnmarshalText(data []byte) error {
	switch BulkUpdateUsersRequestDtoFieldsStatus(data) {
	case BulkUpdateUsersRequestDtoFieldsStatusACTIVE:
		*s = BulkUpdateUsersRequestDtoFieldsStatusACTIVE
		return nil
	case BulkUpdateUsersRequestDtoFieldsStatusDISABLED:
		*s = BulkUpdateUsersRequestDtoFieldsStatusDISABLED
		return nil
	case BulkUpdateUsersRequestDtoFieldsStatusLIMITED:
		*s = BulkUpdateUsersRequestDtoFieldsStatusLIMITED
		return nil
	case BulkUpdateUsersRequestDtoFieldsStatusEXPIRED:
		*s = BulkUpdateUsersRequestDtoFieldsStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Traffic limit reset strategy.
type BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy string

const (
	BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyNORESET BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy = "NO_RESET"
	BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyDAY     BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy = "DAY"
	BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyWEEK    BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy = "WEEK"
	BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyMONTH   BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy = "MONTH"
)

// AllValues returns all BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy values.
func (BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) AllValues() []BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy {
	return []BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy{
		BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyNORESET,
		BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyDAY,
		BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyWEEK,
		BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyDAY:
		return []byte(s), nil
	case BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy(data) {
	case BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyNORESET:
		*s = BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyNORESET
		return nil
	case BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyDAY:
		*s = BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyDAY
		return nil
	case BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyWEEK:
		*s = BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyWEEK
		return nil
	case BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyMONTH:
		*s = BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/BulkUpdateUsersSquadsRequestDto
type BulkUpdateUsersSquadsRequestDto struct {
	Uuids                []uuid.UUID `json:"uuids"`
	ActiveInternalSquads []uuid.UUID `json:"activeInternalSquads"`
}

// GetUuids returns the value of Uuids.
func (s *BulkUpdateUsersSquadsRequestDto) GetUuids() []uuid.UUID {
	return s.Uuids
}

// GetActiveInternalSquads returns the value of ActiveInternalSquads.
func (s *BulkUpdateUsersSquadsRequestDto) GetActiveInternalSquads() []uuid.UUID {
	return s.ActiveInternalSquads
}

// SetUuids sets the value of Uuids.
func (s *BulkUpdateUsersSquadsRequestDto) SetUuids(val []uuid.UUID) {
	s.Uuids = val
}

// SetActiveInternalSquads sets the value of ActiveInternalSquads.
func (s *BulkUpdateUsersSquadsRequestDto) SetActiveInternalSquads(val []uuid.UUID) {
	s.ActiveInternalSquads = val
}

// Ref: #/components/schemas/BulkUuidsRequest
type BulkUuidsRequest struct {
	Uuids []uuid.UUID `json:"uuids"`
}

// GetUuids returns the value of Uuids.
func (s *BulkUuidsRequest) GetUuids() []uuid.UUID {
	return s.Uuids
}

// SetUuids sets the value of Uuids.
func (s *BulkUuidsRequest) SetUuids(val []uuid.UUID) {
	s.Uuids = val
}

type ConfigProfileControllerCreateConfigProfileBadRequest struct {
	Message    OptString                                                        `json:"message"`
	StatusCode OptFloat64                                                       `json:"statusCode"`
	Errors     []ConfigProfileControllerCreateConfigProfileBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *ConfigProfileControllerCreateConfigProfileBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *ConfigProfileControllerCreateConfigProfileBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *ConfigProfileControllerCreateConfigProfileBadRequest) GetErrors() []ConfigProfileControllerCreateConfigProfileBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *ConfigProfileControllerCreateConfigProfileBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *ConfigProfileControllerCreateConfigProfileBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *ConfigProfileControllerCreateConfigProfileBadRequest) SetErrors(val []ConfigProfileControllerCreateConfigProfileBadRequestErrorsItem) {
	s.Errors = val
}

func (*ConfigProfileControllerCreateConfigProfileBadRequest) configProfileControllerCreateConfigProfileRes() {
}

type ConfigProfileControllerCreateConfigProfileBadRequestErrorsItem struct{}

// ConfigProfileControllerCreateConfigProfileConflict is response for ConfigProfileControllerCreateConfigProfile operation.
type ConfigProfileControllerCreateConfigProfileConflict struct{}

func (*ConfigProfileControllerCreateConfigProfileConflict) configProfileControllerCreateConfigProfileRes() {
}

type ConfigProfileControllerCreateConfigProfileInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *ConfigProfileControllerCreateConfigProfileInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *ConfigProfileControllerCreateConfigProfileInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *ConfigProfileControllerCreateConfigProfileInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *ConfigProfileControllerCreateConfigProfileInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *ConfigProfileControllerCreateConfigProfileInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *ConfigProfileControllerCreateConfigProfileInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *ConfigProfileControllerCreateConfigProfileInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *ConfigProfileControllerCreateConfigProfileInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*ConfigProfileControllerCreateConfigProfileInternalServerError) configProfileControllerCreateConfigProfileRes() {
}

type ConfigProfileControllerDeleteConfigProfileByUuidBadRequest struct {
	Message    OptString                                                              `json:"message"`
	StatusCode OptFloat64                                                             `json:"statusCode"`
	Errors     []ConfigProfileControllerDeleteConfigProfileByUuidBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *ConfigProfileControllerDeleteConfigProfileByUuidBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *ConfigProfileControllerDeleteConfigProfileByUuidBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *ConfigProfileControllerDeleteConfigProfileByUuidBadRequest) GetErrors() []ConfigProfileControllerDeleteConfigProfileByUuidBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *ConfigProfileControllerDeleteConfigProfileByUuidBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *ConfigProfileControllerDeleteConfigProfileByUuidBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *ConfigProfileControllerDeleteConfigProfileByUuidBadRequest) SetErrors(val []ConfigProfileControllerDeleteConfigProfileByUuidBadRequestErrorsItem) {
	s.Errors = val
}

func (*ConfigProfileControllerDeleteConfigProfileByUuidBadRequest) configProfileControllerDeleteConfigProfileByUuidRes() {
}

type ConfigProfileControllerDeleteConfigProfileByUuidBadRequestErrorsItem struct{}

type ConfigProfileControllerDeleteConfigProfileByUuidInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *ConfigProfileControllerDeleteConfigProfileByUuidInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *ConfigProfileControllerDeleteConfigProfileByUuidInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *ConfigProfileControllerDeleteConfigProfileByUuidInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *ConfigProfileControllerDeleteConfigProfileByUuidInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *ConfigProfileControllerDeleteConfigProfileByUuidInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *ConfigProfileControllerDeleteConfigProfileByUuidInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *ConfigProfileControllerDeleteConfigProfileByUuidInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *ConfigProfileControllerDeleteConfigProfileByUuidInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*ConfigProfileControllerDeleteConfigProfileByUuidInternalServerError) configProfileControllerDeleteConfigProfileByUuidRes() {
}

// ConfigProfileControllerDeleteConfigProfileByUuidNotFound is response for ConfigProfileControllerDeleteConfigProfileByUuid operation.
type ConfigProfileControllerDeleteConfigProfileByUuidNotFound struct{}

func (*ConfigProfileControllerDeleteConfigProfileByUuidNotFound) configProfileControllerDeleteConfigProfileByUuidRes() {
}

type ConfigProfileControllerGetAllInboundsBadRequest struct {
	Message    OptString                                                   `json:"message"`
	StatusCode OptFloat64                                                  `json:"statusCode"`
	Errors     []ConfigProfileControllerGetAllInboundsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *ConfigProfileControllerGetAllInboundsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *ConfigProfileControllerGetAllInboundsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *ConfigProfileControllerGetAllInboundsBadRequest) GetErrors() []ConfigProfileControllerGetAllInboundsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *ConfigProfileControllerGetAllInboundsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *ConfigProfileControllerGetAllInboundsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *ConfigProfileControllerGetAllInboundsBadRequest) SetErrors(val []ConfigProfileControllerGetAllInboundsBadRequestErrorsItem) {
	s.Errors = val
}

func (*ConfigProfileControllerGetAllInboundsBadRequest) configProfileControllerGetAllInboundsRes() {}

type ConfigProfileControllerGetAllInboundsBadRequestErrorsItem struct{}

type ConfigProfileControllerGetAllInboundsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *ConfigProfileControllerGetAllInboundsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *ConfigProfileControllerGetAllInboundsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *ConfigProfileControllerGetAllInboundsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *ConfigProfileControllerGetAllInboundsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *ConfigProfileControllerGetAllInboundsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *ConfigProfileControllerGetAllInboundsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *ConfigProfileControllerGetAllInboundsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *ConfigProfileControllerGetAllInboundsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*ConfigProfileControllerGetAllInboundsInternalServerError) configProfileControllerGetAllInboundsRes() {
}

type ConfigProfileControllerGetConfigProfileByUuidBadRequest struct {
	Message    OptString                                                           `json:"message"`
	StatusCode OptFloat64                                                          `json:"statusCode"`
	Errors     []ConfigProfileControllerGetConfigProfileByUuidBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *ConfigProfileControllerGetConfigProfileByUuidBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *ConfigProfileControllerGetConfigProfileByUuidBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *ConfigProfileControllerGetConfigProfileByUuidBadRequest) GetErrors() []ConfigProfileControllerGetConfigProfileByUuidBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *ConfigProfileControllerGetConfigProfileByUuidBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *ConfigProfileControllerGetConfigProfileByUuidBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *ConfigProfileControllerGetConfigProfileByUuidBadRequest) SetErrors(val []ConfigProfileControllerGetConfigProfileByUuidBadRequestErrorsItem) {
	s.Errors = val
}

func (*ConfigProfileControllerGetConfigProfileByUuidBadRequest) configProfileControllerGetConfigProfileByUuidRes() {
}

type ConfigProfileControllerGetConfigProfileByUuidBadRequestErrorsItem struct{}

type ConfigProfileControllerGetConfigProfileByUuidInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *ConfigProfileControllerGetConfigProfileByUuidInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *ConfigProfileControllerGetConfigProfileByUuidInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *ConfigProfileControllerGetConfigProfileByUuidInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *ConfigProfileControllerGetConfigProfileByUuidInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *ConfigProfileControllerGetConfigProfileByUuidInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *ConfigProfileControllerGetConfigProfileByUuidInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *ConfigProfileControllerGetConfigProfileByUuidInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *ConfigProfileControllerGetConfigProfileByUuidInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*ConfigProfileControllerGetConfigProfileByUuidInternalServerError) configProfileControllerGetConfigProfileByUuidRes() {
}

// ConfigProfileControllerGetConfigProfileByUuidNotFound is response for ConfigProfileControllerGetConfigProfileByUuid operation.
type ConfigProfileControllerGetConfigProfileByUuidNotFound struct{}

func (*ConfigProfileControllerGetConfigProfileByUuidNotFound) configProfileControllerGetConfigProfileByUuidRes() {
}

type ConfigProfileControllerGetConfigProfilesBadRequest struct {
	Message    OptString                                                      `json:"message"`
	StatusCode OptFloat64                                                     `json:"statusCode"`
	Errors     []ConfigProfileControllerGetConfigProfilesBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *ConfigProfileControllerGetConfigProfilesBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *ConfigProfileControllerGetConfigProfilesBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *ConfigProfileControllerGetConfigProfilesBadRequest) GetErrors() []ConfigProfileControllerGetConfigProfilesBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *ConfigProfileControllerGetConfigProfilesBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *ConfigProfileControllerGetConfigProfilesBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *ConfigProfileControllerGetConfigProfilesBadRequest) SetErrors(val []ConfigProfileControllerGetConfigProfilesBadRequestErrorsItem) {
	s.Errors = val
}

func (*ConfigProfileControllerGetConfigProfilesBadRequest) configProfileControllerGetConfigProfilesRes() {
}

type ConfigProfileControllerGetConfigProfilesBadRequestErrorsItem struct{}

type ConfigProfileControllerGetConfigProfilesInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *ConfigProfileControllerGetConfigProfilesInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *ConfigProfileControllerGetConfigProfilesInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *ConfigProfileControllerGetConfigProfilesInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *ConfigProfileControllerGetConfigProfilesInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *ConfigProfileControllerGetConfigProfilesInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *ConfigProfileControllerGetConfigProfilesInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *ConfigProfileControllerGetConfigProfilesInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *ConfigProfileControllerGetConfigProfilesInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*ConfigProfileControllerGetConfigProfilesInternalServerError) configProfileControllerGetConfigProfilesRes() {
}

type ConfigProfileControllerGetInboundsByProfileUuidBadRequest struct {
	Message    OptString                                                             `json:"message"`
	StatusCode OptFloat64                                                            `json:"statusCode"`
	Errors     []ConfigProfileControllerGetInboundsByProfileUuidBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *ConfigProfileControllerGetInboundsByProfileUuidBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *ConfigProfileControllerGetInboundsByProfileUuidBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *ConfigProfileControllerGetInboundsByProfileUuidBadRequest) GetErrors() []ConfigProfileControllerGetInboundsByProfileUuidBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *ConfigProfileControllerGetInboundsByProfileUuidBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *ConfigProfileControllerGetInboundsByProfileUuidBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *ConfigProfileControllerGetInboundsByProfileUuidBadRequest) SetErrors(val []ConfigProfileControllerGetInboundsByProfileUuidBadRequestErrorsItem) {
	s.Errors = val
}

func (*ConfigProfileControllerGetInboundsByProfileUuidBadRequest) configProfileControllerGetInboundsByProfileUuidRes() {
}

type ConfigProfileControllerGetInboundsByProfileUuidBadRequestErrorsItem struct{}

type ConfigProfileControllerGetInboundsByProfileUuidInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *ConfigProfileControllerGetInboundsByProfileUuidInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *ConfigProfileControllerGetInboundsByProfileUuidInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *ConfigProfileControllerGetInboundsByProfileUuidInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *ConfigProfileControllerGetInboundsByProfileUuidInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *ConfigProfileControllerGetInboundsByProfileUuidInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *ConfigProfileControllerGetInboundsByProfileUuidInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *ConfigProfileControllerGetInboundsByProfileUuidInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *ConfigProfileControllerGetInboundsByProfileUuidInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*ConfigProfileControllerGetInboundsByProfileUuidInternalServerError) configProfileControllerGetInboundsByProfileUuidRes() {
}

// ConfigProfileControllerGetInboundsByProfileUuidNotFound is response for ConfigProfileControllerGetInboundsByProfileUuid operation.
type ConfigProfileControllerGetInboundsByProfileUuidNotFound struct{}

func (*ConfigProfileControllerGetInboundsByProfileUuidNotFound) configProfileControllerGetInboundsByProfileUuidRes() {
}

type ConfigProfileControllerUpdateConfigProfileBadRequest struct {
	Message    OptString                                                        `json:"message"`
	StatusCode OptFloat64                                                       `json:"statusCode"`
	Errors     []ConfigProfileControllerUpdateConfigProfileBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *ConfigProfileControllerUpdateConfigProfileBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *ConfigProfileControllerUpdateConfigProfileBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *ConfigProfileControllerUpdateConfigProfileBadRequest) GetErrors() []ConfigProfileControllerUpdateConfigProfileBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *ConfigProfileControllerUpdateConfigProfileBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *ConfigProfileControllerUpdateConfigProfileBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *ConfigProfileControllerUpdateConfigProfileBadRequest) SetErrors(val []ConfigProfileControllerUpdateConfigProfileBadRequestErrorsItem) {
	s.Errors = val
}

func (*ConfigProfileControllerUpdateConfigProfileBadRequest) configProfileControllerUpdateConfigProfileRes() {
}

type ConfigProfileControllerUpdateConfigProfileBadRequestErrorsItem struct{}

// ConfigProfileControllerUpdateConfigProfileConflict is response for ConfigProfileControllerUpdateConfigProfile operation.
type ConfigProfileControllerUpdateConfigProfileConflict struct{}

func (*ConfigProfileControllerUpdateConfigProfileConflict) configProfileControllerUpdateConfigProfileRes() {
}

type ConfigProfileControllerUpdateConfigProfileInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *ConfigProfileControllerUpdateConfigProfileInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *ConfigProfileControllerUpdateConfigProfileInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *ConfigProfileControllerUpdateConfigProfileInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *ConfigProfileControllerUpdateConfigProfileInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *ConfigProfileControllerUpdateConfigProfileInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *ConfigProfileControllerUpdateConfigProfileInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *ConfigProfileControllerUpdateConfigProfileInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *ConfigProfileControllerUpdateConfigProfileInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*ConfigProfileControllerUpdateConfigProfileInternalServerError) configProfileControllerUpdateConfigProfileRes() {
}

// ConfigProfileControllerUpdateConfigProfileNotFound is response for ConfigProfileControllerUpdateConfigProfile operation.
type ConfigProfileControllerUpdateConfigProfileNotFound struct{}

func (*ConfigProfileControllerUpdateConfigProfileNotFound) configProfileControllerUpdateConfigProfileRes() {
}

// Ref: #/components/schemas/ConfigProfileResponse
type ConfigProfileResponse struct {
	Response ConfigProfileResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *ConfigProfileResponse) GetResponse() ConfigProfileResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *ConfigProfileResponse) SetResponse(val ConfigProfileResponseResponse) {
	s.Response = val
}

func (*ConfigProfileResponse) configProfileControllerCreateConfigProfileRes()    {}
func (*ConfigProfileResponse) configProfileControllerGetConfigProfileByUuidRes() {}
func (*ConfigProfileResponse) configProfileControllerUpdateConfigProfileRes()    {}

type ConfigProfileResponseResponse struct {
	UUID      uuid.UUID                                   `json:"uuid"`
	Name      string                                      `json:"name"`
	Config    jx.Raw                                      `json:"config"`
	Inbounds  []ConfigProfileResponseResponseInboundsItem `json:"inbounds"`
	Nodes     []ConfigProfileResponseResponseNodesItem    `json:"nodes"`
	CreatedAt time.Time                                   `json:"createdAt"`
	UpdatedAt time.Time                                   `json:"updatedAt"`
}

// GetUUID returns the value of UUID.
func (s *ConfigProfileResponseResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *ConfigProfileResponseResponse) GetName() string {
	return s.Name
}

// GetConfig returns the value of Config.
func (s *ConfigProfileResponseResponse) GetConfig() jx.Raw {
	return s.Config
}

// GetInbounds returns the value of Inbounds.
func (s *ConfigProfileResponseResponse) GetInbounds() []ConfigProfileResponseResponseInboundsItem {
	return s.Inbounds
}

// GetNodes returns the value of Nodes.
func (s *ConfigProfileResponseResponse) GetNodes() []ConfigProfileResponseResponseNodesItem {
	return s.Nodes
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ConfigProfileResponseResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *ConfigProfileResponseResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetUUID sets the value of UUID.
func (s *ConfigProfileResponseResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *ConfigProfileResponseResponse) SetName(val string) {
	s.Name = val
}

// SetConfig sets the value of Config.
func (s *ConfigProfileResponseResponse) SetConfig(val jx.Raw) {
	s.Config = val
}

// SetInbounds sets the value of Inbounds.
func (s *ConfigProfileResponseResponse) SetInbounds(val []ConfigProfileResponseResponseInboundsItem) {
	s.Inbounds = val
}

// SetNodes sets the value of Nodes.
func (s *ConfigProfileResponseResponse) SetNodes(val []ConfigProfileResponseResponseNodesItem) {
	s.Nodes = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ConfigProfileResponseResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *ConfigProfileResponseResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type ConfigProfileResponseResponseInboundsItem struct {
	UUID        uuid.UUID  `json:"uuid"`
	ProfileUuid uuid.UUID  `json:"profileUuid"`
	Tag         string     `json:"tag"`
	Type        string     `json:"type"`
	Network     NilString  `json:"network"`
	Security    NilString  `json:"security"`
	Port        NilFloat64 `json:"port"`
	RawInbound  jx.Raw     `json:"rawInbound"`
}

// GetUUID returns the value of UUID.
func (s *ConfigProfileResponseResponseInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetProfileUuid returns the value of ProfileUuid.
func (s *ConfigProfileResponseResponseInboundsItem) GetProfileUuid() uuid.UUID {
	return s.ProfileUuid
}

// GetTag returns the value of Tag.
func (s *ConfigProfileResponseResponseInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *ConfigProfileResponseResponseInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *ConfigProfileResponseResponseInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *ConfigProfileResponseResponseInboundsItem) GetSecurity() NilString {
	return s.Security
}

// GetPort returns the value of Port.
func (s *ConfigProfileResponseResponseInboundsItem) GetPort() NilFloat64 {
	return s.Port
}

// GetRawInbound returns the value of RawInbound.
func (s *ConfigProfileResponseResponseInboundsItem) GetRawInbound() jx.Raw {
	return s.RawInbound
}

// SetUUID sets the value of UUID.
func (s *ConfigProfileResponseResponseInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetProfileUuid sets the value of ProfileUuid.
func (s *ConfigProfileResponseResponseInboundsItem) SetProfileUuid(val uuid.UUID) {
	s.ProfileUuid = val
}

// SetTag sets the value of Tag.
func (s *ConfigProfileResponseResponseInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *ConfigProfileResponseResponseInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *ConfigProfileResponseResponseInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *ConfigProfileResponseResponseInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

// SetPort sets the value of Port.
func (s *ConfigProfileResponseResponseInboundsItem) SetPort(val NilFloat64) {
	s.Port = val
}

// SetRawInbound sets the value of RawInbound.
func (s *ConfigProfileResponseResponseInboundsItem) SetRawInbound(val jx.Raw) {
	s.RawInbound = val
}

type ConfigProfileResponseResponseNodesItem struct {
	UUID        uuid.UUID `json:"uuid"`
	Name        string    `json:"name"`
	CountryCode string    `json:"countryCode"`
}

// GetUUID returns the value of UUID.
func (s *ConfigProfileResponseResponseNodesItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *ConfigProfileResponseResponseNodesItem) GetName() string {
	return s.Name
}

// GetCountryCode returns the value of CountryCode.
func (s *ConfigProfileResponseResponseNodesItem) GetCountryCode() string {
	return s.CountryCode
}

// SetUUID sets the value of UUID.
func (s *ConfigProfileResponseResponseNodesItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *ConfigProfileResponseResponseNodesItem) SetName(val string) {
	s.Name = val
}

// SetCountryCode sets the value of CountryCode.
func (s *ConfigProfileResponseResponseNodesItem) SetCountryCode(val string) {
	s.CountryCode = val
}

// Ref: #/components/schemas/CreateApiTokenRequestDto
type CreateApiTokenRequestDto struct {
	TokenName string `json:"tokenName"`
}

// GetTokenName returns the value of TokenName.
func (s *CreateApiTokenRequestDto) GetTokenName() string {
	return s.TokenName
}

// SetTokenName sets the value of TokenName.
func (s *CreateApiTokenRequestDto) SetTokenName(val string) {
	s.TokenName = val
}

// Ref: #/components/schemas/CreateApiTokenResponseDto
type CreateApiTokenResponseDto struct {
	Response CreateApiTokenResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *CreateApiTokenResponseDto) GetResponse() CreateApiTokenResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *CreateApiTokenResponseDto) SetResponse(val CreateApiTokenResponseDtoResponse) {
	s.Response = val
}

func (*CreateApiTokenResponseDto) apiTokensControllerCreateRes() {}

type CreateApiTokenResponseDtoResponse struct {
	Token string `json:"token"`
	UUID  string `json:"uuid"`
}

// GetToken returns the value of Token.
func (s *CreateApiTokenResponseDtoResponse) GetToken() string {
	return s.Token
}

// GetUUID returns the value of UUID.
func (s *CreateApiTokenResponseDtoResponse) GetUUID() string {
	return s.UUID
}

// SetToken sets the value of Token.
func (s *CreateApiTokenResponseDtoResponse) SetToken(val string) {
	s.Token = val
}

// SetUUID sets the value of UUID.
func (s *CreateApiTokenResponseDtoResponse) SetUUID(val string) {
	s.UUID = val
}

// Ref: #/components/schemas/CreateConfigProfileRequestDto
type CreateConfigProfileRequestDto struct {
	Name   string                              `json:"name"`
	Config CreateConfigProfileRequestDtoConfig `json:"config"`
}

// GetName returns the value of Name.
func (s *CreateConfigProfileRequestDto) GetName() string {
	return s.Name
}

// GetConfig returns the value of Config.
func (s *CreateConfigProfileRequestDto) GetConfig() CreateConfigProfileRequestDtoConfig {
	return s.Config
}

// SetName sets the value of Name.
func (s *CreateConfigProfileRequestDto) SetName(val string) {
	s.Name = val
}

// SetConfig sets the value of Config.
func (s *CreateConfigProfileRequestDto) SetConfig(val CreateConfigProfileRequestDtoConfig) {
	s.Config = val
}

type CreateConfigProfileRequestDtoConfig struct{}

// Ref: #/components/schemas/CreateExternalSquadRequestDto
type CreateExternalSquadRequestDto struct {
	Name string `json:"name"`
}

// GetName returns the value of Name.
func (s *CreateExternalSquadRequestDto) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *CreateExternalSquadRequestDto) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/CreateHostRequestDto
type CreateHostRequestDto struct {
	Inbound           CreateHostRequestDtoInbound           `json:"inbound"`
	Remark            string                                `json:"remark"`
	Address           string                                `json:"address"`
	Port              int                                   `json:"port"`
	Path              OptString                             `json:"path"`
	Sni               OptString                             `json:"sni"`
	Host              OptString                             `json:"host"`
	Alpn              OptNilCreateHostRequestDtoAlpn        `json:"alpn"`
	Fingerprint       OptNilCreateHostRequestDtoFingerprint `json:"fingerprint"`
	IsDisabled        OptBool                               `json:"isDisabled"`
	SecurityLayer     OptCreateHostRequestDtoSecurityLayer  `json:"securityLayer"`
	XHttpExtraParams  jx.Raw                                `json:"xHttpExtraParams"`
	MuxParams         jx.Raw                                `json:"muxParams"`
	SockoptParams     jx.Raw                                `json:"sockoptParams"`
	ServerDescription OptNilString                          `json:"serverDescription"`
	// Optional. Host tag for categorization. Max 32 characters, uppercase letters, numbers, underscores
	// and colons are allowed.
	Tag                    OptNilString `json:"tag"`
	IsHidden               OptBool      `json:"isHidden"`
	OverrideSniFromAddress OptBool      `json:"overrideSniFromAddress"`
	AllowInsecure          OptBool      `json:"allowInsecure"`
	VlessRouteId           OptNilInt    `json:"vlessRouteId"`
	ShuffleHost            OptBool      `json:"shuffleHost"`
	MihomoX25519           OptBool      `json:"mihomoX25519"`
	Nodes                  []uuid.UUID  `json:"nodes"`
}

// GetInbound returns the value of Inbound.
func (s *CreateHostRequestDto) GetInbound() CreateHostRequestDtoInbound {
	return s.Inbound
}

// GetRemark returns the value of Remark.
func (s *CreateHostRequestDto) GetRemark() string {
	return s.Remark
}

// GetAddress returns the value of Address.
func (s *CreateHostRequestDto) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *CreateHostRequestDto) GetPort() int {
	return s.Port
}

// GetPath returns the value of Path.
func (s *CreateHostRequestDto) GetPath() OptString {
	return s.Path
}

// GetSni returns the value of Sni.
func (s *CreateHostRequestDto) GetSni() OptString {
	return s.Sni
}

// GetHost returns the value of Host.
func (s *CreateHostRequestDto) GetHost() OptString {
	return s.Host
}

// GetAlpn returns the value of Alpn.
func (s *CreateHostRequestDto) GetAlpn() OptNilCreateHostRequestDtoAlpn {
	return s.Alpn
}

// GetFingerprint returns the value of Fingerprint.
func (s *CreateHostRequestDto) GetFingerprint() OptNilCreateHostRequestDtoFingerprint {
	return s.Fingerprint
}

// GetIsDisabled returns the value of IsDisabled.
func (s *CreateHostRequestDto) GetIsDisabled() OptBool {
	return s.IsDisabled
}

// GetSecurityLayer returns the value of SecurityLayer.
func (s *CreateHostRequestDto) GetSecurityLayer() OptCreateHostRequestDtoSecurityLayer {
	return s.SecurityLayer
}

// GetXHttpExtraParams returns the value of XHttpExtraParams.
func (s *CreateHostRequestDto) GetXHttpExtraParams() jx.Raw {
	return s.XHttpExtraParams
}

// GetMuxParams returns the value of MuxParams.
func (s *CreateHostRequestDto) GetMuxParams() jx.Raw {
	return s.MuxParams
}

// GetSockoptParams returns the value of SockoptParams.
func (s *CreateHostRequestDto) GetSockoptParams() jx.Raw {
	return s.SockoptParams
}

// GetServerDescription returns the value of ServerDescription.
func (s *CreateHostRequestDto) GetServerDescription() OptNilString {
	return s.ServerDescription
}

// GetTag returns the value of Tag.
func (s *CreateHostRequestDto) GetTag() OptNilString {
	return s.Tag
}

// GetIsHidden returns the value of IsHidden.
func (s *CreateHostRequestDto) GetIsHidden() OptBool {
	return s.IsHidden
}

// GetOverrideSniFromAddress returns the value of OverrideSniFromAddress.
func (s *CreateHostRequestDto) GetOverrideSniFromAddress() OptBool {
	return s.OverrideSniFromAddress
}

// GetAllowInsecure returns the value of AllowInsecure.
func (s *CreateHostRequestDto) GetAllowInsecure() OptBool {
	return s.AllowInsecure
}

// GetVlessRouteId returns the value of VlessRouteId.
func (s *CreateHostRequestDto) GetVlessRouteId() OptNilInt {
	return s.VlessRouteId
}

// GetShuffleHost returns the value of ShuffleHost.
func (s *CreateHostRequestDto) GetShuffleHost() OptBool {
	return s.ShuffleHost
}

// GetMihomoX25519 returns the value of MihomoX25519.
func (s *CreateHostRequestDto) GetMihomoX25519() OptBool {
	return s.MihomoX25519
}

// GetNodes returns the value of Nodes.
func (s *CreateHostRequestDto) GetNodes() []uuid.UUID {
	return s.Nodes
}

// SetInbound sets the value of Inbound.
func (s *CreateHostRequestDto) SetInbound(val CreateHostRequestDtoInbound) {
	s.Inbound = val
}

// SetRemark sets the value of Remark.
func (s *CreateHostRequestDto) SetRemark(val string) {
	s.Remark = val
}

// SetAddress sets the value of Address.
func (s *CreateHostRequestDto) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *CreateHostRequestDto) SetPort(val int) {
	s.Port = val
}

// SetPath sets the value of Path.
func (s *CreateHostRequestDto) SetPath(val OptString) {
	s.Path = val
}

// SetSni sets the value of Sni.
func (s *CreateHostRequestDto) SetSni(val OptString) {
	s.Sni = val
}

// SetHost sets the value of Host.
func (s *CreateHostRequestDto) SetHost(val OptString) {
	s.Host = val
}

// SetAlpn sets the value of Alpn.
func (s *CreateHostRequestDto) SetAlpn(val OptNilCreateHostRequestDtoAlpn) {
	s.Alpn = val
}

// SetFingerprint sets the value of Fingerprint.
func (s *CreateHostRequestDto) SetFingerprint(val OptNilCreateHostRequestDtoFingerprint) {
	s.Fingerprint = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *CreateHostRequestDto) SetIsDisabled(val OptBool) {
	s.IsDisabled = val
}

// SetSecurityLayer sets the value of SecurityLayer.
func (s *CreateHostRequestDto) SetSecurityLayer(val OptCreateHostRequestDtoSecurityLayer) {
	s.SecurityLayer = val
}

// SetXHttpExtraParams sets the value of XHttpExtraParams.
func (s *CreateHostRequestDto) SetXHttpExtraParams(val jx.Raw) {
	s.XHttpExtraParams = val
}

// SetMuxParams sets the value of MuxParams.
func (s *CreateHostRequestDto) SetMuxParams(val jx.Raw) {
	s.MuxParams = val
}

// SetSockoptParams sets the value of SockoptParams.
func (s *CreateHostRequestDto) SetSockoptParams(val jx.Raw) {
	s.SockoptParams = val
}

// SetServerDescription sets the value of ServerDescription.
func (s *CreateHostRequestDto) SetServerDescription(val OptNilString) {
	s.ServerDescription = val
}

// SetTag sets the value of Tag.
func (s *CreateHostRequestDto) SetTag(val OptNilString) {
	s.Tag = val
}

// SetIsHidden sets the value of IsHidden.
func (s *CreateHostRequestDto) SetIsHidden(val OptBool) {
	s.IsHidden = val
}

// SetOverrideSniFromAddress sets the value of OverrideSniFromAddress.
func (s *CreateHostRequestDto) SetOverrideSniFromAddress(val OptBool) {
	s.OverrideSniFromAddress = val
}

// SetAllowInsecure sets the value of AllowInsecure.
func (s *CreateHostRequestDto) SetAllowInsecure(val OptBool) {
	s.AllowInsecure = val
}

// SetVlessRouteId sets the value of VlessRouteId.
func (s *CreateHostRequestDto) SetVlessRouteId(val OptNilInt) {
	s.VlessRouteId = val
}

// SetShuffleHost sets the value of ShuffleHost.
func (s *CreateHostRequestDto) SetShuffleHost(val OptBool) {
	s.ShuffleHost = val
}

// SetMihomoX25519 sets the value of MihomoX25519.
func (s *CreateHostRequestDto) SetMihomoX25519(val OptBool) {
	s.MihomoX25519 = val
}

// SetNodes sets the value of Nodes.
func (s *CreateHostRequestDto) SetNodes(val []uuid.UUID) {
	s.Nodes = val
}

type CreateHostRequestDtoAlpn string

const (
	CreateHostRequestDtoAlpnH3         CreateHostRequestDtoAlpn = "h3"
	CreateHostRequestDtoAlpnH2         CreateHostRequestDtoAlpn = "h2"
	CreateHostRequestDtoAlpnHTTP11     CreateHostRequestDtoAlpn = "http/1.1"
	CreateHostRequestDtoAlpnH2HTTP11   CreateHostRequestDtoAlpn = "h2,http/1.1"
	CreateHostRequestDtoAlpnH3H2HTTP11 CreateHostRequestDtoAlpn = "h3,h2,http/1.1"
	CreateHostRequestDtoAlpnH3H2       CreateHostRequestDtoAlpn = "h3,h2"
)

// AllValues returns all CreateHostRequestDtoAlpn values.
func (CreateHostRequestDtoAlpn) AllValues() []CreateHostRequestDtoAlpn {
	return []CreateHostRequestDtoAlpn{
		CreateHostRequestDtoAlpnH3,
		CreateHostRequestDtoAlpnH2,
		CreateHostRequestDtoAlpnHTTP11,
		CreateHostRequestDtoAlpnH2HTTP11,
		CreateHostRequestDtoAlpnH3H2HTTP11,
		CreateHostRequestDtoAlpnH3H2,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateHostRequestDtoAlpn) MarshalText() ([]byte, error) {
	switch s {
	case CreateHostRequestDtoAlpnH3:
		return []byte(s), nil
	case CreateHostRequestDtoAlpnH2:
		return []byte(s), nil
	case CreateHostRequestDtoAlpnHTTP11:
		return []byte(s), nil
	case CreateHostRequestDtoAlpnH2HTTP11:
		return []byte(s), nil
	case CreateHostRequestDtoAlpnH3H2HTTP11:
		return []byte(s), nil
	case CreateHostRequestDtoAlpnH3H2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateHostRequestDtoAlpn) UnmarshalText(data []byte) error {
	switch CreateHostRequestDtoAlpn(data) {
	case CreateHostRequestDtoAlpnH3:
		*s = CreateHostRequestDtoAlpnH3
		return nil
	case CreateHostRequestDtoAlpnH2:
		*s = CreateHostRequestDtoAlpnH2
		return nil
	case CreateHostRequestDtoAlpnHTTP11:
		*s = CreateHostRequestDtoAlpnHTTP11
		return nil
	case CreateHostRequestDtoAlpnH2HTTP11:
		*s = CreateHostRequestDtoAlpnH2HTTP11
		return nil
	case CreateHostRequestDtoAlpnH3H2HTTP11:
		*s = CreateHostRequestDtoAlpnH3H2HTTP11
		return nil
	case CreateHostRequestDtoAlpnH3H2:
		*s = CreateHostRequestDtoAlpnH3H2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type CreateHostRequestDtoFingerprint string

const (
	CreateHostRequestDtoFingerprintChrome     CreateHostRequestDtoFingerprint = "chrome"
	CreateHostRequestDtoFingerprintFirefox    CreateHostRequestDtoFingerprint = "firefox"
	CreateHostRequestDtoFingerprintSafari     CreateHostRequestDtoFingerprint = "safari"
	CreateHostRequestDtoFingerprintIos        CreateHostRequestDtoFingerprint = "ios"
	CreateHostRequestDtoFingerprintAndroid    CreateHostRequestDtoFingerprint = "android"
	CreateHostRequestDtoFingerprintEdge       CreateHostRequestDtoFingerprint = "edge"
	CreateHostRequestDtoFingerprintQq         CreateHostRequestDtoFingerprint = "qq"
	CreateHostRequestDtoFingerprintRandom     CreateHostRequestDtoFingerprint = "random"
	CreateHostRequestDtoFingerprintRandomized CreateHostRequestDtoFingerprint = "randomized"
)

// AllValues returns all CreateHostRequestDtoFingerprint values.
func (CreateHostRequestDtoFingerprint) AllValues() []CreateHostRequestDtoFingerprint {
	return []CreateHostRequestDtoFingerprint{
		CreateHostRequestDtoFingerprintChrome,
		CreateHostRequestDtoFingerprintFirefox,
		CreateHostRequestDtoFingerprintSafari,
		CreateHostRequestDtoFingerprintIos,
		CreateHostRequestDtoFingerprintAndroid,
		CreateHostRequestDtoFingerprintEdge,
		CreateHostRequestDtoFingerprintQq,
		CreateHostRequestDtoFingerprintRandom,
		CreateHostRequestDtoFingerprintRandomized,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateHostRequestDtoFingerprint) MarshalText() ([]byte, error) {
	switch s {
	case CreateHostRequestDtoFingerprintChrome:
		return []byte(s), nil
	case CreateHostRequestDtoFingerprintFirefox:
		return []byte(s), nil
	case CreateHostRequestDtoFingerprintSafari:
		return []byte(s), nil
	case CreateHostRequestDtoFingerprintIos:
		return []byte(s), nil
	case CreateHostRequestDtoFingerprintAndroid:
		return []byte(s), nil
	case CreateHostRequestDtoFingerprintEdge:
		return []byte(s), nil
	case CreateHostRequestDtoFingerprintQq:
		return []byte(s), nil
	case CreateHostRequestDtoFingerprintRandom:
		return []byte(s), nil
	case CreateHostRequestDtoFingerprintRandomized:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateHostRequestDtoFingerprint) UnmarshalText(data []byte) error {
	switch CreateHostRequestDtoFingerprint(data) {
	case CreateHostRequestDtoFingerprintChrome:
		*s = CreateHostRequestDtoFingerprintChrome
		return nil
	case CreateHostRequestDtoFingerprintFirefox:
		*s = CreateHostRequestDtoFingerprintFirefox
		return nil
	case CreateHostRequestDtoFingerprintSafari:
		*s = CreateHostRequestDtoFingerprintSafari
		return nil
	case CreateHostRequestDtoFingerprintIos:
		*s = CreateHostRequestDtoFingerprintIos
		return nil
	case CreateHostRequestDtoFingerprintAndroid:
		*s = CreateHostRequestDtoFingerprintAndroid
		return nil
	case CreateHostRequestDtoFingerprintEdge:
		*s = CreateHostRequestDtoFingerprintEdge
		return nil
	case CreateHostRequestDtoFingerprintQq:
		*s = CreateHostRequestDtoFingerprintQq
		return nil
	case CreateHostRequestDtoFingerprintRandom:
		*s = CreateHostRequestDtoFingerprintRandom
		return nil
	case CreateHostRequestDtoFingerprintRandomized:
		*s = CreateHostRequestDtoFingerprintRandomized
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type CreateHostRequestDtoInbound struct {
	ConfigProfileUuid        uuid.UUID `json:"configProfileUuid"`
	ConfigProfileInboundUuid uuid.UUID `json:"configProfileInboundUuid"`
}

// GetConfigProfileUuid returns the value of ConfigProfileUuid.
func (s *CreateHostRequestDtoInbound) GetConfigProfileUuid() uuid.UUID {
	return s.ConfigProfileUuid
}

// GetConfigProfileInboundUuid returns the value of ConfigProfileInboundUuid.
func (s *CreateHostRequestDtoInbound) GetConfigProfileInboundUuid() uuid.UUID {
	return s.ConfigProfileInboundUuid
}

// SetConfigProfileUuid sets the value of ConfigProfileUuid.
func (s *CreateHostRequestDtoInbound) SetConfigProfileUuid(val uuid.UUID) {
	s.ConfigProfileUuid = val
}

// SetConfigProfileInboundUuid sets the value of ConfigProfileInboundUuid.
func (s *CreateHostRequestDtoInbound) SetConfigProfileInboundUuid(val uuid.UUID) {
	s.ConfigProfileInboundUuid = val
}

type CreateHostRequestDtoSecurityLayer string

const (
	CreateHostRequestDtoSecurityLayerDEFAULT CreateHostRequestDtoSecurityLayer = "DEFAULT"
	CreateHostRequestDtoSecurityLayerTLS     CreateHostRequestDtoSecurityLayer = "TLS"
	CreateHostRequestDtoSecurityLayerNONE    CreateHostRequestDtoSecurityLayer = "NONE"
)

// AllValues returns all CreateHostRequestDtoSecurityLayer values.
func (CreateHostRequestDtoSecurityLayer) AllValues() []CreateHostRequestDtoSecurityLayer {
	return []CreateHostRequestDtoSecurityLayer{
		CreateHostRequestDtoSecurityLayerDEFAULT,
		CreateHostRequestDtoSecurityLayerTLS,
		CreateHostRequestDtoSecurityLayerNONE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateHostRequestDtoSecurityLayer) MarshalText() ([]byte, error) {
	switch s {
	case CreateHostRequestDtoSecurityLayerDEFAULT:
		return []byte(s), nil
	case CreateHostRequestDtoSecurityLayerTLS:
		return []byte(s), nil
	case CreateHostRequestDtoSecurityLayerNONE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateHostRequestDtoSecurityLayer) UnmarshalText(data []byte) error {
	switch CreateHostRequestDtoSecurityLayer(data) {
	case CreateHostRequestDtoSecurityLayerDEFAULT:
		*s = CreateHostRequestDtoSecurityLayerDEFAULT
		return nil
	case CreateHostRequestDtoSecurityLayerTLS:
		*s = CreateHostRequestDtoSecurityLayerTLS
		return nil
	case CreateHostRequestDtoSecurityLayerNONE:
		*s = CreateHostRequestDtoSecurityLayerNONE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CreateInfraBillingHistoryRecordRequestDto
type CreateInfraBillingHistoryRecordRequestDto struct {
	ProviderUuid uuid.UUID `json:"providerUuid"`
	Amount       float64   `json:"amount"`
	// Billing date. Format: 2025-01-17T15:38:45.065Z.
	BilledAt time.Time `json:"billedAt"`
}

// GetProviderUuid returns the value of ProviderUuid.
func (s *CreateInfraBillingHistoryRecordRequestDto) GetProviderUuid() uuid.UUID {
	return s.ProviderUuid
}

// GetAmount returns the value of Amount.
func (s *CreateInfraBillingHistoryRecordRequestDto) GetAmount() float64 {
	return s.Amount
}

// GetBilledAt returns the value of BilledAt.
func (s *CreateInfraBillingHistoryRecordRequestDto) GetBilledAt() time.Time {
	return s.BilledAt
}

// SetProviderUuid sets the value of ProviderUuid.
func (s *CreateInfraBillingHistoryRecordRequestDto) SetProviderUuid(val uuid.UUID) {
	s.ProviderUuid = val
}

// SetAmount sets the value of Amount.
func (s *CreateInfraBillingHistoryRecordRequestDto) SetAmount(val float64) {
	s.Amount = val
}

// SetBilledAt sets the value of BilledAt.
func (s *CreateInfraBillingHistoryRecordRequestDto) SetBilledAt(val time.Time) {
	s.BilledAt = val
}

// Ref: #/components/schemas/CreateInfraBillingNodeRequestDto
type CreateInfraBillingNodeRequestDto struct {
	ProviderUuid uuid.UUID `json:"providerUuid"`
	NodeUuid     uuid.UUID `json:"nodeUuid"`
	// Next billing date. Format: 2025-01-17T15:38:45.065Z.
	NextBillingAt OptDateTime `json:"nextBillingAt"`
}

// GetProviderUuid returns the value of ProviderUuid.
func (s *CreateInfraBillingNodeRequestDto) GetProviderUuid() uuid.UUID {
	return s.ProviderUuid
}

// GetNodeUuid returns the value of NodeUuid.
func (s *CreateInfraBillingNodeRequestDto) GetNodeUuid() uuid.UUID {
	return s.NodeUuid
}

// GetNextBillingAt returns the value of NextBillingAt.
func (s *CreateInfraBillingNodeRequestDto) GetNextBillingAt() OptDateTime {
	return s.NextBillingAt
}

// SetProviderUuid sets the value of ProviderUuid.
func (s *CreateInfraBillingNodeRequestDto) SetProviderUuid(val uuid.UUID) {
	s.ProviderUuid = val
}

// SetNodeUuid sets the value of NodeUuid.
func (s *CreateInfraBillingNodeRequestDto) SetNodeUuid(val uuid.UUID) {
	s.NodeUuid = val
}

// SetNextBillingAt sets the value of NextBillingAt.
func (s *CreateInfraBillingNodeRequestDto) SetNextBillingAt(val OptDateTime) {
	s.NextBillingAt = val
}

// Ref: #/components/schemas/CreateInfraProviderRequestDto
type CreateInfraProviderRequestDto struct {
	Name        string `json:"name"`
	FaviconLink OptURI `json:"faviconLink"`
	LoginUrl    OptURI `json:"loginUrl"`
}

// GetName returns the value of Name.
func (s *CreateInfraProviderRequestDto) GetName() string {
	return s.Name
}

// GetFaviconLink returns the value of FaviconLink.
func (s *CreateInfraProviderRequestDto) GetFaviconLink() OptURI {
	return s.FaviconLink
}

// GetLoginUrl returns the value of LoginUrl.
func (s *CreateInfraProviderRequestDto) GetLoginUrl() OptURI {
	return s.LoginUrl
}

// SetName sets the value of Name.
func (s *CreateInfraProviderRequestDto) SetName(val string) {
	s.Name = val
}

// SetFaviconLink sets the value of FaviconLink.
func (s *CreateInfraProviderRequestDto) SetFaviconLink(val OptURI) {
	s.FaviconLink = val
}

// SetLoginUrl sets the value of LoginUrl.
func (s *CreateInfraProviderRequestDto) SetLoginUrl(val OptURI) {
	s.LoginUrl = val
}

// Ref: #/components/schemas/CreateInternalSquadRequestDto
type CreateInternalSquadRequestDto struct {
	Name     string      `json:"name"`
	Inbounds []uuid.UUID `json:"inbounds"`
}

// GetName returns the value of Name.
func (s *CreateInternalSquadRequestDto) GetName() string {
	return s.Name
}

// GetInbounds returns the value of Inbounds.
func (s *CreateInternalSquadRequestDto) GetInbounds() []uuid.UUID {
	return s.Inbounds
}

// SetName sets the value of Name.
func (s *CreateInternalSquadRequestDto) SetName(val string) {
	s.Name = val
}

// SetInbounds sets the value of Inbounds.
func (s *CreateInternalSquadRequestDto) SetInbounds(val []uuid.UUID) {
	s.Inbounds = val
}

// Ref: #/components/schemas/CreateNodeRequestDto
type CreateNodeRequestDto struct {
	Name                    string                            `json:"name"`
	Address                 string                            `json:"address"`
	Port                    OptInt                            `json:"port"`
	IsTrafficTrackingActive OptBool                           `json:"isTrafficTrackingActive"`
	TrafficLimitBytes       OptInt                            `json:"trafficLimitBytes"`
	NotifyPercent           OptInt                            `json:"notifyPercent"`
	TrafficResetDay         OptInt                            `json:"trafficResetDay"`
	CountryCode             OptString                         `json:"countryCode"`
	ConsumptionMultiplier   OptFloat64                        `json:"consumptionMultiplier"`
	ConfigProfile           CreateNodeRequestDtoConfigProfile `json:"configProfile"`
	ProviderUuid            OptNilUUID                        `json:"providerUuid"`
}

// GetName returns the value of Name.
func (s *CreateNodeRequestDto) GetName() string {
	return s.Name
}

// GetAddress returns the value of Address.
func (s *CreateNodeRequestDto) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *CreateNodeRequestDto) GetPort() OptInt {
	return s.Port
}

// GetIsTrafficTrackingActive returns the value of IsTrafficTrackingActive.
func (s *CreateNodeRequestDto) GetIsTrafficTrackingActive() OptBool {
	return s.IsTrafficTrackingActive
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *CreateNodeRequestDto) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetNotifyPercent returns the value of NotifyPercent.
func (s *CreateNodeRequestDto) GetNotifyPercent() OptInt {
	return s.NotifyPercent
}

// GetTrafficResetDay returns the value of TrafficResetDay.
func (s *CreateNodeRequestDto) GetTrafficResetDay() OptInt {
	return s.TrafficResetDay
}

// GetCountryCode returns the value of CountryCode.
func (s *CreateNodeRequestDto) GetCountryCode() OptString {
	return s.CountryCode
}

// GetConsumptionMultiplier returns the value of ConsumptionMultiplier.
func (s *CreateNodeRequestDto) GetConsumptionMultiplier() OptFloat64 {
	return s.ConsumptionMultiplier
}

// GetConfigProfile returns the value of ConfigProfile.
func (s *CreateNodeRequestDto) GetConfigProfile() CreateNodeRequestDtoConfigProfile {
	return s.ConfigProfile
}

// GetProviderUuid returns the value of ProviderUuid.
func (s *CreateNodeRequestDto) GetProviderUuid() OptNilUUID {
	return s.ProviderUuid
}

// SetName sets the value of Name.
func (s *CreateNodeRequestDto) SetName(val string) {
	s.Name = val
}

// SetAddress sets the value of Address.
func (s *CreateNodeRequestDto) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *CreateNodeRequestDto) SetPort(val OptInt) {
	s.Port = val
}

// SetIsTrafficTrackingActive sets the value of IsTrafficTrackingActive.
func (s *CreateNodeRequestDto) SetIsTrafficTrackingActive(val OptBool) {
	s.IsTrafficTrackingActive = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *CreateNodeRequestDto) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetNotifyPercent sets the value of NotifyPercent.
func (s *CreateNodeRequestDto) SetNotifyPercent(val OptInt) {
	s.NotifyPercent = val
}

// SetTrafficResetDay sets the value of TrafficResetDay.
func (s *CreateNodeRequestDto) SetTrafficResetDay(val OptInt) {
	s.TrafficResetDay = val
}

// SetCountryCode sets the value of CountryCode.
func (s *CreateNodeRequestDto) SetCountryCode(val OptString) {
	s.CountryCode = val
}

// SetConsumptionMultiplier sets the value of ConsumptionMultiplier.
func (s *CreateNodeRequestDto) SetConsumptionMultiplier(val OptFloat64) {
	s.ConsumptionMultiplier = val
}

// SetConfigProfile sets the value of ConfigProfile.
func (s *CreateNodeRequestDto) SetConfigProfile(val CreateNodeRequestDtoConfigProfile) {
	s.ConfigProfile = val
}

// SetProviderUuid sets the value of ProviderUuid.
func (s *CreateNodeRequestDto) SetProviderUuid(val OptNilUUID) {
	s.ProviderUuid = val
}

type CreateNodeRequestDtoConfigProfile struct {
	ActiveConfigProfileUuid uuid.UUID   `json:"activeConfigProfileUuid"`
	ActiveInbounds          []uuid.UUID `json:"activeInbounds"`
}

// GetActiveConfigProfileUuid returns the value of ActiveConfigProfileUuid.
func (s *CreateNodeRequestDtoConfigProfile) GetActiveConfigProfileUuid() uuid.UUID {
	return s.ActiveConfigProfileUuid
}

// GetActiveInbounds returns the value of ActiveInbounds.
func (s *CreateNodeRequestDtoConfigProfile) GetActiveInbounds() []uuid.UUID {
	return s.ActiveInbounds
}

// SetActiveConfigProfileUuid sets the value of ActiveConfigProfileUuid.
func (s *CreateNodeRequestDtoConfigProfile) SetActiveConfigProfileUuid(val uuid.UUID) {
	s.ActiveConfigProfileUuid = val
}

// SetActiveInbounds sets the value of ActiveInbounds.
func (s *CreateNodeRequestDtoConfigProfile) SetActiveInbounds(val []uuid.UUID) {
	s.ActiveInbounds = val
}

// Ref: #/components/schemas/CreateSubscriptionTemplateRequestDto
type CreateSubscriptionTemplateRequestDto struct {
	Name         string                                           `json:"name"`
	TemplateType CreateSubscriptionTemplateRequestDtoTemplateType `json:"templateType"`
}

// GetName returns the value of Name.
func (s *CreateSubscriptionTemplateRequestDto) GetName() string {
	return s.Name
}

// GetTemplateType returns the value of TemplateType.
func (s *CreateSubscriptionTemplateRequestDto) GetTemplateType() CreateSubscriptionTemplateRequestDtoTemplateType {
	return s.TemplateType
}

// SetName sets the value of Name.
func (s *CreateSubscriptionTemplateRequestDto) SetName(val string) {
	s.Name = val
}

// SetTemplateType sets the value of TemplateType.
func (s *CreateSubscriptionTemplateRequestDto) SetTemplateType(val CreateSubscriptionTemplateRequestDtoTemplateType) {
	s.TemplateType = val
}

type CreateSubscriptionTemplateRequestDtoTemplateType string

const (
	CreateSubscriptionTemplateRequestDtoTemplateTypeXRAYJSON   CreateSubscriptionTemplateRequestDtoTemplateType = "XRAY_JSON"
	CreateSubscriptionTemplateRequestDtoTemplateTypeXRAYBASE64 CreateSubscriptionTemplateRequestDtoTemplateType = "XRAY_BASE64"
	CreateSubscriptionTemplateRequestDtoTemplateTypeMIHOMO     CreateSubscriptionTemplateRequestDtoTemplateType = "MIHOMO"
	CreateSubscriptionTemplateRequestDtoTemplateTypeSTASH      CreateSubscriptionTemplateRequestDtoTemplateType = "STASH"
	CreateSubscriptionTemplateRequestDtoTemplateTypeCLASH      CreateSubscriptionTemplateRequestDtoTemplateType = "CLASH"
	CreateSubscriptionTemplateRequestDtoTemplateTypeSINGBOX    CreateSubscriptionTemplateRequestDtoTemplateType = "SINGBOX"
)

// AllValues returns all CreateSubscriptionTemplateRequestDtoTemplateType values.
func (CreateSubscriptionTemplateRequestDtoTemplateType) AllValues() []CreateSubscriptionTemplateRequestDtoTemplateType {
	return []CreateSubscriptionTemplateRequestDtoTemplateType{
		CreateSubscriptionTemplateRequestDtoTemplateTypeXRAYJSON,
		CreateSubscriptionTemplateRequestDtoTemplateTypeXRAYBASE64,
		CreateSubscriptionTemplateRequestDtoTemplateTypeMIHOMO,
		CreateSubscriptionTemplateRequestDtoTemplateTypeSTASH,
		CreateSubscriptionTemplateRequestDtoTemplateTypeCLASH,
		CreateSubscriptionTemplateRequestDtoTemplateTypeSINGBOX,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateSubscriptionTemplateRequestDtoTemplateType) MarshalText() ([]byte, error) {
	switch s {
	case CreateSubscriptionTemplateRequestDtoTemplateTypeXRAYJSON:
		return []byte(s), nil
	case CreateSubscriptionTemplateRequestDtoTemplateTypeXRAYBASE64:
		return []byte(s), nil
	case CreateSubscriptionTemplateRequestDtoTemplateTypeMIHOMO:
		return []byte(s), nil
	case CreateSubscriptionTemplateRequestDtoTemplateTypeSTASH:
		return []byte(s), nil
	case CreateSubscriptionTemplateRequestDtoTemplateTypeCLASH:
		return []byte(s), nil
	case CreateSubscriptionTemplateRequestDtoTemplateTypeSINGBOX:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateSubscriptionTemplateRequestDtoTemplateType) UnmarshalText(data []byte) error {
	switch CreateSubscriptionTemplateRequestDtoTemplateType(data) {
	case CreateSubscriptionTemplateRequestDtoTemplateTypeXRAYJSON:
		*s = CreateSubscriptionTemplateRequestDtoTemplateTypeXRAYJSON
		return nil
	case CreateSubscriptionTemplateRequestDtoTemplateTypeXRAYBASE64:
		*s = CreateSubscriptionTemplateRequestDtoTemplateTypeXRAYBASE64
		return nil
	case CreateSubscriptionTemplateRequestDtoTemplateTypeMIHOMO:
		*s = CreateSubscriptionTemplateRequestDtoTemplateTypeMIHOMO
		return nil
	case CreateSubscriptionTemplateRequestDtoTemplateTypeSTASH:
		*s = CreateSubscriptionTemplateRequestDtoTemplateTypeSTASH
		return nil
	case CreateSubscriptionTemplateRequestDtoTemplateTypeCLASH:
		*s = CreateSubscriptionTemplateRequestDtoTemplateTypeCLASH
		return nil
	case CreateSubscriptionTemplateRequestDtoTemplateTypeSINGBOX:
		*s = CreateSubscriptionTemplateRequestDtoTemplateTypeSINGBOX
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CreateUserHwidDeviceRequestDto
type CreateUserHwidDeviceRequestDto struct {
	Hwid        string    `json:"hwid"`
	UserUuid    uuid.UUID `json:"userUuid"`
	Platform    OptString `json:"platform"`
	OsVersion   OptString `json:"osVersion"`
	DeviceModel OptString `json:"deviceModel"`
	UserAgent   OptString `json:"userAgent"`
}

// GetHwid returns the value of Hwid.
func (s *CreateUserHwidDeviceRequestDto) GetHwid() string {
	return s.Hwid
}

// GetUserUuid returns the value of UserUuid.
func (s *CreateUserHwidDeviceRequestDto) GetUserUuid() uuid.UUID {
	return s.UserUuid
}

// GetPlatform returns the value of Platform.
func (s *CreateUserHwidDeviceRequestDto) GetPlatform() OptString {
	return s.Platform
}

// GetOsVersion returns the value of OsVersion.
func (s *CreateUserHwidDeviceRequestDto) GetOsVersion() OptString {
	return s.OsVersion
}

// GetDeviceModel returns the value of DeviceModel.
func (s *CreateUserHwidDeviceRequestDto) GetDeviceModel() OptString {
	return s.DeviceModel
}

// GetUserAgent returns the value of UserAgent.
func (s *CreateUserHwidDeviceRequestDto) GetUserAgent() OptString {
	return s.UserAgent
}

// SetHwid sets the value of Hwid.
func (s *CreateUserHwidDeviceRequestDto) SetHwid(val string) {
	s.Hwid = val
}

// SetUserUuid sets the value of UserUuid.
func (s *CreateUserHwidDeviceRequestDto) SetUserUuid(val uuid.UUID) {
	s.UserUuid = val
}

// SetPlatform sets the value of Platform.
func (s *CreateUserHwidDeviceRequestDto) SetPlatform(val OptString) {
	s.Platform = val
}

// SetOsVersion sets the value of OsVersion.
func (s *CreateUserHwidDeviceRequestDto) SetOsVersion(val OptString) {
	s.OsVersion = val
}

// SetDeviceModel sets the value of DeviceModel.
func (s *CreateUserHwidDeviceRequestDto) SetDeviceModel(val OptString) {
	s.DeviceModel = val
}

// SetUserAgent sets the value of UserAgent.
func (s *CreateUserHwidDeviceRequestDto) SetUserAgent(val OptString) {
	s.UserAgent = val
}

// Ref: #/components/schemas/CreateUserRequestDto
type CreateUserRequestDto struct {
	// Unique username for the user. Required. Must be 3-36 characters long and contain only letters,
	// numbers, underscores and dashes.
	Username string `json:"username"`
	// Optional. User account status. Defaults to ACTIVE.
	Status OptCreateUserRequestDtoStatus `json:"status"`
	// Optional. Short UUID identifier for the user.
	ShortUuid OptString `json:"shortUuid"`
	// Optional. Password for Trojan protocol. Must be 8-32 characters.
	TrojanPassword OptString `json:"trojanPassword"`
	// Optional. UUID for VLESS protocol. Must be a valid UUID format.
	VlessUuid OptUUID `json:"vlessUuid"`
	// Optional. Password for Shadowsocks protocol. Must be 8-32 characters.
	SsPassword OptString `json:"ssPassword"`
	// Optional. Traffic limit in bytes. Set to 0 for unlimited traffic.
	TrafficLimitBytes OptInt `json:"trafficLimitBytes"`
	// Available reset periods.
	TrafficLimitStrategy OptCreateUserRequestDtoTrafficLimitStrategy `json:"trafficLimitStrategy"`
	// Account expiration date. Required. Format: 2025-01-17T15:38:45.065Z.
	ExpireAt time.Time `json:"expireAt"`
	// Optional. Account creation date. Format: 2025-01-17T15:38:45.065Z.
	CreatedAt OptDateTime `json:"createdAt"`
	// Optional. Date of last traffic reset. Format: 2025-01-17T15:38:45.065Z.
	LastTrafficResetAt OptDateTime `json:"lastTrafficResetAt"`
	// Optional. Additional notes or description for the user account.
	Description OptString `json:"description"`
	// Optional. User tag for categorization. Max 16 characters, uppercase letters, numbers and
	// underscores only.
	Tag OptNilString `json:"tag"`
	// Optional. Telegram user ID for notifications. Must be an integer.
	TelegramId OptNilInt `json:"telegramId"`
	// Optional. User email address. Must be a valid email format.
	Email OptNilString `json:"email"`
	// Optional. Maximum number of hardware devices allowed. Must be a positive integer.
	HwidDeviceLimit OptInt `json:"hwidDeviceLimit"`
	// Optional. Array of UUIDs representing enabled internal squads.
	ActiveInternalSquads []uuid.UUID `json:"activeInternalSquads"`
	// Optional. Pass UUID to create user with specific UUID, otherwise it will be generated
	// automatically.
	UUID OptUUID `json:"uuid"`
	// Optional. External squad UUID.
	ExternalSquadUuid OptNilUUID `json:"externalSquadUuid"`
}

// GetUsername returns the value of Username.
func (s *CreateUserRequestDto) GetUsername() string {
	return s.Username
}

// GetStatus returns the value of Status.
func (s *CreateUserRequestDto) GetStatus() OptCreateUserRequestDtoStatus {
	return s.Status
}

// GetShortUuid returns the value of ShortUuid.
func (s *CreateUserRequestDto) GetShortUuid() OptString {
	return s.ShortUuid
}

// GetTrojanPassword returns the value of TrojanPassword.
func (s *CreateUserRequestDto) GetTrojanPassword() OptString {
	return s.TrojanPassword
}

// GetVlessUuid returns the value of VlessUuid.
func (s *CreateUserRequestDto) GetVlessUuid() OptUUID {
	return s.VlessUuid
}

// GetSsPassword returns the value of SsPassword.
func (s *CreateUserRequestDto) GetSsPassword() OptString {
	return s.SsPassword
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *CreateUserRequestDto) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *CreateUserRequestDto) GetTrafficLimitStrategy() OptCreateUserRequestDtoTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetExpireAt returns the value of ExpireAt.
func (s *CreateUserRequestDto) GetExpireAt() time.Time {
	return s.ExpireAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateUserRequestDto) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetLastTrafficResetAt returns the value of LastTrafficResetAt.
func (s *CreateUserRequestDto) GetLastTrafficResetAt() OptDateTime {
	return s.LastTrafficResetAt
}

// GetDescription returns the value of Description.
func (s *CreateUserRequestDto) GetDescription() OptString {
	return s.Description
}

// GetTag returns the value of Tag.
func (s *CreateUserRequestDto) GetTag() OptNilString {
	return s.Tag
}

// GetTelegramId returns the value of TelegramId.
func (s *CreateUserRequestDto) GetTelegramId() OptNilInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *CreateUserRequestDto) GetEmail() OptNilString {
	return s.Email
}

// GetHwidDeviceLimit returns the value of HwidDeviceLimit.
func (s *CreateUserRequestDto) GetHwidDeviceLimit() OptInt {
	return s.HwidDeviceLimit
}

// GetActiveInternalSquads returns the value of ActiveInternalSquads.
func (s *CreateUserRequestDto) GetActiveInternalSquads() []uuid.UUID {
	return s.ActiveInternalSquads
}

// GetUUID returns the value of UUID.
func (s *CreateUserRequestDto) GetUUID() OptUUID {
	return s.UUID
}

// GetExternalSquadUuid returns the value of ExternalSquadUuid.
func (s *CreateUserRequestDto) GetExternalSquadUuid() OptNilUUID {
	return s.ExternalSquadUuid
}

// SetUsername sets the value of Username.
func (s *CreateUserRequestDto) SetUsername(val string) {
	s.Username = val
}

// SetStatus sets the value of Status.
func (s *CreateUserRequestDto) SetStatus(val OptCreateUserRequestDtoStatus) {
	s.Status = val
}

// SetShortUuid sets the value of ShortUuid.
func (s *CreateUserRequestDto) SetShortUuid(val OptString) {
	s.ShortUuid = val
}

// SetTrojanPassword sets the value of TrojanPassword.
func (s *CreateUserRequestDto) SetTrojanPassword(val OptString) {
	s.TrojanPassword = val
}

// SetVlessUuid sets the value of VlessUuid.
func (s *CreateUserRequestDto) SetVlessUuid(val OptUUID) {
	s.VlessUuid = val
}

// SetSsPassword sets the value of SsPassword.
func (s *CreateUserRequestDto) SetSsPassword(val OptString) {
	s.SsPassword = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *CreateUserRequestDto) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *CreateUserRequestDto) SetTrafficLimitStrategy(val OptCreateUserRequestDtoTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *CreateUserRequestDto) SetExpireAt(val time.Time) {
	s.ExpireAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateUserRequestDto) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetLastTrafficResetAt sets the value of LastTrafficResetAt.
func (s *CreateUserRequestDto) SetLastTrafficResetAt(val OptDateTime) {
	s.LastTrafficResetAt = val
}

// SetDescription sets the value of Description.
func (s *CreateUserRequestDto) SetDescription(val OptString) {
	s.Description = val
}

// SetTag sets the value of Tag.
func (s *CreateUserRequestDto) SetTag(val OptNilString) {
	s.Tag = val
}

// SetTelegramId sets the value of TelegramId.
func (s *CreateUserRequestDto) SetTelegramId(val OptNilInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *CreateUserRequestDto) SetEmail(val OptNilString) {
	s.Email = val
}

// SetHwidDeviceLimit sets the value of HwidDeviceLimit.
func (s *CreateUserRequestDto) SetHwidDeviceLimit(val OptInt) {
	s.HwidDeviceLimit = val
}

// SetActiveInternalSquads sets the value of ActiveInternalSquads.
func (s *CreateUserRequestDto) SetActiveInternalSquads(val []uuid.UUID) {
	s.ActiveInternalSquads = val
}

// SetUUID sets the value of UUID.
func (s *CreateUserRequestDto) SetUUID(val OptUUID) {
	s.UUID = val
}

// SetExternalSquadUuid sets the value of ExternalSquadUuid.
func (s *CreateUserRequestDto) SetExternalSquadUuid(val OptNilUUID) {
	s.ExternalSquadUuid = val
}

// Optional. User account status. Defaults to ACTIVE.
type CreateUserRequestDtoStatus string

const (
	CreateUserRequestDtoStatusACTIVE   CreateUserRequestDtoStatus = "ACTIVE"
	CreateUserRequestDtoStatusDISABLED CreateUserRequestDtoStatus = "DISABLED"
	CreateUserRequestDtoStatusLIMITED  CreateUserRequestDtoStatus = "LIMITED"
	CreateUserRequestDtoStatusEXPIRED  CreateUserRequestDtoStatus = "EXPIRED"
)

// AllValues returns all CreateUserRequestDtoStatus values.
func (CreateUserRequestDtoStatus) AllValues() []CreateUserRequestDtoStatus {
	return []CreateUserRequestDtoStatus{
		CreateUserRequestDtoStatusACTIVE,
		CreateUserRequestDtoStatusDISABLED,
		CreateUserRequestDtoStatusLIMITED,
		CreateUserRequestDtoStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateUserRequestDtoStatus) MarshalText() ([]byte, error) {
	switch s {
	case CreateUserRequestDtoStatusACTIVE:
		return []byte(s), nil
	case CreateUserRequestDtoStatusDISABLED:
		return []byte(s), nil
	case CreateUserRequestDtoStatusLIMITED:
		return []byte(s), nil
	case CreateUserRequestDtoStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateUserRequestDtoStatus) UnmarshalText(data []byte) error {
	switch CreateUserRequestDtoStatus(data) {
	case CreateUserRequestDtoStatusACTIVE:
		*s = CreateUserRequestDtoStatusACTIVE
		return nil
	case CreateUserRequestDtoStatusDISABLED:
		*s = CreateUserRequestDtoStatusDISABLED
		return nil
	case CreateUserRequestDtoStatusLIMITED:
		*s = CreateUserRequestDtoStatusLIMITED
		return nil
	case CreateUserRequestDtoStatusEXPIRED:
		*s = CreateUserRequestDtoStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Available reset periods.
type CreateUserRequestDtoTrafficLimitStrategy string

const (
	CreateUserRequestDtoTrafficLimitStrategyNORESET CreateUserRequestDtoTrafficLimitStrategy = "NO_RESET"
	CreateUserRequestDtoTrafficLimitStrategyDAY     CreateUserRequestDtoTrafficLimitStrategy = "DAY"
	CreateUserRequestDtoTrafficLimitStrategyWEEK    CreateUserRequestDtoTrafficLimitStrategy = "WEEK"
	CreateUserRequestDtoTrafficLimitStrategyMONTH   CreateUserRequestDtoTrafficLimitStrategy = "MONTH"
)

// AllValues returns all CreateUserRequestDtoTrafficLimitStrategy values.
func (CreateUserRequestDtoTrafficLimitStrategy) AllValues() []CreateUserRequestDtoTrafficLimitStrategy {
	return []CreateUserRequestDtoTrafficLimitStrategy{
		CreateUserRequestDtoTrafficLimitStrategyNORESET,
		CreateUserRequestDtoTrafficLimitStrategyDAY,
		CreateUserRequestDtoTrafficLimitStrategyWEEK,
		CreateUserRequestDtoTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateUserRequestDtoTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case CreateUserRequestDtoTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case CreateUserRequestDtoTrafficLimitStrategyDAY:
		return []byte(s), nil
	case CreateUserRequestDtoTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case CreateUserRequestDtoTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateUserRequestDtoTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch CreateUserRequestDtoTrafficLimitStrategy(data) {
	case CreateUserRequestDtoTrafficLimitStrategyNORESET:
		*s = CreateUserRequestDtoTrafficLimitStrategyNORESET
		return nil
	case CreateUserRequestDtoTrafficLimitStrategyDAY:
		*s = CreateUserRequestDtoTrafficLimitStrategyDAY
		return nil
	case CreateUserRequestDtoTrafficLimitStrategyWEEK:
		*s = CreateUserRequestDtoTrafficLimitStrategyWEEK
		return nil
	case CreateUserRequestDtoTrafficLimitStrategyMONTH:
		*s = CreateUserRequestDtoTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/DebugSrrMatcherRequestDto
type DebugSrrMatcherRequestDto struct {
	ResponseRules DebugSrrMatcherRequestDtoResponseRules `json:"responseRules"`
}

// GetResponseRules returns the value of ResponseRules.
func (s *DebugSrrMatcherRequestDto) GetResponseRules() DebugSrrMatcherRequestDtoResponseRules {
	return s.ResponseRules
}

// SetResponseRules sets the value of ResponseRules.
func (s *DebugSrrMatcherRequestDto) SetResponseRules(val DebugSrrMatcherRequestDtoResponseRules) {
	s.ResponseRules = val
}

type DebugSrrMatcherRequestDtoResponseRules struct {
	// {"title":"Response Rules Config Version","markdownDescription":"Version of the **response rules**
	// config. Currently supported version is **1**."}.
	Version DebugSrrMatcherRequestDtoResponseRulesVersion `json:"version"`
	// {"title":"Response Rules","markdownDescription":"Array of **response rules**. Rules are evaluated
	// in order and the first rule that matches is applied. If no rule matches, request will be blocked
	// by default.\n\n**Example:**\n```json\n[\n  {\n    \"name\": \"Blank rule\",\n    \"description\":
	// \"Blank rule\",\n    \"operator\": \"AND\",\n    \"enabled\": true,\n    \"conditions\": [],\n
	// \"responseType\": \"BLOCK\",\n    \"responseModifications\": {\n      \"headers\": []\n    }\n
	// }\n]\n```","defaultSnippets":[]}.
	Rules []DebugSrrMatcherRequestDtoResponseRulesRulesItem `json:"rules"`
}

// GetVersion returns the value of Version.
func (s *DebugSrrMatcherRequestDtoResponseRules) GetVersion() DebugSrrMatcherRequestDtoResponseRulesVersion {
	return s.Version
}

// GetRules returns the value of Rules.
func (s *DebugSrrMatcherRequestDtoResponseRules) GetRules() []DebugSrrMatcherRequestDtoResponseRulesRulesItem {
	return s.Rules
}

// SetVersion sets the value of Version.
func (s *DebugSrrMatcherRequestDtoResponseRules) SetVersion(val DebugSrrMatcherRequestDtoResponseRulesVersion) {
	s.Version = val
}

// SetRules sets the value of Rules.
func (s *DebugSrrMatcherRequestDtoResponseRules) SetRules(val []DebugSrrMatcherRequestDtoResponseRulesRulesItem) {
	s.Rules = val
}

// {"defaultSnippets":[{"label":"Examples: Blank rule","markdownDescription":"Simple blank rule with
// no conditions or modifications.\n```json\n{\n  \"name\": \"Blank rule\",\n  \"description\":
// \"Blank rule\",\n  \"operator\": \"AND\",\n  \"enabled\": true,\n  \"conditions\": [],\n
// \"responseType\": \"BLOCK\",\n  \"responseModifications\": {\n    \"headers\": []\n  }\n}\n```",
// "body":{"name":"Blank rule","description":"Blank rule","operator":"AND","enabled":true,
// "conditions":[],"responseType":"BLOCK","responseModifications":{"headers":[]}}},
// {"label":"Examples: Block Legacy Clients","markdownDescription":"Block requests from legacy
// clients\n```json\n{\n  \"name\": \"Block Legacy Clients\",\n  \"description\": \"Block requests
// from legacy clients\",\n  \"enabled\": true,\n  \"operator\": \"OR\",\n  \"conditions\": [\n
// {\n      \"headerName\": \"user-agent\",\n      \"operator\": \"CONTAINS\",\n      \"value\":
// \"Hiddify\",\n      \"caseSensitive\": true\n    },\n    {\n      \"headerName\": \"user-agent\",
// \n      \"operator\": \"CONTAINS\",\n      \"value\": \"FoxRay\",\n      \"caseSensitive\": true\n
//
//	}\n  ],\n  \"responseType\": \"BLOCK\"\n}\n```","body":{"name":"Block Legacy Clients",
//
// "description":"Block requests from legacy clients","enabled":true,"operator":"OR",
// "conditions":[{"headerName":"user-agent","operator":"CONTAINS","value":"Hiddify",
// "caseSensitive":true},{"headerName":"user-agent","operator":"CONTAINS","value":"FoxRay",
// "caseSensitive":true}],"responseType":"BLOCK"}}],"title":"Response Rule",
// "markdownDescription":"Response rule configuration.\n\n**Fields:**\n- **name**: Name of the
// response rule.\n- **description**: Description of the response rule. Optional.\n- **enabled**:
// Control whether the response rule is enabled or disabled. \n\n - `true` the rule will be applied.
// \n\n - `false` the rule will be always ignored.\n- **operator**: Operator to use for combining
// conditions in the rule.\n- **conditions**: Array of conditions to check against the request
// headers. Conditions are applied with **operator**. If conditions are empty, the rule will be
// matched.\n- **responseType**: Type of the response. Determines the type of **response** to be
// returned when the rule is matched.\n- **responseModifications**: Response modifications to be
// applied when the rule is matched. Optional.\n\n**Example:**\n```json\n{\n  \"name\": \"Block
// Legacy Clients\",\n  \"description\": \"Block requests from legacy clients\",\n  \"enabled\": true,
// \n  \"operator\": \"OR\",\n  \"conditions\": [\n    {\n      \"headerName\": \"user-agent\",\n
//
//	\"operator\": \"CONTAINS\",\n      \"value\": \"Hiddify\",\n      \"caseSensitive\": true\n    },
//
// \n    {\n      \"headerName\": \"user-agent\",\n      \"operator\": \"CONTAINS\",\n
// \"value\": \"FoxRay\",\n      \"caseSensitive\": true\n    }\n  ],\n  \"responseType\":
// \"BLOCK\"\n}\n```"}.
type DebugSrrMatcherRequestDtoResponseRulesRulesItem struct {
	// {"markdownDescription":"Name of the response rule."}.
	Name string `json:"name"`
	// {"markdownDescription":"Description of the response rule. Optional."}.
	Description OptString `json:"description"`
	// {"markdownDescription":"Control whether the response rule is enabled or disabled. \n\n - `true`
	// the rule will be applied. \n\n - `false` the rule will be always ignored."}.
	Enabled bool `json:"enabled"`
	// {"markdownDescription":"Operator to use for combining conditions in the rule."}.
	Operator DebugSrrMatcherRequestDtoResponseRulesRulesItemOperator `json:"operator"`
	// {"markdownDescription":"Array of conditions to check against the request headers. Conditions are
	// applied with **operator**. If conditions are empty, the rule will be matched."}.
	Conditions []DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItem `json:"conditions"`
	// {"errorMessage":"Invalid response type. Please select a valid response type.",
	// "markdownDescription":"Type of the response. Determines the type of **response** to be returned
	// when the rule is matched.","markdownEnumDescriptions":["Return **subscription** in XRAY-JSON
	// format. (Using `Xray Json` template)","Return **subscription** in BASE64 encoded string.
	// Compatible with most client application with Xray core.","Return **subscription** in Mihomo format.
	//  (Using `Mihomo` template)","Return **subscription** in Stash format. (Using `Stash` template)",
	// "Return **subscription** in Clash format. (Using `Clash` template) Useful for client application
	// that use Legacy Clash core.","Return **subscription** in Singbox format. (Using `Singbox`
	// template) Format which is used by Singbox client application.","Return **subscription** as browser
	// format. The same as on `/info` route.","**Drop** request and return `403` status code.","**Drop**
	// request and return `404` status code.","**Drop** request and return `451` status code.","**Drop**
	// the socket connection."]}.
	ResponseType DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType `json:"responseType"`
	// {"examples":[{"headers":[{"key":"X-Custom-Header","value":"CustomValue"}]}],
	// "markdownDescription":"Response modifications to be applied when the rule is matched. Optional."}.
	ResponseModifications OptDebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications `json:"responseModifications"`
}

// GetName returns the value of Name.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItem) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItem) GetDescription() OptString {
	return s.Description
}

// GetEnabled returns the value of Enabled.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItem) GetEnabled() bool {
	return s.Enabled
}

// GetOperator returns the value of Operator.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItem) GetOperator() DebugSrrMatcherRequestDtoResponseRulesRulesItemOperator {
	return s.Operator
}

// GetConditions returns the value of Conditions.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItem) GetConditions() []DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItem {
	return s.Conditions
}

// GetResponseType returns the value of ResponseType.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItem) GetResponseType() DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType {
	return s.ResponseType
}

// GetResponseModifications returns the value of ResponseModifications.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItem) GetResponseModifications() OptDebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications {
	return s.ResponseModifications
}

// SetName sets the value of Name.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItem) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItem) SetDescription(val OptString) {
	s.Description = val
}

// SetEnabled sets the value of Enabled.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItem) SetEnabled(val bool) {
	s.Enabled = val
}

// SetOperator sets the value of Operator.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItem) SetOperator(val DebugSrrMatcherRequestDtoResponseRulesRulesItemOperator) {
	s.Operator = val
}

// SetConditions sets the value of Conditions.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItem) SetConditions(val []DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItem) {
	s.Conditions = val
}

// SetResponseType sets the value of ResponseType.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItem) SetResponseType(val DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType) {
	s.ResponseType = val
}

// SetResponseModifications sets the value of ResponseModifications.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItem) SetResponseModifications(val OptDebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications) {
	s.ResponseModifications = val
}

// {"markdownDescription":"Condition to check against the **headerName**.",
// "defaultSnippets":[{"label":"Examples: Check if header contains \"text/html\"",
// "markdownDescription":"Condition to check if **headerName** contains \"text/html\"",
// "body":{"headerName":"accept","operator":"CONTAINS","value":"text/html","caseSensitive":true}}]}.
type DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItem struct {
	// {"markdownDescription":"**Name** of the HTTP header to check. Must comply with RFC 7230."}.
	HeaderName string `json:"headerName"`
	// {"errorMessage":"Invalid operator. Please select a valid operator.",
	// "markdownDescription":"Operator to use for comparing the `headerName` with `value`.",
	// "markdownEnumDescriptions":["Performs an exact, comparison between the header value and specified
	// string. `string === value`","Ensures the header value does not exactly match the specified string.
	// `string !== value`","Checks if the header value contains the specified string as a substring.
	// `string.includes()`","Verifies the header value does not contain the specified string as a
	// substring. `!string.includes()`","Validates that the header value begins with the specified string.
	//  `string.startsWith()`","Validates that the header value does not begin with the specified string.
	// `!string.startsWith()`","Confirms the header value ends with the specified string. `string.
	// endsWith()`","Confirms the header value does not end with the specified string. `!string.
	// endsWith()`","Evaluates if the header value matches the specified regular expression pattern.
	// `regex.test()`","Evaluates if the header value does not match the specified regular expression
	// pattern. `!regex.test()`"]}.
	Operator DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator `json:"operator"`
	// {"markdownDescription":"**Value** to check against the **headerName**."}.
	Value string `json:"value"`
	// {"markdownDescription":"Whether the value is **case sensitive**. \n\n - `true`: the value will be
	// compared as is. \n\n - `false`: the value will be lowercased **before** comparison."}.
	CaseSensitive bool `json:"caseSensitive"`
}

// GetHeaderName returns the value of HeaderName.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItem) GetHeaderName() string {
	return s.HeaderName
}

// GetOperator returns the value of Operator.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItem) GetOperator() DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator {
	return s.Operator
}

// GetValue returns the value of Value.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItem) GetValue() string {
	return s.Value
}

// GetCaseSensitive returns the value of CaseSensitive.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItem) GetCaseSensitive() bool {
	return s.CaseSensitive
}

// SetHeaderName sets the value of HeaderName.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItem) SetHeaderName(val string) {
	s.HeaderName = val
}

// SetOperator sets the value of Operator.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItem) SetOperator(val DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator) {
	s.Operator = val
}

// SetValue sets the value of Value.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItem) SetValue(val string) {
	s.Value = val
}

// SetCaseSensitive sets the value of CaseSensitive.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItem) SetCaseSensitive(val bool) {
	s.CaseSensitive = val
}

// {"errorMessage":"Invalid operator. Please select a valid operator.",
// "markdownDescription":"Operator to use for comparing the `headerName` with `value`.",
// "markdownEnumDescriptions":["Performs an exact, comparison between the header value and specified
// string. `string === value`","Ensures the header value does not exactly match the specified string.
// `string !== value`","Checks if the header value contains the specified string as a substring.
// `string.includes()`","Verifies the header value does not contain the specified string as a
// substring. `!string.includes()`","Validates that the header value begins with the specified string.
//
//	`string.startsWith()`","Validates that the header value does not begin with the specified string.
//
// `!string.startsWith()`","Confirms the header value ends with the specified string. `string.
// endsWith()`","Confirms the header value does not end with the specified string. `!string.
// endsWith()`","Evaluates if the header value matches the specified regular expression pattern.
// `regex.test()`","Evaluates if the header value does not match the specified regular expression
// pattern. `!regex.test()`"]}.
type DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator string

const (
	DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorEQUALS        DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator = "EQUALS"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTEQUALS     DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator = "NOT_EQUALS"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorCONTAINS      DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator = "CONTAINS"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTCONTAINS   DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator = "NOT_CONTAINS"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorSTARTSWITH    DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator = "STARTS_WITH"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTSTARTSWITH DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator = "NOT_STARTS_WITH"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorENDSWITH      DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator = "ENDS_WITH"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTENDSWITH   DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator = "NOT_ENDS_WITH"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorREGEX         DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator = "REGEX"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTREGEX      DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator = "NOT_REGEX"
)

// AllValues returns all DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator values.
func (DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator) AllValues() []DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator {
	return []DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator{
		DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorEQUALS,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTEQUALS,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorCONTAINS,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTCONTAINS,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorSTARTSWITH,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTSTARTSWITH,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorENDSWITH,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTENDSWITH,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorREGEX,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTREGEX,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator) MarshalText() ([]byte, error) {
	switch s {
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorEQUALS:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTEQUALS:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorCONTAINS:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTCONTAINS:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorSTARTSWITH:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTSTARTSWITH:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorENDSWITH:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTENDSWITH:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorREGEX:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTREGEX:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator) UnmarshalText(data []byte) error {
	switch DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperator(data) {
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorEQUALS:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorEQUALS
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTEQUALS:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTEQUALS
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorCONTAINS:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorCONTAINS
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTCONTAINS:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTCONTAINS
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorSTARTSWITH:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorSTARTSWITH
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTSTARTSWITH:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTSTARTSWITH
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorENDSWITH:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorENDSWITH
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTENDSWITH:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTENDSWITH
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorREGEX:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorREGEX
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTREGEX:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTREGEX
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// {"markdownDescription":"Operator to use for combining conditions in the rule."}.
type DebugSrrMatcherRequestDtoResponseRulesRulesItemOperator string

const (
	DebugSrrMatcherRequestDtoResponseRulesRulesItemOperatorAND DebugSrrMatcherRequestDtoResponseRulesRulesItemOperator = "AND"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemOperatorOR  DebugSrrMatcherRequestDtoResponseRulesRulesItemOperator = "OR"
)

// AllValues returns all DebugSrrMatcherRequestDtoResponseRulesRulesItemOperator values.
func (DebugSrrMatcherRequestDtoResponseRulesRulesItemOperator) AllValues() []DebugSrrMatcherRequestDtoResponseRulesRulesItemOperator {
	return []DebugSrrMatcherRequestDtoResponseRulesRulesItemOperator{
		DebugSrrMatcherRequestDtoResponseRulesRulesItemOperatorAND,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemOperatorOR,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DebugSrrMatcherRequestDtoResponseRulesRulesItemOperator) MarshalText() ([]byte, error) {
	switch s {
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemOperatorAND:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemOperatorOR:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemOperator) UnmarshalText(data []byte) error {
	switch DebugSrrMatcherRequestDtoResponseRulesRulesItemOperator(data) {
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemOperatorAND:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemOperatorAND
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemOperatorOR:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemOperatorOR
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// {"examples":[{"headers":[{"key":"X-Custom-Header","value":"CustomValue"}]}],
// "markdownDescription":"Response modifications to be applied when the rule is matched. Optional."}.
type DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications struct {
	// {"defaultSnippets":[{"label":"Examples: Add custom header","markdownDescription":"Add a custom
	// header to the response","body":[{"key":"X-Custom-Header","value":"CustomValue"}]}],
	// "markdownDescription":"Array of headers to be added when the rule is matched."}.
	Headers []DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem `json:"headers"`
	// {"markdownDescription":"Override the subscription template with the given name. If not provided,
	// the default subscription template will be used. If the template name is not found, the default
	// subscription template for this type will be used. **This modification have higher priority than
	// settings from External Squads.**"}.
	SubscriptionTemplate OptString `json:"subscriptionTemplate"`
}

// GetHeaders returns the value of Headers.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications) GetHeaders() []DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem {
	return s.Headers
}

// GetSubscriptionTemplate returns the value of SubscriptionTemplate.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications) GetSubscriptionTemplate() OptString {
	return s.SubscriptionTemplate
}

// SetHeaders sets the value of Headers.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications) SetHeaders(val []DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem) {
	s.Headers = val
}

// SetSubscriptionTemplate sets the value of SubscriptionTemplate.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications) SetSubscriptionTemplate(val OptString) {
	s.SubscriptionTemplate = val
}

// {"markdownDescription":"**Key** and **value** of the response header will be added to the response.
// "}.
type DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem struct {
	// {"markdownDescription":"Key of the response header. Must comply with RFC 7230."}.
	Key string `json:"key"`
	// {"markdownDescription":"Value of the response header. "}.
	Value string `json:"value"`
}

// GetKey returns the value of Key.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem) GetKey() string {
	return s.Key
}

// GetValue returns the value of Value.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem) GetValue() string {
	return s.Value
}

// SetKey sets the value of Key.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem) SetKey(val string) {
	s.Key = val
}

// SetValue sets the value of Value.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem) SetValue(val string) {
	s.Value = val
}

// {"errorMessage":"Invalid response type. Please select a valid response type.",
// "markdownDescription":"Type of the response. Determines the type of **response** to be returned
// when the rule is matched.","markdownEnumDescriptions":["Return **subscription** in XRAY-JSON
// format. (Using `Xray Json` template)","Return **subscription** in BASE64 encoded string.
// Compatible with most client application with Xray core.","Return **subscription** in Mihomo format.
//
//	(Using `Mihomo` template)","Return **subscription** in Stash format. (Using `Stash` template)",
//
// "Return **subscription** in Clash format. (Using `Clash` template) Useful for client application
// that use Legacy Clash core.","Return **subscription** in Singbox format. (Using `Singbox`
// template) Format which is used by Singbox client application.","Return **subscription** as browser
// format. The same as on `/info` route.","**Drop** request and return `403` status code.","**Drop**
// request and return `404` status code.","**Drop** request and return `451` status code.","**Drop**
// the socket connection."]}.
type DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType string

const (
	DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeXRAYJSON      DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType = "XRAY_JSON"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeXRAYBASE64    DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType = "XRAY_BASE64"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeMIHOMO        DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType = "MIHOMO"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSTASH         DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType = "STASH"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeCLASH         DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType = "CLASH"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSINGBOX       DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType = "SINGBOX"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeBROWSER       DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType = "BROWSER"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeBLOCK         DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType = "BLOCK"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE404 DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType = "STATUS_CODE_404"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE451 DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType = "STATUS_CODE_451"
	DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSOCKETDROP    DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType = "SOCKET_DROP"
)

// AllValues returns all DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType values.
func (DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType) AllValues() []DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType {
	return []DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType{
		DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeXRAYJSON,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeXRAYBASE64,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeMIHOMO,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSTASH,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeCLASH,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSINGBOX,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeBROWSER,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeBLOCK,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE404,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE451,
		DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSOCKETDROP,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType) MarshalText() ([]byte, error) {
	switch s {
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeXRAYJSON:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeXRAYBASE64:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeMIHOMO:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSTASH:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeCLASH:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSINGBOX:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeBROWSER:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeBLOCK:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE404:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE451:
		return []byte(s), nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSOCKETDROP:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType) UnmarshalText(data []byte) error {
	switch DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseType(data) {
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeXRAYJSON:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeXRAYJSON
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeXRAYBASE64:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeXRAYBASE64
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeMIHOMO:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeMIHOMO
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSTASH:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSTASH
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeCLASH:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeCLASH
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSINGBOX:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSINGBOX
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeBROWSER:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeBROWSER
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeBLOCK:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeBLOCK
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE404:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE404
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE451:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE451
		return nil
	case DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSOCKETDROP:
		*s = DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseTypeSOCKETDROP
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// {"title":"Response Rules Config Version","markdownDescription":"Version of the **response rules**
// config. Currently supported version is **1**."}.
type DebugSrrMatcherRequestDtoResponseRulesVersion string

const (
	DebugSrrMatcherRequestDtoResponseRulesVersion1 DebugSrrMatcherRequestDtoResponseRulesVersion = "1"
)

// AllValues returns all DebugSrrMatcherRequestDtoResponseRulesVersion values.
func (DebugSrrMatcherRequestDtoResponseRulesVersion) AllValues() []DebugSrrMatcherRequestDtoResponseRulesVersion {
	return []DebugSrrMatcherRequestDtoResponseRulesVersion{
		DebugSrrMatcherRequestDtoResponseRulesVersion1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DebugSrrMatcherRequestDtoResponseRulesVersion) MarshalText() ([]byte, error) {
	switch s {
	case DebugSrrMatcherRequestDtoResponseRulesVersion1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DebugSrrMatcherRequestDtoResponseRulesVersion) UnmarshalText(data []byte) error {
	switch DebugSrrMatcherRequestDtoResponseRulesVersion(data) {
	case DebugSrrMatcherRequestDtoResponseRulesVersion1:
		*s = DebugSrrMatcherRequestDtoResponseRulesVersion1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/DebugSrrMatcherResponseDto
type DebugSrrMatcherResponseDto struct {
	Response DebugSrrMatcherResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *DebugSrrMatcherResponseDto) GetResponse() DebugSrrMatcherResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *DebugSrrMatcherResponseDto) SetResponse(val DebugSrrMatcherResponseDtoResponse) {
	s.Response = val
}

func (*DebugSrrMatcherResponseDto) systemControllerDebugSrrMatcherRes() {}

type DebugSrrMatcherResponseDtoResponse struct {
	Matched      bool                                           `json:"matched"`
	ResponseType DebugSrrMatcherResponseDtoResponseResponseType `json:"responseType"`
	// {"defaultSnippets":[{"label":"Examples: Blank rule","markdownDescription":"Simple blank rule with
	// no conditions or modifications.\n```json\n{\n  \"name\": \"Blank rule\",\n  \"description\":
	// \"Blank rule\",\n  \"operator\": \"AND\",\n  \"enabled\": true,\n  \"conditions\": [],\n
	// \"responseType\": \"BLOCK\",\n  \"responseModifications\": {\n    \"headers\": []\n  }\n}\n```",
	// "body":{"name":"Blank rule","description":"Blank rule","operator":"AND","enabled":true,
	// "conditions":[],"responseType":"BLOCK","responseModifications":{"headers":[]}}},
	// {"label":"Examples: Block Legacy Clients","markdownDescription":"Block requests from legacy
	// clients\n```json\n{\n  \"name\": \"Block Legacy Clients\",\n  \"description\": \"Block requests
	// from legacy clients\",\n  \"enabled\": true,\n  \"operator\": \"OR\",\n  \"conditions\": [\n
	// {\n      \"headerName\": \"user-agent\",\n      \"operator\": \"CONTAINS\",\n      \"value\":
	// \"Hiddify\",\n      \"caseSensitive\": true\n    },\n    {\n      \"headerName\": \"user-agent\",
	// \n      \"operator\": \"CONTAINS\",\n      \"value\": \"FoxRay\",\n      \"caseSensitive\": true\n
	//    }\n  ],\n  \"responseType\": \"BLOCK\"\n}\n```","body":{"name":"Block Legacy Clients",
	// "description":"Block requests from legacy clients","enabled":true,"operator":"OR",
	// "conditions":[{"headerName":"user-agent","operator":"CONTAINS","value":"Hiddify",
	// "caseSensitive":true},{"headerName":"user-agent","operator":"CONTAINS","value":"FoxRay",
	// "caseSensitive":true}],"responseType":"BLOCK"}}],"title":"Response Rule",
	// "markdownDescription":"Response rule configuration.\n\n**Fields:**\n- **name**: Name of the
	// response rule.\n- **description**: Description of the response rule. Optional.\n- **enabled**:
	// Control whether the response rule is enabled or disabled. \n\n - `true` the rule will be applied.
	// \n\n - `false` the rule will be always ignored.\n- **operator**: Operator to use for combining
	// conditions in the rule.\n- **conditions**: Array of conditions to check against the request
	// headers. Conditions are applied with **operator**. If conditions are empty, the rule will be
	// matched.\n- **responseType**: Type of the response. Determines the type of **response** to be
	// returned when the rule is matched.\n- **responseModifications**: Response modifications to be
	// applied when the rule is matched. Optional.\n\n**Example:**\n```json\n{\n  \"name\": \"Block
	// Legacy Clients\",\n  \"description\": \"Block requests from legacy clients\",\n  \"enabled\": true,
	// \n  \"operator\": \"OR\",\n  \"conditions\": [\n    {\n      \"headerName\": \"user-agent\",\n
	//  \"operator\": \"CONTAINS\",\n      \"value\": \"Hiddify\",\n      \"caseSensitive\": true\n    },
	// \n    {\n      \"headerName\": \"user-agent\",\n      \"operator\": \"CONTAINS\",\n
	// \"value\": \"FoxRay\",\n      \"caseSensitive\": true\n    }\n  ],\n  \"responseType\":
	// \"BLOCK\"\n}\n```"}.
	MatchedRule   NilDebugSrrMatcherResponseDtoResponseMatchedRule `json:"matchedRule"`
	InputHeaders  DebugSrrMatcherResponseDtoResponseInputHeaders   `json:"inputHeaders"`
	OutputHeaders DebugSrrMatcherResponseDtoResponseOutputHeaders  `json:"outputHeaders"`
}

// GetMatched returns the value of Matched.
func (s *DebugSrrMatcherResponseDtoResponse) GetMatched() bool {
	return s.Matched
}

// GetResponseType returns the value of ResponseType.
func (s *DebugSrrMatcherResponseDtoResponse) GetResponseType() DebugSrrMatcherResponseDtoResponseResponseType {
	return s.ResponseType
}

// GetMatchedRule returns the value of MatchedRule.
func (s *DebugSrrMatcherResponseDtoResponse) GetMatchedRule() NilDebugSrrMatcherResponseDtoResponseMatchedRule {
	return s.MatchedRule
}

// GetInputHeaders returns the value of InputHeaders.
func (s *DebugSrrMatcherResponseDtoResponse) GetInputHeaders() DebugSrrMatcherResponseDtoResponseInputHeaders {
	return s.InputHeaders
}

// GetOutputHeaders returns the value of OutputHeaders.
func (s *DebugSrrMatcherResponseDtoResponse) GetOutputHeaders() DebugSrrMatcherResponseDtoResponseOutputHeaders {
	return s.OutputHeaders
}

// SetMatched sets the value of Matched.
func (s *DebugSrrMatcherResponseDtoResponse) SetMatched(val bool) {
	s.Matched = val
}

// SetResponseType sets the value of ResponseType.
func (s *DebugSrrMatcherResponseDtoResponse) SetResponseType(val DebugSrrMatcherResponseDtoResponseResponseType) {
	s.ResponseType = val
}

// SetMatchedRule sets the value of MatchedRule.
func (s *DebugSrrMatcherResponseDtoResponse) SetMatchedRule(val NilDebugSrrMatcherResponseDtoResponseMatchedRule) {
	s.MatchedRule = val
}

// SetInputHeaders sets the value of InputHeaders.
func (s *DebugSrrMatcherResponseDtoResponse) SetInputHeaders(val DebugSrrMatcherResponseDtoResponseInputHeaders) {
	s.InputHeaders = val
}

// SetOutputHeaders sets the value of OutputHeaders.
func (s *DebugSrrMatcherResponseDtoResponse) SetOutputHeaders(val DebugSrrMatcherResponseDtoResponseOutputHeaders) {
	s.OutputHeaders = val
}

type DebugSrrMatcherResponseDtoResponseInputHeaders map[string]string

func (s *DebugSrrMatcherResponseDtoResponseInputHeaders) init() DebugSrrMatcherResponseDtoResponseInputHeaders {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// {"defaultSnippets":[{"label":"Examples: Blank rule","markdownDescription":"Simple blank rule with
// no conditions or modifications.\n```json\n{\n  \"name\": \"Blank rule\",\n  \"description\":
// \"Blank rule\",\n  \"operator\": \"AND\",\n  \"enabled\": true,\n  \"conditions\": [],\n
// \"responseType\": \"BLOCK\",\n  \"responseModifications\": {\n    \"headers\": []\n  }\n}\n```",
// "body":{"name":"Blank rule","description":"Blank rule","operator":"AND","enabled":true,
// "conditions":[],"responseType":"BLOCK","responseModifications":{"headers":[]}}},
// {"label":"Examples: Block Legacy Clients","markdownDescription":"Block requests from legacy
// clients\n```json\n{\n  \"name\": \"Block Legacy Clients\",\n  \"description\": \"Block requests
// from legacy clients\",\n  \"enabled\": true,\n  \"operator\": \"OR\",\n  \"conditions\": [\n
// {\n      \"headerName\": \"user-agent\",\n      \"operator\": \"CONTAINS\",\n      \"value\":
// \"Hiddify\",\n      \"caseSensitive\": true\n    },\n    {\n      \"headerName\": \"user-agent\",
// \n      \"operator\": \"CONTAINS\",\n      \"value\": \"FoxRay\",\n      \"caseSensitive\": true\n
//
//	}\n  ],\n  \"responseType\": \"BLOCK\"\n}\n```","body":{"name":"Block Legacy Clients",
//
// "description":"Block requests from legacy clients","enabled":true,"operator":"OR",
// "conditions":[{"headerName":"user-agent","operator":"CONTAINS","value":"Hiddify",
// "caseSensitive":true},{"headerName":"user-agent","operator":"CONTAINS","value":"FoxRay",
// "caseSensitive":true}],"responseType":"BLOCK"}}],"title":"Response Rule",
// "markdownDescription":"Response rule configuration.\n\n**Fields:**\n- **name**: Name of the
// response rule.\n- **description**: Description of the response rule. Optional.\n- **enabled**:
// Control whether the response rule is enabled or disabled. \n\n - `true` the rule will be applied.
// \n\n - `false` the rule will be always ignored.\n- **operator**: Operator to use for combining
// conditions in the rule.\n- **conditions**: Array of conditions to check against the request
// headers. Conditions are applied with **operator**. If conditions are empty, the rule will be
// matched.\n- **responseType**: Type of the response. Determines the type of **response** to be
// returned when the rule is matched.\n- **responseModifications**: Response modifications to be
// applied when the rule is matched. Optional.\n\n**Example:**\n```json\n{\n  \"name\": \"Block
// Legacy Clients\",\n  \"description\": \"Block requests from legacy clients\",\n  \"enabled\": true,
// \n  \"operator\": \"OR\",\n  \"conditions\": [\n    {\n      \"headerName\": \"user-agent\",\n
//
//	\"operator\": \"CONTAINS\",\n      \"value\": \"Hiddify\",\n      \"caseSensitive\": true\n    },
//
// \n    {\n      \"headerName\": \"user-agent\",\n      \"operator\": \"CONTAINS\",\n
// \"value\": \"FoxRay\",\n      \"caseSensitive\": true\n    }\n  ],\n  \"responseType\":
// \"BLOCK\"\n}\n```"}.
type DebugSrrMatcherResponseDtoResponseMatchedRule struct {
	// {"markdownDescription":"Name of the response rule."}.
	Name string `json:"name"`
	// {"markdownDescription":"Description of the response rule. Optional."}.
	Description OptString `json:"description"`
	// {"markdownDescription":"Control whether the response rule is enabled or disabled. \n\n - `true`
	// the rule will be applied. \n\n - `false` the rule will be always ignored."}.
	Enabled bool `json:"enabled"`
	// {"markdownDescription":"Operator to use for combining conditions in the rule."}.
	Operator DebugSrrMatcherResponseDtoResponseMatchedRuleOperator `json:"operator"`
	// {"markdownDescription":"Array of conditions to check against the request headers. Conditions are
	// applied with **operator**. If conditions are empty, the rule will be matched."}.
	Conditions []DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItem `json:"conditions"`
	// {"errorMessage":"Invalid response type. Please select a valid response type.",
	// "markdownDescription":"Type of the response. Determines the type of **response** to be returned
	// when the rule is matched.","markdownEnumDescriptions":["Return **subscription** in XRAY-JSON
	// format. (Using `Xray Json` template)","Return **subscription** in BASE64 encoded string.
	// Compatible with most client application with Xray core.","Return **subscription** in Mihomo format.
	//  (Using `Mihomo` template)","Return **subscription** in Stash format. (Using `Stash` template)",
	// "Return **subscription** in Clash format. (Using `Clash` template) Useful for client application
	// that use Legacy Clash core.","Return **subscription** in Singbox format. (Using `Singbox`
	// template) Format which is used by Singbox client application.","Return **subscription** as browser
	// format. The same as on `/info` route.","**Drop** request and return `403` status code.","**Drop**
	// request and return `404` status code.","**Drop** request and return `451` status code.","**Drop**
	// the socket connection."]}.
	ResponseType DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType `json:"responseType"`
	// {"examples":[{"headers":[{"key":"X-Custom-Header","value":"CustomValue"}]}],
	// "markdownDescription":"Response modifications to be applied when the rule is matched. Optional."}.
	ResponseModifications OptDebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications `json:"responseModifications"`
}

// GetName returns the value of Name.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRule) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRule) GetDescription() OptString {
	return s.Description
}

// GetEnabled returns the value of Enabled.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRule) GetEnabled() bool {
	return s.Enabled
}

// GetOperator returns the value of Operator.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRule) GetOperator() DebugSrrMatcherResponseDtoResponseMatchedRuleOperator {
	return s.Operator
}

// GetConditions returns the value of Conditions.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRule) GetConditions() []DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItem {
	return s.Conditions
}

// GetResponseType returns the value of ResponseType.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRule) GetResponseType() DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType {
	return s.ResponseType
}

// GetResponseModifications returns the value of ResponseModifications.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRule) GetResponseModifications() OptDebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications {
	return s.ResponseModifications
}

// SetName sets the value of Name.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRule) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRule) SetDescription(val OptString) {
	s.Description = val
}

// SetEnabled sets the value of Enabled.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRule) SetEnabled(val bool) {
	s.Enabled = val
}

// SetOperator sets the value of Operator.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRule) SetOperator(val DebugSrrMatcherResponseDtoResponseMatchedRuleOperator) {
	s.Operator = val
}

// SetConditions sets the value of Conditions.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRule) SetConditions(val []DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItem) {
	s.Conditions = val
}

// SetResponseType sets the value of ResponseType.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRule) SetResponseType(val DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType) {
	s.ResponseType = val
}

// SetResponseModifications sets the value of ResponseModifications.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRule) SetResponseModifications(val OptDebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications) {
	s.ResponseModifications = val
}

// {"markdownDescription":"Condition to check against the **headerName**.",
// "defaultSnippets":[{"label":"Examples: Check if header contains \"text/html\"",
// "markdownDescription":"Condition to check if **headerName** contains \"text/html\"",
// "body":{"headerName":"accept","operator":"CONTAINS","value":"text/html","caseSensitive":true}}]}.
type DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItem struct {
	// {"markdownDescription":"**Name** of the HTTP header to check. Must comply with RFC 7230."}.
	HeaderName string `json:"headerName"`
	// {"errorMessage":"Invalid operator. Please select a valid operator.",
	// "markdownDescription":"Operator to use for comparing the `headerName` with `value`.",
	// "markdownEnumDescriptions":["Performs an exact, comparison between the header value and specified
	// string. `string === value`","Ensures the header value does not exactly match the specified string.
	// `string !== value`","Checks if the header value contains the specified string as a substring.
	// `string.includes()`","Verifies the header value does not contain the specified string as a
	// substring. `!string.includes()`","Validates that the header value begins with the specified string.
	//  `string.startsWith()`","Validates that the header value does not begin with the specified string.
	// `!string.startsWith()`","Confirms the header value ends with the specified string. `string.
	// endsWith()`","Confirms the header value does not end with the specified string. `!string.
	// endsWith()`","Evaluates if the header value matches the specified regular expression pattern.
	// `regex.test()`","Evaluates if the header value does not match the specified regular expression
	// pattern. `!regex.test()`"]}.
	Operator DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator `json:"operator"`
	// {"markdownDescription":"**Value** to check against the **headerName**."}.
	Value string `json:"value"`
	// {"markdownDescription":"Whether the value is **case sensitive**. \n\n - `true`: the value will be
	// compared as is. \n\n - `false`: the value will be lowercased **before** comparison."}.
	CaseSensitive bool `json:"caseSensitive"`
}

// GetHeaderName returns the value of HeaderName.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItem) GetHeaderName() string {
	return s.HeaderName
}

// GetOperator returns the value of Operator.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItem) GetOperator() DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator {
	return s.Operator
}

// GetValue returns the value of Value.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItem) GetValue() string {
	return s.Value
}

// GetCaseSensitive returns the value of CaseSensitive.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItem) GetCaseSensitive() bool {
	return s.CaseSensitive
}

// SetHeaderName sets the value of HeaderName.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItem) SetHeaderName(val string) {
	s.HeaderName = val
}

// SetOperator sets the value of Operator.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItem) SetOperator(val DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator) {
	s.Operator = val
}

// SetValue sets the value of Value.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItem) SetValue(val string) {
	s.Value = val
}

// SetCaseSensitive sets the value of CaseSensitive.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItem) SetCaseSensitive(val bool) {
	s.CaseSensitive = val
}

// {"errorMessage":"Invalid operator. Please select a valid operator.",
// "markdownDescription":"Operator to use for comparing the `headerName` with `value`.",
// "markdownEnumDescriptions":["Performs an exact, comparison between the header value and specified
// string. `string === value`","Ensures the header value does not exactly match the specified string.
// `string !== value`","Checks if the header value contains the specified string as a substring.
// `string.includes()`","Verifies the header value does not contain the specified string as a
// substring. `!string.includes()`","Validates that the header value begins with the specified string.
//
//	`string.startsWith()`","Validates that the header value does not begin with the specified string.
//
// `!string.startsWith()`","Confirms the header value ends with the specified string. `string.
// endsWith()`","Confirms the header value does not end with the specified string. `!string.
// endsWith()`","Evaluates if the header value matches the specified regular expression pattern.
// `regex.test()`","Evaluates if the header value does not match the specified regular expression
// pattern. `!regex.test()`"]}.
type DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator string

const (
	DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorEQUALS        DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator = "EQUALS"
	DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTEQUALS     DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator = "NOT_EQUALS"
	DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorCONTAINS      DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator = "CONTAINS"
	DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTCONTAINS   DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator = "NOT_CONTAINS"
	DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorSTARTSWITH    DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator = "STARTS_WITH"
	DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTSTARTSWITH DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator = "NOT_STARTS_WITH"
	DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorENDSWITH      DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator = "ENDS_WITH"
	DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTENDSWITH   DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator = "NOT_ENDS_WITH"
	DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorREGEX         DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator = "REGEX"
	DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTREGEX      DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator = "NOT_REGEX"
)

// AllValues returns all DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator values.
func (DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator) AllValues() []DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator {
	return []DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator{
		DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorEQUALS,
		DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTEQUALS,
		DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorCONTAINS,
		DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTCONTAINS,
		DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorSTARTSWITH,
		DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTSTARTSWITH,
		DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorENDSWITH,
		DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTENDSWITH,
		DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorREGEX,
		DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTREGEX,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator) MarshalText() ([]byte, error) {
	switch s {
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorEQUALS:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTEQUALS:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorCONTAINS:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTCONTAINS:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorSTARTSWITH:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTSTARTSWITH:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorENDSWITH:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTENDSWITH:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorREGEX:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTREGEX:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator) UnmarshalText(data []byte) error {
	switch DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperator(data) {
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorEQUALS:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorEQUALS
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTEQUALS:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTEQUALS
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorCONTAINS:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorCONTAINS
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTCONTAINS:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTCONTAINS
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorSTARTSWITH:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorSTARTSWITH
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTSTARTSWITH:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTSTARTSWITH
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorENDSWITH:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorENDSWITH
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTENDSWITH:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTENDSWITH
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorREGEX:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorREGEX
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTREGEX:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleConditionsItemOperatorNOTREGEX
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// {"markdownDescription":"Operator to use for combining conditions in the rule."}.
type DebugSrrMatcherResponseDtoResponseMatchedRuleOperator string

const (
	DebugSrrMatcherResponseDtoResponseMatchedRuleOperatorAND DebugSrrMatcherResponseDtoResponseMatchedRuleOperator = "AND"
	DebugSrrMatcherResponseDtoResponseMatchedRuleOperatorOR  DebugSrrMatcherResponseDtoResponseMatchedRuleOperator = "OR"
)

// AllValues returns all DebugSrrMatcherResponseDtoResponseMatchedRuleOperator values.
func (DebugSrrMatcherResponseDtoResponseMatchedRuleOperator) AllValues() []DebugSrrMatcherResponseDtoResponseMatchedRuleOperator {
	return []DebugSrrMatcherResponseDtoResponseMatchedRuleOperator{
		DebugSrrMatcherResponseDtoResponseMatchedRuleOperatorAND,
		DebugSrrMatcherResponseDtoResponseMatchedRuleOperatorOR,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DebugSrrMatcherResponseDtoResponseMatchedRuleOperator) MarshalText() ([]byte, error) {
	switch s {
	case DebugSrrMatcherResponseDtoResponseMatchedRuleOperatorAND:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleOperatorOR:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleOperator) UnmarshalText(data []byte) error {
	switch DebugSrrMatcherResponseDtoResponseMatchedRuleOperator(data) {
	case DebugSrrMatcherResponseDtoResponseMatchedRuleOperatorAND:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleOperatorAND
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleOperatorOR:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleOperatorOR
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// {"examples":[{"headers":[{"key":"X-Custom-Header","value":"CustomValue"}]}],
// "markdownDescription":"Response modifications to be applied when the rule is matched. Optional."}.
type DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications struct {
	// {"defaultSnippets":[{"label":"Examples: Add custom header","markdownDescription":"Add a custom
	// header to the response","body":[{"key":"X-Custom-Header","value":"CustomValue"}]}],
	// "markdownDescription":"Array of headers to be added when the rule is matched."}.
	Headers []DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModificationsHeadersItem `json:"headers"`
	// {"markdownDescription":"Override the subscription template with the given name. If not provided,
	// the default subscription template will be used. If the template name is not found, the default
	// subscription template for this type will be used. **This modification have higher priority than
	// settings from External Squads.**"}.
	SubscriptionTemplate OptString `json:"subscriptionTemplate"`
}

// GetHeaders returns the value of Headers.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications) GetHeaders() []DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModificationsHeadersItem {
	return s.Headers
}

// GetSubscriptionTemplate returns the value of SubscriptionTemplate.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications) GetSubscriptionTemplate() OptString {
	return s.SubscriptionTemplate
}

// SetHeaders sets the value of Headers.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications) SetHeaders(val []DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModificationsHeadersItem) {
	s.Headers = val
}

// SetSubscriptionTemplate sets the value of SubscriptionTemplate.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications) SetSubscriptionTemplate(val OptString) {
	s.SubscriptionTemplate = val
}

// {"markdownDescription":"**Key** and **value** of the response header will be added to the response.
// "}.
type DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModificationsHeadersItem struct {
	// {"markdownDescription":"Key of the response header. Must comply with RFC 7230."}.
	Key string `json:"key"`
	// {"markdownDescription":"Value of the response header. "}.
	Value string `json:"value"`
}

// GetKey returns the value of Key.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModificationsHeadersItem) GetKey() string {
	return s.Key
}

// GetValue returns the value of Value.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModificationsHeadersItem) GetValue() string {
	return s.Value
}

// SetKey sets the value of Key.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModificationsHeadersItem) SetKey(val string) {
	s.Key = val
}

// SetValue sets the value of Value.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModificationsHeadersItem) SetValue(val string) {
	s.Value = val
}

// {"errorMessage":"Invalid response type. Please select a valid response type.",
// "markdownDescription":"Type of the response. Determines the type of **response** to be returned
// when the rule is matched.","markdownEnumDescriptions":["Return **subscription** in XRAY-JSON
// format. (Using `Xray Json` template)","Return **subscription** in BASE64 encoded string.
// Compatible with most client application with Xray core.","Return **subscription** in Mihomo format.
//
//	(Using `Mihomo` template)","Return **subscription** in Stash format. (Using `Stash` template)",
//
// "Return **subscription** in Clash format. (Using `Clash` template) Useful for client application
// that use Legacy Clash core.","Return **subscription** in Singbox format. (Using `Singbox`
// template) Format which is used by Singbox client application.","Return **subscription** as browser
// format. The same as on `/info` route.","**Drop** request and return `403` status code.","**Drop**
// request and return `404` status code.","**Drop** request and return `451` status code.","**Drop**
// the socket connection."]}.
type DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType string

const (
	DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeXRAYJSON      DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType = "XRAY_JSON"
	DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeXRAYBASE64    DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType = "XRAY_BASE64"
	DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeMIHOMO        DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType = "MIHOMO"
	DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSTASH         DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType = "STASH"
	DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeCLASH         DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType = "CLASH"
	DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSINGBOX       DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType = "SINGBOX"
	DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeBROWSER       DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType = "BROWSER"
	DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeBLOCK         DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType = "BLOCK"
	DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSTATUSCODE404 DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType = "STATUS_CODE_404"
	DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSTATUSCODE451 DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType = "STATUS_CODE_451"
	DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSOCKETDROP    DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType = "SOCKET_DROP"
)

// AllValues returns all DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType values.
func (DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType) AllValues() []DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType {
	return []DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType{
		DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeXRAYJSON,
		DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeXRAYBASE64,
		DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeMIHOMO,
		DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSTASH,
		DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeCLASH,
		DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSINGBOX,
		DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeBROWSER,
		DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeBLOCK,
		DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSTATUSCODE404,
		DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSTATUSCODE451,
		DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSOCKETDROP,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType) MarshalText() ([]byte, error) {
	switch s {
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeXRAYJSON:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeXRAYBASE64:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeMIHOMO:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSTASH:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeCLASH:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSINGBOX:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeBROWSER:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeBLOCK:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSTATUSCODE404:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSTATUSCODE451:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSOCKETDROP:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType) UnmarshalText(data []byte) error {
	switch DebugSrrMatcherResponseDtoResponseMatchedRuleResponseType(data) {
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeXRAYJSON:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeXRAYJSON
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeXRAYBASE64:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeXRAYBASE64
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeMIHOMO:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeMIHOMO
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSTASH:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSTASH
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeCLASH:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeCLASH
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSINGBOX:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSINGBOX
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeBROWSER:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeBROWSER
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeBLOCK:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeBLOCK
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSTATUSCODE404:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSTATUSCODE404
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSTATUSCODE451:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSTATUSCODE451
		return nil
	case DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSOCKETDROP:
		*s = DebugSrrMatcherResponseDtoResponseMatchedRuleResponseTypeSOCKETDROP
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type DebugSrrMatcherResponseDtoResponseOutputHeaders map[string]string

func (s *DebugSrrMatcherResponseDtoResponseOutputHeaders) init() DebugSrrMatcherResponseDtoResponseOutputHeaders {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

type DebugSrrMatcherResponseDtoResponseResponseType string

const (
	DebugSrrMatcherResponseDtoResponseResponseTypeXRAYJSON      DebugSrrMatcherResponseDtoResponseResponseType = "XRAY_JSON"
	DebugSrrMatcherResponseDtoResponseResponseTypeXRAYBASE64    DebugSrrMatcherResponseDtoResponseResponseType = "XRAY_BASE64"
	DebugSrrMatcherResponseDtoResponseResponseTypeMIHOMO        DebugSrrMatcherResponseDtoResponseResponseType = "MIHOMO"
	DebugSrrMatcherResponseDtoResponseResponseTypeSTASH         DebugSrrMatcherResponseDtoResponseResponseType = "STASH"
	DebugSrrMatcherResponseDtoResponseResponseTypeCLASH         DebugSrrMatcherResponseDtoResponseResponseType = "CLASH"
	DebugSrrMatcherResponseDtoResponseResponseTypeSINGBOX       DebugSrrMatcherResponseDtoResponseResponseType = "SINGBOX"
	DebugSrrMatcherResponseDtoResponseResponseTypeBROWSER       DebugSrrMatcherResponseDtoResponseResponseType = "BROWSER"
	DebugSrrMatcherResponseDtoResponseResponseTypeBLOCK         DebugSrrMatcherResponseDtoResponseResponseType = "BLOCK"
	DebugSrrMatcherResponseDtoResponseResponseTypeSTATUSCODE404 DebugSrrMatcherResponseDtoResponseResponseType = "STATUS_CODE_404"
	DebugSrrMatcherResponseDtoResponseResponseTypeSTATUSCODE451 DebugSrrMatcherResponseDtoResponseResponseType = "STATUS_CODE_451"
	DebugSrrMatcherResponseDtoResponseResponseTypeSOCKETDROP    DebugSrrMatcherResponseDtoResponseResponseType = "SOCKET_DROP"
)

// AllValues returns all DebugSrrMatcherResponseDtoResponseResponseType values.
func (DebugSrrMatcherResponseDtoResponseResponseType) AllValues() []DebugSrrMatcherResponseDtoResponseResponseType {
	return []DebugSrrMatcherResponseDtoResponseResponseType{
		DebugSrrMatcherResponseDtoResponseResponseTypeXRAYJSON,
		DebugSrrMatcherResponseDtoResponseResponseTypeXRAYBASE64,
		DebugSrrMatcherResponseDtoResponseResponseTypeMIHOMO,
		DebugSrrMatcherResponseDtoResponseResponseTypeSTASH,
		DebugSrrMatcherResponseDtoResponseResponseTypeCLASH,
		DebugSrrMatcherResponseDtoResponseResponseTypeSINGBOX,
		DebugSrrMatcherResponseDtoResponseResponseTypeBROWSER,
		DebugSrrMatcherResponseDtoResponseResponseTypeBLOCK,
		DebugSrrMatcherResponseDtoResponseResponseTypeSTATUSCODE404,
		DebugSrrMatcherResponseDtoResponseResponseTypeSTATUSCODE451,
		DebugSrrMatcherResponseDtoResponseResponseTypeSOCKETDROP,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DebugSrrMatcherResponseDtoResponseResponseType) MarshalText() ([]byte, error) {
	switch s {
	case DebugSrrMatcherResponseDtoResponseResponseTypeXRAYJSON:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeXRAYBASE64:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeMIHOMO:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeSTASH:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeCLASH:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeSINGBOX:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeBROWSER:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeBLOCK:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeSTATUSCODE404:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeSTATUSCODE451:
		return []byte(s), nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeSOCKETDROP:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DebugSrrMatcherResponseDtoResponseResponseType) UnmarshalText(data []byte) error {
	switch DebugSrrMatcherResponseDtoResponseResponseType(data) {
	case DebugSrrMatcherResponseDtoResponseResponseTypeXRAYJSON:
		*s = DebugSrrMatcherResponseDtoResponseResponseTypeXRAYJSON
		return nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeXRAYBASE64:
		*s = DebugSrrMatcherResponseDtoResponseResponseTypeXRAYBASE64
		return nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeMIHOMO:
		*s = DebugSrrMatcherResponseDtoResponseResponseTypeMIHOMO
		return nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeSTASH:
		*s = DebugSrrMatcherResponseDtoResponseResponseTypeSTASH
		return nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeCLASH:
		*s = DebugSrrMatcherResponseDtoResponseResponseTypeCLASH
		return nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeSINGBOX:
		*s = DebugSrrMatcherResponseDtoResponseResponseTypeSINGBOX
		return nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeBROWSER:
		*s = DebugSrrMatcherResponseDtoResponseResponseTypeBROWSER
		return nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeBLOCK:
		*s = DebugSrrMatcherResponseDtoResponseResponseTypeBLOCK
		return nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeSTATUSCODE404:
		*s = DebugSrrMatcherResponseDtoResponseResponseTypeSTATUSCODE404
		return nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeSTATUSCODE451:
		*s = DebugSrrMatcherResponseDtoResponseResponseTypeSTATUSCODE451
		return nil
	case DebugSrrMatcherResponseDtoResponseResponseTypeSOCKETDROP:
		*s = DebugSrrMatcherResponseDtoResponseResponseTypeSOCKETDROP
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/DeleteAllUserHwidDevicesRequestDto
type DeleteAllUserHwidDevicesRequestDto struct {
	UserUuid uuid.UUID `json:"userUuid"`
}

// GetUserUuid returns the value of UserUuid.
func (s *DeleteAllUserHwidDevicesRequestDto) GetUserUuid() uuid.UUID {
	return s.UserUuid
}

// SetUserUuid sets the value of UserUuid.
func (s *DeleteAllUserHwidDevicesRequestDto) SetUserUuid(val uuid.UUID) {
	s.UserUuid = val
}

// Ref: #/components/schemas/DeleteApiTokenResponseDto
type DeleteApiTokenResponseDto struct {
	Response bool `json:"response"`
}

// GetResponse returns the value of Response.
func (s *DeleteApiTokenResponseDto) GetResponse() bool {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *DeleteApiTokenResponseDto) SetResponse(val bool) {
	s.Response = val
}

func (*DeleteApiTokenResponseDto) apiTokensControllerDeleteRes() {}

// Ref: #/components/schemas/DeletePasskeyRequestDto
type DeletePasskeyRequestDto struct {
	ID string `json:"id"`
}

// GetID returns the value of ID.
func (s *DeletePasskeyRequestDto) GetID() string {
	return s.ID
}

// SetID sets the value of ID.
func (s *DeletePasskeyRequestDto) SetID(val string) {
	s.ID = val
}

// Ref: #/components/schemas/DeleteResponse
type DeleteResponse struct {
	Response DeleteResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *DeleteResponse) GetResponse() DeleteResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *DeleteResponse) SetResponse(val DeleteResponseResponse) {
	s.Response = val
}

func (*DeleteResponse) configProfileControllerDeleteConfigProfileByUuidRes() {}
func (*DeleteResponse) externalSquadControllerDeleteExternalSquadRes()       {}
func (*DeleteResponse) hostsControllerDeleteHostRes()                        {}
func (*DeleteResponse) infraBillingControllerDeleteInfraProviderByUuidRes()  {}
func (*DeleteResponse) internalSquadControllerDeleteInternalSquadRes()       {}
func (*DeleteResponse) nodesControllerDeleteNodeRes()                        {}
func (*DeleteResponse) subscriptionTemplateControllerDeleteTemplateRes()     {}
func (*DeleteResponse) usersControllerDeleteUserRes()                        {}

type DeleteResponseResponse struct {
	IsDeleted bool `json:"isDeleted"`
}

// GetIsDeleted returns the value of IsDeleted.
func (s *DeleteResponseResponse) GetIsDeleted() bool {
	return s.IsDeleted
}

// SetIsDeleted sets the value of IsDeleted.
func (s *DeleteResponseResponse) SetIsDeleted(val bool) {
	s.IsDeleted = val
}

// Ref: #/components/schemas/DeleteSnippetRequestDto
type DeleteSnippetRequestDto struct {
	Name string `json:"name"`
}

// GetName returns the value of Name.
func (s *DeleteSnippetRequestDto) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *DeleteSnippetRequestDto) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/DeleteUserHwidDeviceRequestDto
type DeleteUserHwidDeviceRequestDto struct {
	UserUuid uuid.UUID `json:"userUuid"`
	Hwid     string    `json:"hwid"`
}

// GetUserUuid returns the value of UserUuid.
func (s *DeleteUserHwidDeviceRequestDto) GetUserUuid() uuid.UUID {
	return s.UserUuid
}

// GetHwid returns the value of Hwid.
func (s *DeleteUserHwidDeviceRequestDto) GetHwid() string {
	return s.Hwid
}

// SetUserUuid sets the value of UserUuid.
func (s *DeleteUserHwidDeviceRequestDto) SetUserUuid(val uuid.UUID) {
	s.UserUuid = val
}

// SetHwid sets the value of Hwid.
func (s *DeleteUserHwidDeviceRequestDto) SetHwid(val string) {
	s.Hwid = val
}

// Ref: #/components/schemas/EncryptHappCryptoLinkRequestDto
type EncryptHappCryptoLinkRequestDto struct {
	LinkToEncrypt url.URL `json:"linkToEncrypt"`
}

// GetLinkToEncrypt returns the value of LinkToEncrypt.
func (s *EncryptHappCryptoLinkRequestDto) GetLinkToEncrypt() url.URL {
	return s.LinkToEncrypt
}

// SetLinkToEncrypt sets the value of LinkToEncrypt.
func (s *EncryptHappCryptoLinkRequestDto) SetLinkToEncrypt(val url.URL) {
	s.LinkToEncrypt = val
}

// Ref: #/components/schemas/EncryptHappCryptoLinkResponseDto
type EncryptHappCryptoLinkResponseDto struct {
	Response EncryptHappCryptoLinkResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *EncryptHappCryptoLinkResponseDto) GetResponse() EncryptHappCryptoLinkResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *EncryptHappCryptoLinkResponseDto) SetResponse(val EncryptHappCryptoLinkResponseDtoResponse) {
	s.Response = val
}

func (*EncryptHappCryptoLinkResponseDto) systemControllerEncryptHappCryptoLinkRes() {}

type EncryptHappCryptoLinkResponseDtoResponse struct {
	EncryptedLink string `json:"encryptedLink"`
}

// GetEncryptedLink returns the value of EncryptedLink.
func (s *EncryptHappCryptoLinkResponseDtoResponse) GetEncryptedLink() string {
	return s.EncryptedLink
}

// SetEncryptedLink sets the value of EncryptedLink.
func (s *EncryptHappCryptoLinkResponseDtoResponse) SetEncryptedLink(val string) {
	s.EncryptedLink = val
}

// Ref: #/components/schemas/EventResponse
type EventResponse struct {
	Response EventResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *EventResponse) GetResponse() EventResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *EventResponse) SetResponse(val EventResponseResponse) {
	s.Response = val
}

func (*EventResponse) externalSquadControllerAddUsersToExternalSquadRes()      {}
func (*EventResponse) externalSquadControllerRemoveUsersFromExternalSquadRes() {}
func (*EventResponse) internalSquadControllerAddUsersToInternalSquadRes()      {}
func (*EventResponse) internalSquadControllerRemoveUsersFromInternalSquadRes() {}
func (*EventResponse) nodesControllerRestartAllNodesRes()                      {}
func (*EventResponse) nodesControllerRestartNodeRes()                          {}
func (*EventResponse) usersBulkActionsControllerBulkAllResetUserTrafficRes()   {}
func (*EventResponse) usersBulkActionsControllerBulkUpdateAllUsersRes()        {}

type EventResponseResponse struct {
	EventSent bool `json:"eventSent"`
}

// GetEventSent returns the value of EventSent.
func (s *EventResponseResponse) GetEventSent() bool {
	return s.EventSent
}

// SetEventSent sets the value of EventSent.
func (s *EventResponseResponse) SetEventSent(val bool) {
	s.EventSent = val
}

type ExternalSquadControllerAddUsersToExternalSquadBadRequest struct {
	Message    OptString                                                            `json:"message"`
	StatusCode OptFloat64                                                           `json:"statusCode"`
	Errors     []ExternalSquadControllerAddUsersToExternalSquadBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *ExternalSquadControllerAddUsersToExternalSquadBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *ExternalSquadControllerAddUsersToExternalSquadBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *ExternalSquadControllerAddUsersToExternalSquadBadRequest) GetErrors() []ExternalSquadControllerAddUsersToExternalSquadBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *ExternalSquadControllerAddUsersToExternalSquadBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *ExternalSquadControllerAddUsersToExternalSquadBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *ExternalSquadControllerAddUsersToExternalSquadBadRequest) SetErrors(val []ExternalSquadControllerAddUsersToExternalSquadBadRequestErrorsItem) {
	s.Errors = val
}

func (*ExternalSquadControllerAddUsersToExternalSquadBadRequest) externalSquadControllerAddUsersToExternalSquadRes() {
}

type ExternalSquadControllerAddUsersToExternalSquadBadRequestErrorsItem struct{}

type ExternalSquadControllerAddUsersToExternalSquadInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *ExternalSquadControllerAddUsersToExternalSquadInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *ExternalSquadControllerAddUsersToExternalSquadInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *ExternalSquadControllerAddUsersToExternalSquadInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *ExternalSquadControllerAddUsersToExternalSquadInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *ExternalSquadControllerAddUsersToExternalSquadInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *ExternalSquadControllerAddUsersToExternalSquadInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *ExternalSquadControllerAddUsersToExternalSquadInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *ExternalSquadControllerAddUsersToExternalSquadInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*ExternalSquadControllerAddUsersToExternalSquadInternalServerError) externalSquadControllerAddUsersToExternalSquadRes() {
}

// ExternalSquadControllerAddUsersToExternalSquadNotFound is response for ExternalSquadControllerAddUsersToExternalSquad operation.
type ExternalSquadControllerAddUsersToExternalSquadNotFound struct{}

func (*ExternalSquadControllerAddUsersToExternalSquadNotFound) externalSquadControllerAddUsersToExternalSquadRes() {
}

type ExternalSquadControllerCreateExternalSquadBadRequest struct {
	Message    OptString                                                        `json:"message"`
	StatusCode OptFloat64                                                       `json:"statusCode"`
	Errors     []ExternalSquadControllerCreateExternalSquadBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *ExternalSquadControllerCreateExternalSquadBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *ExternalSquadControllerCreateExternalSquadBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *ExternalSquadControllerCreateExternalSquadBadRequest) GetErrors() []ExternalSquadControllerCreateExternalSquadBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *ExternalSquadControllerCreateExternalSquadBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *ExternalSquadControllerCreateExternalSquadBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *ExternalSquadControllerCreateExternalSquadBadRequest) SetErrors(val []ExternalSquadControllerCreateExternalSquadBadRequestErrorsItem) {
	s.Errors = val
}

func (*ExternalSquadControllerCreateExternalSquadBadRequest) externalSquadControllerCreateExternalSquadRes() {
}

type ExternalSquadControllerCreateExternalSquadBadRequestErrorsItem struct{}

// ExternalSquadControllerCreateExternalSquadConflict is response for ExternalSquadControllerCreateExternalSquad operation.
type ExternalSquadControllerCreateExternalSquadConflict struct{}

func (*ExternalSquadControllerCreateExternalSquadConflict) externalSquadControllerCreateExternalSquadRes() {
}

type ExternalSquadControllerCreateExternalSquadInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *ExternalSquadControllerCreateExternalSquadInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *ExternalSquadControllerCreateExternalSquadInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *ExternalSquadControllerCreateExternalSquadInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *ExternalSquadControllerCreateExternalSquadInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *ExternalSquadControllerCreateExternalSquadInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *ExternalSquadControllerCreateExternalSquadInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *ExternalSquadControllerCreateExternalSquadInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *ExternalSquadControllerCreateExternalSquadInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*ExternalSquadControllerCreateExternalSquadInternalServerError) externalSquadControllerCreateExternalSquadRes() {
}

type ExternalSquadControllerDeleteExternalSquadBadRequest struct {
	Message    OptString                                                        `json:"message"`
	StatusCode OptFloat64                                                       `json:"statusCode"`
	Errors     []ExternalSquadControllerDeleteExternalSquadBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *ExternalSquadControllerDeleteExternalSquadBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *ExternalSquadControllerDeleteExternalSquadBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *ExternalSquadControllerDeleteExternalSquadBadRequest) GetErrors() []ExternalSquadControllerDeleteExternalSquadBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *ExternalSquadControllerDeleteExternalSquadBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *ExternalSquadControllerDeleteExternalSquadBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *ExternalSquadControllerDeleteExternalSquadBadRequest) SetErrors(val []ExternalSquadControllerDeleteExternalSquadBadRequestErrorsItem) {
	s.Errors = val
}

func (*ExternalSquadControllerDeleteExternalSquadBadRequest) externalSquadControllerDeleteExternalSquadRes() {
}

type ExternalSquadControllerDeleteExternalSquadBadRequestErrorsItem struct{}

type ExternalSquadControllerDeleteExternalSquadInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *ExternalSquadControllerDeleteExternalSquadInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *ExternalSquadControllerDeleteExternalSquadInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *ExternalSquadControllerDeleteExternalSquadInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *ExternalSquadControllerDeleteExternalSquadInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *ExternalSquadControllerDeleteExternalSquadInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *ExternalSquadControllerDeleteExternalSquadInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *ExternalSquadControllerDeleteExternalSquadInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *ExternalSquadControllerDeleteExternalSquadInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*ExternalSquadControllerDeleteExternalSquadInternalServerError) externalSquadControllerDeleteExternalSquadRes() {
}

// ExternalSquadControllerDeleteExternalSquadNotFound is response for ExternalSquadControllerDeleteExternalSquad operation.
type ExternalSquadControllerDeleteExternalSquadNotFound struct{}

func (*ExternalSquadControllerDeleteExternalSquadNotFound) externalSquadControllerDeleteExternalSquadRes() {
}

type ExternalSquadControllerGetExternalSquadByUuidBadRequest struct {
	Message    OptString                                                           `json:"message"`
	StatusCode OptFloat64                                                          `json:"statusCode"`
	Errors     []ExternalSquadControllerGetExternalSquadByUuidBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *ExternalSquadControllerGetExternalSquadByUuidBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *ExternalSquadControllerGetExternalSquadByUuidBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *ExternalSquadControllerGetExternalSquadByUuidBadRequest) GetErrors() []ExternalSquadControllerGetExternalSquadByUuidBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *ExternalSquadControllerGetExternalSquadByUuidBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *ExternalSquadControllerGetExternalSquadByUuidBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *ExternalSquadControllerGetExternalSquadByUuidBadRequest) SetErrors(val []ExternalSquadControllerGetExternalSquadByUuidBadRequestErrorsItem) {
	s.Errors = val
}

func (*ExternalSquadControllerGetExternalSquadByUuidBadRequest) externalSquadControllerGetExternalSquadByUuidRes() {
}

type ExternalSquadControllerGetExternalSquadByUuidBadRequestErrorsItem struct{}

type ExternalSquadControllerGetExternalSquadByUuidInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *ExternalSquadControllerGetExternalSquadByUuidInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *ExternalSquadControllerGetExternalSquadByUuidInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *ExternalSquadControllerGetExternalSquadByUuidInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *ExternalSquadControllerGetExternalSquadByUuidInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *ExternalSquadControllerGetExternalSquadByUuidInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *ExternalSquadControllerGetExternalSquadByUuidInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *ExternalSquadControllerGetExternalSquadByUuidInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *ExternalSquadControllerGetExternalSquadByUuidInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*ExternalSquadControllerGetExternalSquadByUuidInternalServerError) externalSquadControllerGetExternalSquadByUuidRes() {
}

type ExternalSquadControllerGetExternalSquadsBadRequest struct {
	Message    OptString                                                      `json:"message"`
	StatusCode OptFloat64                                                     `json:"statusCode"`
	Errors     []ExternalSquadControllerGetExternalSquadsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *ExternalSquadControllerGetExternalSquadsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *ExternalSquadControllerGetExternalSquadsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *ExternalSquadControllerGetExternalSquadsBadRequest) GetErrors() []ExternalSquadControllerGetExternalSquadsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *ExternalSquadControllerGetExternalSquadsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *ExternalSquadControllerGetExternalSquadsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *ExternalSquadControllerGetExternalSquadsBadRequest) SetErrors(val []ExternalSquadControllerGetExternalSquadsBadRequestErrorsItem) {
	s.Errors = val
}

func (*ExternalSquadControllerGetExternalSquadsBadRequest) externalSquadControllerGetExternalSquadsRes() {
}

type ExternalSquadControllerGetExternalSquadsBadRequestErrorsItem struct{}

type ExternalSquadControllerGetExternalSquadsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *ExternalSquadControllerGetExternalSquadsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *ExternalSquadControllerGetExternalSquadsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *ExternalSquadControllerGetExternalSquadsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *ExternalSquadControllerGetExternalSquadsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *ExternalSquadControllerGetExternalSquadsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *ExternalSquadControllerGetExternalSquadsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *ExternalSquadControllerGetExternalSquadsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *ExternalSquadControllerGetExternalSquadsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*ExternalSquadControllerGetExternalSquadsInternalServerError) externalSquadControllerGetExternalSquadsRes() {
}

type ExternalSquadControllerRemoveUsersFromExternalSquadBadRequest struct {
	Message    OptString                                                                 `json:"message"`
	StatusCode OptFloat64                                                                `json:"statusCode"`
	Errors     []ExternalSquadControllerRemoveUsersFromExternalSquadBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *ExternalSquadControllerRemoveUsersFromExternalSquadBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *ExternalSquadControllerRemoveUsersFromExternalSquadBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *ExternalSquadControllerRemoveUsersFromExternalSquadBadRequest) GetErrors() []ExternalSquadControllerRemoveUsersFromExternalSquadBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *ExternalSquadControllerRemoveUsersFromExternalSquadBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *ExternalSquadControllerRemoveUsersFromExternalSquadBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *ExternalSquadControllerRemoveUsersFromExternalSquadBadRequest) SetErrors(val []ExternalSquadControllerRemoveUsersFromExternalSquadBadRequestErrorsItem) {
	s.Errors = val
}

func (*ExternalSquadControllerRemoveUsersFromExternalSquadBadRequest) externalSquadControllerRemoveUsersFromExternalSquadRes() {
}

type ExternalSquadControllerRemoveUsersFromExternalSquadBadRequestErrorsItem struct{}

type ExternalSquadControllerRemoveUsersFromExternalSquadInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *ExternalSquadControllerRemoveUsersFromExternalSquadInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *ExternalSquadControllerRemoveUsersFromExternalSquadInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *ExternalSquadControllerRemoveUsersFromExternalSquadInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *ExternalSquadControllerRemoveUsersFromExternalSquadInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *ExternalSquadControllerRemoveUsersFromExternalSquadInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *ExternalSquadControllerRemoveUsersFromExternalSquadInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *ExternalSquadControllerRemoveUsersFromExternalSquadInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *ExternalSquadControllerRemoveUsersFromExternalSquadInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*ExternalSquadControllerRemoveUsersFromExternalSquadInternalServerError) externalSquadControllerRemoveUsersFromExternalSquadRes() {
}

// ExternalSquadControllerRemoveUsersFromExternalSquadNotFound is response for ExternalSquadControllerRemoveUsersFromExternalSquad operation.
type ExternalSquadControllerRemoveUsersFromExternalSquadNotFound struct{}

func (*ExternalSquadControllerRemoveUsersFromExternalSquadNotFound) externalSquadControllerRemoveUsersFromExternalSquadRes() {
}

type ExternalSquadControllerUpdateExternalSquadBadRequest struct {
	Message    OptString                                                        `json:"message"`
	StatusCode OptFloat64                                                       `json:"statusCode"`
	Errors     []ExternalSquadControllerUpdateExternalSquadBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *ExternalSquadControllerUpdateExternalSquadBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *ExternalSquadControllerUpdateExternalSquadBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *ExternalSquadControllerUpdateExternalSquadBadRequest) GetErrors() []ExternalSquadControllerUpdateExternalSquadBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *ExternalSquadControllerUpdateExternalSquadBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *ExternalSquadControllerUpdateExternalSquadBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *ExternalSquadControllerUpdateExternalSquadBadRequest) SetErrors(val []ExternalSquadControllerUpdateExternalSquadBadRequestErrorsItem) {
	s.Errors = val
}

func (*ExternalSquadControllerUpdateExternalSquadBadRequest) externalSquadControllerUpdateExternalSquadRes() {
}

type ExternalSquadControllerUpdateExternalSquadBadRequestErrorsItem struct{}

// ExternalSquadControllerUpdateExternalSquadConflict is response for ExternalSquadControllerUpdateExternalSquad operation.
type ExternalSquadControllerUpdateExternalSquadConflict struct{}

func (*ExternalSquadControllerUpdateExternalSquadConflict) externalSquadControllerUpdateExternalSquadRes() {
}

type ExternalSquadControllerUpdateExternalSquadInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *ExternalSquadControllerUpdateExternalSquadInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *ExternalSquadControllerUpdateExternalSquadInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *ExternalSquadControllerUpdateExternalSquadInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *ExternalSquadControllerUpdateExternalSquadInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *ExternalSquadControllerUpdateExternalSquadInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *ExternalSquadControllerUpdateExternalSquadInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *ExternalSquadControllerUpdateExternalSquadInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *ExternalSquadControllerUpdateExternalSquadInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*ExternalSquadControllerUpdateExternalSquadInternalServerError) externalSquadControllerUpdateExternalSquadRes() {
}

// ExternalSquadControllerUpdateExternalSquadNotFound is response for ExternalSquadControllerUpdateExternalSquad operation.
type ExternalSquadControllerUpdateExternalSquadNotFound struct{}

func (*ExternalSquadControllerUpdateExternalSquadNotFound) externalSquadControllerUpdateExternalSquadRes() {
}

// Ref: #/components/schemas/ExternalSquadResponse
type ExternalSquadResponse struct {
	Response ExternalSquadResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *ExternalSquadResponse) GetResponse() ExternalSquadResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *ExternalSquadResponse) SetResponse(val ExternalSquadResponseResponse) {
	s.Response = val
}

func (*ExternalSquadResponse) externalSquadControllerCreateExternalSquadRes()    {}
func (*ExternalSquadResponse) externalSquadControllerGetExternalSquadByUuidRes() {}
func (*ExternalSquadResponse) externalSquadControllerUpdateExternalSquadRes()    {}

type ExternalSquadResponseResponse struct {
	UUID                 uuid.UUID                                            `json:"uuid"`
	Name                 string                                               `json:"name"`
	Info                 ExternalSquadResponseResponseInfo                    `json:"info"`
	Templates            []ExternalSquadResponseResponseTemplatesItem         `json:"templates"`
	SubscriptionSettings NilExternalSquadResponseResponseSubscriptionSettings `json:"subscriptionSettings"`
	CreatedAt            time.Time                                            `json:"createdAt"`
	UpdatedAt            time.Time                                            `json:"updatedAt"`
}

// GetUUID returns the value of UUID.
func (s *ExternalSquadResponseResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *ExternalSquadResponseResponse) GetName() string {
	return s.Name
}

// GetInfo returns the value of Info.
func (s *ExternalSquadResponseResponse) GetInfo() ExternalSquadResponseResponseInfo {
	return s.Info
}

// GetTemplates returns the value of Templates.
func (s *ExternalSquadResponseResponse) GetTemplates() []ExternalSquadResponseResponseTemplatesItem {
	return s.Templates
}

// GetSubscriptionSettings returns the value of SubscriptionSettings.
func (s *ExternalSquadResponseResponse) GetSubscriptionSettings() NilExternalSquadResponseResponseSubscriptionSettings {
	return s.SubscriptionSettings
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ExternalSquadResponseResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *ExternalSquadResponseResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetUUID sets the value of UUID.
func (s *ExternalSquadResponseResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *ExternalSquadResponseResponse) SetName(val string) {
	s.Name = val
}

// SetInfo sets the value of Info.
func (s *ExternalSquadResponseResponse) SetInfo(val ExternalSquadResponseResponseInfo) {
	s.Info = val
}

// SetTemplates sets the value of Templates.
func (s *ExternalSquadResponseResponse) SetTemplates(val []ExternalSquadResponseResponseTemplatesItem) {
	s.Templates = val
}

// SetSubscriptionSettings sets the value of SubscriptionSettings.
func (s *ExternalSquadResponseResponse) SetSubscriptionSettings(val NilExternalSquadResponseResponseSubscriptionSettings) {
	s.SubscriptionSettings = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ExternalSquadResponseResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *ExternalSquadResponseResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type ExternalSquadResponseResponseInfo struct {
	MembersCount float64 `json:"membersCount"`
}

// GetMembersCount returns the value of MembersCount.
func (s *ExternalSquadResponseResponseInfo) GetMembersCount() float64 {
	return s.MembersCount
}

// SetMembersCount sets the value of MembersCount.
func (s *ExternalSquadResponseResponseInfo) SetMembersCount(val float64) {
	s.MembersCount = val
}

type ExternalSquadResponseResponseSubscriptionSettings struct {
	ProfileTitle                  OptString    `json:"profileTitle"`
	SupportLink                   OptString    `json:"supportLink"`
	ProfileUpdateInterval         OptInt       `json:"profileUpdateInterval"`
	IsProfileWebpageUrlEnabled    OptBool      `json:"isProfileWebpageUrlEnabled"`
	ServeJsonAtBaseSubscription   OptBool      `json:"serveJsonAtBaseSubscription"`
	AddUsernameToBaseSubscription OptBool      `json:"addUsernameToBaseSubscription"`
	IsShowCustomRemarks           OptBool      `json:"isShowCustomRemarks"`
	HappAnnounce                  OptNilString `json:"happAnnounce"`
	HappRouting                   OptNilString `json:"happRouting"`
	RandomizeHosts                OptBool      `json:"randomizeHosts"`
}

// GetProfileTitle returns the value of ProfileTitle.
func (s *ExternalSquadResponseResponseSubscriptionSettings) GetProfileTitle() OptString {
	return s.ProfileTitle
}

// GetSupportLink returns the value of SupportLink.
func (s *ExternalSquadResponseResponseSubscriptionSettings) GetSupportLink() OptString {
	return s.SupportLink
}

// GetProfileUpdateInterval returns the value of ProfileUpdateInterval.
func (s *ExternalSquadResponseResponseSubscriptionSettings) GetProfileUpdateInterval() OptInt {
	return s.ProfileUpdateInterval
}

// GetIsProfileWebpageUrlEnabled returns the value of IsProfileWebpageUrlEnabled.
func (s *ExternalSquadResponseResponseSubscriptionSettings) GetIsProfileWebpageUrlEnabled() OptBool {
	return s.IsProfileWebpageUrlEnabled
}

// GetServeJsonAtBaseSubscription returns the value of ServeJsonAtBaseSubscription.
func (s *ExternalSquadResponseResponseSubscriptionSettings) GetServeJsonAtBaseSubscription() OptBool {
	return s.ServeJsonAtBaseSubscription
}

// GetAddUsernameToBaseSubscription returns the value of AddUsernameToBaseSubscription.
func (s *ExternalSquadResponseResponseSubscriptionSettings) GetAddUsernameToBaseSubscription() OptBool {
	return s.AddUsernameToBaseSubscription
}

// GetIsShowCustomRemarks returns the value of IsShowCustomRemarks.
func (s *ExternalSquadResponseResponseSubscriptionSettings) GetIsShowCustomRemarks() OptBool {
	return s.IsShowCustomRemarks
}

// GetHappAnnounce returns the value of HappAnnounce.
func (s *ExternalSquadResponseResponseSubscriptionSettings) GetHappAnnounce() OptNilString {
	return s.HappAnnounce
}

// GetHappRouting returns the value of HappRouting.
func (s *ExternalSquadResponseResponseSubscriptionSettings) GetHappRouting() OptNilString {
	return s.HappRouting
}

// GetRandomizeHosts returns the value of RandomizeHosts.
func (s *ExternalSquadResponseResponseSubscriptionSettings) GetRandomizeHosts() OptBool {
	return s.RandomizeHosts
}

// SetProfileTitle sets the value of ProfileTitle.
func (s *ExternalSquadResponseResponseSubscriptionSettings) SetProfileTitle(val OptString) {
	s.ProfileTitle = val
}

// SetSupportLink sets the value of SupportLink.
func (s *ExternalSquadResponseResponseSubscriptionSettings) SetSupportLink(val OptString) {
	s.SupportLink = val
}

// SetProfileUpdateInterval sets the value of ProfileUpdateInterval.
func (s *ExternalSquadResponseResponseSubscriptionSettings) SetProfileUpdateInterval(val OptInt) {
	s.ProfileUpdateInterval = val
}

// SetIsProfileWebpageUrlEnabled sets the value of IsProfileWebpageUrlEnabled.
func (s *ExternalSquadResponseResponseSubscriptionSettings) SetIsProfileWebpageUrlEnabled(val OptBool) {
	s.IsProfileWebpageUrlEnabled = val
}

// SetServeJsonAtBaseSubscription sets the value of ServeJsonAtBaseSubscription.
func (s *ExternalSquadResponseResponseSubscriptionSettings) SetServeJsonAtBaseSubscription(val OptBool) {
	s.ServeJsonAtBaseSubscription = val
}

// SetAddUsernameToBaseSubscription sets the value of AddUsernameToBaseSubscription.
func (s *ExternalSquadResponseResponseSubscriptionSettings) SetAddUsernameToBaseSubscription(val OptBool) {
	s.AddUsernameToBaseSubscription = val
}

// SetIsShowCustomRemarks sets the value of IsShowCustomRemarks.
func (s *ExternalSquadResponseResponseSubscriptionSettings) SetIsShowCustomRemarks(val OptBool) {
	s.IsShowCustomRemarks = val
}

// SetHappAnnounce sets the value of HappAnnounce.
func (s *ExternalSquadResponseResponseSubscriptionSettings) SetHappAnnounce(val OptNilString) {
	s.HappAnnounce = val
}

// SetHappRouting sets the value of HappRouting.
func (s *ExternalSquadResponseResponseSubscriptionSettings) SetHappRouting(val OptNilString) {
	s.HappRouting = val
}

// SetRandomizeHosts sets the value of RandomizeHosts.
func (s *ExternalSquadResponseResponseSubscriptionSettings) SetRandomizeHosts(val OptBool) {
	s.RandomizeHosts = val
}

type ExternalSquadResponseResponseTemplatesItem struct {
	TemplateUuid uuid.UUID                                              `json:"templateUuid"`
	TemplateType ExternalSquadResponseResponseTemplatesItemTemplateType `json:"templateType"`
}

// GetTemplateUuid returns the value of TemplateUuid.
func (s *ExternalSquadResponseResponseTemplatesItem) GetTemplateUuid() uuid.UUID {
	return s.TemplateUuid
}

// GetTemplateType returns the value of TemplateType.
func (s *ExternalSquadResponseResponseTemplatesItem) GetTemplateType() ExternalSquadResponseResponseTemplatesItemTemplateType {
	return s.TemplateType
}

// SetTemplateUuid sets the value of TemplateUuid.
func (s *ExternalSquadResponseResponseTemplatesItem) SetTemplateUuid(val uuid.UUID) {
	s.TemplateUuid = val
}

// SetTemplateType sets the value of TemplateType.
func (s *ExternalSquadResponseResponseTemplatesItem) SetTemplateType(val ExternalSquadResponseResponseTemplatesItemTemplateType) {
	s.TemplateType = val
}

type ExternalSquadResponseResponseTemplatesItemTemplateType string

const (
	ExternalSquadResponseResponseTemplatesItemTemplateTypeXRAYJSON   ExternalSquadResponseResponseTemplatesItemTemplateType = "XRAY_JSON"
	ExternalSquadResponseResponseTemplatesItemTemplateTypeXRAYBASE64 ExternalSquadResponseResponseTemplatesItemTemplateType = "XRAY_BASE64"
	ExternalSquadResponseResponseTemplatesItemTemplateTypeMIHOMO     ExternalSquadResponseResponseTemplatesItemTemplateType = "MIHOMO"
	ExternalSquadResponseResponseTemplatesItemTemplateTypeSTASH      ExternalSquadResponseResponseTemplatesItemTemplateType = "STASH"
	ExternalSquadResponseResponseTemplatesItemTemplateTypeCLASH      ExternalSquadResponseResponseTemplatesItemTemplateType = "CLASH"
	ExternalSquadResponseResponseTemplatesItemTemplateTypeSINGBOX    ExternalSquadResponseResponseTemplatesItemTemplateType = "SINGBOX"
)

// AllValues returns all ExternalSquadResponseResponseTemplatesItemTemplateType values.
func (ExternalSquadResponseResponseTemplatesItemTemplateType) AllValues() []ExternalSquadResponseResponseTemplatesItemTemplateType {
	return []ExternalSquadResponseResponseTemplatesItemTemplateType{
		ExternalSquadResponseResponseTemplatesItemTemplateTypeXRAYJSON,
		ExternalSquadResponseResponseTemplatesItemTemplateTypeXRAYBASE64,
		ExternalSquadResponseResponseTemplatesItemTemplateTypeMIHOMO,
		ExternalSquadResponseResponseTemplatesItemTemplateTypeSTASH,
		ExternalSquadResponseResponseTemplatesItemTemplateTypeCLASH,
		ExternalSquadResponseResponseTemplatesItemTemplateTypeSINGBOX,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ExternalSquadResponseResponseTemplatesItemTemplateType) MarshalText() ([]byte, error) {
	switch s {
	case ExternalSquadResponseResponseTemplatesItemTemplateTypeXRAYJSON:
		return []byte(s), nil
	case ExternalSquadResponseResponseTemplatesItemTemplateTypeXRAYBASE64:
		return []byte(s), nil
	case ExternalSquadResponseResponseTemplatesItemTemplateTypeMIHOMO:
		return []byte(s), nil
	case ExternalSquadResponseResponseTemplatesItemTemplateTypeSTASH:
		return []byte(s), nil
	case ExternalSquadResponseResponseTemplatesItemTemplateTypeCLASH:
		return []byte(s), nil
	case ExternalSquadResponseResponseTemplatesItemTemplateTypeSINGBOX:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ExternalSquadResponseResponseTemplatesItemTemplateType) UnmarshalText(data []byte) error {
	switch ExternalSquadResponseResponseTemplatesItemTemplateType(data) {
	case ExternalSquadResponseResponseTemplatesItemTemplateTypeXRAYJSON:
		*s = ExternalSquadResponseResponseTemplatesItemTemplateTypeXRAYJSON
		return nil
	case ExternalSquadResponseResponseTemplatesItemTemplateTypeXRAYBASE64:
		*s = ExternalSquadResponseResponseTemplatesItemTemplateTypeXRAYBASE64
		return nil
	case ExternalSquadResponseResponseTemplatesItemTemplateTypeMIHOMO:
		*s = ExternalSquadResponseResponseTemplatesItemTemplateTypeMIHOMO
		return nil
	case ExternalSquadResponseResponseTemplatesItemTemplateTypeSTASH:
		*s = ExternalSquadResponseResponseTemplatesItemTemplateTypeSTASH
		return nil
	case ExternalSquadResponseResponseTemplatesItemTemplateTypeCLASH:
		*s = ExternalSquadResponseResponseTemplatesItemTemplateTypeCLASH
		return nil
	case ExternalSquadResponseResponseTemplatesItemTemplateTypeSINGBOX:
		*s = ExternalSquadResponseResponseTemplatesItemTemplateTypeSINGBOX
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/FindAllApiTokensResponseDto
type FindAllApiTokensResponseDto struct {
	Response FindAllApiTokensResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *FindAllApiTokensResponseDto) GetResponse() FindAllApiTokensResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *FindAllApiTokensResponseDto) SetResponse(val FindAllApiTokensResponseDtoResponse) {
	s.Response = val
}

func (*FindAllApiTokensResponseDto) apiTokensControllerFindAllRes() {}

type FindAllApiTokensResponseDtoResponse struct {
	ApiKeys []FindAllApiTokensResponseDtoResponseApiKeysItem `json:"apiKeys"`
	Docs    FindAllApiTokensResponseDtoResponseDocs          `json:"docs"`
}

// GetApiKeys returns the value of ApiKeys.
func (s *FindAllApiTokensResponseDtoResponse) GetApiKeys() []FindAllApiTokensResponseDtoResponseApiKeysItem {
	return s.ApiKeys
}

// GetDocs returns the value of Docs.
func (s *FindAllApiTokensResponseDtoResponse) GetDocs() FindAllApiTokensResponseDtoResponseDocs {
	return s.Docs
}

// SetApiKeys sets the value of ApiKeys.
func (s *FindAllApiTokensResponseDtoResponse) SetApiKeys(val []FindAllApiTokensResponseDtoResponseApiKeysItem) {
	s.ApiKeys = val
}

// SetDocs sets the value of Docs.
func (s *FindAllApiTokensResponseDtoResponse) SetDocs(val FindAllApiTokensResponseDtoResponseDocs) {
	s.Docs = val
}

type FindAllApiTokensResponseDtoResponseApiKeysItem struct {
	UUID      uuid.UUID `json:"uuid"`
	Token     string    `json:"token"`
	TokenName string    `json:"tokenName"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}

// GetUUID returns the value of UUID.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetToken returns the value of Token.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) GetToken() string {
	return s.Token
}

// GetTokenName returns the value of TokenName.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) GetTokenName() string {
	return s.TokenName
}

// GetCreatedAt returns the value of CreatedAt.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetUUID sets the value of UUID.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetToken sets the value of Token.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) SetToken(val string) {
	s.Token = val
}

// SetTokenName sets the value of TokenName.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) SetTokenName(val string) {
	s.TokenName = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type FindAllApiTokensResponseDtoResponseDocs struct {
	IsDocsEnabled bool      `json:"isDocsEnabled"`
	ScalarPath    NilString `json:"scalarPath"`
	SwaggerPath   NilString `json:"swaggerPath"`
}

// GetIsDocsEnabled returns the value of IsDocsEnabled.
func (s *FindAllApiTokensResponseDtoResponseDocs) GetIsDocsEnabled() bool {
	return s.IsDocsEnabled
}

// GetScalarPath returns the value of ScalarPath.
func (s *FindAllApiTokensResponseDtoResponseDocs) GetScalarPath() NilString {
	return s.ScalarPath
}

// GetSwaggerPath returns the value of SwaggerPath.
func (s *FindAllApiTokensResponseDtoResponseDocs) GetSwaggerPath() NilString {
	return s.SwaggerPath
}

// SetIsDocsEnabled sets the value of IsDocsEnabled.
func (s *FindAllApiTokensResponseDtoResponseDocs) SetIsDocsEnabled(val bool) {
	s.IsDocsEnabled = val
}

// SetScalarPath sets the value of ScalarPath.
func (s *FindAllApiTokensResponseDtoResponseDocs) SetScalarPath(val NilString) {
	s.ScalarPath = val
}

// SetSwaggerPath sets the value of SwaggerPath.
func (s *FindAllApiTokensResponseDtoResponseDocs) SetSwaggerPath(val NilString) {
	s.SwaggerPath = val
}

// Ref: #/components/schemas/GenerateX25519ResponseDto
type GenerateX25519ResponseDto struct {
	Response GenerateX25519ResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GenerateX25519ResponseDto) GetResponse() GenerateX25519ResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GenerateX25519ResponseDto) SetResponse(val GenerateX25519ResponseDtoResponse) {
	s.Response = val
}

func (*GenerateX25519ResponseDto) systemControllerGetX25519KeypairsRes() {}

type GenerateX25519ResponseDtoResponse struct {
	Keypairs []GenerateX25519ResponseDtoResponseKeypairsItem `json:"keypairs"`
}

// GetKeypairs returns the value of Keypairs.
func (s *GenerateX25519ResponseDtoResponse) GetKeypairs() []GenerateX25519ResponseDtoResponseKeypairsItem {
	return s.Keypairs
}

// SetKeypairs sets the value of Keypairs.
func (s *GenerateX25519ResponseDtoResponse) SetKeypairs(val []GenerateX25519ResponseDtoResponseKeypairsItem) {
	s.Keypairs = val
}

type GenerateX25519ResponseDtoResponseKeypairsItem struct {
	PublicKey  string `json:"publicKey"`
	PrivateKey string `json:"privateKey"`
}

// GetPublicKey returns the value of PublicKey.
func (s *GenerateX25519ResponseDtoResponseKeypairsItem) GetPublicKey() string {
	return s.PublicKey
}

// GetPrivateKey returns the value of PrivateKey.
func (s *GenerateX25519ResponseDtoResponseKeypairsItem) GetPrivateKey() string {
	return s.PrivateKey
}

// SetPublicKey sets the value of PublicKey.
func (s *GenerateX25519ResponseDtoResponseKeypairsItem) SetPublicKey(val string) {
	s.PublicKey = val
}

// SetPrivateKey sets the value of PrivateKey.
func (s *GenerateX25519ResponseDtoResponseKeypairsItem) SetPrivateKey(val string) {
	s.PrivateKey = val
}

// Ref: #/components/schemas/GetAllHwidDevicesResponseDto
type GetAllHwidDevicesResponseDto struct {
	Response GetAllHwidDevicesResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetAllHwidDevicesResponseDto) GetResponse() GetAllHwidDevicesResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetAllHwidDevicesResponseDto) SetResponse(val GetAllHwidDevicesResponseDtoResponse) {
	s.Response = val
}

func (*GetAllHwidDevicesResponseDto) hwidUserDevicesControllerGetAllUsersRes() {}

type GetAllHwidDevicesResponseDtoResponse struct {
	Devices []GetAllHwidDevicesResponseDtoResponseDevicesItem `json:"devices"`
	Total   float64                                           `json:"total"`
}

// GetDevices returns the value of Devices.
func (s *GetAllHwidDevicesResponseDtoResponse) GetDevices() []GetAllHwidDevicesResponseDtoResponseDevicesItem {
	return s.Devices
}

// GetTotal returns the value of Total.
func (s *GetAllHwidDevicesResponseDtoResponse) GetTotal() float64 {
	return s.Total
}

// SetDevices sets the value of Devices.
func (s *GetAllHwidDevicesResponseDtoResponse) SetDevices(val []GetAllHwidDevicesResponseDtoResponseDevicesItem) {
	s.Devices = val
}

// SetTotal sets the value of Total.
func (s *GetAllHwidDevicesResponseDtoResponse) SetTotal(val float64) {
	s.Total = val
}

type GetAllHwidDevicesResponseDtoResponseDevicesItem struct {
	Hwid        string    `json:"hwid"`
	UserUuid    uuid.UUID `json:"userUuid"`
	Platform    NilString `json:"platform"`
	OsVersion   NilString `json:"osVersion"`
	DeviceModel NilString `json:"deviceModel"`
	UserAgent   NilString `json:"userAgent"`
	CreatedAt   time.Time `json:"createdAt"`
	UpdatedAt   time.Time `json:"updatedAt"`
}

// GetHwid returns the value of Hwid.
func (s *GetAllHwidDevicesResponseDtoResponseDevicesItem) GetHwid() string {
	return s.Hwid
}

// GetUserUuid returns the value of UserUuid.
func (s *GetAllHwidDevicesResponseDtoResponseDevicesItem) GetUserUuid() uuid.UUID {
	return s.UserUuid
}

// GetPlatform returns the value of Platform.
func (s *GetAllHwidDevicesResponseDtoResponseDevicesItem) GetPlatform() NilString {
	return s.Platform
}

// GetOsVersion returns the value of OsVersion.
func (s *GetAllHwidDevicesResponseDtoResponseDevicesItem) GetOsVersion() NilString {
	return s.OsVersion
}

// GetDeviceModel returns the value of DeviceModel.
func (s *GetAllHwidDevicesResponseDtoResponseDevicesItem) GetDeviceModel() NilString {
	return s.DeviceModel
}

// GetUserAgent returns the value of UserAgent.
func (s *GetAllHwidDevicesResponseDtoResponseDevicesItem) GetUserAgent() NilString {
	return s.UserAgent
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetAllHwidDevicesResponseDtoResponseDevicesItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GetAllHwidDevicesResponseDtoResponseDevicesItem) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetHwid sets the value of Hwid.
func (s *GetAllHwidDevicesResponseDtoResponseDevicesItem) SetHwid(val string) {
	s.Hwid = val
}

// SetUserUuid sets the value of UserUuid.
func (s *GetAllHwidDevicesResponseDtoResponseDevicesItem) SetUserUuid(val uuid.UUID) {
	s.UserUuid = val
}

// SetPlatform sets the value of Platform.
func (s *GetAllHwidDevicesResponseDtoResponseDevicesItem) SetPlatform(val NilString) {
	s.Platform = val
}

// SetOsVersion sets the value of OsVersion.
func (s *GetAllHwidDevicesResponseDtoResponseDevicesItem) SetOsVersion(val NilString) {
	s.OsVersion = val
}

// SetDeviceModel sets the value of DeviceModel.
func (s *GetAllHwidDevicesResponseDtoResponseDevicesItem) SetDeviceModel(val NilString) {
	s.DeviceModel = val
}

// SetUserAgent sets the value of UserAgent.
func (s *GetAllHwidDevicesResponseDtoResponseDevicesItem) SetUserAgent(val NilString) {
	s.UserAgent = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetAllHwidDevicesResponseDtoResponseDevicesItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GetAllHwidDevicesResponseDtoResponseDevicesItem) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/GetAllSubscriptionsResponseDto
type GetAllSubscriptionsResponseDto struct {
	Response GetAllSubscriptionsResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetAllSubscriptionsResponseDto) GetResponse() GetAllSubscriptionsResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetAllSubscriptionsResponseDto) SetResponse(val GetAllSubscriptionsResponseDtoResponse) {
	s.Response = val
}

func (*GetAllSubscriptionsResponseDto) subscriptionsControllerGetAllSubscriptionsRes() {}

type GetAllSubscriptionsResponseDtoResponse struct {
	Subscriptions []GetAllSubscriptionsResponseDtoResponseSubscriptionsItem `json:"subscriptions"`
	Total         float64                                                   `json:"total"`
}

// GetSubscriptions returns the value of Subscriptions.
func (s *GetAllSubscriptionsResponseDtoResponse) GetSubscriptions() []GetAllSubscriptionsResponseDtoResponseSubscriptionsItem {
	return s.Subscriptions
}

// GetTotal returns the value of Total.
func (s *GetAllSubscriptionsResponseDtoResponse) GetTotal() float64 {
	return s.Total
}

// SetSubscriptions sets the value of Subscriptions.
func (s *GetAllSubscriptionsResponseDtoResponse) SetSubscriptions(val []GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) {
	s.Subscriptions = val
}

// SetTotal sets the value of Total.
func (s *GetAllSubscriptionsResponseDtoResponse) SetTotal(val float64) {
	s.Total = val
}

type GetAllSubscriptionsResponseDtoResponseSubscriptionsItem struct {
	IsFound         bool                                                               `json:"isFound"`
	User            GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser        `json:"user"`
	Links           []string                                                           `json:"links"`
	SsConfLinks     GetAllSubscriptionsResponseDtoResponseSubscriptionsItemSsConfLinks `json:"ssConfLinks"`
	SubscriptionUrl string                                                             `json:"subscriptionUrl"`
}

// GetIsFound returns the value of IsFound.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) GetIsFound() bool {
	return s.IsFound
}

// GetUser returns the value of User.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) GetUser() GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser {
	return s.User
}

// GetLinks returns the value of Links.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) GetLinks() []string {
	return s.Links
}

// GetSsConfLinks returns the value of SsConfLinks.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) GetSsConfLinks() GetAllSubscriptionsResponseDtoResponseSubscriptionsItemSsConfLinks {
	return s.SsConfLinks
}

// GetSubscriptionUrl returns the value of SubscriptionUrl.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) GetSubscriptionUrl() string {
	return s.SubscriptionUrl
}

// SetIsFound sets the value of IsFound.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) SetIsFound(val bool) {
	s.IsFound = val
}

// SetUser sets the value of User.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) SetUser(val GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) {
	s.User = val
}

// SetLinks sets the value of Links.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) SetLinks(val []string) {
	s.Links = val
}

// SetSsConfLinks sets the value of SsConfLinks.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) SetSsConfLinks(val GetAllSubscriptionsResponseDtoResponseSubscriptionsItemSsConfLinks) {
	s.SsConfLinks = val
}

// SetSubscriptionUrl sets the value of SubscriptionUrl.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) SetSubscriptionUrl(val string) {
	s.SubscriptionUrl = val
}

type GetAllSubscriptionsResponseDtoResponseSubscriptionsItemSsConfLinks map[string]string

func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemSsConfLinks) init() GetAllSubscriptionsResponseDtoResponseSubscriptionsItemSsConfLinks {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

type GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser struct {
	ShortUuid            string                                                                          `json:"shortUuid"`
	DaysLeft             float64                                                                         `json:"daysLeft"`
	TrafficUsed          string                                                                          `json:"trafficUsed"`
	TrafficLimit         string                                                                          `json:"trafficLimit"`
	Username             string                                                                          `json:"username"`
	ExpiresAt            time.Time                                                                       `json:"expiresAt"`
	IsActive             bool                                                                            `json:"isActive"`
	UserStatus           GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus           `json:"userStatus"`
	TrafficLimitStrategy GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy `json:"trafficLimitStrategy"`
}

// GetShortUuid returns the value of ShortUuid.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) GetShortUuid() string {
	return s.ShortUuid
}

// GetDaysLeft returns the value of DaysLeft.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) GetDaysLeft() float64 {
	return s.DaysLeft
}

// GetTrafficUsed returns the value of TrafficUsed.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) GetTrafficUsed() string {
	return s.TrafficUsed
}

// GetTrafficLimit returns the value of TrafficLimit.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) GetTrafficLimit() string {
	return s.TrafficLimit
}

// GetUsername returns the value of Username.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) GetUsername() string {
	return s.Username
}

// GetExpiresAt returns the value of ExpiresAt.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) GetExpiresAt() time.Time {
	return s.ExpiresAt
}

// GetIsActive returns the value of IsActive.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) GetIsActive() bool {
	return s.IsActive
}

// GetUserStatus returns the value of UserStatus.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) GetUserStatus() GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus {
	return s.UserStatus
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) GetTrafficLimitStrategy() GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// SetShortUuid sets the value of ShortUuid.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetShortUuid(val string) {
	s.ShortUuid = val
}

// SetDaysLeft sets the value of DaysLeft.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetDaysLeft(val float64) {
	s.DaysLeft = val
}

// SetTrafficUsed sets the value of TrafficUsed.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetTrafficUsed(val string) {
	s.TrafficUsed = val
}

// SetTrafficLimit sets the value of TrafficLimit.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetTrafficLimit(val string) {
	s.TrafficLimit = val
}

// SetUsername sets the value of Username.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetUsername(val string) {
	s.Username = val
}

// SetExpiresAt sets the value of ExpiresAt.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetExpiresAt(val time.Time) {
	s.ExpiresAt = val
}

// SetIsActive sets the value of IsActive.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetIsActive(val bool) {
	s.IsActive = val
}

// SetUserStatus sets the value of UserStatus.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetUserStatus(val GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus) {
	s.UserStatus = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetTrafficLimitStrategy(val GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

type GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy string

const (
	GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyNORESET GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy = "NO_RESET"
	GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyDAY     GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy = "DAY"
	GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyWEEK    GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy = "WEEK"
	GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyMONTH   GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy = "MONTH"
)

// AllValues returns all GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy values.
func (GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy) AllValues() []GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy {
	return []GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy{
		GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyNORESET,
		GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyDAY,
		GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyWEEK,
		GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyDAY:
		return []byte(s), nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy(data) {
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyNORESET:
		*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyNORESET
		return nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyDAY:
		*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyDAY
		return nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyWEEK:
		*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyWEEK
		return nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyMONTH:
		*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus string

const (
	GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusACTIVE   GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus = "ACTIVE"
	GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusDISABLED GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus = "DISABLED"
	GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusLIMITED  GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus = "LIMITED"
	GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusEXPIRED  GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus = "EXPIRED"
)

// AllValues returns all GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus values.
func (GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus) AllValues() []GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus {
	return []GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus{
		GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusACTIVE,
		GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusDISABLED,
		GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusLIMITED,
		GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus) MarshalText() ([]byte, error) {
	switch s {
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusACTIVE:
		return []byte(s), nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusDISABLED:
		return []byte(s), nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusLIMITED:
		return []byte(s), nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus) UnmarshalText(data []byte) error {
	switch GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus(data) {
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusACTIVE:
		*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusACTIVE
		return nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusDISABLED:
		*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusDISABLED
		return nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusLIMITED:
		*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusLIMITED
		return nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusEXPIRED:
		*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/GetAllUsersResponseDto
type GetAllUsersResponseDto struct {
	Response GetAllUsersResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetAllUsersResponseDto) GetResponse() GetAllUsersResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetAllUsersResponseDto) SetResponse(val GetAllUsersResponseDtoResponse) {
	s.Response = val
}

func (*GetAllUsersResponseDto) usersControllerGetAllUsersRes() {}

type GetAllUsersResponseDtoResponse struct {
	Users []GetAllUsersResponseDtoResponseUsersItem `json:"users"`
	Total float64                                   `json:"total"`
}

// GetUsers returns the value of Users.
func (s *GetAllUsersResponseDtoResponse) GetUsers() []GetAllUsersResponseDtoResponseUsersItem {
	return s.Users
}

// GetTotal returns the value of Total.
func (s *GetAllUsersResponseDtoResponse) GetTotal() float64 {
	return s.Total
}

// SetUsers sets the value of Users.
func (s *GetAllUsersResponseDtoResponse) SetUsers(val []GetAllUsersResponseDtoResponseUsersItem) {
	s.Users = val
}

// SetTotal sets the value of Total.
func (s *GetAllUsersResponseDtoResponse) SetTotal(val float64) {
	s.Total = val
}

type GetAllUsersResponseDtoResponseUsersItem struct {
	UUID                     uuid.UUID                                        `json:"uuid"`
	ShortUuid                string                                           `json:"shortUuid"`
	Username                 string                                           `json:"username"`
	Status                   OptGetAllUsersResponseDtoResponseUsersItemStatus `json:"status"`
	UsedTrafficBytes         float64                                          `json:"usedTrafficBytes"`
	LifetimeUsedTrafficBytes float64                                          `json:"lifetimeUsedTrafficBytes"`
	TrafficLimitBytes        OptInt                                           `json:"trafficLimitBytes"`
	// Available reset periods.
	TrafficLimitStrategy   OptGetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy    `json:"trafficLimitStrategy"`
	SubLastUserAgent       NilString                                                         `json:"subLastUserAgent"`
	SubLastOpenedAt        NilDateTime                                                       `json:"subLastOpenedAt"`
	ExpireAt               time.Time                                                         `json:"expireAt"`
	OnlineAt               NilDateTime                                                       `json:"onlineAt"`
	SubRevokedAt           NilDateTime                                                       `json:"subRevokedAt"`
	LastTrafficResetAt     NilDateTime                                                       `json:"lastTrafficResetAt"`
	TrojanPassword         string                                                            `json:"trojanPassword"`
	VlessUuid              uuid.UUID                                                         `json:"vlessUuid"`
	SsPassword             string                                                            `json:"ssPassword"`
	Description            NilString                                                         `json:"description"`
	Tag                    NilString                                                         `json:"tag"`
	TelegramId             NilInt                                                            `json:"telegramId"`
	Email                  NilString                                                         `json:"email"`
	HwidDeviceLimit        NilInt                                                            `json:"hwidDeviceLimit"`
	FirstConnectedAt       NilDateTime                                                       `json:"firstConnectedAt"`
	LastTriggeredThreshold OptInt                                                            `json:"lastTriggeredThreshold"`
	CreatedAt              time.Time                                                         `json:"createdAt"`
	UpdatedAt              time.Time                                                         `json:"updatedAt"`
	ActiveInternalSquads   []GetAllUsersResponseDtoResponseUsersItemActiveInternalSquadsItem `json:"activeInternalSquads"`
	ExternalSquadUuid      NilUUID                                                           `json:"externalSquadUuid"`
	SubscriptionUrl        string                                                            `json:"subscriptionUrl"`
	LastConnectedNode      NilGetAllUsersResponseDtoResponseUsersItemLastConnectedNode       `json:"lastConnectedNode"`
	Happ                   GetAllUsersResponseDtoResponseUsersItemHapp                       `json:"happ"`
}

// GetUUID returns the value of UUID.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetShortUuid returns the value of ShortUuid.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetShortUuid() string {
	return s.ShortUuid
}

// GetUsername returns the value of Username.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetUsername() string {
	return s.Username
}

// GetStatus returns the value of Status.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetStatus() OptGetAllUsersResponseDtoResponseUsersItemStatus {
	return s.Status
}

// GetUsedTrafficBytes returns the value of UsedTrafficBytes.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetUsedTrafficBytes() float64 {
	return s.UsedTrafficBytes
}

// GetLifetimeUsedTrafficBytes returns the value of LifetimeUsedTrafficBytes.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetLifetimeUsedTrafficBytes() float64 {
	return s.LifetimeUsedTrafficBytes
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetTrafficLimitStrategy() OptGetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetSubLastUserAgent returns the value of SubLastUserAgent.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetSubLastUserAgent() NilString {
	return s.SubLastUserAgent
}

// GetSubLastOpenedAt returns the value of SubLastOpenedAt.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetSubLastOpenedAt() NilDateTime {
	return s.SubLastOpenedAt
}

// GetExpireAt returns the value of ExpireAt.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetExpireAt() time.Time {
	return s.ExpireAt
}

// GetOnlineAt returns the value of OnlineAt.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetOnlineAt() NilDateTime {
	return s.OnlineAt
}

// GetSubRevokedAt returns the value of SubRevokedAt.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetSubRevokedAt() NilDateTime {
	return s.SubRevokedAt
}

// GetLastTrafficResetAt returns the value of LastTrafficResetAt.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetLastTrafficResetAt() NilDateTime {
	return s.LastTrafficResetAt
}

// GetTrojanPassword returns the value of TrojanPassword.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetTrojanPassword() string {
	return s.TrojanPassword
}

// GetVlessUuid returns the value of VlessUuid.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetVlessUuid() uuid.UUID {
	return s.VlessUuid
}

// GetSsPassword returns the value of SsPassword.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetSsPassword() string {
	return s.SsPassword
}

// GetDescription returns the value of Description.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetDescription() NilString {
	return s.Description
}

// GetTag returns the value of Tag.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetTag() NilString {
	return s.Tag
}

// GetTelegramId returns the value of TelegramId.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetTelegramId() NilInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetEmail() NilString {
	return s.Email
}

// GetHwidDeviceLimit returns the value of HwidDeviceLimit.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetHwidDeviceLimit() NilInt {
	return s.HwidDeviceLimit
}

// GetFirstConnectedAt returns the value of FirstConnectedAt.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetFirstConnectedAt() NilDateTime {
	return s.FirstConnectedAt
}

// GetLastTriggeredThreshold returns the value of LastTriggeredThreshold.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetLastTriggeredThreshold() OptInt {
	return s.LastTriggeredThreshold
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetActiveInternalSquads returns the value of ActiveInternalSquads.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetActiveInternalSquads() []GetAllUsersResponseDtoResponseUsersItemActiveInternalSquadsItem {
	return s.ActiveInternalSquads
}

// GetExternalSquadUuid returns the value of ExternalSquadUuid.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetExternalSquadUuid() NilUUID {
	return s.ExternalSquadUuid
}

// GetSubscriptionUrl returns the value of SubscriptionUrl.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetSubscriptionUrl() string {
	return s.SubscriptionUrl
}

// GetLastConnectedNode returns the value of LastConnectedNode.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetLastConnectedNode() NilGetAllUsersResponseDtoResponseUsersItemLastConnectedNode {
	return s.LastConnectedNode
}

// GetHapp returns the value of Happ.
func (s *GetAllUsersResponseDtoResponseUsersItem) GetHapp() GetAllUsersResponseDtoResponseUsersItemHapp {
	return s.Happ
}

// SetUUID sets the value of UUID.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetShortUuid sets the value of ShortUuid.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetShortUuid(val string) {
	s.ShortUuid = val
}

// SetUsername sets the value of Username.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetUsername(val string) {
	s.Username = val
}

// SetStatus sets the value of Status.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetStatus(val OptGetAllUsersResponseDtoResponseUsersItemStatus) {
	s.Status = val
}

// SetUsedTrafficBytes sets the value of UsedTrafficBytes.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetUsedTrafficBytes(val float64) {
	s.UsedTrafficBytes = val
}

// SetLifetimeUsedTrafficBytes sets the value of LifetimeUsedTrafficBytes.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetLifetimeUsedTrafficBytes(val float64) {
	s.LifetimeUsedTrafficBytes = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetTrafficLimitStrategy(val OptGetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetSubLastUserAgent sets the value of SubLastUserAgent.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetSubLastUserAgent(val NilString) {
	s.SubLastUserAgent = val
}

// SetSubLastOpenedAt sets the value of SubLastOpenedAt.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetSubLastOpenedAt(val NilDateTime) {
	s.SubLastOpenedAt = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetExpireAt(val time.Time) {
	s.ExpireAt = val
}

// SetOnlineAt sets the value of OnlineAt.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetOnlineAt(val NilDateTime) {
	s.OnlineAt = val
}

// SetSubRevokedAt sets the value of SubRevokedAt.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetSubRevokedAt(val NilDateTime) {
	s.SubRevokedAt = val
}

// SetLastTrafficResetAt sets the value of LastTrafficResetAt.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetLastTrafficResetAt(val NilDateTime) {
	s.LastTrafficResetAt = val
}

// SetTrojanPassword sets the value of TrojanPassword.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetTrojanPassword(val string) {
	s.TrojanPassword = val
}

// SetVlessUuid sets the value of VlessUuid.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetVlessUuid(val uuid.UUID) {
	s.VlessUuid = val
}

// SetSsPassword sets the value of SsPassword.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetSsPassword(val string) {
	s.SsPassword = val
}

// SetDescription sets the value of Description.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetDescription(val NilString) {
	s.Description = val
}

// SetTag sets the value of Tag.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetTag(val NilString) {
	s.Tag = val
}

// SetTelegramId sets the value of TelegramId.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetTelegramId(val NilInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetEmail(val NilString) {
	s.Email = val
}

// SetHwidDeviceLimit sets the value of HwidDeviceLimit.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetHwidDeviceLimit(val NilInt) {
	s.HwidDeviceLimit = val
}

// SetFirstConnectedAt sets the value of FirstConnectedAt.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetFirstConnectedAt(val NilDateTime) {
	s.FirstConnectedAt = val
}

// SetLastTriggeredThreshold sets the value of LastTriggeredThreshold.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetLastTriggeredThreshold(val OptInt) {
	s.LastTriggeredThreshold = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetActiveInternalSquads sets the value of ActiveInternalSquads.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetActiveInternalSquads(val []GetAllUsersResponseDtoResponseUsersItemActiveInternalSquadsItem) {
	s.ActiveInternalSquads = val
}

// SetExternalSquadUuid sets the value of ExternalSquadUuid.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetExternalSquadUuid(val NilUUID) {
	s.ExternalSquadUuid = val
}

// SetSubscriptionUrl sets the value of SubscriptionUrl.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetSubscriptionUrl(val string) {
	s.SubscriptionUrl = val
}

// SetLastConnectedNode sets the value of LastConnectedNode.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetLastConnectedNode(val NilGetAllUsersResponseDtoResponseUsersItemLastConnectedNode) {
	s.LastConnectedNode = val
}

// SetHapp sets the value of Happ.
func (s *GetAllUsersResponseDtoResponseUsersItem) SetHapp(val GetAllUsersResponseDtoResponseUsersItemHapp) {
	s.Happ = val
}

type GetAllUsersResponseDtoResponseUsersItemActiveInternalSquadsItem struct {
	UUID uuid.UUID `json:"uuid"`
	Name string    `json:"name"`
}

// GetUUID returns the value of UUID.
func (s *GetAllUsersResponseDtoResponseUsersItemActiveInternalSquadsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *GetAllUsersResponseDtoResponseUsersItemActiveInternalSquadsItem) GetName() string {
	return s.Name
}

// SetUUID sets the value of UUID.
func (s *GetAllUsersResponseDtoResponseUsersItemActiveInternalSquadsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *GetAllUsersResponseDtoResponseUsersItemActiveInternalSquadsItem) SetName(val string) {
	s.Name = val
}

type GetAllUsersResponseDtoResponseUsersItemHapp struct {
	CryptoLink string `json:"cryptoLink"`
}

// GetCryptoLink returns the value of CryptoLink.
func (s *GetAllUsersResponseDtoResponseUsersItemHapp) GetCryptoLink() string {
	return s.CryptoLink
}

// SetCryptoLink sets the value of CryptoLink.
func (s *GetAllUsersResponseDtoResponseUsersItemHapp) SetCryptoLink(val string) {
	s.CryptoLink = val
}

type GetAllUsersResponseDtoResponseUsersItemLastConnectedNode struct {
	ConnectedAt time.Time `json:"connectedAt"`
	NodeName    string    `json:"nodeName"`
	CountryCode string    `json:"countryCode"`
}

// GetConnectedAt returns the value of ConnectedAt.
func (s *GetAllUsersResponseDtoResponseUsersItemLastConnectedNode) GetConnectedAt() time.Time {
	return s.ConnectedAt
}

// GetNodeName returns the value of NodeName.
func (s *GetAllUsersResponseDtoResponseUsersItemLastConnectedNode) GetNodeName() string {
	return s.NodeName
}

// GetCountryCode returns the value of CountryCode.
func (s *GetAllUsersResponseDtoResponseUsersItemLastConnectedNode) GetCountryCode() string {
	return s.CountryCode
}

// SetConnectedAt sets the value of ConnectedAt.
func (s *GetAllUsersResponseDtoResponseUsersItemLastConnectedNode) SetConnectedAt(val time.Time) {
	s.ConnectedAt = val
}

// SetNodeName sets the value of NodeName.
func (s *GetAllUsersResponseDtoResponseUsersItemLastConnectedNode) SetNodeName(val string) {
	s.NodeName = val
}

// SetCountryCode sets the value of CountryCode.
func (s *GetAllUsersResponseDtoResponseUsersItemLastConnectedNode) SetCountryCode(val string) {
	s.CountryCode = val
}

type GetAllUsersResponseDtoResponseUsersItemStatus string

const (
	GetAllUsersResponseDtoResponseUsersItemStatusACTIVE   GetAllUsersResponseDtoResponseUsersItemStatus = "ACTIVE"
	GetAllUsersResponseDtoResponseUsersItemStatusDISABLED GetAllUsersResponseDtoResponseUsersItemStatus = "DISABLED"
	GetAllUsersResponseDtoResponseUsersItemStatusLIMITED  GetAllUsersResponseDtoResponseUsersItemStatus = "LIMITED"
	GetAllUsersResponseDtoResponseUsersItemStatusEXPIRED  GetAllUsersResponseDtoResponseUsersItemStatus = "EXPIRED"
)

// AllValues returns all GetAllUsersResponseDtoResponseUsersItemStatus values.
func (GetAllUsersResponseDtoResponseUsersItemStatus) AllValues() []GetAllUsersResponseDtoResponseUsersItemStatus {
	return []GetAllUsersResponseDtoResponseUsersItemStatus{
		GetAllUsersResponseDtoResponseUsersItemStatusACTIVE,
		GetAllUsersResponseDtoResponseUsersItemStatusDISABLED,
		GetAllUsersResponseDtoResponseUsersItemStatusLIMITED,
		GetAllUsersResponseDtoResponseUsersItemStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetAllUsersResponseDtoResponseUsersItemStatus) MarshalText() ([]byte, error) {
	switch s {
	case GetAllUsersResponseDtoResponseUsersItemStatusACTIVE:
		return []byte(s), nil
	case GetAllUsersResponseDtoResponseUsersItemStatusDISABLED:
		return []byte(s), nil
	case GetAllUsersResponseDtoResponseUsersItemStatusLIMITED:
		return []byte(s), nil
	case GetAllUsersResponseDtoResponseUsersItemStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetAllUsersResponseDtoResponseUsersItemStatus) UnmarshalText(data []byte) error {
	switch GetAllUsersResponseDtoResponseUsersItemStatus(data) {
	case GetAllUsersResponseDtoResponseUsersItemStatusACTIVE:
		*s = GetAllUsersResponseDtoResponseUsersItemStatusACTIVE
		return nil
	case GetAllUsersResponseDtoResponseUsersItemStatusDISABLED:
		*s = GetAllUsersResponseDtoResponseUsersItemStatusDISABLED
		return nil
	case GetAllUsersResponseDtoResponseUsersItemStatusLIMITED:
		*s = GetAllUsersResponseDtoResponseUsersItemStatusLIMITED
		return nil
	case GetAllUsersResponseDtoResponseUsersItemStatusEXPIRED:
		*s = GetAllUsersResponseDtoResponseUsersItemStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Available reset periods.
type GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy string

const (
	GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyNORESET GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy = "NO_RESET"
	GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyDAY     GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy = "DAY"
	GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyWEEK    GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy = "WEEK"
	GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyMONTH   GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy = "MONTH"
)

// AllValues returns all GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy values.
func (GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy) AllValues() []GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy {
	return []GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy{
		GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyNORESET,
		GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyDAY,
		GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyWEEK,
		GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyDAY:
		return []byte(s), nil
	case GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy(data) {
	case GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyNORESET:
		*s = GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyNORESET
		return nil
	case GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyDAY:
		*s = GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyDAY
		return nil
	case GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyWEEK:
		*s = GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyWEEK
		return nil
	case GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyMONTH:
		*s = GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/GetBandwidthStatsResponseDto
type GetBandwidthStatsResponseDto struct {
	Response GetBandwidthStatsResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetBandwidthStatsResponseDto) GetResponse() GetBandwidthStatsResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetBandwidthStatsResponseDto) SetResponse(val GetBandwidthStatsResponseDtoResponse) {
	s.Response = val
}

func (*GetBandwidthStatsResponseDto) systemControllerGetBandwidthStatsRes() {}

type GetBandwidthStatsResponseDtoResponse struct {
	BandwidthLastTwoDays   GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays   `json:"bandwidthLastTwoDays"`
	BandwidthLastSevenDays GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays `json:"bandwidthLastSevenDays"`
	BandwidthLast30Days    GetBandwidthStatsResponseDtoResponseBandwidthLast30Days    `json:"bandwidthLast30Days"`
	BandwidthCalendarMonth GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth `json:"bandwidthCalendarMonth"`
	BandwidthCurrentYear   GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear   `json:"bandwidthCurrentYear"`
}

// GetBandwidthLastTwoDays returns the value of BandwidthLastTwoDays.
func (s *GetBandwidthStatsResponseDtoResponse) GetBandwidthLastTwoDays() GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays {
	return s.BandwidthLastTwoDays
}

// GetBandwidthLastSevenDays returns the value of BandwidthLastSevenDays.
func (s *GetBandwidthStatsResponseDtoResponse) GetBandwidthLastSevenDays() GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays {
	return s.BandwidthLastSevenDays
}

// GetBandwidthLast30Days returns the value of BandwidthLast30Days.
func (s *GetBandwidthStatsResponseDtoResponse) GetBandwidthLast30Days() GetBandwidthStatsResponseDtoResponseBandwidthLast30Days {
	return s.BandwidthLast30Days
}

// GetBandwidthCalendarMonth returns the value of BandwidthCalendarMonth.
func (s *GetBandwidthStatsResponseDtoResponse) GetBandwidthCalendarMonth() GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth {
	return s.BandwidthCalendarMonth
}

// GetBandwidthCurrentYear returns the value of BandwidthCurrentYear.
func (s *GetBandwidthStatsResponseDtoResponse) GetBandwidthCurrentYear() GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear {
	return s.BandwidthCurrentYear
}

// SetBandwidthLastTwoDays sets the value of BandwidthLastTwoDays.
func (s *GetBandwidthStatsResponseDtoResponse) SetBandwidthLastTwoDays(val GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays) {
	s.BandwidthLastTwoDays = val
}

// SetBandwidthLastSevenDays sets the value of BandwidthLastSevenDays.
func (s *GetBandwidthStatsResponseDtoResponse) SetBandwidthLastSevenDays(val GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays) {
	s.BandwidthLastSevenDays = val
}

// SetBandwidthLast30Days sets the value of BandwidthLast30Days.
func (s *GetBandwidthStatsResponseDtoResponse) SetBandwidthLast30Days(val GetBandwidthStatsResponseDtoResponseBandwidthLast30Days) {
	s.BandwidthLast30Days = val
}

// SetBandwidthCalendarMonth sets the value of BandwidthCalendarMonth.
func (s *GetBandwidthStatsResponseDtoResponse) SetBandwidthCalendarMonth(val GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth) {
	s.BandwidthCalendarMonth = val
}

// SetBandwidthCurrentYear sets the value of BandwidthCurrentYear.
func (s *GetBandwidthStatsResponseDtoResponse) SetBandwidthCurrentYear(val GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear) {
	s.BandwidthCurrentYear = val
}

type GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth struct {
	Current    string `json:"current"`
	Previous   string `json:"previous"`
	Difference string `json:"difference"`
}

// GetCurrent returns the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth) GetCurrent() string {
	return s.Current
}

// GetPrevious returns the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth) GetPrevious() string {
	return s.Previous
}

// GetDifference returns the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth) GetDifference() string {
	return s.Difference
}

// SetCurrent sets the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth) SetCurrent(val string) {
	s.Current = val
}

// SetPrevious sets the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth) SetPrevious(val string) {
	s.Previous = val
}

// SetDifference sets the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth) SetDifference(val string) {
	s.Difference = val
}

type GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear struct {
	Current    string `json:"current"`
	Previous   string `json:"previous"`
	Difference string `json:"difference"`
}

// GetCurrent returns the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear) GetCurrent() string {
	return s.Current
}

// GetPrevious returns the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear) GetPrevious() string {
	return s.Previous
}

// GetDifference returns the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear) GetDifference() string {
	return s.Difference
}

// SetCurrent sets the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear) SetCurrent(val string) {
	s.Current = val
}

// SetPrevious sets the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear) SetPrevious(val string) {
	s.Previous = val
}

// SetDifference sets the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear) SetDifference(val string) {
	s.Difference = val
}

type GetBandwidthStatsResponseDtoResponseBandwidthLast30Days struct {
	Current    string `json:"current"`
	Previous   string `json:"previous"`
	Difference string `json:"difference"`
}

// GetCurrent returns the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLast30Days) GetCurrent() string {
	return s.Current
}

// GetPrevious returns the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLast30Days) GetPrevious() string {
	return s.Previous
}

// GetDifference returns the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLast30Days) GetDifference() string {
	return s.Difference
}

// SetCurrent sets the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLast30Days) SetCurrent(val string) {
	s.Current = val
}

// SetPrevious sets the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLast30Days) SetPrevious(val string) {
	s.Previous = val
}

// SetDifference sets the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLast30Days) SetDifference(val string) {
	s.Difference = val
}

type GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays struct {
	Current    string `json:"current"`
	Previous   string `json:"previous"`
	Difference string `json:"difference"`
}

// GetCurrent returns the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays) GetCurrent() string {
	return s.Current
}

// GetPrevious returns the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays) GetPrevious() string {
	return s.Previous
}

// GetDifference returns the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays) GetDifference() string {
	return s.Difference
}

// SetCurrent sets the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays) SetCurrent(val string) {
	s.Current = val
}

// SetPrevious sets the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays) SetPrevious(val string) {
	s.Previous = val
}

// SetDifference sets the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays) SetDifference(val string) {
	s.Difference = val
}

type GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays struct {
	Current    string `json:"current"`
	Previous   string `json:"previous"`
	Difference string `json:"difference"`
}

// GetCurrent returns the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays) GetCurrent() string {
	return s.Current
}

// GetPrevious returns the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays) GetPrevious() string {
	return s.Previous
}

// GetDifference returns the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays) GetDifference() string {
	return s.Difference
}

// SetCurrent sets the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays) SetCurrent(val string) {
	s.Current = val
}

// SetPrevious sets the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays) SetPrevious(val string) {
	s.Previous = val
}

// SetDifference sets the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays) SetDifference(val string) {
	s.Difference = val
}

// Ref: #/components/schemas/GetConfigProfilesResponseDto
type GetConfigProfilesResponseDto struct {
	Response GetConfigProfilesResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetConfigProfilesResponseDto) GetResponse() GetConfigProfilesResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetConfigProfilesResponseDto) SetResponse(val GetConfigProfilesResponseDtoResponse) {
	s.Response = val
}

func (*GetConfigProfilesResponseDto) configProfileControllerGetConfigProfilesRes() {}

type GetConfigProfilesResponseDtoResponse struct {
	Total          float64                                                  `json:"total"`
	ConfigProfiles []GetConfigProfilesResponseDtoResponseConfigProfilesItem `json:"configProfiles"`
}

// GetTotal returns the value of Total.
func (s *GetConfigProfilesResponseDtoResponse) GetTotal() float64 {
	return s.Total
}

// GetConfigProfiles returns the value of ConfigProfiles.
func (s *GetConfigProfilesResponseDtoResponse) GetConfigProfiles() []GetConfigProfilesResponseDtoResponseConfigProfilesItem {
	return s.ConfigProfiles
}

// SetTotal sets the value of Total.
func (s *GetConfigProfilesResponseDtoResponse) SetTotal(val float64) {
	s.Total = val
}

// SetConfigProfiles sets the value of ConfigProfiles.
func (s *GetConfigProfilesResponseDtoResponse) SetConfigProfiles(val []GetConfigProfilesResponseDtoResponseConfigProfilesItem) {
	s.ConfigProfiles = val
}

type GetConfigProfilesResponseDtoResponseConfigProfilesItem struct {
	UUID      uuid.UUID                                                            `json:"uuid"`
	Name      string                                                               `json:"name"`
	Config    jx.Raw                                                               `json:"config"`
	Inbounds  []GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem `json:"inbounds"`
	Nodes     []GetConfigProfilesResponseDtoResponseConfigProfilesItemNodesItem    `json:"nodes"`
	CreatedAt time.Time                                                            `json:"createdAt"`
	UpdatedAt time.Time                                                            `json:"updatedAt"`
}

// GetUUID returns the value of UUID.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItem) GetName() string {
	return s.Name
}

// GetConfig returns the value of Config.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItem) GetConfig() jx.Raw {
	return s.Config
}

// GetInbounds returns the value of Inbounds.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItem) GetInbounds() []GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem {
	return s.Inbounds
}

// GetNodes returns the value of Nodes.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItem) GetNodes() []GetConfigProfilesResponseDtoResponseConfigProfilesItemNodesItem {
	return s.Nodes
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItem) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetUUID sets the value of UUID.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItem) SetName(val string) {
	s.Name = val
}

// SetConfig sets the value of Config.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItem) SetConfig(val jx.Raw) {
	s.Config = val
}

// SetInbounds sets the value of Inbounds.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItem) SetInbounds(val []GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem) {
	s.Inbounds = val
}

// SetNodes sets the value of Nodes.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItem) SetNodes(val []GetConfigProfilesResponseDtoResponseConfigProfilesItemNodesItem) {
	s.Nodes = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItem) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem struct {
	UUID        uuid.UUID  `json:"uuid"`
	ProfileUuid uuid.UUID  `json:"profileUuid"`
	Tag         string     `json:"tag"`
	Type        string     `json:"type"`
	Network     NilString  `json:"network"`
	Security    NilString  `json:"security"`
	Port        NilFloat64 `json:"port"`
	RawInbound  jx.Raw     `json:"rawInbound"`
}

// GetUUID returns the value of UUID.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetProfileUuid returns the value of ProfileUuid.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem) GetProfileUuid() uuid.UUID {
	return s.ProfileUuid
}

// GetTag returns the value of Tag.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem) GetSecurity() NilString {
	return s.Security
}

// GetPort returns the value of Port.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem) GetPort() NilFloat64 {
	return s.Port
}

// GetRawInbound returns the value of RawInbound.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem) GetRawInbound() jx.Raw {
	return s.RawInbound
}

// SetUUID sets the value of UUID.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetProfileUuid sets the value of ProfileUuid.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem) SetProfileUuid(val uuid.UUID) {
	s.ProfileUuid = val
}

// SetTag sets the value of Tag.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

// SetPort sets the value of Port.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem) SetPort(val NilFloat64) {
	s.Port = val
}

// SetRawInbound sets the value of RawInbound.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemInboundsItem) SetRawInbound(val jx.Raw) {
	s.RawInbound = val
}

type GetConfigProfilesResponseDtoResponseConfigProfilesItemNodesItem struct {
	UUID        uuid.UUID `json:"uuid"`
	Name        string    `json:"name"`
	CountryCode string    `json:"countryCode"`
}

// GetUUID returns the value of UUID.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemNodesItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemNodesItem) GetName() string {
	return s.Name
}

// GetCountryCode returns the value of CountryCode.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemNodesItem) GetCountryCode() string {
	return s.CountryCode
}

// SetUUID sets the value of UUID.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemNodesItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemNodesItem) SetName(val string) {
	s.Name = val
}

// SetCountryCode sets the value of CountryCode.
func (s *GetConfigProfilesResponseDtoResponseConfigProfilesItemNodesItem) SetCountryCode(val string) {
	s.CountryCode = val
}

// Ref: #/components/schemas/GetExternalSquadsResponseDto
type GetExternalSquadsResponseDto struct {
	Response GetExternalSquadsResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetExternalSquadsResponseDto) GetResponse() GetExternalSquadsResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetExternalSquadsResponseDto) SetResponse(val GetExternalSquadsResponseDtoResponse) {
	s.Response = val
}

func (*GetExternalSquadsResponseDto) externalSquadControllerGetExternalSquadsRes() {}

type GetExternalSquadsResponseDtoResponse struct {
	Total          float64                                                  `json:"total"`
	ExternalSquads []GetExternalSquadsResponseDtoResponseExternalSquadsItem `json:"externalSquads"`
}

// GetTotal returns the value of Total.
func (s *GetExternalSquadsResponseDtoResponse) GetTotal() float64 {
	return s.Total
}

// GetExternalSquads returns the value of ExternalSquads.
func (s *GetExternalSquadsResponseDtoResponse) GetExternalSquads() []GetExternalSquadsResponseDtoResponseExternalSquadsItem {
	return s.ExternalSquads
}

// SetTotal sets the value of Total.
func (s *GetExternalSquadsResponseDtoResponse) SetTotal(val float64) {
	s.Total = val
}

// SetExternalSquads sets the value of ExternalSquads.
func (s *GetExternalSquadsResponseDtoResponse) SetExternalSquads(val []GetExternalSquadsResponseDtoResponseExternalSquadsItem) {
	s.ExternalSquads = val
}

type GetExternalSquadsResponseDtoResponseExternalSquadsItem struct {
	UUID                 uuid.UUID                                                                     `json:"uuid"`
	Name                 string                                                                        `json:"name"`
	Info                 GetExternalSquadsResponseDtoResponseExternalSquadsItemInfo                    `json:"info"`
	Templates            []GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItem         `json:"templates"`
	SubscriptionSettings NilGetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings `json:"subscriptionSettings"`
	CreatedAt            time.Time                                                                     `json:"createdAt"`
	UpdatedAt            time.Time                                                                     `json:"updatedAt"`
}

// GetUUID returns the value of UUID.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItem) GetName() string {
	return s.Name
}

// GetInfo returns the value of Info.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItem) GetInfo() GetExternalSquadsResponseDtoResponseExternalSquadsItemInfo {
	return s.Info
}

// GetTemplates returns the value of Templates.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItem) GetTemplates() []GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItem {
	return s.Templates
}

// GetSubscriptionSettings returns the value of SubscriptionSettings.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItem) GetSubscriptionSettings() NilGetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings {
	return s.SubscriptionSettings
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItem) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetUUID sets the value of UUID.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItem) SetName(val string) {
	s.Name = val
}

// SetInfo sets the value of Info.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItem) SetInfo(val GetExternalSquadsResponseDtoResponseExternalSquadsItemInfo) {
	s.Info = val
}

// SetTemplates sets the value of Templates.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItem) SetTemplates(val []GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItem) {
	s.Templates = val
}

// SetSubscriptionSettings sets the value of SubscriptionSettings.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItem) SetSubscriptionSettings(val NilGetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) {
	s.SubscriptionSettings = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItem) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type GetExternalSquadsResponseDtoResponseExternalSquadsItemInfo struct {
	MembersCount float64 `json:"membersCount"`
}

// GetMembersCount returns the value of MembersCount.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemInfo) GetMembersCount() float64 {
	return s.MembersCount
}

// SetMembersCount sets the value of MembersCount.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemInfo) SetMembersCount(val float64) {
	s.MembersCount = val
}

type GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings struct {
	ProfileTitle                  OptString    `json:"profileTitle"`
	SupportLink                   OptString    `json:"supportLink"`
	ProfileUpdateInterval         OptInt       `json:"profileUpdateInterval"`
	IsProfileWebpageUrlEnabled    OptBool      `json:"isProfileWebpageUrlEnabled"`
	ServeJsonAtBaseSubscription   OptBool      `json:"serveJsonAtBaseSubscription"`
	AddUsernameToBaseSubscription OptBool      `json:"addUsernameToBaseSubscription"`
	IsShowCustomRemarks           OptBool      `json:"isShowCustomRemarks"`
	HappAnnounce                  OptNilString `json:"happAnnounce"`
	HappRouting                   OptNilString `json:"happRouting"`
	RandomizeHosts                OptBool      `json:"randomizeHosts"`
}

// GetProfileTitle returns the value of ProfileTitle.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) GetProfileTitle() OptString {
	return s.ProfileTitle
}

// GetSupportLink returns the value of SupportLink.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) GetSupportLink() OptString {
	return s.SupportLink
}

// GetProfileUpdateInterval returns the value of ProfileUpdateInterval.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) GetProfileUpdateInterval() OptInt {
	return s.ProfileUpdateInterval
}

// GetIsProfileWebpageUrlEnabled returns the value of IsProfileWebpageUrlEnabled.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) GetIsProfileWebpageUrlEnabled() OptBool {
	return s.IsProfileWebpageUrlEnabled
}

// GetServeJsonAtBaseSubscription returns the value of ServeJsonAtBaseSubscription.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) GetServeJsonAtBaseSubscription() OptBool {
	return s.ServeJsonAtBaseSubscription
}

// GetAddUsernameToBaseSubscription returns the value of AddUsernameToBaseSubscription.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) GetAddUsernameToBaseSubscription() OptBool {
	return s.AddUsernameToBaseSubscription
}

// GetIsShowCustomRemarks returns the value of IsShowCustomRemarks.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) GetIsShowCustomRemarks() OptBool {
	return s.IsShowCustomRemarks
}

// GetHappAnnounce returns the value of HappAnnounce.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) GetHappAnnounce() OptNilString {
	return s.HappAnnounce
}

// GetHappRouting returns the value of HappRouting.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) GetHappRouting() OptNilString {
	return s.HappRouting
}

// GetRandomizeHosts returns the value of RandomizeHosts.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) GetRandomizeHosts() OptBool {
	return s.RandomizeHosts
}

// SetProfileTitle sets the value of ProfileTitle.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) SetProfileTitle(val OptString) {
	s.ProfileTitle = val
}

// SetSupportLink sets the value of SupportLink.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) SetSupportLink(val OptString) {
	s.SupportLink = val
}

// SetProfileUpdateInterval sets the value of ProfileUpdateInterval.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) SetProfileUpdateInterval(val OptInt) {
	s.ProfileUpdateInterval = val
}

// SetIsProfileWebpageUrlEnabled sets the value of IsProfileWebpageUrlEnabled.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) SetIsProfileWebpageUrlEnabled(val OptBool) {
	s.IsProfileWebpageUrlEnabled = val
}

// SetServeJsonAtBaseSubscription sets the value of ServeJsonAtBaseSubscription.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) SetServeJsonAtBaseSubscription(val OptBool) {
	s.ServeJsonAtBaseSubscription = val
}

// SetAddUsernameToBaseSubscription sets the value of AddUsernameToBaseSubscription.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) SetAddUsernameToBaseSubscription(val OptBool) {
	s.AddUsernameToBaseSubscription = val
}

// SetIsShowCustomRemarks sets the value of IsShowCustomRemarks.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) SetIsShowCustomRemarks(val OptBool) {
	s.IsShowCustomRemarks = val
}

// SetHappAnnounce sets the value of HappAnnounce.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) SetHappAnnounce(val OptNilString) {
	s.HappAnnounce = val
}

// SetHappRouting sets the value of HappRouting.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) SetHappRouting(val OptNilString) {
	s.HappRouting = val
}

// SetRandomizeHosts sets the value of RandomizeHosts.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) SetRandomizeHosts(val OptBool) {
	s.RandomizeHosts = val
}

type GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItem struct {
	TemplateUuid uuid.UUID                                                                       `json:"templateUuid"`
	TemplateType GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateType `json:"templateType"`
}

// GetTemplateUuid returns the value of TemplateUuid.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItem) GetTemplateUuid() uuid.UUID {
	return s.TemplateUuid
}

// GetTemplateType returns the value of TemplateType.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItem) GetTemplateType() GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateType {
	return s.TemplateType
}

// SetTemplateUuid sets the value of TemplateUuid.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItem) SetTemplateUuid(val uuid.UUID) {
	s.TemplateUuid = val
}

// SetTemplateType sets the value of TemplateType.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItem) SetTemplateType(val GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateType) {
	s.TemplateType = val
}

type GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateType string

const (
	GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeXRAYJSON   GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateType = "XRAY_JSON"
	GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeXRAYBASE64 GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateType = "XRAY_BASE64"
	GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeMIHOMO     GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateType = "MIHOMO"
	GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeSTASH      GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateType = "STASH"
	GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeCLASH      GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateType = "CLASH"
	GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeSINGBOX    GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateType = "SINGBOX"
)

// AllValues returns all GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateType values.
func (GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateType) AllValues() []GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateType {
	return []GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateType{
		GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeXRAYJSON,
		GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeXRAYBASE64,
		GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeMIHOMO,
		GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeSTASH,
		GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeCLASH,
		GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeSINGBOX,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateType) MarshalText() ([]byte, error) {
	switch s {
	case GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeXRAYJSON:
		return []byte(s), nil
	case GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeXRAYBASE64:
		return []byte(s), nil
	case GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeMIHOMO:
		return []byte(s), nil
	case GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeSTASH:
		return []byte(s), nil
	case GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeCLASH:
		return []byte(s), nil
	case GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeSINGBOX:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateType) UnmarshalText(data []byte) error {
	switch GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateType(data) {
	case GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeXRAYJSON:
		*s = GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeXRAYJSON
		return nil
	case GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeXRAYBASE64:
		*s = GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeXRAYBASE64
		return nil
	case GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeMIHOMO:
		*s = GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeMIHOMO
		return nil
	case GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeSTASH:
		*s = GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeSTASH
		return nil
	case GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeCLASH:
		*s = GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeCLASH
		return nil
	case GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeSINGBOX:
		*s = GetExternalSquadsResponseDtoResponseExternalSquadsItemTemplatesItemTemplateTypeSINGBOX
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/GetHwidDevicesStatsResponseDto
type GetHwidDevicesStatsResponseDto struct {
	Response GetHwidDevicesStatsResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetHwidDevicesStatsResponseDto) GetResponse() GetHwidDevicesStatsResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetHwidDevicesStatsResponseDto) SetResponse(val GetHwidDevicesStatsResponseDtoResponse) {
	s.Response = val
}

func (*GetHwidDevicesStatsResponseDto) hwidUserDevicesControllerGetHwidDevicesStatsRes() {}

type GetHwidDevicesStatsResponseDtoResponse struct {
	ByPlatform []GetHwidDevicesStatsResponseDtoResponseByPlatformItem `json:"byPlatform"`
	ByApp      []GetHwidDevicesStatsResponseDtoResponseByAppItem      `json:"byApp"`
	Stats      GetHwidDevicesStatsResponseDtoResponseStats            `json:"stats"`
}

// GetByPlatform returns the value of ByPlatform.
func (s *GetHwidDevicesStatsResponseDtoResponse) GetByPlatform() []GetHwidDevicesStatsResponseDtoResponseByPlatformItem {
	return s.ByPlatform
}

// GetByApp returns the value of ByApp.
func (s *GetHwidDevicesStatsResponseDtoResponse) GetByApp() []GetHwidDevicesStatsResponseDtoResponseByAppItem {
	return s.ByApp
}

// GetStats returns the value of Stats.
func (s *GetHwidDevicesStatsResponseDtoResponse) GetStats() GetHwidDevicesStatsResponseDtoResponseStats {
	return s.Stats
}

// SetByPlatform sets the value of ByPlatform.
func (s *GetHwidDevicesStatsResponseDtoResponse) SetByPlatform(val []GetHwidDevicesStatsResponseDtoResponseByPlatformItem) {
	s.ByPlatform = val
}

// SetByApp sets the value of ByApp.
func (s *GetHwidDevicesStatsResponseDtoResponse) SetByApp(val []GetHwidDevicesStatsResponseDtoResponseByAppItem) {
	s.ByApp = val
}

// SetStats sets the value of Stats.
func (s *GetHwidDevicesStatsResponseDtoResponse) SetStats(val GetHwidDevicesStatsResponseDtoResponseStats) {
	s.Stats = val
}

type GetHwidDevicesStatsResponseDtoResponseByAppItem struct {
	App   string  `json:"app"`
	Count float64 `json:"count"`
}

// GetApp returns the value of App.
func (s *GetHwidDevicesStatsResponseDtoResponseByAppItem) GetApp() string {
	return s.App
}

// GetCount returns the value of Count.
func (s *GetHwidDevicesStatsResponseDtoResponseByAppItem) GetCount() float64 {
	return s.Count
}

// SetApp sets the value of App.
func (s *GetHwidDevicesStatsResponseDtoResponseByAppItem) SetApp(val string) {
	s.App = val
}

// SetCount sets the value of Count.
func (s *GetHwidDevicesStatsResponseDtoResponseByAppItem) SetCount(val float64) {
	s.Count = val
}

type GetHwidDevicesStatsResponseDtoResponseByPlatformItem struct {
	Platform string  `json:"platform"`
	Count    float64 `json:"count"`
}

// GetPlatform returns the value of Platform.
func (s *GetHwidDevicesStatsResponseDtoResponseByPlatformItem) GetPlatform() string {
	return s.Platform
}

// GetCount returns the value of Count.
func (s *GetHwidDevicesStatsResponseDtoResponseByPlatformItem) GetCount() float64 {
	return s.Count
}

// SetPlatform sets the value of Platform.
func (s *GetHwidDevicesStatsResponseDtoResponseByPlatformItem) SetPlatform(val string) {
	s.Platform = val
}

// SetCount sets the value of Count.
func (s *GetHwidDevicesStatsResponseDtoResponseByPlatformItem) SetCount(val float64) {
	s.Count = val
}

type GetHwidDevicesStatsResponseDtoResponseStats struct {
	TotalUniqueDevices        float64 `json:"totalUniqueDevices"`
	TotalHwidDevices          float64 `json:"totalHwidDevices"`
	AverageHwidDevicesPerUser float64 `json:"averageHwidDevicesPerUser"`
}

// GetTotalUniqueDevices returns the value of TotalUniqueDevices.
func (s *GetHwidDevicesStatsResponseDtoResponseStats) GetTotalUniqueDevices() float64 {
	return s.TotalUniqueDevices
}

// GetTotalHwidDevices returns the value of TotalHwidDevices.
func (s *GetHwidDevicesStatsResponseDtoResponseStats) GetTotalHwidDevices() float64 {
	return s.TotalHwidDevices
}

// GetAverageHwidDevicesPerUser returns the value of AverageHwidDevicesPerUser.
func (s *GetHwidDevicesStatsResponseDtoResponseStats) GetAverageHwidDevicesPerUser() float64 {
	return s.AverageHwidDevicesPerUser
}

// SetTotalUniqueDevices sets the value of TotalUniqueDevices.
func (s *GetHwidDevicesStatsResponseDtoResponseStats) SetTotalUniqueDevices(val float64) {
	s.TotalUniqueDevices = val
}

// SetTotalHwidDevices sets the value of TotalHwidDevices.
func (s *GetHwidDevicesStatsResponseDtoResponseStats) SetTotalHwidDevices(val float64) {
	s.TotalHwidDevices = val
}

// SetAverageHwidDevicesPerUser sets the value of AverageHwidDevicesPerUser.
func (s *GetHwidDevicesStatsResponseDtoResponseStats) SetAverageHwidDevicesPerUser(val float64) {
	s.AverageHwidDevicesPerUser = val
}

// Ref: #/components/schemas/GetInfraProvidersResponseDto
type GetInfraProvidersResponseDto struct {
	Response GetInfraProvidersResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetInfraProvidersResponseDto) GetResponse() GetInfraProvidersResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetInfraProvidersResponseDto) SetResponse(val GetInfraProvidersResponseDtoResponse) {
	s.Response = val
}

func (*GetInfraProvidersResponseDto) infraBillingControllerGetInfraProvidersRes() {}

type GetInfraProvidersResponseDtoResponse struct {
	Total     float64                                             `json:"total"`
	Providers []GetInfraProvidersResponseDtoResponseProvidersItem `json:"providers"`
}

// GetTotal returns the value of Total.
func (s *GetInfraProvidersResponseDtoResponse) GetTotal() float64 {
	return s.Total
}

// GetProviders returns the value of Providers.
func (s *GetInfraProvidersResponseDtoResponse) GetProviders() []GetInfraProvidersResponseDtoResponseProvidersItem {
	return s.Providers
}

// SetTotal sets the value of Total.
func (s *GetInfraProvidersResponseDtoResponse) SetTotal(val float64) {
	s.Total = val
}

// SetProviders sets the value of Providers.
func (s *GetInfraProvidersResponseDtoResponse) SetProviders(val []GetInfraProvidersResponseDtoResponseProvidersItem) {
	s.Providers = val
}

type GetInfraProvidersResponseDtoResponseProvidersItem struct {
	UUID           uuid.UUID                                                           `json:"uuid"`
	Name           string                                                              `json:"name"`
	FaviconLink    NilString                                                           `json:"faviconLink"`
	LoginUrl       NilString                                                           `json:"loginUrl"`
	CreatedAt      time.Time                                                           `json:"createdAt"`
	UpdatedAt      time.Time                                                           `json:"updatedAt"`
	BillingHistory GetInfraProvidersResponseDtoResponseProvidersItemBillingHistory     `json:"billingHistory"`
	BillingNodes   []GetInfraProvidersResponseDtoResponseProvidersItemBillingNodesItem `json:"billingNodes"`
}

// GetUUID returns the value of UUID.
func (s *GetInfraProvidersResponseDtoResponseProvidersItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *GetInfraProvidersResponseDtoResponseProvidersItem) GetName() string {
	return s.Name
}

// GetFaviconLink returns the value of FaviconLink.
func (s *GetInfraProvidersResponseDtoResponseProvidersItem) GetFaviconLink() NilString {
	return s.FaviconLink
}

// GetLoginUrl returns the value of LoginUrl.
func (s *GetInfraProvidersResponseDtoResponseProvidersItem) GetLoginUrl() NilString {
	return s.LoginUrl
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetInfraProvidersResponseDtoResponseProvidersItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GetInfraProvidersResponseDtoResponseProvidersItem) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetBillingHistory returns the value of BillingHistory.
func (s *GetInfraProvidersResponseDtoResponseProvidersItem) GetBillingHistory() GetInfraProvidersResponseDtoResponseProvidersItemBillingHistory {
	return s.BillingHistory
}

// GetBillingNodes returns the value of BillingNodes.
func (s *GetInfraProvidersResponseDtoResponseProvidersItem) GetBillingNodes() []GetInfraProvidersResponseDtoResponseProvidersItemBillingNodesItem {
	return s.BillingNodes
}

// SetUUID sets the value of UUID.
func (s *GetInfraProvidersResponseDtoResponseProvidersItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *GetInfraProvidersResponseDtoResponseProvidersItem) SetName(val string) {
	s.Name = val
}

// SetFaviconLink sets the value of FaviconLink.
func (s *GetInfraProvidersResponseDtoResponseProvidersItem) SetFaviconLink(val NilString) {
	s.FaviconLink = val
}

// SetLoginUrl sets the value of LoginUrl.
func (s *GetInfraProvidersResponseDtoResponseProvidersItem) SetLoginUrl(val NilString) {
	s.LoginUrl = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetInfraProvidersResponseDtoResponseProvidersItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GetInfraProvidersResponseDtoResponseProvidersItem) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetBillingHistory sets the value of BillingHistory.
func (s *GetInfraProvidersResponseDtoResponseProvidersItem) SetBillingHistory(val GetInfraProvidersResponseDtoResponseProvidersItemBillingHistory) {
	s.BillingHistory = val
}

// SetBillingNodes sets the value of BillingNodes.
func (s *GetInfraProvidersResponseDtoResponseProvidersItem) SetBillingNodes(val []GetInfraProvidersResponseDtoResponseProvidersItemBillingNodesItem) {
	s.BillingNodes = val
}

type GetInfraProvidersResponseDtoResponseProvidersItemBillingHistory struct {
	TotalAmount float64 `json:"totalAmount"`
	TotalBills  float64 `json:"totalBills"`
}

// GetTotalAmount returns the value of TotalAmount.
func (s *GetInfraProvidersResponseDtoResponseProvidersItemBillingHistory) GetTotalAmount() float64 {
	return s.TotalAmount
}

// GetTotalBills returns the value of TotalBills.
func (s *GetInfraProvidersResponseDtoResponseProvidersItemBillingHistory) GetTotalBills() float64 {
	return s.TotalBills
}

// SetTotalAmount sets the value of TotalAmount.
func (s *GetInfraProvidersResponseDtoResponseProvidersItemBillingHistory) SetTotalAmount(val float64) {
	s.TotalAmount = val
}

// SetTotalBills sets the value of TotalBills.
func (s *GetInfraProvidersResponseDtoResponseProvidersItemBillingHistory) SetTotalBills(val float64) {
	s.TotalBills = val
}

type GetInfraProvidersResponseDtoResponseProvidersItemBillingNodesItem struct {
	NodeUuid    uuid.UUID `json:"nodeUuid"`
	Name        string    `json:"name"`
	CountryCode string    `json:"countryCode"`
}

// GetNodeUuid returns the value of NodeUuid.
func (s *GetInfraProvidersResponseDtoResponseProvidersItemBillingNodesItem) GetNodeUuid() uuid.UUID {
	return s.NodeUuid
}

// GetName returns the value of Name.
func (s *GetInfraProvidersResponseDtoResponseProvidersItemBillingNodesItem) GetName() string {
	return s.Name
}

// GetCountryCode returns the value of CountryCode.
func (s *GetInfraProvidersResponseDtoResponseProvidersItemBillingNodesItem) GetCountryCode() string {
	return s.CountryCode
}

// SetNodeUuid sets the value of NodeUuid.
func (s *GetInfraProvidersResponseDtoResponseProvidersItemBillingNodesItem) SetNodeUuid(val uuid.UUID) {
	s.NodeUuid = val
}

// SetName sets the value of Name.
func (s *GetInfraProvidersResponseDtoResponseProvidersItemBillingNodesItem) SetName(val string) {
	s.Name = val
}

// SetCountryCode sets the value of CountryCode.
func (s *GetInfraProvidersResponseDtoResponseProvidersItemBillingNodesItem) SetCountryCode(val string) {
	s.CountryCode = val
}

// Ref: #/components/schemas/GetInternalSquadAccessibleNodesResponseDto
type GetInternalSquadAccessibleNodesResponseDto struct {
	Response GetInternalSquadAccessibleNodesResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetInternalSquadAccessibleNodesResponseDto) GetResponse() GetInternalSquadAccessibleNodesResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetInternalSquadAccessibleNodesResponseDto) SetResponse(val GetInternalSquadAccessibleNodesResponseDtoResponse) {
	s.Response = val
}

func (*GetInternalSquadAccessibleNodesResponseDto) internalSquadControllerGetInternalSquadAccessibleNodesRes() {
}

type GetInternalSquadAccessibleNodesResponseDtoResponse struct {
	SquadUuid       uuid.UUID                                                               `json:"squadUuid"`
	AccessibleNodes []GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem `json:"accessibleNodes"`
}

// GetSquadUuid returns the value of SquadUuid.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponse) GetSquadUuid() uuid.UUID {
	return s.SquadUuid
}

// GetAccessibleNodes returns the value of AccessibleNodes.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponse) GetAccessibleNodes() []GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem {
	return s.AccessibleNodes
}

// SetSquadUuid sets the value of SquadUuid.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponse) SetSquadUuid(val uuid.UUID) {
	s.SquadUuid = val
}

// SetAccessibleNodes sets the value of AccessibleNodes.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponse) SetAccessibleNodes(val []GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem) {
	s.AccessibleNodes = val
}

type GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem struct {
	UUID              uuid.UUID `json:"uuid"`
	NodeName          string    `json:"nodeName"`
	CountryCode       string    `json:"countryCode"`
	ConfigProfileUuid uuid.UUID `json:"configProfileUuid"`
	ConfigProfileName string    `json:"configProfileName"`
	ActiveInbounds    []string  `json:"activeInbounds"`
}

// GetUUID returns the value of UUID.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetNodeName returns the value of NodeName.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem) GetNodeName() string {
	return s.NodeName
}

// GetCountryCode returns the value of CountryCode.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem) GetCountryCode() string {
	return s.CountryCode
}

// GetConfigProfileUuid returns the value of ConfigProfileUuid.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem) GetConfigProfileUuid() uuid.UUID {
	return s.ConfigProfileUuid
}

// GetConfigProfileName returns the value of ConfigProfileName.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem) GetConfigProfileName() string {
	return s.ConfigProfileName
}

// GetActiveInbounds returns the value of ActiveInbounds.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem) GetActiveInbounds() []string {
	return s.ActiveInbounds
}

// SetUUID sets the value of UUID.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetNodeName sets the value of NodeName.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem) SetNodeName(val string) {
	s.NodeName = val
}

// SetCountryCode sets the value of CountryCode.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem) SetCountryCode(val string) {
	s.CountryCode = val
}

// SetConfigProfileUuid sets the value of ConfigProfileUuid.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem) SetConfigProfileUuid(val uuid.UUID) {
	s.ConfigProfileUuid = val
}

// SetConfigProfileName sets the value of ConfigProfileName.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem) SetConfigProfileName(val string) {
	s.ConfigProfileName = val
}

// SetActiveInbounds sets the value of ActiveInbounds.
func (s *GetInternalSquadAccessibleNodesResponseDtoResponseAccessibleNodesItem) SetActiveInbounds(val []string) {
	s.ActiveInbounds = val
}

// Ref: #/components/schemas/GetInternalSquadsResponseDto
type GetInternalSquadsResponseDto struct {
	Response GetInternalSquadsResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetInternalSquadsResponseDto) GetResponse() GetInternalSquadsResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetInternalSquadsResponseDto) SetResponse(val GetInternalSquadsResponseDtoResponse) {
	s.Response = val
}

func (*GetInternalSquadsResponseDto) internalSquadControllerGetInternalSquadsRes() {}

type GetInternalSquadsResponseDtoResponse struct {
	Total          float64                                                  `json:"total"`
	InternalSquads []GetInternalSquadsResponseDtoResponseInternalSquadsItem `json:"internalSquads"`
}

// GetTotal returns the value of Total.
func (s *GetInternalSquadsResponseDtoResponse) GetTotal() float64 {
	return s.Total
}

// GetInternalSquads returns the value of InternalSquads.
func (s *GetInternalSquadsResponseDtoResponse) GetInternalSquads() []GetInternalSquadsResponseDtoResponseInternalSquadsItem {
	return s.InternalSquads
}

// SetTotal sets the value of Total.
func (s *GetInternalSquadsResponseDtoResponse) SetTotal(val float64) {
	s.Total = val
}

// SetInternalSquads sets the value of InternalSquads.
func (s *GetInternalSquadsResponseDtoResponse) SetInternalSquads(val []GetInternalSquadsResponseDtoResponseInternalSquadsItem) {
	s.InternalSquads = val
}

type GetInternalSquadsResponseDtoResponseInternalSquadsItem struct {
	UUID      uuid.UUID                                                            `json:"uuid"`
	Name      string                                                               `json:"name"`
	Info      GetInternalSquadsResponseDtoResponseInternalSquadsItemInfo           `json:"info"`
	Inbounds  []GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem `json:"inbounds"`
	CreatedAt time.Time                                                            `json:"createdAt"`
	UpdatedAt time.Time                                                            `json:"updatedAt"`
}

// GetUUID returns the value of UUID.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItem) GetName() string {
	return s.Name
}

// GetInfo returns the value of Info.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItem) GetInfo() GetInternalSquadsResponseDtoResponseInternalSquadsItemInfo {
	return s.Info
}

// GetInbounds returns the value of Inbounds.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItem) GetInbounds() []GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem {
	return s.Inbounds
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItem) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetUUID sets the value of UUID.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItem) SetName(val string) {
	s.Name = val
}

// SetInfo sets the value of Info.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItem) SetInfo(val GetInternalSquadsResponseDtoResponseInternalSquadsItemInfo) {
	s.Info = val
}

// SetInbounds sets the value of Inbounds.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItem) SetInbounds(val []GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem) {
	s.Inbounds = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItem) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem struct {
	UUID        uuid.UUID  `json:"uuid"`
	ProfileUuid uuid.UUID  `json:"profileUuid"`
	Tag         string     `json:"tag"`
	Type        string     `json:"type"`
	Network     NilString  `json:"network"`
	Security    NilString  `json:"security"`
	Port        NilFloat64 `json:"port"`
	RawInbound  jx.Raw     `json:"rawInbound"`
}

// GetUUID returns the value of UUID.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetProfileUuid returns the value of ProfileUuid.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem) GetProfileUuid() uuid.UUID {
	return s.ProfileUuid
}

// GetTag returns the value of Tag.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem) GetSecurity() NilString {
	return s.Security
}

// GetPort returns the value of Port.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem) GetPort() NilFloat64 {
	return s.Port
}

// GetRawInbound returns the value of RawInbound.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem) GetRawInbound() jx.Raw {
	return s.RawInbound
}

// SetUUID sets the value of UUID.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetProfileUuid sets the value of ProfileUuid.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem) SetProfileUuid(val uuid.UUID) {
	s.ProfileUuid = val
}

// SetTag sets the value of Tag.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

// SetPort sets the value of Port.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem) SetPort(val NilFloat64) {
	s.Port = val
}

// SetRawInbound sets the value of RawInbound.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInboundsItem) SetRawInbound(val jx.Raw) {
	s.RawInbound = val
}

type GetInternalSquadsResponseDtoResponseInternalSquadsItemInfo struct {
	MembersCount  float64 `json:"membersCount"`
	InboundsCount float64 `json:"inboundsCount"`
}

// GetMembersCount returns the value of MembersCount.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInfo) GetMembersCount() float64 {
	return s.MembersCount
}

// GetInboundsCount returns the value of InboundsCount.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInfo) GetInboundsCount() float64 {
	return s.InboundsCount
}

// SetMembersCount sets the value of MembersCount.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInfo) SetMembersCount(val float64) {
	s.MembersCount = val
}

// SetInboundsCount sets the value of InboundsCount.
func (s *GetInternalSquadsResponseDtoResponseInternalSquadsItemInfo) SetInboundsCount(val float64) {
	s.InboundsCount = val
}

// Ref: #/components/schemas/GetNodeUserUsageByRangeResponseDto
type GetNodeUserUsageByRangeResponseDto struct {
	Response []GetNodeUserUsageByRangeResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetNodeUserUsageByRangeResponseDto) GetResponse() []GetNodeUserUsageByRangeResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetNodeUserUsageByRangeResponseDto) SetResponse(val []GetNodeUserUsageByRangeResponseDtoResponseItem) {
	s.Response = val
}

func (*GetNodeUserUsageByRangeResponseDto) nodesUserUsageHistoryControllerGetNodeUserUsageRes() {}

type GetNodeUserUsageByRangeResponseDtoResponseItem struct {
	UserUuid uuid.UUID `json:"userUuid"`
	Username string    `json:"username"`
	NodeUuid uuid.UUID `json:"nodeUuid"`
	Total    float64   `json:"total"`
	Date     string    `json:"date"`
}

// GetUserUuid returns the value of UserUuid.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) GetUserUuid() uuid.UUID {
	return s.UserUuid
}

// GetUsername returns the value of Username.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) GetUsername() string {
	return s.Username
}

// GetNodeUuid returns the value of NodeUuid.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) GetNodeUuid() uuid.UUID {
	return s.NodeUuid
}

// GetTotal returns the value of Total.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) GetTotal() float64 {
	return s.Total
}

// GetDate returns the value of Date.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) GetDate() string {
	return s.Date
}

// SetUserUuid sets the value of UserUuid.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) SetUserUuid(val uuid.UUID) {
	s.UserUuid = val
}

// SetUsername sets the value of Username.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) SetUsername(val string) {
	s.Username = val
}

// SetNodeUuid sets the value of NodeUuid.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) SetNodeUuid(val uuid.UUID) {
	s.NodeUuid = val
}

// SetTotal sets the value of Total.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) SetTotal(val float64) {
	s.Total = val
}

// SetDate sets the value of Date.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) SetDate(val string) {
	s.Date = val
}

// Ref: #/components/schemas/GetNodesMetricsResponseDto
type GetNodesMetricsResponseDto struct {
	Response GetNodesMetricsResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetNodesMetricsResponseDto) GetResponse() GetNodesMetricsResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetNodesMetricsResponseDto) SetResponse(val GetNodesMetricsResponseDtoResponse) {
	s.Response = val
}

func (*GetNodesMetricsResponseDto) systemControllerGetNodesMetricsRes() {}

type GetNodesMetricsResponseDtoResponse struct {
	Nodes []GetNodesMetricsResponseDtoResponseNodesItem `json:"nodes"`
}

// GetNodes returns the value of Nodes.
func (s *GetNodesMetricsResponseDtoResponse) GetNodes() []GetNodesMetricsResponseDtoResponseNodesItem {
	return s.Nodes
}

// SetNodes sets the value of Nodes.
func (s *GetNodesMetricsResponseDtoResponse) SetNodes(val []GetNodesMetricsResponseDtoResponseNodesItem) {
	s.Nodes = val
}

type GetNodesMetricsResponseDtoResponseNodesItem struct {
	NodeUuid       string                                                          `json:"nodeUuid"`
	NodeName       string                                                          `json:"nodeName"`
	CountryEmoji   string                                                          `json:"countryEmoji"`
	ProviderName   string                                                          `json:"providerName"`
	UsersOnline    float64                                                         `json:"usersOnline"`
	InboundsStats  []GetNodesMetricsResponseDtoResponseNodesItemInboundsStatsItem  `json:"inboundsStats"`
	OutboundsStats []GetNodesMetricsResponseDtoResponseNodesItemOutboundsStatsItem `json:"outboundsStats"`
}

// GetNodeUuid returns the value of NodeUuid.
func (s *GetNodesMetricsResponseDtoResponseNodesItem) GetNodeUuid() string {
	return s.NodeUuid
}

// GetNodeName returns the value of NodeName.
func (s *GetNodesMetricsResponseDtoResponseNodesItem) GetNodeName() string {
	return s.NodeName
}

// GetCountryEmoji returns the value of CountryEmoji.
func (s *GetNodesMetricsResponseDtoResponseNodesItem) GetCountryEmoji() string {
	return s.CountryEmoji
}

// GetProviderName returns the value of ProviderName.
func (s *GetNodesMetricsResponseDtoResponseNodesItem) GetProviderName() string {
	return s.ProviderName
}

// GetUsersOnline returns the value of UsersOnline.
func (s *GetNodesMetricsResponseDtoResponseNodesItem) GetUsersOnline() float64 {
	return s.UsersOnline
}

// GetInboundsStats returns the value of InboundsStats.
func (s *GetNodesMetricsResponseDtoResponseNodesItem) GetInboundsStats() []GetNodesMetricsResponseDtoResponseNodesItemInboundsStatsItem {
	return s.InboundsStats
}

// GetOutboundsStats returns the value of OutboundsStats.
func (s *GetNodesMetricsResponseDtoResponseNodesItem) GetOutboundsStats() []GetNodesMetricsResponseDtoResponseNodesItemOutboundsStatsItem {
	return s.OutboundsStats
}

// SetNodeUuid sets the value of NodeUuid.
func (s *GetNodesMetricsResponseDtoResponseNodesItem) SetNodeUuid(val string) {
	s.NodeUuid = val
}

// SetNodeName sets the value of NodeName.
func (s *GetNodesMetricsResponseDtoResponseNodesItem) SetNodeName(val string) {
	s.NodeName = val
}

// SetCountryEmoji sets the value of CountryEmoji.
func (s *GetNodesMetricsResponseDtoResponseNodesItem) SetCountryEmoji(val string) {
	s.CountryEmoji = val
}

// SetProviderName sets the value of ProviderName.
func (s *GetNodesMetricsResponseDtoResponseNodesItem) SetProviderName(val string) {
	s.ProviderName = val
}

// SetUsersOnline sets the value of UsersOnline.
func (s *GetNodesMetricsResponseDtoResponseNodesItem) SetUsersOnline(val float64) {
	s.UsersOnline = val
}

// SetInboundsStats sets the value of InboundsStats.
func (s *GetNodesMetricsResponseDtoResponseNodesItem) SetInboundsStats(val []GetNodesMetricsResponseDtoResponseNodesItemInboundsStatsItem) {
	s.InboundsStats = val
}

// SetOutboundsStats sets the value of OutboundsStats.
func (s *GetNodesMetricsResponseDtoResponseNodesItem) SetOutboundsStats(val []GetNodesMetricsResponseDtoResponseNodesItemOutboundsStatsItem) {
	s.OutboundsStats = val
}

type GetNodesMetricsResponseDtoResponseNodesItemInboundsStatsItem struct {
	Tag      string `json:"tag"`
	Upload   string `json:"upload"`
	Download string `json:"download"`
}

// GetTag returns the value of Tag.
func (s *GetNodesMetricsResponseDtoResponseNodesItemInboundsStatsItem) GetTag() string {
	return s.Tag
}

// GetUpload returns the value of Upload.
func (s *GetNodesMetricsResponseDtoResponseNodesItemInboundsStatsItem) GetUpload() string {
	return s.Upload
}

// GetDownload returns the value of Download.
func (s *GetNodesMetricsResponseDtoResponseNodesItemInboundsStatsItem) GetDownload() string {
	return s.Download
}

// SetTag sets the value of Tag.
func (s *GetNodesMetricsResponseDtoResponseNodesItemInboundsStatsItem) SetTag(val string) {
	s.Tag = val
}

// SetUpload sets the value of Upload.
func (s *GetNodesMetricsResponseDtoResponseNodesItemInboundsStatsItem) SetUpload(val string) {
	s.Upload = val
}

// SetDownload sets the value of Download.
func (s *GetNodesMetricsResponseDtoResponseNodesItemInboundsStatsItem) SetDownload(val string) {
	s.Download = val
}

type GetNodesMetricsResponseDtoResponseNodesItemOutboundsStatsItem struct {
	Tag      string `json:"tag"`
	Upload   string `json:"upload"`
	Download string `json:"download"`
}

// GetTag returns the value of Tag.
func (s *GetNodesMetricsResponseDtoResponseNodesItemOutboundsStatsItem) GetTag() string {
	return s.Tag
}

// GetUpload returns the value of Upload.
func (s *GetNodesMetricsResponseDtoResponseNodesItemOutboundsStatsItem) GetUpload() string {
	return s.Upload
}

// GetDownload returns the value of Download.
func (s *GetNodesMetricsResponseDtoResponseNodesItemOutboundsStatsItem) GetDownload() string {
	return s.Download
}

// SetTag sets the value of Tag.
func (s *GetNodesMetricsResponseDtoResponseNodesItemOutboundsStatsItem) SetTag(val string) {
	s.Tag = val
}

// SetUpload sets the value of Upload.
func (s *GetNodesMetricsResponseDtoResponseNodesItemOutboundsStatsItem) SetUpload(val string) {
	s.Upload = val
}

// SetDownload sets the value of Download.
func (s *GetNodesMetricsResponseDtoResponseNodesItemOutboundsStatsItem) SetDownload(val string) {
	s.Download = val
}

// Ref: #/components/schemas/GetNodesRealtimeUsageResponseDto
type GetNodesRealtimeUsageResponseDto struct {
	Response []GetNodesRealtimeUsageResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetNodesRealtimeUsageResponseDto) GetResponse() []GetNodesRealtimeUsageResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetNodesRealtimeUsageResponseDto) SetResponse(val []GetNodesRealtimeUsageResponseDtoResponseItem) {
	s.Response = val
}

func (*GetNodesRealtimeUsageResponseDto) nodesUserUsageHistoryControllerGetNodesRealtimeUsageRes() {}

type GetNodesRealtimeUsageResponseDtoResponseItem struct {
	NodeUuid         uuid.UUID `json:"nodeUuid"`
	NodeName         string    `json:"nodeName"`
	CountryCode      string    `json:"countryCode"`
	DownloadBytes    float64   `json:"downloadBytes"`
	UploadBytes      float64   `json:"uploadBytes"`
	TotalBytes       float64   `json:"totalBytes"`
	DownloadSpeedBps float64   `json:"downloadSpeedBps"`
	UploadSpeedBps   float64   `json:"uploadSpeedBps"`
	TotalSpeedBps    float64   `json:"totalSpeedBps"`
}

// GetNodeUuid returns the value of NodeUuid.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) GetNodeUuid() uuid.UUID {
	return s.NodeUuid
}

// GetNodeName returns the value of NodeName.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) GetNodeName() string {
	return s.NodeName
}

// GetCountryCode returns the value of CountryCode.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) GetCountryCode() string {
	return s.CountryCode
}

// GetDownloadBytes returns the value of DownloadBytes.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) GetDownloadBytes() float64 {
	return s.DownloadBytes
}

// GetUploadBytes returns the value of UploadBytes.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) GetUploadBytes() float64 {
	return s.UploadBytes
}

// GetTotalBytes returns the value of TotalBytes.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) GetTotalBytes() float64 {
	return s.TotalBytes
}

// GetDownloadSpeedBps returns the value of DownloadSpeedBps.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) GetDownloadSpeedBps() float64 {
	return s.DownloadSpeedBps
}

// GetUploadSpeedBps returns the value of UploadSpeedBps.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) GetUploadSpeedBps() float64 {
	return s.UploadSpeedBps
}

// GetTotalSpeedBps returns the value of TotalSpeedBps.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) GetTotalSpeedBps() float64 {
	return s.TotalSpeedBps
}

// SetNodeUuid sets the value of NodeUuid.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetNodeUuid(val uuid.UUID) {
	s.NodeUuid = val
}

// SetNodeName sets the value of NodeName.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetNodeName(val string) {
	s.NodeName = val
}

// SetCountryCode sets the value of CountryCode.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetCountryCode(val string) {
	s.CountryCode = val
}

// SetDownloadBytes sets the value of DownloadBytes.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetDownloadBytes(val float64) {
	s.DownloadBytes = val
}

// SetUploadBytes sets the value of UploadBytes.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetUploadBytes(val float64) {
	s.UploadBytes = val
}

// SetTotalBytes sets the value of TotalBytes.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetTotalBytes(val float64) {
	s.TotalBytes = val
}

// SetDownloadSpeedBps sets the value of DownloadSpeedBps.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetDownloadSpeedBps(val float64) {
	s.DownloadSpeedBps = val
}

// SetUploadSpeedBps sets the value of UploadSpeedBps.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetUploadSpeedBps(val float64) {
	s.UploadSpeedBps = val
}

// SetTotalSpeedBps sets the value of TotalSpeedBps.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetTotalSpeedBps(val float64) {
	s.TotalSpeedBps = val
}

// Ref: #/components/schemas/GetNodesStatisticsResponseDto
type GetNodesStatisticsResponseDto struct {
	Response GetNodesStatisticsResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetNodesStatisticsResponseDto) GetResponse() GetNodesStatisticsResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetNodesStatisticsResponseDto) SetResponse(val GetNodesStatisticsResponseDtoResponse) {
	s.Response = val
}

func (*GetNodesStatisticsResponseDto) systemControllerGetNodesStatisticsRes() {}

type GetNodesStatisticsResponseDtoResponse struct {
	LastSevenDays []GetNodesStatisticsResponseDtoResponseLastSevenDaysItem `json:"lastSevenDays"`
}

// GetLastSevenDays returns the value of LastSevenDays.
func (s *GetNodesStatisticsResponseDtoResponse) GetLastSevenDays() []GetNodesStatisticsResponseDtoResponseLastSevenDaysItem {
	return s.LastSevenDays
}

// SetLastSevenDays sets the value of LastSevenDays.
func (s *GetNodesStatisticsResponseDtoResponse) SetLastSevenDays(val []GetNodesStatisticsResponseDtoResponseLastSevenDaysItem) {
	s.LastSevenDays = val
}

type GetNodesStatisticsResponseDtoResponseLastSevenDaysItem struct {
	NodeName   string `json:"nodeName"`
	Date       string `json:"date"`
	TotalBytes string `json:"totalBytes"`
}

// GetNodeName returns the value of NodeName.
func (s *GetNodesStatisticsResponseDtoResponseLastSevenDaysItem) GetNodeName() string {
	return s.NodeName
}

// GetDate returns the value of Date.
func (s *GetNodesStatisticsResponseDtoResponseLastSevenDaysItem) GetDate() string {
	return s.Date
}

// GetTotalBytes returns the value of TotalBytes.
func (s *GetNodesStatisticsResponseDtoResponseLastSevenDaysItem) GetTotalBytes() string {
	return s.TotalBytes
}

// SetNodeName sets the value of NodeName.
func (s *GetNodesStatisticsResponseDtoResponseLastSevenDaysItem) SetNodeName(val string) {
	s.NodeName = val
}

// SetDate sets the value of Date.
func (s *GetNodesStatisticsResponseDtoResponseLastSevenDaysItem) SetDate(val string) {
	s.Date = val
}

// SetTotalBytes sets the value of TotalBytes.
func (s *GetNodesStatisticsResponseDtoResponseLastSevenDaysItem) SetTotalBytes(val string) {
	s.TotalBytes = val
}

// Ref: #/components/schemas/GetNodesUsageByRangeResponseDto
type GetNodesUsageByRangeResponseDto struct {
	Response []GetNodesUsageByRangeResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetNodesUsageByRangeResponseDto) GetResponse() []GetNodesUsageByRangeResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetNodesUsageByRangeResponseDto) SetResponse(val []GetNodesUsageByRangeResponseDtoResponseItem) {
	s.Response = val
}

func (*GetNodesUsageByRangeResponseDto) nodesUsageHistoryControllerGetNodesUsageByRangeRes() {}

type GetNodesUsageByRangeResponseDtoResponseItem struct {
	NodeUuid                   uuid.UUID `json:"nodeUuid"`
	NodeName                   string    `json:"nodeName"`
	NodeCountryCode            string    `json:"nodeCountryCode"`
	Total                      float64   `json:"total"`
	TotalDownload              float64   `json:"totalDownload"`
	TotalUpload                float64   `json:"totalUpload"`
	HumanReadableTotal         string    `json:"humanReadableTotal"`
	HumanReadableTotalDownload string    `json:"humanReadableTotalDownload"`
	HumanReadableTotalUpload   string    `json:"humanReadableTotalUpload"`
	Date                       string    `json:"date"`
}

// GetNodeUuid returns the value of NodeUuid.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) GetNodeUuid() uuid.UUID {
	return s.NodeUuid
}

// GetNodeName returns the value of NodeName.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) GetNodeName() string {
	return s.NodeName
}

// GetNodeCountryCode returns the value of NodeCountryCode.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) GetNodeCountryCode() string {
	return s.NodeCountryCode
}

// GetTotal returns the value of Total.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) GetTotal() float64 {
	return s.Total
}

// GetTotalDownload returns the value of TotalDownload.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) GetTotalDownload() float64 {
	return s.TotalDownload
}

// GetTotalUpload returns the value of TotalUpload.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) GetTotalUpload() float64 {
	return s.TotalUpload
}

// GetHumanReadableTotal returns the value of HumanReadableTotal.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) GetHumanReadableTotal() string {
	return s.HumanReadableTotal
}

// GetHumanReadableTotalDownload returns the value of HumanReadableTotalDownload.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) GetHumanReadableTotalDownload() string {
	return s.HumanReadableTotalDownload
}

// GetHumanReadableTotalUpload returns the value of HumanReadableTotalUpload.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) GetHumanReadableTotalUpload() string {
	return s.HumanReadableTotalUpload
}

// GetDate returns the value of Date.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) GetDate() string {
	return s.Date
}

// SetNodeUuid sets the value of NodeUuid.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetNodeUuid(val uuid.UUID) {
	s.NodeUuid = val
}

// SetNodeName sets the value of NodeName.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetNodeName(val string) {
	s.NodeName = val
}

// SetNodeCountryCode sets the value of NodeCountryCode.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetNodeCountryCode(val string) {
	s.NodeCountryCode = val
}

// SetTotal sets the value of Total.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetTotal(val float64) {
	s.Total = val
}

// SetTotalDownload sets the value of TotalDownload.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetTotalDownload(val float64) {
	s.TotalDownload = val
}

// SetTotalUpload sets the value of TotalUpload.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetTotalUpload(val float64) {
	s.TotalUpload = val
}

// SetHumanReadableTotal sets the value of HumanReadableTotal.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetHumanReadableTotal(val string) {
	s.HumanReadableTotal = val
}

// SetHumanReadableTotalDownload sets the value of HumanReadableTotalDownload.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetHumanReadableTotalDownload(val string) {
	s.HumanReadableTotalDownload = val
}

// SetHumanReadableTotalUpload sets the value of HumanReadableTotalUpload.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetHumanReadableTotalUpload(val string) {
	s.HumanReadableTotalUpload = val
}

// SetDate sets the value of Date.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetDate(val string) {
	s.Date = val
}

// Ref: #/components/schemas/GetPubKeyResponseDto
type GetPubKeyResponseDto struct {
	Response GetPubKeyResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetPubKeyResponseDto) GetResponse() GetPubKeyResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetPubKeyResponseDto) SetResponse(val GetPubKeyResponseDtoResponse) {
	s.Response = val
}

func (*GetPubKeyResponseDto) keygenControllerGenerateKeyRes() {}

type GetPubKeyResponseDtoResponse struct {
	PubKey string `json:"pubKey"`
}

// GetPubKey returns the value of PubKey.
func (s *GetPubKeyResponseDtoResponse) GetPubKey() string {
	return s.PubKey
}

// SetPubKey sets the value of PubKey.
func (s *GetPubKeyResponseDtoResponse) SetPubKey(val string) {
	s.PubKey = val
}

// Ref: #/components/schemas/GetRawSubscriptionByShortUuidResponseDto
type GetRawSubscriptionByShortUuidResponseDto struct {
	Response GetRawSubscriptionByShortUuidResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetRawSubscriptionByShortUuidResponseDto) GetResponse() GetRawSubscriptionByShortUuidResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetRawSubscriptionByShortUuidResponseDto) SetResponse(val GetRawSubscriptionByShortUuidResponseDtoResponse) {
	s.Response = val
}

func (*GetRawSubscriptionByShortUuidResponseDto) subscriptionsControllerGetRawSubscriptionByShortUuidRes() {
}

type GetRawSubscriptionByShortUuidResponseDtoResponse struct {
	User              GetRawSubscriptionByShortUuidResponseDtoResponseUser              `json:"user"`
	ConvertedUserInfo GetRawSubscriptionByShortUuidResponseDtoResponseConvertedUserInfo `json:"convertedUserInfo"`
	Headers           GetRawSubscriptionByShortUuidResponseDtoResponseHeaders           `json:"headers"`
	RawHosts          []GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem    `json:"rawHosts"`
}

// GetUser returns the value of User.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponse) GetUser() GetRawSubscriptionByShortUuidResponseDtoResponseUser {
	return s.User
}

// GetConvertedUserInfo returns the value of ConvertedUserInfo.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponse) GetConvertedUserInfo() GetRawSubscriptionByShortUuidResponseDtoResponseConvertedUserInfo {
	return s.ConvertedUserInfo
}

// GetHeaders returns the value of Headers.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponse) GetHeaders() GetRawSubscriptionByShortUuidResponseDtoResponseHeaders {
	return s.Headers
}

// GetRawHosts returns the value of RawHosts.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponse) GetRawHosts() []GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem {
	return s.RawHosts
}

// SetUser sets the value of User.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponse) SetUser(val GetRawSubscriptionByShortUuidResponseDtoResponseUser) {
	s.User = val
}

// SetConvertedUserInfo sets the value of ConvertedUserInfo.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponse) SetConvertedUserInfo(val GetRawSubscriptionByShortUuidResponseDtoResponseConvertedUserInfo) {
	s.ConvertedUserInfo = val
}

// SetHeaders sets the value of Headers.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponse) SetHeaders(val GetRawSubscriptionByShortUuidResponseDtoResponseHeaders) {
	s.Headers = val
}

// SetRawHosts sets the value of RawHosts.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponse) SetRawHosts(val []GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) {
	s.RawHosts = val
}

type GetRawSubscriptionByShortUuidResponseDtoResponseConvertedUserInfo struct {
	DaysLeft            float64 `json:"daysLeft"`
	TrafficLimit        string  `json:"trafficLimit"`
	TrafficUsed         string  `json:"trafficUsed"`
	LifetimeTrafficUsed string  `json:"lifetimeTrafficUsed"`
	IsHwidLimited       bool    `json:"isHwidLimited"`
}

// GetDaysLeft returns the value of DaysLeft.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseConvertedUserInfo) GetDaysLeft() float64 {
	return s.DaysLeft
}

// GetTrafficLimit returns the value of TrafficLimit.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseConvertedUserInfo) GetTrafficLimit() string {
	return s.TrafficLimit
}

// GetTrafficUsed returns the value of TrafficUsed.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseConvertedUserInfo) GetTrafficUsed() string {
	return s.TrafficUsed
}

// GetLifetimeTrafficUsed returns the value of LifetimeTrafficUsed.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseConvertedUserInfo) GetLifetimeTrafficUsed() string {
	return s.LifetimeTrafficUsed
}

// GetIsHwidLimited returns the value of IsHwidLimited.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseConvertedUserInfo) GetIsHwidLimited() bool {
	return s.IsHwidLimited
}

// SetDaysLeft sets the value of DaysLeft.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseConvertedUserInfo) SetDaysLeft(val float64) {
	s.DaysLeft = val
}

// SetTrafficLimit sets the value of TrafficLimit.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseConvertedUserInfo) SetTrafficLimit(val string) {
	s.TrafficLimit = val
}

// SetTrafficUsed sets the value of TrafficUsed.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseConvertedUserInfo) SetTrafficUsed(val string) {
	s.TrafficUsed = val
}

// SetLifetimeTrafficUsed sets the value of LifetimeTrafficUsed.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseConvertedUserInfo) SetLifetimeTrafficUsed(val string) {
	s.LifetimeTrafficUsed = val
}

// SetIsHwidLimited sets the value of IsHwidLimited.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseConvertedUserInfo) SetIsHwidLimited(val bool) {
	s.IsHwidLimited = val
}

type GetRawSubscriptionByShortUuidResponseDtoResponseHeaders map[string]string

func (s *GetRawSubscriptionByShortUuidResponseDtoResponseHeaders) init() GetRawSubscriptionByShortUuidResponseDtoResponseHeaders {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

type GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem struct {
	Address           OptNilString                                                                       `json:"address"`
	Alpn              OptNilString                                                                       `json:"alpn"`
	Fingerprint       OptNilString                                                                       `json:"fingerprint"`
	Host              OptNilString                                                                       `json:"host"`
	Network           OptNilString                                                                       `json:"network"`
	Password          GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemPassword               `json:"password"`
	Path              OptNilString                                                                       `json:"path"`
	PublicKey         OptNilString                                                                       `json:"publicKey"`
	Port              OptNilFloat64                                                                      `json:"port"`
	Protocol          OptNilString                                                                       `json:"protocol"`
	Remark            OptNilString                                                                       `json:"remark"`
	ShortId           OptNilString                                                                       `json:"shortId"`
	Sni               OptNilString                                                                       `json:"sni"`
	SpiderX           OptNilString                                                                       `json:"spiderX"`
	TLS               OptNilString                                                                       `json:"tls"`
	HeaderType        OptNilString                                                                       `json:"headerType"`
	AdditionalParams  OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams `json:"additionalParams"`
	XHttpExtraParams  OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams    `json:"xHttpExtraParams"`
	MuxParams         OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams           `json:"muxParams"`
	SockoptParams     OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams       `json:"sockoptParams"`
	ServerDescription OptNilString                                                                       `json:"serverDescription"`
	Flow              OptNilString                                                                       `json:"flow"`
	AllowInsecure     OptNilBool                                                                         `json:"allowInsecure"`
	ShuffleHost       OptNilBool                                                                         `json:"shuffleHost"`
	MihomoX25519      OptNilBool                                                                         `json:"mihomoX25519"`
	Mldsa65Verify     OptNilString                                                                       `json:"mldsa65Verify"`
	Encryption        OptNilString                                                                       `json:"encryption"`
	ProtocolOptions   OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions  `json:"protocolOptions"`
	DbData            OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData              `json:"dbData"`
}

// GetAddress returns the value of Address.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetAddress() OptNilString {
	return s.Address
}

// GetAlpn returns the value of Alpn.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetAlpn() OptNilString {
	return s.Alpn
}

// GetFingerprint returns the value of Fingerprint.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetFingerprint() OptNilString {
	return s.Fingerprint
}

// GetHost returns the value of Host.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetHost() OptNilString {
	return s.Host
}

// GetNetwork returns the value of Network.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetNetwork() OptNilString {
	return s.Network
}

// GetPassword returns the value of Password.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetPassword() GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemPassword {
	return s.Password
}

// GetPath returns the value of Path.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetPath() OptNilString {
	return s.Path
}

// GetPublicKey returns the value of PublicKey.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetPublicKey() OptNilString {
	return s.PublicKey
}

// GetPort returns the value of Port.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetPort() OptNilFloat64 {
	return s.Port
}

// GetProtocol returns the value of Protocol.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetProtocol() OptNilString {
	return s.Protocol
}

// GetRemark returns the value of Remark.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetRemark() OptNilString {
	return s.Remark
}

// GetShortId returns the value of ShortId.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetShortId() OptNilString {
	return s.ShortId
}

// GetSni returns the value of Sni.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetSni() OptNilString {
	return s.Sni
}

// GetSpiderX returns the value of SpiderX.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetSpiderX() OptNilString {
	return s.SpiderX
}

// GetTLS returns the value of TLS.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetTLS() OptNilString {
	return s.TLS
}

// GetHeaderType returns the value of HeaderType.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetHeaderType() OptNilString {
	return s.HeaderType
}

// GetAdditionalParams returns the value of AdditionalParams.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetAdditionalParams() OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams {
	return s.AdditionalParams
}

// GetXHttpExtraParams returns the value of XHttpExtraParams.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetXHttpExtraParams() OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams {
	return s.XHttpExtraParams
}

// GetMuxParams returns the value of MuxParams.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetMuxParams() OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams {
	return s.MuxParams
}

// GetSockoptParams returns the value of SockoptParams.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetSockoptParams() OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams {
	return s.SockoptParams
}

// GetServerDescription returns the value of ServerDescription.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetServerDescription() OptNilString {
	return s.ServerDescription
}

// GetFlow returns the value of Flow.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetFlow() OptNilString {
	return s.Flow
}

// GetAllowInsecure returns the value of AllowInsecure.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetAllowInsecure() OptNilBool {
	return s.AllowInsecure
}

// GetShuffleHost returns the value of ShuffleHost.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetShuffleHost() OptNilBool {
	return s.ShuffleHost
}

// GetMihomoX25519 returns the value of MihomoX25519.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetMihomoX25519() OptNilBool {
	return s.MihomoX25519
}

// GetMldsa65Verify returns the value of Mldsa65Verify.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetMldsa65Verify() OptNilString {
	return s.Mldsa65Verify
}

// GetEncryption returns the value of Encryption.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetEncryption() OptNilString {
	return s.Encryption
}

// GetProtocolOptions returns the value of ProtocolOptions.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetProtocolOptions() OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions {
	return s.ProtocolOptions
}

// GetDbData returns the value of DbData.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) GetDbData() OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData {
	return s.DbData
}

// SetAddress sets the value of Address.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetAddress(val OptNilString) {
	s.Address = val
}

// SetAlpn sets the value of Alpn.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetAlpn(val OptNilString) {
	s.Alpn = val
}

// SetFingerprint sets the value of Fingerprint.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetFingerprint(val OptNilString) {
	s.Fingerprint = val
}

// SetHost sets the value of Host.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetHost(val OptNilString) {
	s.Host = val
}

// SetNetwork sets the value of Network.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetNetwork(val OptNilString) {
	s.Network = val
}

// SetPassword sets the value of Password.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetPassword(val GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemPassword) {
	s.Password = val
}

// SetPath sets the value of Path.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetPath(val OptNilString) {
	s.Path = val
}

// SetPublicKey sets the value of PublicKey.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetPublicKey(val OptNilString) {
	s.PublicKey = val
}

// SetPort sets the value of Port.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetPort(val OptNilFloat64) {
	s.Port = val
}

// SetProtocol sets the value of Protocol.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetProtocol(val OptNilString) {
	s.Protocol = val
}

// SetRemark sets the value of Remark.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetRemark(val OptNilString) {
	s.Remark = val
}

// SetShortId sets the value of ShortId.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetShortId(val OptNilString) {
	s.ShortId = val
}

// SetSni sets the value of Sni.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetSni(val OptNilString) {
	s.Sni = val
}

// SetSpiderX sets the value of SpiderX.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetSpiderX(val OptNilString) {
	s.SpiderX = val
}

// SetTLS sets the value of TLS.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetTLS(val OptNilString) {
	s.TLS = val
}

// SetHeaderType sets the value of HeaderType.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetHeaderType(val OptNilString) {
	s.HeaderType = val
}

// SetAdditionalParams sets the value of AdditionalParams.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetAdditionalParams(val OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams) {
	s.AdditionalParams = val
}

// SetXHttpExtraParams sets the value of XHttpExtraParams.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetXHttpExtraParams(val OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams) {
	s.XHttpExtraParams = val
}

// SetMuxParams sets the value of MuxParams.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetMuxParams(val OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams) {
	s.MuxParams = val
}

// SetSockoptParams sets the value of SockoptParams.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetSockoptParams(val OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams) {
	s.SockoptParams = val
}

// SetServerDescription sets the value of ServerDescription.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetServerDescription(val OptNilString) {
	s.ServerDescription = val
}

// SetFlow sets the value of Flow.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetFlow(val OptNilString) {
	s.Flow = val
}

// SetAllowInsecure sets the value of AllowInsecure.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetAllowInsecure(val OptNilBool) {
	s.AllowInsecure = val
}

// SetShuffleHost sets the value of ShuffleHost.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetShuffleHost(val OptNilBool) {
	s.ShuffleHost = val
}

// SetMihomoX25519 sets the value of MihomoX25519.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetMihomoX25519(val OptNilBool) {
	s.MihomoX25519 = val
}

// SetMldsa65Verify sets the value of Mldsa65Verify.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetMldsa65Verify(val OptNilString) {
	s.Mldsa65Verify = val
}

// SetEncryption sets the value of Encryption.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetEncryption(val OptNilString) {
	s.Encryption = val
}

// SetProtocolOptions sets the value of ProtocolOptions.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetProtocolOptions(val OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions) {
	s.ProtocolOptions = val
}

// SetDbData sets the value of DbData.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItem) SetDbData(val OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) {
	s.DbData = val
}

type GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams struct {
	Mode            OptNilString  `json:"mode"`
	HeartbeatPeriod OptNilFloat64 `json:"heartbeatPeriod"`
}

// GetMode returns the value of Mode.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams) GetMode() OptNilString {
	return s.Mode
}

// GetHeartbeatPeriod returns the value of HeartbeatPeriod.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams) GetHeartbeatPeriod() OptNilFloat64 {
	return s.HeartbeatPeriod
}

// SetMode sets the value of Mode.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams) SetMode(val OptNilString) {
	s.Mode = val
}

// SetHeartbeatPeriod sets the value of HeartbeatPeriod.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams) SetHeartbeatPeriod(val OptNilFloat64) {
	s.HeartbeatPeriod = val
}

type GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData struct {
	RawInbound               *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbDataRawInbound `json:"rawInbound"`
	InboundTag               string                                                                        `json:"inboundTag"`
	UUID                     string                                                                        `json:"uuid"`
	ConfigProfileUuid        NilString                                                                     `json:"configProfileUuid"`
	ConfigProfileInboundUuid NilString                                                                     `json:"configProfileInboundUuid"`
	IsDisabled               bool                                                                          `json:"isDisabled"`
	ViewPosition             float64                                                                       `json:"viewPosition"`
	Remark                   string                                                                        `json:"remark"`
	IsHidden                 bool                                                                          `json:"isHidden"`
	Tag                      NilString                                                                     `json:"tag"`
	VlessRouteId             NilInt                                                                        `json:"vlessRouteId"`
}

// GetRawInbound returns the value of RawInbound.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) GetRawInbound() *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbDataRawInbound {
	return s.RawInbound
}

// GetInboundTag returns the value of InboundTag.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) GetInboundTag() string {
	return s.InboundTag
}

// GetUUID returns the value of UUID.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) GetUUID() string {
	return s.UUID
}

// GetConfigProfileUuid returns the value of ConfigProfileUuid.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) GetConfigProfileUuid() NilString {
	return s.ConfigProfileUuid
}

// GetConfigProfileInboundUuid returns the value of ConfigProfileInboundUuid.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) GetConfigProfileInboundUuid() NilString {
	return s.ConfigProfileInboundUuid
}

// GetIsDisabled returns the value of IsDisabled.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) GetIsDisabled() bool {
	return s.IsDisabled
}

// GetViewPosition returns the value of ViewPosition.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) GetViewPosition() float64 {
	return s.ViewPosition
}

// GetRemark returns the value of Remark.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) GetRemark() string {
	return s.Remark
}

// GetIsHidden returns the value of IsHidden.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) GetIsHidden() bool {
	return s.IsHidden
}

// GetTag returns the value of Tag.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) GetTag() NilString {
	return s.Tag
}

// GetVlessRouteId returns the value of VlessRouteId.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) GetVlessRouteId() NilInt {
	return s.VlessRouteId
}

// SetRawInbound sets the value of RawInbound.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) SetRawInbound(val *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbDataRawInbound) {
	s.RawInbound = val
}

// SetInboundTag sets the value of InboundTag.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) SetInboundTag(val string) {
	s.InboundTag = val
}

// SetUUID sets the value of UUID.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) SetUUID(val string) {
	s.UUID = val
}

// SetConfigProfileUuid sets the value of ConfigProfileUuid.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) SetConfigProfileUuid(val NilString) {
	s.ConfigProfileUuid = val
}

// SetConfigProfileInboundUuid sets the value of ConfigProfileInboundUuid.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) SetConfigProfileInboundUuid(val NilString) {
	s.ConfigProfileInboundUuid = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) SetIsDisabled(val bool) {
	s.IsDisabled = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) SetViewPosition(val float64) {
	s.ViewPosition = val
}

// SetRemark sets the value of Remark.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) SetRemark(val string) {
	s.Remark = val
}

// SetIsHidden sets the value of IsHidden.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) SetIsHidden(val bool) {
	s.IsHidden = val
}

// SetTag sets the value of Tag.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) SetTag(val NilString) {
	s.Tag = val
}

// SetVlessRouteId sets the value of VlessRouteId.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) SetVlessRouteId(val NilInt) {
	s.VlessRouteId = val
}

type GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbDataRawInbound struct{}

type GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams struct{}

type GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemPassword struct {
	SsPassword     string `json:"ssPassword"`
	TrojanPassword string `json:"trojanPassword"`
	VlessPassword  string `json:"vlessPassword"`
}

// GetSsPassword returns the value of SsPassword.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemPassword) GetSsPassword() string {
	return s.SsPassword
}

// GetTrojanPassword returns the value of TrojanPassword.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemPassword) GetTrojanPassword() string {
	return s.TrojanPassword
}

// GetVlessPassword returns the value of VlessPassword.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemPassword) GetVlessPassword() string {
	return s.VlessPassword
}

// SetSsPassword sets the value of SsPassword.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemPassword) SetSsPassword(val string) {
	s.SsPassword = val
}

// SetTrojanPassword sets the value of TrojanPassword.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemPassword) SetTrojanPassword(val string) {
	s.TrojanPassword = val
}

// SetVlessPassword sets the value of VlessPassword.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemPassword) SetVlessPassword(val string) {
	s.VlessPassword = val
}

type GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions struct {
	Ss OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs `json:"ss"`
}

// GetSs returns the value of Ss.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions) GetSs() OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs {
	return s.Ss
}

// SetSs sets the value of Ss.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions) SetSs(val OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs) {
	s.Ss = val
}

type GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs struct {
	Method OptNilString `json:"method"`
}

// GetMethod returns the value of Method.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs) GetMethod() OptNilString {
	return s.Method
}

// SetMethod sets the value of Method.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs) SetMethod(val OptNilString) {
	s.Method = val
}

type GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams struct{}

type GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams struct{}

type GetRawSubscriptionByShortUuidResponseDtoResponseUser struct {
	UUID                     uuid.UUID                                                     `json:"uuid"`
	ShortUuid                string                                                        `json:"shortUuid"`
	Username                 string                                                        `json:"username"`
	Status                   OptGetRawSubscriptionByShortUuidResponseDtoResponseUserStatus `json:"status"`
	UsedTrafficBytes         float64                                                       `json:"usedTrafficBytes"`
	LifetimeUsedTrafficBytes float64                                                       `json:"lifetimeUsedTrafficBytes"`
	TrafficLimitBytes        OptInt                                                        `json:"trafficLimitBytes"`
	// Available reset periods.
	TrafficLimitStrategy   OptGetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy    `json:"trafficLimitStrategy"`
	SubLastUserAgent       NilString                                                                      `json:"subLastUserAgent"`
	SubLastOpenedAt        NilDateTime                                                                    `json:"subLastOpenedAt"`
	ExpireAt               time.Time                                                                      `json:"expireAt"`
	OnlineAt               NilDateTime                                                                    `json:"onlineAt"`
	SubRevokedAt           NilDateTime                                                                    `json:"subRevokedAt"`
	LastTrafficResetAt     NilDateTime                                                                    `json:"lastTrafficResetAt"`
	TrojanPassword         string                                                                         `json:"trojanPassword"`
	VlessUuid              uuid.UUID                                                                      `json:"vlessUuid"`
	SsPassword             string                                                                         `json:"ssPassword"`
	Description            NilString                                                                      `json:"description"`
	Tag                    NilString                                                                      `json:"tag"`
	TelegramId             NilInt                                                                         `json:"telegramId"`
	Email                  NilString                                                                      `json:"email"`
	HwidDeviceLimit        NilInt                                                                         `json:"hwidDeviceLimit"`
	FirstConnectedAt       NilDateTime                                                                    `json:"firstConnectedAt"`
	LastTriggeredThreshold OptInt                                                                         `json:"lastTriggeredThreshold"`
	CreatedAt              time.Time                                                                      `json:"createdAt"`
	UpdatedAt              time.Time                                                                      `json:"updatedAt"`
	ActiveInternalSquads   []GetRawSubscriptionByShortUuidResponseDtoResponseUserActiveInternalSquadsItem `json:"activeInternalSquads"`
	ExternalSquadUuid      NilUUID                                                                        `json:"externalSquadUuid"`
	SubscriptionUrl        string                                                                         `json:"subscriptionUrl"`
	LastConnectedNode      NilGetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode       `json:"lastConnectedNode"`
	Happ                   GetRawSubscriptionByShortUuidResponseDtoResponseUserHapp                       `json:"happ"`
}

// GetUUID returns the value of UUID.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetUUID() uuid.UUID {
	return s.UUID
}

// GetShortUuid returns the value of ShortUuid.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetShortUuid() string {
	return s.ShortUuid
}

// GetUsername returns the value of Username.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetUsername() string {
	return s.Username
}

// GetStatus returns the value of Status.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetStatus() OptGetRawSubscriptionByShortUuidResponseDtoResponseUserStatus {
	return s.Status
}

// GetUsedTrafficBytes returns the value of UsedTrafficBytes.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetUsedTrafficBytes() float64 {
	return s.UsedTrafficBytes
}

// GetLifetimeUsedTrafficBytes returns the value of LifetimeUsedTrafficBytes.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetLifetimeUsedTrafficBytes() float64 {
	return s.LifetimeUsedTrafficBytes
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetTrafficLimitStrategy() OptGetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetSubLastUserAgent returns the value of SubLastUserAgent.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetSubLastUserAgent() NilString {
	return s.SubLastUserAgent
}

// GetSubLastOpenedAt returns the value of SubLastOpenedAt.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetSubLastOpenedAt() NilDateTime {
	return s.SubLastOpenedAt
}

// GetExpireAt returns the value of ExpireAt.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetExpireAt() time.Time {
	return s.ExpireAt
}

// GetOnlineAt returns the value of OnlineAt.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetOnlineAt() NilDateTime {
	return s.OnlineAt
}

// GetSubRevokedAt returns the value of SubRevokedAt.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetSubRevokedAt() NilDateTime {
	return s.SubRevokedAt
}

// GetLastTrafficResetAt returns the value of LastTrafficResetAt.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetLastTrafficResetAt() NilDateTime {
	return s.LastTrafficResetAt
}

// GetTrojanPassword returns the value of TrojanPassword.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetTrojanPassword() string {
	return s.TrojanPassword
}

// GetVlessUuid returns the value of VlessUuid.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetVlessUuid() uuid.UUID {
	return s.VlessUuid
}

// GetSsPassword returns the value of SsPassword.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetSsPassword() string {
	return s.SsPassword
}

// GetDescription returns the value of Description.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetDescription() NilString {
	return s.Description
}

// GetTag returns the value of Tag.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetTag() NilString {
	return s.Tag
}

// GetTelegramId returns the value of TelegramId.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetTelegramId() NilInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetEmail() NilString {
	return s.Email
}

// GetHwidDeviceLimit returns the value of HwidDeviceLimit.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetHwidDeviceLimit() NilInt {
	return s.HwidDeviceLimit
}

// GetFirstConnectedAt returns the value of FirstConnectedAt.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetFirstConnectedAt() NilDateTime {
	return s.FirstConnectedAt
}

// GetLastTriggeredThreshold returns the value of LastTriggeredThreshold.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetLastTriggeredThreshold() OptInt {
	return s.LastTriggeredThreshold
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetActiveInternalSquads returns the value of ActiveInternalSquads.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetActiveInternalSquads() []GetRawSubscriptionByShortUuidResponseDtoResponseUserActiveInternalSquadsItem {
	return s.ActiveInternalSquads
}

// GetExternalSquadUuid returns the value of ExternalSquadUuid.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetExternalSquadUuid() NilUUID {
	return s.ExternalSquadUuid
}

// GetSubscriptionUrl returns the value of SubscriptionUrl.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetSubscriptionUrl() string {
	return s.SubscriptionUrl
}

// GetLastConnectedNode returns the value of LastConnectedNode.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetLastConnectedNode() NilGetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode {
	return s.LastConnectedNode
}

// GetHapp returns the value of Happ.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) GetHapp() GetRawSubscriptionByShortUuidResponseDtoResponseUserHapp {
	return s.Happ
}

// SetUUID sets the value of UUID.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetShortUuid sets the value of ShortUuid.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetShortUuid(val string) {
	s.ShortUuid = val
}

// SetUsername sets the value of Username.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetUsername(val string) {
	s.Username = val
}

// SetStatus sets the value of Status.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetStatus(val OptGetRawSubscriptionByShortUuidResponseDtoResponseUserStatus) {
	s.Status = val
}

// SetUsedTrafficBytes sets the value of UsedTrafficBytes.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetUsedTrafficBytes(val float64) {
	s.UsedTrafficBytes = val
}

// SetLifetimeUsedTrafficBytes sets the value of LifetimeUsedTrafficBytes.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetLifetimeUsedTrafficBytes(val float64) {
	s.LifetimeUsedTrafficBytes = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetTrafficLimitStrategy(val OptGetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetSubLastUserAgent sets the value of SubLastUserAgent.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetSubLastUserAgent(val NilString) {
	s.SubLastUserAgent = val
}

// SetSubLastOpenedAt sets the value of SubLastOpenedAt.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetSubLastOpenedAt(val NilDateTime) {
	s.SubLastOpenedAt = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetExpireAt(val time.Time) {
	s.ExpireAt = val
}

// SetOnlineAt sets the value of OnlineAt.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetOnlineAt(val NilDateTime) {
	s.OnlineAt = val
}

// SetSubRevokedAt sets the value of SubRevokedAt.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetSubRevokedAt(val NilDateTime) {
	s.SubRevokedAt = val
}

// SetLastTrafficResetAt sets the value of LastTrafficResetAt.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetLastTrafficResetAt(val NilDateTime) {
	s.LastTrafficResetAt = val
}

// SetTrojanPassword sets the value of TrojanPassword.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetTrojanPassword(val string) {
	s.TrojanPassword = val
}

// SetVlessUuid sets the value of VlessUuid.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetVlessUuid(val uuid.UUID) {
	s.VlessUuid = val
}

// SetSsPassword sets the value of SsPassword.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetSsPassword(val string) {
	s.SsPassword = val
}

// SetDescription sets the value of Description.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetDescription(val NilString) {
	s.Description = val
}

// SetTag sets the value of Tag.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetTag(val NilString) {
	s.Tag = val
}

// SetTelegramId sets the value of TelegramId.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetTelegramId(val NilInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetEmail(val NilString) {
	s.Email = val
}

// SetHwidDeviceLimit sets the value of HwidDeviceLimit.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetHwidDeviceLimit(val NilInt) {
	s.HwidDeviceLimit = val
}

// SetFirstConnectedAt sets the value of FirstConnectedAt.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetFirstConnectedAt(val NilDateTime) {
	s.FirstConnectedAt = val
}

// SetLastTriggeredThreshold sets the value of LastTriggeredThreshold.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetLastTriggeredThreshold(val OptInt) {
	s.LastTriggeredThreshold = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetActiveInternalSquads sets the value of ActiveInternalSquads.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetActiveInternalSquads(val []GetRawSubscriptionByShortUuidResponseDtoResponseUserActiveInternalSquadsItem) {
	s.ActiveInternalSquads = val
}

// SetExternalSquadUuid sets the value of ExternalSquadUuid.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetExternalSquadUuid(val NilUUID) {
	s.ExternalSquadUuid = val
}

// SetSubscriptionUrl sets the value of SubscriptionUrl.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetSubscriptionUrl(val string) {
	s.SubscriptionUrl = val
}

// SetLastConnectedNode sets the value of LastConnectedNode.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetLastConnectedNode(val NilGetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode) {
	s.LastConnectedNode = val
}

// SetHapp sets the value of Happ.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUser) SetHapp(val GetRawSubscriptionByShortUuidResponseDtoResponseUserHapp) {
	s.Happ = val
}

type GetRawSubscriptionByShortUuidResponseDtoResponseUserActiveInternalSquadsItem struct {
	UUID uuid.UUID `json:"uuid"`
	Name string    `json:"name"`
}

// GetUUID returns the value of UUID.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserActiveInternalSquadsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserActiveInternalSquadsItem) GetName() string {
	return s.Name
}

// SetUUID sets the value of UUID.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserActiveInternalSquadsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserActiveInternalSquadsItem) SetName(val string) {
	s.Name = val
}

type GetRawSubscriptionByShortUuidResponseDtoResponseUserHapp struct {
	CryptoLink string `json:"cryptoLink"`
}

// GetCryptoLink returns the value of CryptoLink.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserHapp) GetCryptoLink() string {
	return s.CryptoLink
}

// SetCryptoLink sets the value of CryptoLink.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserHapp) SetCryptoLink(val string) {
	s.CryptoLink = val
}

type GetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode struct {
	ConnectedAt time.Time `json:"connectedAt"`
	NodeName    string    `json:"nodeName"`
	CountryCode string    `json:"countryCode"`
}

// GetConnectedAt returns the value of ConnectedAt.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode) GetConnectedAt() time.Time {
	return s.ConnectedAt
}

// GetNodeName returns the value of NodeName.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode) GetNodeName() string {
	return s.NodeName
}

// GetCountryCode returns the value of CountryCode.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode) GetCountryCode() string {
	return s.CountryCode
}

// SetConnectedAt sets the value of ConnectedAt.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode) SetConnectedAt(val time.Time) {
	s.ConnectedAt = val
}

// SetNodeName sets the value of NodeName.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode) SetNodeName(val string) {
	s.NodeName = val
}

// SetCountryCode sets the value of CountryCode.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode) SetCountryCode(val string) {
	s.CountryCode = val
}

type GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus string

const (
	GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusACTIVE   GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus = "ACTIVE"
	GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusDISABLED GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus = "DISABLED"
	GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusLIMITED  GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus = "LIMITED"
	GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusEXPIRED  GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus = "EXPIRED"
)

// AllValues returns all GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus values.
func (GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus) AllValues() []GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus {
	return []GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus{
		GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusACTIVE,
		GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusDISABLED,
		GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusLIMITED,
		GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus) MarshalText() ([]byte, error) {
	switch s {
	case GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusACTIVE:
		return []byte(s), nil
	case GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusDISABLED:
		return []byte(s), nil
	case GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusLIMITED:
		return []byte(s), nil
	case GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus) UnmarshalText(data []byte) error {
	switch GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus(data) {
	case GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusACTIVE:
		*s = GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusACTIVE
		return nil
	case GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusDISABLED:
		*s = GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusDISABLED
		return nil
	case GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusLIMITED:
		*s = GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusLIMITED
		return nil
	case GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusEXPIRED:
		*s = GetRawSubscriptionByShortUuidResponseDtoResponseUserStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Available reset periods.
type GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy string

const (
	GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyNORESET GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy = "NO_RESET"
	GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyDAY     GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy = "DAY"
	GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyWEEK    GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy = "WEEK"
	GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyMONTH   GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy = "MONTH"
)

// AllValues returns all GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy values.
func (GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy) AllValues() []GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy {
	return []GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy{
		GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyNORESET,
		GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyDAY,
		GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyWEEK,
		GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyDAY:
		return []byte(s), nil
	case GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy(data) {
	case GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyNORESET:
		*s = GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyNORESET
		return nil
	case GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyDAY:
		*s = GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyDAY
		return nil
	case GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyWEEK:
		*s = GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyWEEK
		return nil
	case GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyMONTH:
		*s = GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/GetRemnawaveHealthResponseDto
type GetRemnawaveHealthResponseDto struct {
	Response GetRemnawaveHealthResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetRemnawaveHealthResponseDto) GetResponse() GetRemnawaveHealthResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetRemnawaveHealthResponseDto) SetResponse(val GetRemnawaveHealthResponseDtoResponse) {
	s.Response = val
}

func (*GetRemnawaveHealthResponseDto) systemControllerGetRemnawaveHealthRes() {}

type GetRemnawaveHealthResponseDtoResponse struct {
	Pm2Stats []GetRemnawaveHealthResponseDtoResponsePm2StatsItem `json:"pm2Stats"`
}

// GetPm2Stats returns the value of Pm2Stats.
func (s *GetRemnawaveHealthResponseDtoResponse) GetPm2Stats() []GetRemnawaveHealthResponseDtoResponsePm2StatsItem {
	return s.Pm2Stats
}

// SetPm2Stats sets the value of Pm2Stats.
func (s *GetRemnawaveHealthResponseDtoResponse) SetPm2Stats(val []GetRemnawaveHealthResponseDtoResponsePm2StatsItem) {
	s.Pm2Stats = val
}

type GetRemnawaveHealthResponseDtoResponsePm2StatsItem struct {
	Name   string `json:"name"`
	Memory string `json:"memory"`
	CPU    string `json:"cpu"`
}

// GetName returns the value of Name.
func (s *GetRemnawaveHealthResponseDtoResponsePm2StatsItem) GetName() string {
	return s.Name
}

// GetMemory returns the value of Memory.
func (s *GetRemnawaveHealthResponseDtoResponsePm2StatsItem) GetMemory() string {
	return s.Memory
}

// GetCPU returns the value of CPU.
func (s *GetRemnawaveHealthResponseDtoResponsePm2StatsItem) GetCPU() string {
	return s.CPU
}

// SetName sets the value of Name.
func (s *GetRemnawaveHealthResponseDtoResponsePm2StatsItem) SetName(val string) {
	s.Name = val
}

// SetMemory sets the value of Memory.
func (s *GetRemnawaveHealthResponseDtoResponsePm2StatsItem) SetMemory(val string) {
	s.Memory = val
}

// SetCPU sets the value of CPU.
func (s *GetRemnawaveHealthResponseDtoResponsePm2StatsItem) SetCPU(val string) {
	s.CPU = val
}

// Ref: #/components/schemas/GetStatsResponseDto
type GetStatsResponseDto struct {
	Response GetStatsResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetStatsResponseDto) GetResponse() GetStatsResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetStatsResponseDto) SetResponse(val GetStatsResponseDtoResponse) {
	s.Response = val
}

func (*GetStatsResponseDto) systemControllerGetStatsRes() {}

type GetStatsResponseDtoResponse struct {
	CPU         GetStatsResponseDtoResponseCPU         `json:"cpu"`
	Memory      GetStatsResponseDtoResponseMemory      `json:"memory"`
	Uptime      float64                                `json:"uptime"`
	Timestamp   float64                                `json:"timestamp"`
	Users       GetStatsResponseDtoResponseUsers       `json:"users"`
	OnlineStats GetStatsResponseDtoResponseOnlineStats `json:"onlineStats"`
	Nodes       GetStatsResponseDtoResponseNodes       `json:"nodes"`
}

// GetCPU returns the value of CPU.
func (s *GetStatsResponseDtoResponse) GetCPU() GetStatsResponseDtoResponseCPU {
	return s.CPU
}

// GetMemory returns the value of Memory.
func (s *GetStatsResponseDtoResponse) GetMemory() GetStatsResponseDtoResponseMemory {
	return s.Memory
}

// GetUptime returns the value of Uptime.
func (s *GetStatsResponseDtoResponse) GetUptime() float64 {
	return s.Uptime
}

// GetTimestamp returns the value of Timestamp.
func (s *GetStatsResponseDtoResponse) GetTimestamp() float64 {
	return s.Timestamp
}

// GetUsers returns the value of Users.
func (s *GetStatsResponseDtoResponse) GetUsers() GetStatsResponseDtoResponseUsers {
	return s.Users
}

// GetOnlineStats returns the value of OnlineStats.
func (s *GetStatsResponseDtoResponse) GetOnlineStats() GetStatsResponseDtoResponseOnlineStats {
	return s.OnlineStats
}

// GetNodes returns the value of Nodes.
func (s *GetStatsResponseDtoResponse) GetNodes() GetStatsResponseDtoResponseNodes {
	return s.Nodes
}

// SetCPU sets the value of CPU.
func (s *GetStatsResponseDtoResponse) SetCPU(val GetStatsResponseDtoResponseCPU) {
	s.CPU = val
}

// SetMemory sets the value of Memory.
func (s *GetStatsResponseDtoResponse) SetMemory(val GetStatsResponseDtoResponseMemory) {
	s.Memory = val
}

// SetUptime sets the value of Uptime.
func (s *GetStatsResponseDtoResponse) SetUptime(val float64) {
	s.Uptime = val
}

// SetTimestamp sets the value of Timestamp.
func (s *GetStatsResponseDtoResponse) SetTimestamp(val float64) {
	s.Timestamp = val
}

// SetUsers sets the value of Users.
func (s *GetStatsResponseDtoResponse) SetUsers(val GetStatsResponseDtoResponseUsers) {
	s.Users = val
}

// SetOnlineStats sets the value of OnlineStats.
func (s *GetStatsResponseDtoResponse) SetOnlineStats(val GetStatsResponseDtoResponseOnlineStats) {
	s.OnlineStats = val
}

// SetNodes sets the value of Nodes.
func (s *GetStatsResponseDtoResponse) SetNodes(val GetStatsResponseDtoResponseNodes) {
	s.Nodes = val
}

type GetStatsResponseDtoResponseCPU struct {
	Cores         float64 `json:"cores"`
	PhysicalCores float64 `json:"physicalCores"`
}

// GetCores returns the value of Cores.
func (s *GetStatsResponseDtoResponseCPU) GetCores() float64 {
	return s.Cores
}

// GetPhysicalCores returns the value of PhysicalCores.
func (s *GetStatsResponseDtoResponseCPU) GetPhysicalCores() float64 {
	return s.PhysicalCores
}

// SetCores sets the value of Cores.
func (s *GetStatsResponseDtoResponseCPU) SetCores(val float64) {
	s.Cores = val
}

// SetPhysicalCores sets the value of PhysicalCores.
func (s *GetStatsResponseDtoResponseCPU) SetPhysicalCores(val float64) {
	s.PhysicalCores = val
}

type GetStatsResponseDtoResponseMemory struct {
	Total     float64 `json:"total"`
	Free      float64 `json:"free"`
	Used      float64 `json:"used"`
	Active    float64 `json:"active"`
	Available float64 `json:"available"`
}

// GetTotal returns the value of Total.
func (s *GetStatsResponseDtoResponseMemory) GetTotal() float64 {
	return s.Total
}

// GetFree returns the value of Free.
func (s *GetStatsResponseDtoResponseMemory) GetFree() float64 {
	return s.Free
}

// GetUsed returns the value of Used.
func (s *GetStatsResponseDtoResponseMemory) GetUsed() float64 {
	return s.Used
}

// GetActive returns the value of Active.
func (s *GetStatsResponseDtoResponseMemory) GetActive() float64 {
	return s.Active
}

// GetAvailable returns the value of Available.
func (s *GetStatsResponseDtoResponseMemory) GetAvailable() float64 {
	return s.Available
}

// SetTotal sets the value of Total.
func (s *GetStatsResponseDtoResponseMemory) SetTotal(val float64) {
	s.Total = val
}

// SetFree sets the value of Free.
func (s *GetStatsResponseDtoResponseMemory) SetFree(val float64) {
	s.Free = val
}

// SetUsed sets the value of Used.
func (s *GetStatsResponseDtoResponseMemory) SetUsed(val float64) {
	s.Used = val
}

// SetActive sets the value of Active.
func (s *GetStatsResponseDtoResponseMemory) SetActive(val float64) {
	s.Active = val
}

// SetAvailable sets the value of Available.
func (s *GetStatsResponseDtoResponseMemory) SetAvailable(val float64) {
	s.Available = val
}

type GetStatsResponseDtoResponseNodes struct {
	TotalOnline float64 `json:"totalOnline"`
}

// GetTotalOnline returns the value of TotalOnline.
func (s *GetStatsResponseDtoResponseNodes) GetTotalOnline() float64 {
	return s.TotalOnline
}

// SetTotalOnline sets the value of TotalOnline.
func (s *GetStatsResponseDtoResponseNodes) SetTotalOnline(val float64) {
	s.TotalOnline = val
}

type GetStatsResponseDtoResponseOnlineStats struct {
	LastDay     float64 `json:"lastDay"`
	LastWeek    float64 `json:"lastWeek"`
	NeverOnline float64 `json:"neverOnline"`
	OnlineNow   float64 `json:"onlineNow"`
}

// GetLastDay returns the value of LastDay.
func (s *GetStatsResponseDtoResponseOnlineStats) GetLastDay() float64 {
	return s.LastDay
}

// GetLastWeek returns the value of LastWeek.
func (s *GetStatsResponseDtoResponseOnlineStats) GetLastWeek() float64 {
	return s.LastWeek
}

// GetNeverOnline returns the value of NeverOnline.
func (s *GetStatsResponseDtoResponseOnlineStats) GetNeverOnline() float64 {
	return s.NeverOnline
}

// GetOnlineNow returns the value of OnlineNow.
func (s *GetStatsResponseDtoResponseOnlineStats) GetOnlineNow() float64 {
	return s.OnlineNow
}

// SetLastDay sets the value of LastDay.
func (s *GetStatsResponseDtoResponseOnlineStats) SetLastDay(val float64) {
	s.LastDay = val
}

// SetLastWeek sets the value of LastWeek.
func (s *GetStatsResponseDtoResponseOnlineStats) SetLastWeek(val float64) {
	s.LastWeek = val
}

// SetNeverOnline sets the value of NeverOnline.
func (s *GetStatsResponseDtoResponseOnlineStats) SetNeverOnline(val float64) {
	s.NeverOnline = val
}

// SetOnlineNow sets the value of OnlineNow.
func (s *GetStatsResponseDtoResponseOnlineStats) SetOnlineNow(val float64) {
	s.OnlineNow = val
}

type GetStatsResponseDtoResponseUsers struct {
	StatusCounts      GetStatsResponseDtoResponseUsersStatusCounts `json:"statusCounts"`
	TotalUsers        float64                                      `json:"totalUsers"`
	TotalTrafficBytes string                                       `json:"totalTrafficBytes"`
}

// GetStatusCounts returns the value of StatusCounts.
func (s *GetStatsResponseDtoResponseUsers) GetStatusCounts() GetStatsResponseDtoResponseUsersStatusCounts {
	return s.StatusCounts
}

// GetTotalUsers returns the value of TotalUsers.
func (s *GetStatsResponseDtoResponseUsers) GetTotalUsers() float64 {
	return s.TotalUsers
}

// GetTotalTrafficBytes returns the value of TotalTrafficBytes.
func (s *GetStatsResponseDtoResponseUsers) GetTotalTrafficBytes() string {
	return s.TotalTrafficBytes
}

// SetStatusCounts sets the value of StatusCounts.
func (s *GetStatsResponseDtoResponseUsers) SetStatusCounts(val GetStatsResponseDtoResponseUsersStatusCounts) {
	s.StatusCounts = val
}

// SetTotalUsers sets the value of TotalUsers.
func (s *GetStatsResponseDtoResponseUsers) SetTotalUsers(val float64) {
	s.TotalUsers = val
}

// SetTotalTrafficBytes sets the value of TotalTrafficBytes.
func (s *GetStatsResponseDtoResponseUsers) SetTotalTrafficBytes(val string) {
	s.TotalTrafficBytes = val
}

type GetStatsResponseDtoResponseUsersStatusCounts map[string]float64

func (s *GetStatsResponseDtoResponseUsersStatusCounts) init() GetStatsResponseDtoResponseUsersStatusCounts {
	m := *s
	if m == nil {
		m = map[string]float64{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/GetStatusResponseDto
type GetStatusResponseDto struct {
	Response GetStatusResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetStatusResponseDto) GetResponse() GetStatusResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetStatusResponseDto) SetResponse(val GetStatusResponseDtoResponse) {
	s.Response = val
}

type GetStatusResponseDtoResponse struct {
	IsLoginAllowed    bool                                          `json:"isLoginAllowed"`
	IsRegisterAllowed bool                                          `json:"isRegisterAllowed"`
	Authentication    NilGetStatusResponseDtoResponseAuthentication `json:"authentication"`
	Branding          GetStatusResponseDtoResponseBranding          `json:"branding"`
}

// GetIsLoginAllowed returns the value of IsLoginAllowed.
func (s *GetStatusResponseDtoResponse) GetIsLoginAllowed() bool {
	return s.IsLoginAllowed
}

// GetIsRegisterAllowed returns the value of IsRegisterAllowed.
func (s *GetStatusResponseDtoResponse) GetIsRegisterAllowed() bool {
	return s.IsRegisterAllowed
}

// GetAuthentication returns the value of Authentication.
func (s *GetStatusResponseDtoResponse) GetAuthentication() NilGetStatusResponseDtoResponseAuthentication {
	return s.Authentication
}

// GetBranding returns the value of Branding.
func (s *GetStatusResponseDtoResponse) GetBranding() GetStatusResponseDtoResponseBranding {
	return s.Branding
}

// SetIsLoginAllowed sets the value of IsLoginAllowed.
func (s *GetStatusResponseDtoResponse) SetIsLoginAllowed(val bool) {
	s.IsLoginAllowed = val
}

// SetIsRegisterAllowed sets the value of IsRegisterAllowed.
func (s *GetStatusResponseDtoResponse) SetIsRegisterAllowed(val bool) {
	s.IsRegisterAllowed = val
}

// SetAuthentication sets the value of Authentication.
func (s *GetStatusResponseDtoResponse) SetAuthentication(val NilGetStatusResponseDtoResponseAuthentication) {
	s.Authentication = val
}

// SetBranding sets the value of Branding.
func (s *GetStatusResponseDtoResponse) SetBranding(val GetStatusResponseDtoResponseBranding) {
	s.Branding = val
}

type GetStatusResponseDtoResponseAuthentication struct {
	Passkey  GetStatusResponseDtoResponseAuthenticationPasskey  `json:"passkey"`
	TgAuth   GetStatusResponseDtoResponseAuthenticationTgAuth   `json:"tgAuth"`
	OAuth2   GetStatusResponseDtoResponseAuthenticationOAuth2   `json:"oauth2"`
	Password GetStatusResponseDtoResponseAuthenticationPassword `json:"password"`
}

// GetPasskey returns the value of Passkey.
func (s *GetStatusResponseDtoResponseAuthentication) GetPasskey() GetStatusResponseDtoResponseAuthenticationPasskey {
	return s.Passkey
}

// GetTgAuth returns the value of TgAuth.
func (s *GetStatusResponseDtoResponseAuthentication) GetTgAuth() GetStatusResponseDtoResponseAuthenticationTgAuth {
	return s.TgAuth
}

// GetOAuth2 returns the value of OAuth2.
func (s *GetStatusResponseDtoResponseAuthentication) GetOAuth2() GetStatusResponseDtoResponseAuthenticationOAuth2 {
	return s.OAuth2
}

// GetPassword returns the value of Password.
func (s *GetStatusResponseDtoResponseAuthentication) GetPassword() GetStatusResponseDtoResponseAuthenticationPassword {
	return s.Password
}

// SetPasskey sets the value of Passkey.
func (s *GetStatusResponseDtoResponseAuthentication) SetPasskey(val GetStatusResponseDtoResponseAuthenticationPasskey) {
	s.Passkey = val
}

// SetTgAuth sets the value of TgAuth.
func (s *GetStatusResponseDtoResponseAuthentication) SetTgAuth(val GetStatusResponseDtoResponseAuthenticationTgAuth) {
	s.TgAuth = val
}

// SetOAuth2 sets the value of OAuth2.
func (s *GetStatusResponseDtoResponseAuthentication) SetOAuth2(val GetStatusResponseDtoResponseAuthenticationOAuth2) {
	s.OAuth2 = val
}

// SetPassword sets the value of Password.
func (s *GetStatusResponseDtoResponseAuthentication) SetPassword(val GetStatusResponseDtoResponseAuthenticationPassword) {
	s.Password = val
}

type GetStatusResponseDtoResponseAuthenticationOAuth2 struct {
	Providers GetStatusResponseDtoResponseAuthenticationOAuth2Providers `json:"providers"`
}

// GetProviders returns the value of Providers.
func (s *GetStatusResponseDtoResponseAuthenticationOAuth2) GetProviders() GetStatusResponseDtoResponseAuthenticationOAuth2Providers {
	return s.Providers
}

// SetProviders sets the value of Providers.
func (s *GetStatusResponseDtoResponseAuthenticationOAuth2) SetProviders(val GetStatusResponseDtoResponseAuthenticationOAuth2Providers) {
	s.Providers = val
}

type GetStatusResponseDtoResponseAuthenticationOAuth2Providers map[string]bool

func (s *GetStatusResponseDtoResponseAuthenticationOAuth2Providers) init() GetStatusResponseDtoResponseAuthenticationOAuth2Providers {
	m := *s
	if m == nil {
		m = map[string]bool{}
		*s = m
	}
	return m
}

type GetStatusResponseDtoResponseAuthenticationPasskey struct {
	Enabled bool `json:"enabled"`
}

// GetEnabled returns the value of Enabled.
func (s *GetStatusResponseDtoResponseAuthenticationPasskey) GetEnabled() bool {
	return s.Enabled
}

// SetEnabled sets the value of Enabled.
func (s *GetStatusResponseDtoResponseAuthenticationPasskey) SetEnabled(val bool) {
	s.Enabled = val
}

type GetStatusResponseDtoResponseAuthenticationPassword struct {
	Enabled bool `json:"enabled"`
}

// GetEnabled returns the value of Enabled.
func (s *GetStatusResponseDtoResponseAuthenticationPassword) GetEnabled() bool {
	return s.Enabled
}

// SetEnabled sets the value of Enabled.
func (s *GetStatusResponseDtoResponseAuthenticationPassword) SetEnabled(val bool) {
	s.Enabled = val
}

type GetStatusResponseDtoResponseAuthenticationTgAuth struct {
	Enabled bool       `json:"enabled"`
	BotId   NilFloat64 `json:"botId"`
}

// GetEnabled returns the value of Enabled.
func (s *GetStatusResponseDtoResponseAuthenticationTgAuth) GetEnabled() bool {
	return s.Enabled
}

// GetBotId returns the value of BotId.
func (s *GetStatusResponseDtoResponseAuthenticationTgAuth) GetBotId() NilFloat64 {
	return s.BotId
}

// SetEnabled sets the value of Enabled.
func (s *GetStatusResponseDtoResponseAuthenticationTgAuth) SetEnabled(val bool) {
	s.Enabled = val
}

// SetBotId sets the value of BotId.
func (s *GetStatusResponseDtoResponseAuthenticationTgAuth) SetBotId(val NilFloat64) {
	s.BotId = val
}

type GetStatusResponseDtoResponseBranding struct {
	Title   NilString `json:"title"`
	LogoUrl NilString `json:"logoUrl"`
}

// GetTitle returns the value of Title.
func (s *GetStatusResponseDtoResponseBranding) GetTitle() NilString {
	return s.Title
}

// GetLogoUrl returns the value of LogoUrl.
func (s *GetStatusResponseDtoResponseBranding) GetLogoUrl() NilString {
	return s.LogoUrl
}

// SetTitle sets the value of Title.
func (s *GetStatusResponseDtoResponseBranding) SetTitle(val NilString) {
	s.Title = val
}

// SetLogoUrl sets the value of LogoUrl.
func (s *GetStatusResponseDtoResponseBranding) SetLogoUrl(val NilString) {
	s.LogoUrl = val
}

// GetStatusResponseDtoStatusCode wraps GetStatusResponseDto with StatusCode.
type GetStatusResponseDtoStatusCode struct {
	StatusCode int
	Response   GetStatusResponseDto
}

// GetStatusCode returns the value of StatusCode.
func (s *GetStatusResponseDtoStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *GetStatusResponseDtoStatusCode) GetResponse() GetStatusResponseDto {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *GetStatusResponseDtoStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *GetStatusResponseDtoStatusCode) SetResponse(val GetStatusResponseDto) {
	s.Response = val
}

func (*GetStatusResponseDtoStatusCode) authControllerGetStatusRes() {}

// Ref: #/components/schemas/GetSubscriptionRequestHistoryResponseDto
type GetSubscriptionRequestHistoryResponseDto struct {
	Response GetSubscriptionRequestHistoryResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetSubscriptionRequestHistoryResponseDto) GetResponse() GetSubscriptionRequestHistoryResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetSubscriptionRequestHistoryResponseDto) SetResponse(val GetSubscriptionRequestHistoryResponseDtoResponse) {
	s.Response = val
}

func (*GetSubscriptionRequestHistoryResponseDto) userSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryRes() {
}

type GetSubscriptionRequestHistoryResponseDtoResponse struct {
	Records []GetSubscriptionRequestHistoryResponseDtoResponseRecordsItem `json:"records"`
	Total   float64                                                       `json:"total"`
}

// GetRecords returns the value of Records.
func (s *GetSubscriptionRequestHistoryResponseDtoResponse) GetRecords() []GetSubscriptionRequestHistoryResponseDtoResponseRecordsItem {
	return s.Records
}

// GetTotal returns the value of Total.
func (s *GetSubscriptionRequestHistoryResponseDtoResponse) GetTotal() float64 {
	return s.Total
}

// SetRecords sets the value of Records.
func (s *GetSubscriptionRequestHistoryResponseDtoResponse) SetRecords(val []GetSubscriptionRequestHistoryResponseDtoResponseRecordsItem) {
	s.Records = val
}

// SetTotal sets the value of Total.
func (s *GetSubscriptionRequestHistoryResponseDtoResponse) SetTotal(val float64) {
	s.Total = val
}

type GetSubscriptionRequestHistoryResponseDtoResponseRecordsItem struct {
	ID        float64   `json:"id"`
	UserUuid  uuid.UUID `json:"userUuid"`
	RequestIp NilString `json:"requestIp"`
	UserAgent NilString `json:"userAgent"`
	RequestAt time.Time `json:"requestAt"`
}

// GetID returns the value of ID.
func (s *GetSubscriptionRequestHistoryResponseDtoResponseRecordsItem) GetID() float64 {
	return s.ID
}

// GetUserUuid returns the value of UserUuid.
func (s *GetSubscriptionRequestHistoryResponseDtoResponseRecordsItem) GetUserUuid() uuid.UUID {
	return s.UserUuid
}

// GetRequestIp returns the value of RequestIp.
func (s *GetSubscriptionRequestHistoryResponseDtoResponseRecordsItem) GetRequestIp() NilString {
	return s.RequestIp
}

// GetUserAgent returns the value of UserAgent.
func (s *GetSubscriptionRequestHistoryResponseDtoResponseRecordsItem) GetUserAgent() NilString {
	return s.UserAgent
}

// GetRequestAt returns the value of RequestAt.
func (s *GetSubscriptionRequestHistoryResponseDtoResponseRecordsItem) GetRequestAt() time.Time {
	return s.RequestAt
}

// SetID sets the value of ID.
func (s *GetSubscriptionRequestHistoryResponseDtoResponseRecordsItem) SetID(val float64) {
	s.ID = val
}

// SetUserUuid sets the value of UserUuid.
func (s *GetSubscriptionRequestHistoryResponseDtoResponseRecordsItem) SetUserUuid(val uuid.UUID) {
	s.UserUuid = val
}

// SetRequestIp sets the value of RequestIp.
func (s *GetSubscriptionRequestHistoryResponseDtoResponseRecordsItem) SetRequestIp(val NilString) {
	s.RequestIp = val
}

// SetUserAgent sets the value of UserAgent.
func (s *GetSubscriptionRequestHistoryResponseDtoResponseRecordsItem) SetUserAgent(val NilString) {
	s.UserAgent = val
}

// SetRequestAt sets the value of RequestAt.
func (s *GetSubscriptionRequestHistoryResponseDtoResponseRecordsItem) SetRequestAt(val time.Time) {
	s.RequestAt = val
}

// Ref: #/components/schemas/GetSubscriptionRequestHistoryStatsResponseDto
type GetSubscriptionRequestHistoryStatsResponseDto struct {
	Response GetSubscriptionRequestHistoryStatsResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetSubscriptionRequestHistoryStatsResponseDto) GetResponse() GetSubscriptionRequestHistoryStatsResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetSubscriptionRequestHistoryStatsResponseDto) SetResponse(val GetSubscriptionRequestHistoryStatsResponseDtoResponse) {
	s.Response = val
}

func (*GetSubscriptionRequestHistoryStatsResponseDto) userSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsRes() {
}

type GetSubscriptionRequestHistoryStatsResponseDtoResponse struct {
	ByParsedApp        []GetSubscriptionRequestHistoryStatsResponseDtoResponseByParsedAppItem        `json:"byParsedApp"`
	HourlyRequestStats []GetSubscriptionRequestHistoryStatsResponseDtoResponseHourlyRequestStatsItem `json:"hourlyRequestStats"`
}

// GetByParsedApp returns the value of ByParsedApp.
func (s *GetSubscriptionRequestHistoryStatsResponseDtoResponse) GetByParsedApp() []GetSubscriptionRequestHistoryStatsResponseDtoResponseByParsedAppItem {
	return s.ByParsedApp
}

// GetHourlyRequestStats returns the value of HourlyRequestStats.
func (s *GetSubscriptionRequestHistoryStatsResponseDtoResponse) GetHourlyRequestStats() []GetSubscriptionRequestHistoryStatsResponseDtoResponseHourlyRequestStatsItem {
	return s.HourlyRequestStats
}

// SetByParsedApp sets the value of ByParsedApp.
func (s *GetSubscriptionRequestHistoryStatsResponseDtoResponse) SetByParsedApp(val []GetSubscriptionRequestHistoryStatsResponseDtoResponseByParsedAppItem) {
	s.ByParsedApp = val
}

// SetHourlyRequestStats sets the value of HourlyRequestStats.
func (s *GetSubscriptionRequestHistoryStatsResponseDtoResponse) SetHourlyRequestStats(val []GetSubscriptionRequestHistoryStatsResponseDtoResponseHourlyRequestStatsItem) {
	s.HourlyRequestStats = val
}

type GetSubscriptionRequestHistoryStatsResponseDtoResponseByParsedAppItem struct {
	App   string  `json:"app"`
	Count float64 `json:"count"`
}

// GetApp returns the value of App.
func (s *GetSubscriptionRequestHistoryStatsResponseDtoResponseByParsedAppItem) GetApp() string {
	return s.App
}

// GetCount returns the value of Count.
func (s *GetSubscriptionRequestHistoryStatsResponseDtoResponseByParsedAppItem) GetCount() float64 {
	return s.Count
}

// SetApp sets the value of App.
func (s *GetSubscriptionRequestHistoryStatsResponseDtoResponseByParsedAppItem) SetApp(val string) {
	s.App = val
}

// SetCount sets the value of Count.
func (s *GetSubscriptionRequestHistoryStatsResponseDtoResponseByParsedAppItem) SetCount(val float64) {
	s.Count = val
}

type GetSubscriptionRequestHistoryStatsResponseDtoResponseHourlyRequestStatsItem struct {
	DateTime     time.Time `json:"dateTime"`
	RequestCount float64   `json:"requestCount"`
}

// GetDateTime returns the value of DateTime.
func (s *GetSubscriptionRequestHistoryStatsResponseDtoResponseHourlyRequestStatsItem) GetDateTime() time.Time {
	return s.DateTime
}

// GetRequestCount returns the value of RequestCount.
func (s *GetSubscriptionRequestHistoryStatsResponseDtoResponseHourlyRequestStatsItem) GetRequestCount() float64 {
	return s.RequestCount
}

// SetDateTime sets the value of DateTime.
func (s *GetSubscriptionRequestHistoryStatsResponseDtoResponseHourlyRequestStatsItem) SetDateTime(val time.Time) {
	s.DateTime = val
}

// SetRequestCount sets the value of RequestCount.
func (s *GetSubscriptionRequestHistoryStatsResponseDtoResponseHourlyRequestStatsItem) SetRequestCount(val float64) {
	s.RequestCount = val
}

// Ref: #/components/schemas/GetTemplatesResponseDto
type GetTemplatesResponseDto struct {
	Response GetTemplatesResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetTemplatesResponseDto) GetResponse() GetTemplatesResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetTemplatesResponseDto) SetResponse(val GetTemplatesResponseDtoResponse) {
	s.Response = val
}

func (*GetTemplatesResponseDto) subscriptionTemplateControllerGetAllTemplatesRes() {}

type GetTemplatesResponseDtoResponse struct {
	Total     float64                                        `json:"total"`
	Templates []GetTemplatesResponseDtoResponseTemplatesItem `json:"templates"`
}

// GetTotal returns the value of Total.
func (s *GetTemplatesResponseDtoResponse) GetTotal() float64 {
	return s.Total
}

// GetTemplates returns the value of Templates.
func (s *GetTemplatesResponseDtoResponse) GetTemplates() []GetTemplatesResponseDtoResponseTemplatesItem {
	return s.Templates
}

// SetTotal sets the value of Total.
func (s *GetTemplatesResponseDtoResponse) SetTotal(val float64) {
	s.Total = val
}

// SetTemplates sets the value of Templates.
func (s *GetTemplatesResponseDtoResponse) SetTemplates(val []GetTemplatesResponseDtoResponseTemplatesItem) {
	s.Templates = val
}

type GetTemplatesResponseDtoResponseTemplatesItem struct {
	UUID                uuid.UUID                                                `json:"uuid"`
	Name                string                                                   `json:"name"`
	TemplateType        GetTemplatesResponseDtoResponseTemplatesItemTemplateType `json:"templateType"`
	TemplateJson        jx.Raw                                                   `json:"templateJson"`
	EncodedTemplateYaml NilString                                                `json:"encodedTemplateYaml"`
}

// GetUUID returns the value of UUID.
func (s *GetTemplatesResponseDtoResponseTemplatesItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *GetTemplatesResponseDtoResponseTemplatesItem) GetName() string {
	return s.Name
}

// GetTemplateType returns the value of TemplateType.
func (s *GetTemplatesResponseDtoResponseTemplatesItem) GetTemplateType() GetTemplatesResponseDtoResponseTemplatesItemTemplateType {
	return s.TemplateType
}

// GetTemplateJson returns the value of TemplateJson.
func (s *GetTemplatesResponseDtoResponseTemplatesItem) GetTemplateJson() jx.Raw {
	return s.TemplateJson
}

// GetEncodedTemplateYaml returns the value of EncodedTemplateYaml.
func (s *GetTemplatesResponseDtoResponseTemplatesItem) GetEncodedTemplateYaml() NilString {
	return s.EncodedTemplateYaml
}

// SetUUID sets the value of UUID.
func (s *GetTemplatesResponseDtoResponseTemplatesItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *GetTemplatesResponseDtoResponseTemplatesItem) SetName(val string) {
	s.Name = val
}

// SetTemplateType sets the value of TemplateType.
func (s *GetTemplatesResponseDtoResponseTemplatesItem) SetTemplateType(val GetTemplatesResponseDtoResponseTemplatesItemTemplateType) {
	s.TemplateType = val
}

// SetTemplateJson sets the value of TemplateJson.
func (s *GetTemplatesResponseDtoResponseTemplatesItem) SetTemplateJson(val jx.Raw) {
	s.TemplateJson = val
}

// SetEncodedTemplateYaml sets the value of EncodedTemplateYaml.
func (s *GetTemplatesResponseDtoResponseTemplatesItem) SetEncodedTemplateYaml(val NilString) {
	s.EncodedTemplateYaml = val
}

type GetTemplatesResponseDtoResponseTemplatesItemTemplateType string

const (
	GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeXRAYJSON   GetTemplatesResponseDtoResponseTemplatesItemTemplateType = "XRAY_JSON"
	GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeXRAYBASE64 GetTemplatesResponseDtoResponseTemplatesItemTemplateType = "XRAY_BASE64"
	GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeMIHOMO     GetTemplatesResponseDtoResponseTemplatesItemTemplateType = "MIHOMO"
	GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeSTASH      GetTemplatesResponseDtoResponseTemplatesItemTemplateType = "STASH"
	GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeCLASH      GetTemplatesResponseDtoResponseTemplatesItemTemplateType = "CLASH"
	GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeSINGBOX    GetTemplatesResponseDtoResponseTemplatesItemTemplateType = "SINGBOX"
)

// AllValues returns all GetTemplatesResponseDtoResponseTemplatesItemTemplateType values.
func (GetTemplatesResponseDtoResponseTemplatesItemTemplateType) AllValues() []GetTemplatesResponseDtoResponseTemplatesItemTemplateType {
	return []GetTemplatesResponseDtoResponseTemplatesItemTemplateType{
		GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeXRAYJSON,
		GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeXRAYBASE64,
		GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeMIHOMO,
		GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeSTASH,
		GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeCLASH,
		GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeSINGBOX,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetTemplatesResponseDtoResponseTemplatesItemTemplateType) MarshalText() ([]byte, error) {
	switch s {
	case GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeXRAYJSON:
		return []byte(s), nil
	case GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeXRAYBASE64:
		return []byte(s), nil
	case GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeMIHOMO:
		return []byte(s), nil
	case GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeSTASH:
		return []byte(s), nil
	case GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeCLASH:
		return []byte(s), nil
	case GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeSINGBOX:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetTemplatesResponseDtoResponseTemplatesItemTemplateType) UnmarshalText(data []byte) error {
	switch GetTemplatesResponseDtoResponseTemplatesItemTemplateType(data) {
	case GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeXRAYJSON:
		*s = GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeXRAYJSON
		return nil
	case GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeXRAYBASE64:
		*s = GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeXRAYBASE64
		return nil
	case GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeMIHOMO:
		*s = GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeMIHOMO
		return nil
	case GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeSTASH:
		*s = GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeSTASH
		return nil
	case GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeCLASH:
		*s = GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeCLASH
		return nil
	case GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeSINGBOX:
		*s = GetTemplatesResponseDtoResponseTemplatesItemTemplateTypeSINGBOX
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/GetUserAccessibleNodesResponseDto
type GetUserAccessibleNodesResponseDto struct {
	Response GetUserAccessibleNodesResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetUserAccessibleNodesResponseDto) GetResponse() GetUserAccessibleNodesResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetUserAccessibleNodesResponseDto) SetResponse(val GetUserAccessibleNodesResponseDtoResponse) {
	s.Response = val
}

func (*GetUserAccessibleNodesResponseDto) usersControllerGetUserAccessibleNodesRes() {}

type GetUserAccessibleNodesResponseDtoResponse struct {
	UserUuid    uuid.UUID                                                  `json:"userUuid"`
	ActiveNodes []GetUserAccessibleNodesResponseDtoResponseActiveNodesItem `json:"activeNodes"`
}

// GetUserUuid returns the value of UserUuid.
func (s *GetUserAccessibleNodesResponseDtoResponse) GetUserUuid() uuid.UUID {
	return s.UserUuid
}

// GetActiveNodes returns the value of ActiveNodes.
func (s *GetUserAccessibleNodesResponseDtoResponse) GetActiveNodes() []GetUserAccessibleNodesResponseDtoResponseActiveNodesItem {
	return s.ActiveNodes
}

// SetUserUuid sets the value of UserUuid.
func (s *GetUserAccessibleNodesResponseDtoResponse) SetUserUuid(val uuid.UUID) {
	s.UserUuid = val
}

// SetActiveNodes sets the value of ActiveNodes.
func (s *GetUserAccessibleNodesResponseDtoResponse) SetActiveNodes(val []GetUserAccessibleNodesResponseDtoResponseActiveNodesItem) {
	s.ActiveNodes = val
}

type GetUserAccessibleNodesResponseDtoResponseActiveNodesItem struct {
	UUID              uuid.UUID                                                                  `json:"uuid"`
	NodeName          string                                                                     `json:"nodeName"`
	CountryCode       string                                                                     `json:"countryCode"`
	ConfigProfileUuid uuid.UUID                                                                  `json:"configProfileUuid"`
	ConfigProfileName string                                                                     `json:"configProfileName"`
	ActiveSquads      []GetUserAccessibleNodesResponseDtoResponseActiveNodesItemActiveSquadsItem `json:"activeSquads"`
}

// GetUUID returns the value of UUID.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetNodeName returns the value of NodeName.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItem) GetNodeName() string {
	return s.NodeName
}

// GetCountryCode returns the value of CountryCode.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItem) GetCountryCode() string {
	return s.CountryCode
}

// GetConfigProfileUuid returns the value of ConfigProfileUuid.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItem) GetConfigProfileUuid() uuid.UUID {
	return s.ConfigProfileUuid
}

// GetConfigProfileName returns the value of ConfigProfileName.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItem) GetConfigProfileName() string {
	return s.ConfigProfileName
}

// GetActiveSquads returns the value of ActiveSquads.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItem) GetActiveSquads() []GetUserAccessibleNodesResponseDtoResponseActiveNodesItemActiveSquadsItem {
	return s.ActiveSquads
}

// SetUUID sets the value of UUID.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetNodeName sets the value of NodeName.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItem) SetNodeName(val string) {
	s.NodeName = val
}

// SetCountryCode sets the value of CountryCode.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItem) SetCountryCode(val string) {
	s.CountryCode = val
}

// SetConfigProfileUuid sets the value of ConfigProfileUuid.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItem) SetConfigProfileUuid(val uuid.UUID) {
	s.ConfigProfileUuid = val
}

// SetConfigProfileName sets the value of ConfigProfileName.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItem) SetConfigProfileName(val string) {
	s.ConfigProfileName = val
}

// SetActiveSquads sets the value of ActiveSquads.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItem) SetActiveSquads(val []GetUserAccessibleNodesResponseDtoResponseActiveNodesItemActiveSquadsItem) {
	s.ActiveSquads = val
}

type GetUserAccessibleNodesResponseDtoResponseActiveNodesItemActiveSquadsItem struct {
	SquadName      string   `json:"squadName"`
	ActiveInbounds []string `json:"activeInbounds"`
}

// GetSquadName returns the value of SquadName.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItemActiveSquadsItem) GetSquadName() string {
	return s.SquadName
}

// GetActiveInbounds returns the value of ActiveInbounds.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItemActiveSquadsItem) GetActiveInbounds() []string {
	return s.ActiveInbounds
}

// SetSquadName sets the value of SquadName.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItemActiveSquadsItem) SetSquadName(val string) {
	s.SquadName = val
}

// SetActiveInbounds sets the value of ActiveInbounds.
func (s *GetUserAccessibleNodesResponseDtoResponseActiveNodesItemActiveSquadsItem) SetActiveInbounds(val []string) {
	s.ActiveInbounds = val
}

// Ref: #/components/schemas/GetUserSubscriptionRequestHistoryResponseDto
type GetUserSubscriptionRequestHistoryResponseDto struct {
	Response GetUserSubscriptionRequestHistoryResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetUserSubscriptionRequestHistoryResponseDto) GetResponse() GetUserSubscriptionRequestHistoryResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetUserSubscriptionRequestHistoryResponseDto) SetResponse(val GetUserSubscriptionRequestHistoryResponseDtoResponse) {
	s.Response = val
}

func (*GetUserSubscriptionRequestHistoryResponseDto) usersControllerGetUserSubscriptionRequestHistoryRes() {
}

type GetUserSubscriptionRequestHistoryResponseDtoResponse struct {
	Total   float64                                                           `json:"total"`
	Records []GetUserSubscriptionRequestHistoryResponseDtoResponseRecordsItem `json:"records"`
}

// GetTotal returns the value of Total.
func (s *GetUserSubscriptionRequestHistoryResponseDtoResponse) GetTotal() float64 {
	return s.Total
}

// GetRecords returns the value of Records.
func (s *GetUserSubscriptionRequestHistoryResponseDtoResponse) GetRecords() []GetUserSubscriptionRequestHistoryResponseDtoResponseRecordsItem {
	return s.Records
}

// SetTotal sets the value of Total.
func (s *GetUserSubscriptionRequestHistoryResponseDtoResponse) SetTotal(val float64) {
	s.Total = val
}

// SetRecords sets the value of Records.
func (s *GetUserSubscriptionRequestHistoryResponseDtoResponse) SetRecords(val []GetUserSubscriptionRequestHistoryResponseDtoResponseRecordsItem) {
	s.Records = val
}

type GetUserSubscriptionRequestHistoryResponseDtoResponseRecordsItem struct {
	ID        float64   `json:"id"`
	UserUuid  uuid.UUID `json:"userUuid"`
	RequestAt time.Time `json:"requestAt"`
	RequestIp NilString `json:"requestIp"`
	UserAgent NilString `json:"userAgent"`
}

// GetID returns the value of ID.
func (s *GetUserSubscriptionRequestHistoryResponseDtoResponseRecordsItem) GetID() float64 {
	return s.ID
}

// GetUserUuid returns the value of UserUuid.
func (s *GetUserSubscriptionRequestHistoryResponseDtoResponseRecordsItem) GetUserUuid() uuid.UUID {
	return s.UserUuid
}

// GetRequestAt returns the value of RequestAt.
func (s *GetUserSubscriptionRequestHistoryResponseDtoResponseRecordsItem) GetRequestAt() time.Time {
	return s.RequestAt
}

// GetRequestIp returns the value of RequestIp.
func (s *GetUserSubscriptionRequestHistoryResponseDtoResponseRecordsItem) GetRequestIp() NilString {
	return s.RequestIp
}

// GetUserAgent returns the value of UserAgent.
func (s *GetUserSubscriptionRequestHistoryResponseDtoResponseRecordsItem) GetUserAgent() NilString {
	return s.UserAgent
}

// SetID sets the value of ID.
func (s *GetUserSubscriptionRequestHistoryResponseDtoResponseRecordsItem) SetID(val float64) {
	s.ID = val
}

// SetUserUuid sets the value of UserUuid.
func (s *GetUserSubscriptionRequestHistoryResponseDtoResponseRecordsItem) SetUserUuid(val uuid.UUID) {
	s.UserUuid = val
}

// SetRequestAt sets the value of RequestAt.
func (s *GetUserSubscriptionRequestHistoryResponseDtoResponseRecordsItem) SetRequestAt(val time.Time) {
	s.RequestAt = val
}

// SetRequestIp sets the value of RequestIp.
func (s *GetUserSubscriptionRequestHistoryResponseDtoResponseRecordsItem) SetRequestIp(val NilString) {
	s.RequestIp = val
}

// SetUserAgent sets the value of UserAgent.
func (s *GetUserSubscriptionRequestHistoryResponseDtoResponseRecordsItem) SetUserAgent(val NilString) {
	s.UserAgent = val
}

// Ref: #/components/schemas/GetUserUsageByRangeResponseDto
type GetUserUsageByRangeResponseDto struct {
	Response []GetUserUsageByRangeResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetUserUsageByRangeResponseDto) GetResponse() []GetUserUsageByRangeResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetUserUsageByRangeResponseDto) SetResponse(val []GetUserUsageByRangeResponseDtoResponseItem) {
	s.Response = val
}

func (*GetUserUsageByRangeResponseDto) usersStatsControllerGetUserUsageByRangeRes() {}

type GetUserUsageByRangeResponseDtoResponseItem struct {
	UserUuid    uuid.UUID `json:"userUuid"`
	NodeUuid    uuid.UUID `json:"nodeUuid"`
	NodeName    string    `json:"nodeName"`
	CountryCode string    `json:"countryCode"`
	Total       float64   `json:"total"`
	Date        string    `json:"date"`
}

// GetUserUuid returns the value of UserUuid.
func (s *GetUserUsageByRangeResponseDtoResponseItem) GetUserUuid() uuid.UUID {
	return s.UserUuid
}

// GetNodeUuid returns the value of NodeUuid.
func (s *GetUserUsageByRangeResponseDtoResponseItem) GetNodeUuid() uuid.UUID {
	return s.NodeUuid
}

// GetNodeName returns the value of NodeName.
func (s *GetUserUsageByRangeResponseDtoResponseItem) GetNodeName() string {
	return s.NodeName
}

// GetCountryCode returns the value of CountryCode.
func (s *GetUserUsageByRangeResponseDtoResponseItem) GetCountryCode() string {
	return s.CountryCode
}

// GetTotal returns the value of Total.
func (s *GetUserUsageByRangeResponseDtoResponseItem) GetTotal() float64 {
	return s.Total
}

// GetDate returns the value of Date.
func (s *GetUserUsageByRangeResponseDtoResponseItem) GetDate() string {
	return s.Date
}

// SetUserUuid sets the value of UserUuid.
func (s *GetUserUsageByRangeResponseDtoResponseItem) SetUserUuid(val uuid.UUID) {
	s.UserUuid = val
}

// SetNodeUuid sets the value of NodeUuid.
func (s *GetUserUsageByRangeResponseDtoResponseItem) SetNodeUuid(val uuid.UUID) {
	s.NodeUuid = val
}

// SetNodeName sets the value of NodeName.
func (s *GetUserUsageByRangeResponseDtoResponseItem) SetNodeName(val string) {
	s.NodeName = val
}

// SetCountryCode sets the value of CountryCode.
func (s *GetUserUsageByRangeResponseDtoResponseItem) SetCountryCode(val string) {
	s.CountryCode = val
}

// SetTotal sets the value of Total.
func (s *GetUserUsageByRangeResponseDtoResponseItem) SetTotal(val float64) {
	s.Total = val
}

// SetDate sets the value of Date.
func (s *GetUserUsageByRangeResponseDtoResponseItem) SetDate(val string) {
	s.Date = val
}

// Ref: #/components/schemas/HostListResponse
type HostListResponse struct {
	Response []HostListResponseResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *HostListResponse) GetResponse() []HostListResponseResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *HostListResponse) SetResponse(val []HostListResponseResponseItem) {
	s.Response = val
}

func (*HostListResponse) hostsBulkActionsControllerDeleteHostsRes()       {}
func (*HostListResponse) hostsBulkActionsControllerDisableHostsRes()      {}
func (*HostListResponse) hostsBulkActionsControllerEnableHostsRes()       {}
func (*HostListResponse) hostsBulkActionsControllerSetInboundToHostsRes() {}
func (*HostListResponse) hostsBulkActionsControllerSetPortToHostsRes()    {}
func (*HostListResponse) hostsControllerGetAllHostsRes()                  {}

type HostListResponseResponseItem struct {
	UUID                   uuid.UUID                                    `json:"uuid"`
	ViewPosition           int                                          `json:"viewPosition"`
	Remark                 string                                       `json:"remark"`
	Address                string                                       `json:"address"`
	Port                   int                                          `json:"port"`
	Path                   NilString                                    `json:"path"`
	Sni                    NilString                                    `json:"sni"`
	Host                   NilString                                    `json:"host"`
	Alpn                   NilString                                    `json:"alpn"`
	Fingerprint            NilString                                    `json:"fingerprint"`
	IsDisabled             OptBool                                      `json:"isDisabled"`
	SecurityLayer          OptHostListResponseResponseItemSecurityLayer `json:"securityLayer"`
	XHttpExtraParams       jx.Raw                                       `json:"xHttpExtraParams"`
	MuxParams              jx.Raw                                       `json:"muxParams"`
	SockoptParams          jx.Raw                                       `json:"sockoptParams"`
	Inbound                HostListResponseResponseItemInbound          `json:"inbound"`
	ServerDescription      NilString                                    `json:"serverDescription"`
	Tag                    NilString                                    `json:"tag"`
	IsHidden               OptBool                                      `json:"isHidden"`
	OverrideSniFromAddress OptBool                                      `json:"overrideSniFromAddress"`
	VlessRouteId           NilInt                                       `json:"vlessRouteId"`
	AllowInsecure          OptBool                                      `json:"allowInsecure"`
	ShuffleHost            bool                                         `json:"shuffleHost"`
	MihomoX25519           bool                                         `json:"mihomoX25519"`
	Nodes                  []uuid.UUID                                  `json:"nodes"`
}

// GetUUID returns the value of UUID.
func (s *HostListResponseResponseItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetViewPosition returns the value of ViewPosition.
func (s *HostListResponseResponseItem) GetViewPosition() int {
	return s.ViewPosition
}

// GetRemark returns the value of Remark.
func (s *HostListResponseResponseItem) GetRemark() string {
	return s.Remark
}

// GetAddress returns the value of Address.
func (s *HostListResponseResponseItem) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *HostListResponseResponseItem) GetPort() int {
	return s.Port
}

// GetPath returns the value of Path.
func (s *HostListResponseResponseItem) GetPath() NilString {
	return s.Path
}

// GetSni returns the value of Sni.
func (s *HostListResponseResponseItem) GetSni() NilString {
	return s.Sni
}

// GetHost returns the value of Host.
func (s *HostListResponseResponseItem) GetHost() NilString {
	return s.Host
}

// GetAlpn returns the value of Alpn.
func (s *HostListResponseResponseItem) GetAlpn() NilString {
	return s.Alpn
}

// GetFingerprint returns the value of Fingerprint.
func (s *HostListResponseResponseItem) GetFingerprint() NilString {
	return s.Fingerprint
}

// GetIsDisabled returns the value of IsDisabled.
func (s *HostListResponseResponseItem) GetIsDisabled() OptBool {
	return s.IsDisabled
}

// GetSecurityLayer returns the value of SecurityLayer.
func (s *HostListResponseResponseItem) GetSecurityLayer() OptHostListResponseResponseItemSecurityLayer {
	return s.SecurityLayer
}

// GetXHttpExtraParams returns the value of XHttpExtraParams.
func (s *HostListResponseResponseItem) GetXHttpExtraParams() jx.Raw {
	return s.XHttpExtraParams
}

// GetMuxParams returns the value of MuxParams.
func (s *HostListResponseResponseItem) GetMuxParams() jx.Raw {
	return s.MuxParams
}

// GetSockoptParams returns the value of SockoptParams.
func (s *HostListResponseResponseItem) GetSockoptParams() jx.Raw {
	return s.SockoptParams
}

// GetInbound returns the value of Inbound.
func (s *HostListResponseResponseItem) GetInbound() HostListResponseResponseItemInbound {
	return s.Inbound
}

// GetServerDescription returns the value of ServerDescription.
func (s *HostListResponseResponseItem) GetServerDescription() NilString {
	return s.ServerDescription
}

// GetTag returns the value of Tag.
func (s *HostListResponseResponseItem) GetTag() NilString {
	return s.Tag
}

// GetIsHidden returns the value of IsHidden.
func (s *HostListResponseResponseItem) GetIsHidden() OptBool {
	return s.IsHidden
}

// GetOverrideSniFromAddress returns the value of OverrideSniFromAddress.
func (s *HostListResponseResponseItem) GetOverrideSniFromAddress() OptBool {
	return s.OverrideSniFromAddress
}

// GetVlessRouteId returns the value of VlessRouteId.
func (s *HostListResponseResponseItem) GetVlessRouteId() NilInt {
	return s.VlessRouteId
}

// GetAllowInsecure returns the value of AllowInsecure.
func (s *HostListResponseResponseItem) GetAllowInsecure() OptBool {
	return s.AllowInsecure
}

// GetShuffleHost returns the value of ShuffleHost.
func (s *HostListResponseResponseItem) GetShuffleHost() bool {
	return s.ShuffleHost
}

// GetMihomoX25519 returns the value of MihomoX25519.
func (s *HostListResponseResponseItem) GetMihomoX25519() bool {
	return s.MihomoX25519
}

// GetNodes returns the value of Nodes.
func (s *HostListResponseResponseItem) GetNodes() []uuid.UUID {
	return s.Nodes
}

// SetUUID sets the value of UUID.
func (s *HostListResponseResponseItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *HostListResponseResponseItem) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetRemark sets the value of Remark.
func (s *HostListResponseResponseItem) SetRemark(val string) {
	s.Remark = val
}

// SetAddress sets the value of Address.
func (s *HostListResponseResponseItem) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *HostListResponseResponseItem) SetPort(val int) {
	s.Port = val
}

// SetPath sets the value of Path.
func (s *HostListResponseResponseItem) SetPath(val NilString) {
	s.Path = val
}

// SetSni sets the value of Sni.
func (s *HostListResponseResponseItem) SetSni(val NilString) {
	s.Sni = val
}

// SetHost sets the value of Host.
func (s *HostListResponseResponseItem) SetHost(val NilString) {
	s.Host = val
}

// SetAlpn sets the value of Alpn.
func (s *HostListResponseResponseItem) SetAlpn(val NilString) {
	s.Alpn = val
}

// SetFingerprint sets the value of Fingerprint.
func (s *HostListResponseResponseItem) SetFingerprint(val NilString) {
	s.Fingerprint = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *HostListResponseResponseItem) SetIsDisabled(val OptBool) {
	s.IsDisabled = val
}

// SetSecurityLayer sets the value of SecurityLayer.
func (s *HostListResponseResponseItem) SetSecurityLayer(val OptHostListResponseResponseItemSecurityLayer) {
	s.SecurityLayer = val
}

// SetXHttpExtraParams sets the value of XHttpExtraParams.
func (s *HostListResponseResponseItem) SetXHttpExtraParams(val jx.Raw) {
	s.XHttpExtraParams = val
}

// SetMuxParams sets the value of MuxParams.
func (s *HostListResponseResponseItem) SetMuxParams(val jx.Raw) {
	s.MuxParams = val
}

// SetSockoptParams sets the value of SockoptParams.
func (s *HostListResponseResponseItem) SetSockoptParams(val jx.Raw) {
	s.SockoptParams = val
}

// SetInbound sets the value of Inbound.
func (s *HostListResponseResponseItem) SetInbound(val HostListResponseResponseItemInbound) {
	s.Inbound = val
}

// SetServerDescription sets the value of ServerDescription.
func (s *HostListResponseResponseItem) SetServerDescription(val NilString) {
	s.ServerDescription = val
}

// SetTag sets the value of Tag.
func (s *HostListResponseResponseItem) SetTag(val NilString) {
	s.Tag = val
}

// SetIsHidden sets the value of IsHidden.
func (s *HostListResponseResponseItem) SetIsHidden(val OptBool) {
	s.IsHidden = val
}

// SetOverrideSniFromAddress sets the value of OverrideSniFromAddress.
func (s *HostListResponseResponseItem) SetOverrideSniFromAddress(val OptBool) {
	s.OverrideSniFromAddress = val
}

// SetVlessRouteId sets the value of VlessRouteId.
func (s *HostListResponseResponseItem) SetVlessRouteId(val NilInt) {
	s.VlessRouteId = val
}

// SetAllowInsecure sets the value of AllowInsecure.
func (s *HostListResponseResponseItem) SetAllowInsecure(val OptBool) {
	s.AllowInsecure = val
}

// SetShuffleHost sets the value of ShuffleHost.
func (s *HostListResponseResponseItem) SetShuffleHost(val bool) {
	s.ShuffleHost = val
}

// SetMihomoX25519 sets the value of MihomoX25519.
func (s *HostListResponseResponseItem) SetMihomoX25519(val bool) {
	s.MihomoX25519 = val
}

// SetNodes sets the value of Nodes.
func (s *HostListResponseResponseItem) SetNodes(val []uuid.UUID) {
	s.Nodes = val
}

type HostListResponseResponseItemInbound struct {
	ConfigProfileUuid        NilUUID `json:"configProfileUuid"`
	ConfigProfileInboundUuid NilUUID `json:"configProfileInboundUuid"`
}

// GetConfigProfileUuid returns the value of ConfigProfileUuid.
func (s *HostListResponseResponseItemInbound) GetConfigProfileUuid() NilUUID {
	return s.ConfigProfileUuid
}

// GetConfigProfileInboundUuid returns the value of ConfigProfileInboundUuid.
func (s *HostListResponseResponseItemInbound) GetConfigProfileInboundUuid() NilUUID {
	return s.ConfigProfileInboundUuid
}

// SetConfigProfileUuid sets the value of ConfigProfileUuid.
func (s *HostListResponseResponseItemInbound) SetConfigProfileUuid(val NilUUID) {
	s.ConfigProfileUuid = val
}

// SetConfigProfileInboundUuid sets the value of ConfigProfileInboundUuid.
func (s *HostListResponseResponseItemInbound) SetConfigProfileInboundUuid(val NilUUID) {
	s.ConfigProfileInboundUuid = val
}

type HostListResponseResponseItemSecurityLayer string

const (
	HostListResponseResponseItemSecurityLayerDEFAULT HostListResponseResponseItemSecurityLayer = "DEFAULT"
	HostListResponseResponseItemSecurityLayerTLS     HostListResponseResponseItemSecurityLayer = "TLS"
	HostListResponseResponseItemSecurityLayerNONE    HostListResponseResponseItemSecurityLayer = "NONE"
)

// AllValues returns all HostListResponseResponseItemSecurityLayer values.
func (HostListResponseResponseItemSecurityLayer) AllValues() []HostListResponseResponseItemSecurityLayer {
	return []HostListResponseResponseItemSecurityLayer{
		HostListResponseResponseItemSecurityLayerDEFAULT,
		HostListResponseResponseItemSecurityLayerTLS,
		HostListResponseResponseItemSecurityLayerNONE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s HostListResponseResponseItemSecurityLayer) MarshalText() ([]byte, error) {
	switch s {
	case HostListResponseResponseItemSecurityLayerDEFAULT:
		return []byte(s), nil
	case HostListResponseResponseItemSecurityLayerTLS:
		return []byte(s), nil
	case HostListResponseResponseItemSecurityLayerNONE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *HostListResponseResponseItemSecurityLayer) UnmarshalText(data []byte) error {
	switch HostListResponseResponseItemSecurityLayer(data) {
	case HostListResponseResponseItemSecurityLayerDEFAULT:
		*s = HostListResponseResponseItemSecurityLayerDEFAULT
		return nil
	case HostListResponseResponseItemSecurityLayerTLS:
		*s = HostListResponseResponseItemSecurityLayerTLS
		return nil
	case HostListResponseResponseItemSecurityLayerNONE:
		*s = HostListResponseResponseItemSecurityLayerNONE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/HostResponse
type HostResponse struct {
	Response HostResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *HostResponse) GetResponse() HostResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *HostResponse) SetResponse(val HostResponseResponse) {
	s.Response = val
}

func (*HostResponse) hostsControllerCreateHostRes() {}
func (*HostResponse) hostsControllerGetOneHostRes() {}
func (*HostResponse) hostsControllerUpdateHostRes() {}

type HostResponseResponse struct {
	UUID                   uuid.UUID                            `json:"uuid"`
	ViewPosition           int                                  `json:"viewPosition"`
	Remark                 string                               `json:"remark"`
	Address                string                               `json:"address"`
	Port                   int                                  `json:"port"`
	Path                   NilString                            `json:"path"`
	Sni                    NilString                            `json:"sni"`
	Host                   NilString                            `json:"host"`
	Alpn                   NilString                            `json:"alpn"`
	Fingerprint            NilString                            `json:"fingerprint"`
	IsDisabled             OptBool                              `json:"isDisabled"`
	SecurityLayer          OptHostResponseResponseSecurityLayer `json:"securityLayer"`
	XHttpExtraParams       jx.Raw                               `json:"xHttpExtraParams"`
	MuxParams              jx.Raw                               `json:"muxParams"`
	SockoptParams          jx.Raw                               `json:"sockoptParams"`
	Inbound                HostResponseResponseInbound          `json:"inbound"`
	ServerDescription      NilString                            `json:"serverDescription"`
	Tag                    NilString                            `json:"tag"`
	IsHidden               OptBool                              `json:"isHidden"`
	OverrideSniFromAddress OptBool                              `json:"overrideSniFromAddress"`
	VlessRouteId           NilInt                               `json:"vlessRouteId"`
	AllowInsecure          OptBool                              `json:"allowInsecure"`
	ShuffleHost            bool                                 `json:"shuffleHost"`
	MihomoX25519           bool                                 `json:"mihomoX25519"`
	Nodes                  []uuid.UUID                          `json:"nodes"`
}

// GetUUID returns the value of UUID.
func (s *HostResponseResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetViewPosition returns the value of ViewPosition.
func (s *HostResponseResponse) GetViewPosition() int {
	return s.ViewPosition
}

// GetRemark returns the value of Remark.
func (s *HostResponseResponse) GetRemark() string {
	return s.Remark
}

// GetAddress returns the value of Address.
func (s *HostResponseResponse) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *HostResponseResponse) GetPort() int {
	return s.Port
}

// GetPath returns the value of Path.
func (s *HostResponseResponse) GetPath() NilString {
	return s.Path
}

// GetSni returns the value of Sni.
func (s *HostResponseResponse) GetSni() NilString {
	return s.Sni
}

// GetHost returns the value of Host.
func (s *HostResponseResponse) GetHost() NilString {
	return s.Host
}

// GetAlpn returns the value of Alpn.
func (s *HostResponseResponse) GetAlpn() NilString {
	return s.Alpn
}

// GetFingerprint returns the value of Fingerprint.
func (s *HostResponseResponse) GetFingerprint() NilString {
	return s.Fingerprint
}

// GetIsDisabled returns the value of IsDisabled.
func (s *HostResponseResponse) GetIsDisabled() OptBool {
	return s.IsDisabled
}

// GetSecurityLayer returns the value of SecurityLayer.
func (s *HostResponseResponse) GetSecurityLayer() OptHostResponseResponseSecurityLayer {
	return s.SecurityLayer
}

// GetXHttpExtraParams returns the value of XHttpExtraParams.
func (s *HostResponseResponse) GetXHttpExtraParams() jx.Raw {
	return s.XHttpExtraParams
}

// GetMuxParams returns the value of MuxParams.
func (s *HostResponseResponse) GetMuxParams() jx.Raw {
	return s.MuxParams
}

// GetSockoptParams returns the value of SockoptParams.
func (s *HostResponseResponse) GetSockoptParams() jx.Raw {
	return s.SockoptParams
}

// GetInbound returns the value of Inbound.
func (s *HostResponseResponse) GetInbound() HostResponseResponseInbound {
	return s.Inbound
}

// GetServerDescription returns the value of ServerDescription.
func (s *HostResponseResponse) GetServerDescription() NilString {
	return s.ServerDescription
}

// GetTag returns the value of Tag.
func (s *HostResponseResponse) GetTag() NilString {
	return s.Tag
}

// GetIsHidden returns the value of IsHidden.
func (s *HostResponseResponse) GetIsHidden() OptBool {
	return s.IsHidden
}

// GetOverrideSniFromAddress returns the value of OverrideSniFromAddress.
func (s *HostResponseResponse) GetOverrideSniFromAddress() OptBool {
	return s.OverrideSniFromAddress
}

// GetVlessRouteId returns the value of VlessRouteId.
func (s *HostResponseResponse) GetVlessRouteId() NilInt {
	return s.VlessRouteId
}

// GetAllowInsecure returns the value of AllowInsecure.
func (s *HostResponseResponse) GetAllowInsecure() OptBool {
	return s.AllowInsecure
}

// GetShuffleHost returns the value of ShuffleHost.
func (s *HostResponseResponse) GetShuffleHost() bool {
	return s.ShuffleHost
}

// GetMihomoX25519 returns the value of MihomoX25519.
func (s *HostResponseResponse) GetMihomoX25519() bool {
	return s.MihomoX25519
}

// GetNodes returns the value of Nodes.
func (s *HostResponseResponse) GetNodes() []uuid.UUID {
	return s.Nodes
}

// SetUUID sets the value of UUID.
func (s *HostResponseResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *HostResponseResponse) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetRemark sets the value of Remark.
func (s *HostResponseResponse) SetRemark(val string) {
	s.Remark = val
}

// SetAddress sets the value of Address.
func (s *HostResponseResponse) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *HostResponseResponse) SetPort(val int) {
	s.Port = val
}

// SetPath sets the value of Path.
func (s *HostResponseResponse) SetPath(val NilString) {
	s.Path = val
}

// SetSni sets the value of Sni.
func (s *HostResponseResponse) SetSni(val NilString) {
	s.Sni = val
}

// SetHost sets the value of Host.
func (s *HostResponseResponse) SetHost(val NilString) {
	s.Host = val
}

// SetAlpn sets the value of Alpn.
func (s *HostResponseResponse) SetAlpn(val NilString) {
	s.Alpn = val
}

// SetFingerprint sets the value of Fingerprint.
func (s *HostResponseResponse) SetFingerprint(val NilString) {
	s.Fingerprint = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *HostResponseResponse) SetIsDisabled(val OptBool) {
	s.IsDisabled = val
}

// SetSecurityLayer sets the value of SecurityLayer.
func (s *HostResponseResponse) SetSecurityLayer(val OptHostResponseResponseSecurityLayer) {
	s.SecurityLayer = val
}

// SetXHttpExtraParams sets the value of XHttpExtraParams.
func (s *HostResponseResponse) SetXHttpExtraParams(val jx.Raw) {
	s.XHttpExtraParams = val
}

// SetMuxParams sets the value of MuxParams.
func (s *HostResponseResponse) SetMuxParams(val jx.Raw) {
	s.MuxParams = val
}

// SetSockoptParams sets the value of SockoptParams.
func (s *HostResponseResponse) SetSockoptParams(val jx.Raw) {
	s.SockoptParams = val
}

// SetInbound sets the value of Inbound.
func (s *HostResponseResponse) SetInbound(val HostResponseResponseInbound) {
	s.Inbound = val
}

// SetServerDescription sets the value of ServerDescription.
func (s *HostResponseResponse) SetServerDescription(val NilString) {
	s.ServerDescription = val
}

// SetTag sets the value of Tag.
func (s *HostResponseResponse) SetTag(val NilString) {
	s.Tag = val
}

// SetIsHidden sets the value of IsHidden.
func (s *HostResponseResponse) SetIsHidden(val OptBool) {
	s.IsHidden = val
}

// SetOverrideSniFromAddress sets the value of OverrideSniFromAddress.
func (s *HostResponseResponse) SetOverrideSniFromAddress(val OptBool) {
	s.OverrideSniFromAddress = val
}

// SetVlessRouteId sets the value of VlessRouteId.
func (s *HostResponseResponse) SetVlessRouteId(val NilInt) {
	s.VlessRouteId = val
}

// SetAllowInsecure sets the value of AllowInsecure.
func (s *HostResponseResponse) SetAllowInsecure(val OptBool) {
	s.AllowInsecure = val
}

// SetShuffleHost sets the value of ShuffleHost.
func (s *HostResponseResponse) SetShuffleHost(val bool) {
	s.ShuffleHost = val
}

// SetMihomoX25519 sets the value of MihomoX25519.
func (s *HostResponseResponse) SetMihomoX25519(val bool) {
	s.MihomoX25519 = val
}

// SetNodes sets the value of Nodes.
func (s *HostResponseResponse) SetNodes(val []uuid.UUID) {
	s.Nodes = val
}

type HostResponseResponseInbound struct {
	ConfigProfileUuid        NilUUID `json:"configProfileUuid"`
	ConfigProfileInboundUuid NilUUID `json:"configProfileInboundUuid"`
}

// GetConfigProfileUuid returns the value of ConfigProfileUuid.
func (s *HostResponseResponseInbound) GetConfigProfileUuid() NilUUID {
	return s.ConfigProfileUuid
}

// GetConfigProfileInboundUuid returns the value of ConfigProfileInboundUuid.
func (s *HostResponseResponseInbound) GetConfigProfileInboundUuid() NilUUID {
	return s.ConfigProfileInboundUuid
}

// SetConfigProfileUuid sets the value of ConfigProfileUuid.
func (s *HostResponseResponseInbound) SetConfigProfileUuid(val NilUUID) {
	s.ConfigProfileUuid = val
}

// SetConfigProfileInboundUuid sets the value of ConfigProfileInboundUuid.
func (s *HostResponseResponseInbound) SetConfigProfileInboundUuid(val NilUUID) {
	s.ConfigProfileInboundUuid = val
}

type HostResponseResponseSecurityLayer string

const (
	HostResponseResponseSecurityLayerDEFAULT HostResponseResponseSecurityLayer = "DEFAULT"
	HostResponseResponseSecurityLayerTLS     HostResponseResponseSecurityLayer = "TLS"
	HostResponseResponseSecurityLayerNONE    HostResponseResponseSecurityLayer = "NONE"
)

// AllValues returns all HostResponseResponseSecurityLayer values.
func (HostResponseResponseSecurityLayer) AllValues() []HostResponseResponseSecurityLayer {
	return []HostResponseResponseSecurityLayer{
		HostResponseResponseSecurityLayerDEFAULT,
		HostResponseResponseSecurityLayerTLS,
		HostResponseResponseSecurityLayerNONE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s HostResponseResponseSecurityLayer) MarshalText() ([]byte, error) {
	switch s {
	case HostResponseResponseSecurityLayerDEFAULT:
		return []byte(s), nil
	case HostResponseResponseSecurityLayerTLS:
		return []byte(s), nil
	case HostResponseResponseSecurityLayerNONE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *HostResponseResponseSecurityLayer) UnmarshalText(data []byte) error {
	switch HostResponseResponseSecurityLayer(data) {
	case HostResponseResponseSecurityLayerDEFAULT:
		*s = HostResponseResponseSecurityLayerDEFAULT
		return nil
	case HostResponseResponseSecurityLayerTLS:
		*s = HostResponseResponseSecurityLayerTLS
		return nil
	case HostResponseResponseSecurityLayerNONE:
		*s = HostResponseResponseSecurityLayerNONE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type HostsBulkActionsControllerDeleteHostsBadRequest struct {
	Message    OptString                                                   `json:"message"`
	StatusCode OptFloat64                                                  `json:"statusCode"`
	Errors     []HostsBulkActionsControllerDeleteHostsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *HostsBulkActionsControllerDeleteHostsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *HostsBulkActionsControllerDeleteHostsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *HostsBulkActionsControllerDeleteHostsBadRequest) GetErrors() []HostsBulkActionsControllerDeleteHostsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *HostsBulkActionsControllerDeleteHostsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HostsBulkActionsControllerDeleteHostsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *HostsBulkActionsControllerDeleteHostsBadRequest) SetErrors(val []HostsBulkActionsControllerDeleteHostsBadRequestErrorsItem) {
	s.Errors = val
}

func (*HostsBulkActionsControllerDeleteHostsBadRequest) hostsBulkActionsControllerDeleteHostsRes() {}

type HostsBulkActionsControllerDeleteHostsBadRequestErrorsItem struct{}

type HostsBulkActionsControllerDeleteHostsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *HostsBulkActionsControllerDeleteHostsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *HostsBulkActionsControllerDeleteHostsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *HostsBulkActionsControllerDeleteHostsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *HostsBulkActionsControllerDeleteHostsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *HostsBulkActionsControllerDeleteHostsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *HostsBulkActionsControllerDeleteHostsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *HostsBulkActionsControllerDeleteHostsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *HostsBulkActionsControllerDeleteHostsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*HostsBulkActionsControllerDeleteHostsInternalServerError) hostsBulkActionsControllerDeleteHostsRes() {
}

type HostsBulkActionsControllerDisableHostsBadRequest struct {
	Message    OptString                                                    `json:"message"`
	StatusCode OptFloat64                                                   `json:"statusCode"`
	Errors     []HostsBulkActionsControllerDisableHostsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *HostsBulkActionsControllerDisableHostsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *HostsBulkActionsControllerDisableHostsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *HostsBulkActionsControllerDisableHostsBadRequest) GetErrors() []HostsBulkActionsControllerDisableHostsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *HostsBulkActionsControllerDisableHostsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HostsBulkActionsControllerDisableHostsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *HostsBulkActionsControllerDisableHostsBadRequest) SetErrors(val []HostsBulkActionsControllerDisableHostsBadRequestErrorsItem) {
	s.Errors = val
}

func (*HostsBulkActionsControllerDisableHostsBadRequest) hostsBulkActionsControllerDisableHostsRes() {
}

type HostsBulkActionsControllerDisableHostsBadRequestErrorsItem struct{}

type HostsBulkActionsControllerDisableHostsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *HostsBulkActionsControllerDisableHostsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *HostsBulkActionsControllerDisableHostsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *HostsBulkActionsControllerDisableHostsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *HostsBulkActionsControllerDisableHostsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *HostsBulkActionsControllerDisableHostsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *HostsBulkActionsControllerDisableHostsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *HostsBulkActionsControllerDisableHostsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *HostsBulkActionsControllerDisableHostsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*HostsBulkActionsControllerDisableHostsInternalServerError) hostsBulkActionsControllerDisableHostsRes() {
}

type HostsBulkActionsControllerEnableHostsBadRequest struct {
	Message    OptString                                                   `json:"message"`
	StatusCode OptFloat64                                                  `json:"statusCode"`
	Errors     []HostsBulkActionsControllerEnableHostsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *HostsBulkActionsControllerEnableHostsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *HostsBulkActionsControllerEnableHostsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *HostsBulkActionsControllerEnableHostsBadRequest) GetErrors() []HostsBulkActionsControllerEnableHostsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *HostsBulkActionsControllerEnableHostsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HostsBulkActionsControllerEnableHostsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *HostsBulkActionsControllerEnableHostsBadRequest) SetErrors(val []HostsBulkActionsControllerEnableHostsBadRequestErrorsItem) {
	s.Errors = val
}

func (*HostsBulkActionsControllerEnableHostsBadRequest) hostsBulkActionsControllerEnableHostsRes() {}

type HostsBulkActionsControllerEnableHostsBadRequestErrorsItem struct{}

type HostsBulkActionsControllerEnableHostsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *HostsBulkActionsControllerEnableHostsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *HostsBulkActionsControllerEnableHostsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *HostsBulkActionsControllerEnableHostsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *HostsBulkActionsControllerEnableHostsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *HostsBulkActionsControllerEnableHostsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *HostsBulkActionsControllerEnableHostsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *HostsBulkActionsControllerEnableHostsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *HostsBulkActionsControllerEnableHostsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*HostsBulkActionsControllerEnableHostsInternalServerError) hostsBulkActionsControllerEnableHostsRes() {
}

type HostsBulkActionsControllerSetInboundToHostsBadRequest struct {
	Message    OptString                                                         `json:"message"`
	StatusCode OptFloat64                                                        `json:"statusCode"`
	Errors     []HostsBulkActionsControllerSetInboundToHostsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *HostsBulkActionsControllerSetInboundToHostsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *HostsBulkActionsControllerSetInboundToHostsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *HostsBulkActionsControllerSetInboundToHostsBadRequest) GetErrors() []HostsBulkActionsControllerSetInboundToHostsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *HostsBulkActionsControllerSetInboundToHostsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HostsBulkActionsControllerSetInboundToHostsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *HostsBulkActionsControllerSetInboundToHostsBadRequest) SetErrors(val []HostsBulkActionsControllerSetInboundToHostsBadRequestErrorsItem) {
	s.Errors = val
}

func (*HostsBulkActionsControllerSetInboundToHostsBadRequest) hostsBulkActionsControllerSetInboundToHostsRes() {
}

type HostsBulkActionsControllerSetInboundToHostsBadRequestErrorsItem struct{}

type HostsBulkActionsControllerSetInboundToHostsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *HostsBulkActionsControllerSetInboundToHostsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *HostsBulkActionsControllerSetInboundToHostsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *HostsBulkActionsControllerSetInboundToHostsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *HostsBulkActionsControllerSetInboundToHostsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *HostsBulkActionsControllerSetInboundToHostsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *HostsBulkActionsControllerSetInboundToHostsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *HostsBulkActionsControllerSetInboundToHostsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *HostsBulkActionsControllerSetInboundToHostsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*HostsBulkActionsControllerSetInboundToHostsInternalServerError) hostsBulkActionsControllerSetInboundToHostsRes() {
}

type HostsBulkActionsControllerSetPortToHostsBadRequest struct {
	Message    OptString                                                      `json:"message"`
	StatusCode OptFloat64                                                     `json:"statusCode"`
	Errors     []HostsBulkActionsControllerSetPortToHostsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *HostsBulkActionsControllerSetPortToHostsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *HostsBulkActionsControllerSetPortToHostsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *HostsBulkActionsControllerSetPortToHostsBadRequest) GetErrors() []HostsBulkActionsControllerSetPortToHostsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *HostsBulkActionsControllerSetPortToHostsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HostsBulkActionsControllerSetPortToHostsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *HostsBulkActionsControllerSetPortToHostsBadRequest) SetErrors(val []HostsBulkActionsControllerSetPortToHostsBadRequestErrorsItem) {
	s.Errors = val
}

func (*HostsBulkActionsControllerSetPortToHostsBadRequest) hostsBulkActionsControllerSetPortToHostsRes() {
}

type HostsBulkActionsControllerSetPortToHostsBadRequestErrorsItem struct{}

type HostsBulkActionsControllerSetPortToHostsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *HostsBulkActionsControllerSetPortToHostsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *HostsBulkActionsControllerSetPortToHostsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *HostsBulkActionsControllerSetPortToHostsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *HostsBulkActionsControllerSetPortToHostsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *HostsBulkActionsControllerSetPortToHostsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *HostsBulkActionsControllerSetPortToHostsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *HostsBulkActionsControllerSetPortToHostsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *HostsBulkActionsControllerSetPortToHostsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*HostsBulkActionsControllerSetPortToHostsInternalServerError) hostsBulkActionsControllerSetPortToHostsRes() {
}

type HostsControllerCreateHostBadRequest struct {
	Message    OptString                                       `json:"message"`
	StatusCode OptFloat64                                      `json:"statusCode"`
	Errors     []HostsControllerCreateHostBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *HostsControllerCreateHostBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *HostsControllerCreateHostBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *HostsControllerCreateHostBadRequest) GetErrors() []HostsControllerCreateHostBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *HostsControllerCreateHostBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HostsControllerCreateHostBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *HostsControllerCreateHostBadRequest) SetErrors(val []HostsControllerCreateHostBadRequestErrorsItem) {
	s.Errors = val
}

func (*HostsControllerCreateHostBadRequest) hostsControllerCreateHostRes() {}

type HostsControllerCreateHostBadRequestErrorsItem struct{}

type HostsControllerCreateHostInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *HostsControllerCreateHostInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *HostsControllerCreateHostInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *HostsControllerCreateHostInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *HostsControllerCreateHostInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *HostsControllerCreateHostInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *HostsControllerCreateHostInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *HostsControllerCreateHostInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *HostsControllerCreateHostInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*HostsControllerCreateHostInternalServerError) hostsControllerCreateHostRes() {}

type HostsControllerDeleteHostBadRequest struct {
	Message    OptString                                       `json:"message"`
	StatusCode OptFloat64                                      `json:"statusCode"`
	Errors     []HostsControllerDeleteHostBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *HostsControllerDeleteHostBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *HostsControllerDeleteHostBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *HostsControllerDeleteHostBadRequest) GetErrors() []HostsControllerDeleteHostBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *HostsControllerDeleteHostBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HostsControllerDeleteHostBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *HostsControllerDeleteHostBadRequest) SetErrors(val []HostsControllerDeleteHostBadRequestErrorsItem) {
	s.Errors = val
}

func (*HostsControllerDeleteHostBadRequest) hostsControllerDeleteHostRes() {}

type HostsControllerDeleteHostBadRequestErrorsItem struct{}

type HostsControllerDeleteHostInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *HostsControllerDeleteHostInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *HostsControllerDeleteHostInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *HostsControllerDeleteHostInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *HostsControllerDeleteHostInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *HostsControllerDeleteHostInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *HostsControllerDeleteHostInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *HostsControllerDeleteHostInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *HostsControllerDeleteHostInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*HostsControllerDeleteHostInternalServerError) hostsControllerDeleteHostRes() {}

// HostsControllerDeleteHostNotFound is response for HostsControllerDeleteHost operation.
type HostsControllerDeleteHostNotFound struct{}

func (*HostsControllerDeleteHostNotFound) hostsControllerDeleteHostRes() {}

type HostsControllerGetAllHostTagsBadRequest struct {
	Message    OptString                                           `json:"message"`
	StatusCode OptFloat64                                          `json:"statusCode"`
	Errors     []HostsControllerGetAllHostTagsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *HostsControllerGetAllHostTagsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *HostsControllerGetAllHostTagsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *HostsControllerGetAllHostTagsBadRequest) GetErrors() []HostsControllerGetAllHostTagsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *HostsControllerGetAllHostTagsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HostsControllerGetAllHostTagsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *HostsControllerGetAllHostTagsBadRequest) SetErrors(val []HostsControllerGetAllHostTagsBadRequestErrorsItem) {
	s.Errors = val
}

func (*HostsControllerGetAllHostTagsBadRequest) hostsControllerGetAllHostTagsRes() {}

type HostsControllerGetAllHostTagsBadRequestErrorsItem struct{}

type HostsControllerGetAllHostTagsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *HostsControllerGetAllHostTagsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *HostsControllerGetAllHostTagsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *HostsControllerGetAllHostTagsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *HostsControllerGetAllHostTagsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *HostsControllerGetAllHostTagsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *HostsControllerGetAllHostTagsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *HostsControllerGetAllHostTagsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *HostsControllerGetAllHostTagsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*HostsControllerGetAllHostTagsInternalServerError) hostsControllerGetAllHostTagsRes() {}

type HostsControllerGetAllHostsBadRequest struct {
	Message    OptString                                        `json:"message"`
	StatusCode OptFloat64                                       `json:"statusCode"`
	Errors     []HostsControllerGetAllHostsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *HostsControllerGetAllHostsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *HostsControllerGetAllHostsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *HostsControllerGetAllHostsBadRequest) GetErrors() []HostsControllerGetAllHostsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *HostsControllerGetAllHostsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HostsControllerGetAllHostsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *HostsControllerGetAllHostsBadRequest) SetErrors(val []HostsControllerGetAllHostsBadRequestErrorsItem) {
	s.Errors = val
}

func (*HostsControllerGetAllHostsBadRequest) hostsControllerGetAllHostsRes() {}

type HostsControllerGetAllHostsBadRequestErrorsItem struct{}

type HostsControllerGetAllHostsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *HostsControllerGetAllHostsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *HostsControllerGetAllHostsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *HostsControllerGetAllHostsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *HostsControllerGetAllHostsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *HostsControllerGetAllHostsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *HostsControllerGetAllHostsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *HostsControllerGetAllHostsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *HostsControllerGetAllHostsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*HostsControllerGetAllHostsInternalServerError) hostsControllerGetAllHostsRes() {}

type HostsControllerGetOneHostBadRequest struct {
	Message    OptString                                       `json:"message"`
	StatusCode OptFloat64                                      `json:"statusCode"`
	Errors     []HostsControllerGetOneHostBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *HostsControllerGetOneHostBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *HostsControllerGetOneHostBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *HostsControllerGetOneHostBadRequest) GetErrors() []HostsControllerGetOneHostBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *HostsControllerGetOneHostBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HostsControllerGetOneHostBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *HostsControllerGetOneHostBadRequest) SetErrors(val []HostsControllerGetOneHostBadRequestErrorsItem) {
	s.Errors = val
}

func (*HostsControllerGetOneHostBadRequest) hostsControllerGetOneHostRes() {}

type HostsControllerGetOneHostBadRequestErrorsItem struct{}

type HostsControllerGetOneHostInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *HostsControllerGetOneHostInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *HostsControllerGetOneHostInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *HostsControllerGetOneHostInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *HostsControllerGetOneHostInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *HostsControllerGetOneHostInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *HostsControllerGetOneHostInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *HostsControllerGetOneHostInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *HostsControllerGetOneHostInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*HostsControllerGetOneHostInternalServerError) hostsControllerGetOneHostRes() {}

type HostsControllerReorderHostsBadRequest struct {
	Message    OptString                                         `json:"message"`
	StatusCode OptFloat64                                        `json:"statusCode"`
	Errors     []HostsControllerReorderHostsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *HostsControllerReorderHostsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *HostsControllerReorderHostsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *HostsControllerReorderHostsBadRequest) GetErrors() []HostsControllerReorderHostsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *HostsControllerReorderHostsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HostsControllerReorderHostsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *HostsControllerReorderHostsBadRequest) SetErrors(val []HostsControllerReorderHostsBadRequestErrorsItem) {
	s.Errors = val
}

func (*HostsControllerReorderHostsBadRequest) hostsControllerReorderHostsRes() {}

type HostsControllerReorderHostsBadRequestErrorsItem struct{}

type HostsControllerReorderHostsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *HostsControllerReorderHostsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *HostsControllerReorderHostsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *HostsControllerReorderHostsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *HostsControllerReorderHostsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *HostsControllerReorderHostsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *HostsControllerReorderHostsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *HostsControllerReorderHostsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *HostsControllerReorderHostsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*HostsControllerReorderHostsInternalServerError) hostsControllerReorderHostsRes() {}

type HostsControllerUpdateHostBadRequest struct {
	Message    OptString                                       `json:"message"`
	StatusCode OptFloat64                                      `json:"statusCode"`
	Errors     []HostsControllerUpdateHostBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *HostsControllerUpdateHostBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *HostsControllerUpdateHostBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *HostsControllerUpdateHostBadRequest) GetErrors() []HostsControllerUpdateHostBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *HostsControllerUpdateHostBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HostsControllerUpdateHostBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *HostsControllerUpdateHostBadRequest) SetErrors(val []HostsControllerUpdateHostBadRequestErrorsItem) {
	s.Errors = val
}

func (*HostsControllerUpdateHostBadRequest) hostsControllerUpdateHostRes() {}

type HostsControllerUpdateHostBadRequestErrorsItem struct{}

type HostsControllerUpdateHostInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *HostsControllerUpdateHostInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *HostsControllerUpdateHostInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *HostsControllerUpdateHostInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *HostsControllerUpdateHostInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *HostsControllerUpdateHostInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *HostsControllerUpdateHostInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *HostsControllerUpdateHostInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *HostsControllerUpdateHostInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*HostsControllerUpdateHostInternalServerError) hostsControllerUpdateHostRes() {}

// Ref: #/components/schemas/HwidDevicesResponse
type HwidDevicesResponse struct {
	Response HwidDevicesResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *HwidDevicesResponse) GetResponse() HwidDevicesResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *HwidDevicesResponse) SetResponse(val HwidDevicesResponseResponse) {
	s.Response = val
}

func (*HwidDevicesResponse) hwidUserDevicesControllerCreateUserHwidDeviceRes()     {}
func (*HwidDevicesResponse) hwidUserDevicesControllerDeleteAllUserHwidDevicesRes() {}
func (*HwidDevicesResponse) hwidUserDevicesControllerDeleteUserHwidDeviceRes()     {}
func (*HwidDevicesResponse) hwidUserDevicesControllerGetUserHwidDevicesRes()       {}

type HwidDevicesResponseResponse struct {
	Total   float64                                  `json:"total"`
	Devices []HwidDevicesResponseResponseDevicesItem `json:"devices"`
}

// GetTotal returns the value of Total.
func (s *HwidDevicesResponseResponse) GetTotal() float64 {
	return s.Total
}

// GetDevices returns the value of Devices.
func (s *HwidDevicesResponseResponse) GetDevices() []HwidDevicesResponseResponseDevicesItem {
	return s.Devices
}

// SetTotal sets the value of Total.
func (s *HwidDevicesResponseResponse) SetTotal(val float64) {
	s.Total = val
}

// SetDevices sets the value of Devices.
func (s *HwidDevicesResponseResponse) SetDevices(val []HwidDevicesResponseResponseDevicesItem) {
	s.Devices = val
}

type HwidDevicesResponseResponseDevicesItem struct {
	Hwid        string    `json:"hwid"`
	UserUuid    uuid.UUID `json:"userUuid"`
	Platform    NilString `json:"platform"`
	OsVersion   NilString `json:"osVersion"`
	DeviceModel NilString `json:"deviceModel"`
	UserAgent   NilString `json:"userAgent"`
	CreatedAt   time.Time `json:"createdAt"`
	UpdatedAt   time.Time `json:"updatedAt"`
}

// GetHwid returns the value of Hwid.
func (s *HwidDevicesResponseResponseDevicesItem) GetHwid() string {
	return s.Hwid
}

// GetUserUuid returns the value of UserUuid.
func (s *HwidDevicesResponseResponseDevicesItem) GetUserUuid() uuid.UUID {
	return s.UserUuid
}

// GetPlatform returns the value of Platform.
func (s *HwidDevicesResponseResponseDevicesItem) GetPlatform() NilString {
	return s.Platform
}

// GetOsVersion returns the value of OsVersion.
func (s *HwidDevicesResponseResponseDevicesItem) GetOsVersion() NilString {
	return s.OsVersion
}

// GetDeviceModel returns the value of DeviceModel.
func (s *HwidDevicesResponseResponseDevicesItem) GetDeviceModel() NilString {
	return s.DeviceModel
}

// GetUserAgent returns the value of UserAgent.
func (s *HwidDevicesResponseResponseDevicesItem) GetUserAgent() NilString {
	return s.UserAgent
}

// GetCreatedAt returns the value of CreatedAt.
func (s *HwidDevicesResponseResponseDevicesItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *HwidDevicesResponseResponseDevicesItem) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetHwid sets the value of Hwid.
func (s *HwidDevicesResponseResponseDevicesItem) SetHwid(val string) {
	s.Hwid = val
}

// SetUserUuid sets the value of UserUuid.
func (s *HwidDevicesResponseResponseDevicesItem) SetUserUuid(val uuid.UUID) {
	s.UserUuid = val
}

// SetPlatform sets the value of Platform.
func (s *HwidDevicesResponseResponseDevicesItem) SetPlatform(val NilString) {
	s.Platform = val
}

// SetOsVersion sets the value of OsVersion.
func (s *HwidDevicesResponseResponseDevicesItem) SetOsVersion(val NilString) {
	s.OsVersion = val
}

// SetDeviceModel sets the value of DeviceModel.
func (s *HwidDevicesResponseResponseDevicesItem) SetDeviceModel(val NilString) {
	s.DeviceModel = val
}

// SetUserAgent sets the value of UserAgent.
func (s *HwidDevicesResponseResponseDevicesItem) SetUserAgent(val NilString) {
	s.UserAgent = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *HwidDevicesResponseResponseDevicesItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *HwidDevicesResponseResponseDevicesItem) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type HwidUserDevicesControllerCreateUserHwidDeviceBadRequest struct {
	Message    OptString                                                           `json:"message"`
	StatusCode OptFloat64                                                          `json:"statusCode"`
	Errors     []HwidUserDevicesControllerCreateUserHwidDeviceBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *HwidUserDevicesControllerCreateUserHwidDeviceBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *HwidUserDevicesControllerCreateUserHwidDeviceBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *HwidUserDevicesControllerCreateUserHwidDeviceBadRequest) GetErrors() []HwidUserDevicesControllerCreateUserHwidDeviceBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *HwidUserDevicesControllerCreateUserHwidDeviceBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HwidUserDevicesControllerCreateUserHwidDeviceBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *HwidUserDevicesControllerCreateUserHwidDeviceBadRequest) SetErrors(val []HwidUserDevicesControllerCreateUserHwidDeviceBadRequestErrorsItem) {
	s.Errors = val
}

func (*HwidUserDevicesControllerCreateUserHwidDeviceBadRequest) hwidUserDevicesControllerCreateUserHwidDeviceRes() {
}

type HwidUserDevicesControllerCreateUserHwidDeviceBadRequestErrorsItem struct{}

type HwidUserDevicesControllerCreateUserHwidDeviceInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *HwidUserDevicesControllerCreateUserHwidDeviceInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *HwidUserDevicesControllerCreateUserHwidDeviceInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *HwidUserDevicesControllerCreateUserHwidDeviceInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *HwidUserDevicesControllerCreateUserHwidDeviceInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *HwidUserDevicesControllerCreateUserHwidDeviceInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *HwidUserDevicesControllerCreateUserHwidDeviceInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *HwidUserDevicesControllerCreateUserHwidDeviceInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *HwidUserDevicesControllerCreateUserHwidDeviceInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*HwidUserDevicesControllerCreateUserHwidDeviceInternalServerError) hwidUserDevicesControllerCreateUserHwidDeviceRes() {
}

type HwidUserDevicesControllerDeleteAllUserHwidDevicesBadRequest struct {
	Message    OptString                                                               `json:"message"`
	StatusCode OptFloat64                                                              `json:"statusCode"`
	Errors     []HwidUserDevicesControllerDeleteAllUserHwidDevicesBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *HwidUserDevicesControllerDeleteAllUserHwidDevicesBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *HwidUserDevicesControllerDeleteAllUserHwidDevicesBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *HwidUserDevicesControllerDeleteAllUserHwidDevicesBadRequest) GetErrors() []HwidUserDevicesControllerDeleteAllUserHwidDevicesBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *HwidUserDevicesControllerDeleteAllUserHwidDevicesBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HwidUserDevicesControllerDeleteAllUserHwidDevicesBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *HwidUserDevicesControllerDeleteAllUserHwidDevicesBadRequest) SetErrors(val []HwidUserDevicesControllerDeleteAllUserHwidDevicesBadRequestErrorsItem) {
	s.Errors = val
}

func (*HwidUserDevicesControllerDeleteAllUserHwidDevicesBadRequest) hwidUserDevicesControllerDeleteAllUserHwidDevicesRes() {
}

type HwidUserDevicesControllerDeleteAllUserHwidDevicesBadRequestErrorsItem struct{}

type HwidUserDevicesControllerDeleteAllUserHwidDevicesInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *HwidUserDevicesControllerDeleteAllUserHwidDevicesInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *HwidUserDevicesControllerDeleteAllUserHwidDevicesInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *HwidUserDevicesControllerDeleteAllUserHwidDevicesInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *HwidUserDevicesControllerDeleteAllUserHwidDevicesInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *HwidUserDevicesControllerDeleteAllUserHwidDevicesInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *HwidUserDevicesControllerDeleteAllUserHwidDevicesInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *HwidUserDevicesControllerDeleteAllUserHwidDevicesInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *HwidUserDevicesControllerDeleteAllUserHwidDevicesInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*HwidUserDevicesControllerDeleteAllUserHwidDevicesInternalServerError) hwidUserDevicesControllerDeleteAllUserHwidDevicesRes() {
}

type HwidUserDevicesControllerDeleteUserHwidDeviceBadRequest struct {
	Message    OptString                                                           `json:"message"`
	StatusCode OptFloat64                                                          `json:"statusCode"`
	Errors     []HwidUserDevicesControllerDeleteUserHwidDeviceBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *HwidUserDevicesControllerDeleteUserHwidDeviceBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *HwidUserDevicesControllerDeleteUserHwidDeviceBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *HwidUserDevicesControllerDeleteUserHwidDeviceBadRequest) GetErrors() []HwidUserDevicesControllerDeleteUserHwidDeviceBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *HwidUserDevicesControllerDeleteUserHwidDeviceBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HwidUserDevicesControllerDeleteUserHwidDeviceBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *HwidUserDevicesControllerDeleteUserHwidDeviceBadRequest) SetErrors(val []HwidUserDevicesControllerDeleteUserHwidDeviceBadRequestErrorsItem) {
	s.Errors = val
}

func (*HwidUserDevicesControllerDeleteUserHwidDeviceBadRequest) hwidUserDevicesControllerDeleteUserHwidDeviceRes() {
}

type HwidUserDevicesControllerDeleteUserHwidDeviceBadRequestErrorsItem struct{}

type HwidUserDevicesControllerDeleteUserHwidDeviceInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *HwidUserDevicesControllerDeleteUserHwidDeviceInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *HwidUserDevicesControllerDeleteUserHwidDeviceInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *HwidUserDevicesControllerDeleteUserHwidDeviceInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *HwidUserDevicesControllerDeleteUserHwidDeviceInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *HwidUserDevicesControllerDeleteUserHwidDeviceInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *HwidUserDevicesControllerDeleteUserHwidDeviceInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *HwidUserDevicesControllerDeleteUserHwidDeviceInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *HwidUserDevicesControllerDeleteUserHwidDeviceInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*HwidUserDevicesControllerDeleteUserHwidDeviceInternalServerError) hwidUserDevicesControllerDeleteUserHwidDeviceRes() {
}

type HwidUserDevicesControllerGetAllUsersBadRequest struct {
	Message    OptString                                                  `json:"message"`
	StatusCode OptFloat64                                                 `json:"statusCode"`
	Errors     []HwidUserDevicesControllerGetAllUsersBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *HwidUserDevicesControllerGetAllUsersBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *HwidUserDevicesControllerGetAllUsersBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *HwidUserDevicesControllerGetAllUsersBadRequest) GetErrors() []HwidUserDevicesControllerGetAllUsersBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *HwidUserDevicesControllerGetAllUsersBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HwidUserDevicesControllerGetAllUsersBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *HwidUserDevicesControllerGetAllUsersBadRequest) SetErrors(val []HwidUserDevicesControllerGetAllUsersBadRequestErrorsItem) {
	s.Errors = val
}

func (*HwidUserDevicesControllerGetAllUsersBadRequest) hwidUserDevicesControllerGetAllUsersRes() {}

type HwidUserDevicesControllerGetAllUsersBadRequestErrorsItem struct{}

type HwidUserDevicesControllerGetAllUsersInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *HwidUserDevicesControllerGetAllUsersInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *HwidUserDevicesControllerGetAllUsersInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *HwidUserDevicesControllerGetAllUsersInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *HwidUserDevicesControllerGetAllUsersInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *HwidUserDevicesControllerGetAllUsersInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *HwidUserDevicesControllerGetAllUsersInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *HwidUserDevicesControllerGetAllUsersInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *HwidUserDevicesControllerGetAllUsersInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*HwidUserDevicesControllerGetAllUsersInternalServerError) hwidUserDevicesControllerGetAllUsersRes() {
}

type HwidUserDevicesControllerGetHwidDevicesStatsBadRequest struct {
	Message    OptString                                                          `json:"message"`
	StatusCode OptFloat64                                                         `json:"statusCode"`
	Errors     []HwidUserDevicesControllerGetHwidDevicesStatsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *HwidUserDevicesControllerGetHwidDevicesStatsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *HwidUserDevicesControllerGetHwidDevicesStatsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *HwidUserDevicesControllerGetHwidDevicesStatsBadRequest) GetErrors() []HwidUserDevicesControllerGetHwidDevicesStatsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *HwidUserDevicesControllerGetHwidDevicesStatsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HwidUserDevicesControllerGetHwidDevicesStatsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *HwidUserDevicesControllerGetHwidDevicesStatsBadRequest) SetErrors(val []HwidUserDevicesControllerGetHwidDevicesStatsBadRequestErrorsItem) {
	s.Errors = val
}

func (*HwidUserDevicesControllerGetHwidDevicesStatsBadRequest) hwidUserDevicesControllerGetHwidDevicesStatsRes() {
}

type HwidUserDevicesControllerGetHwidDevicesStatsBadRequestErrorsItem struct{}

type HwidUserDevicesControllerGetHwidDevicesStatsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *HwidUserDevicesControllerGetHwidDevicesStatsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *HwidUserDevicesControllerGetHwidDevicesStatsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *HwidUserDevicesControllerGetHwidDevicesStatsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *HwidUserDevicesControllerGetHwidDevicesStatsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *HwidUserDevicesControllerGetHwidDevicesStatsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *HwidUserDevicesControllerGetHwidDevicesStatsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *HwidUserDevicesControllerGetHwidDevicesStatsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *HwidUserDevicesControllerGetHwidDevicesStatsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*HwidUserDevicesControllerGetHwidDevicesStatsInternalServerError) hwidUserDevicesControllerGetHwidDevicesStatsRes() {
}

type HwidUserDevicesControllerGetUserHwidDevicesBadRequest struct {
	Message    OptString                                                         `json:"message"`
	StatusCode OptFloat64                                                        `json:"statusCode"`
	Errors     []HwidUserDevicesControllerGetUserHwidDevicesBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *HwidUserDevicesControllerGetUserHwidDevicesBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *HwidUserDevicesControllerGetUserHwidDevicesBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *HwidUserDevicesControllerGetUserHwidDevicesBadRequest) GetErrors() []HwidUserDevicesControllerGetUserHwidDevicesBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *HwidUserDevicesControllerGetUserHwidDevicesBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HwidUserDevicesControllerGetUserHwidDevicesBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *HwidUserDevicesControllerGetUserHwidDevicesBadRequest) SetErrors(val []HwidUserDevicesControllerGetUserHwidDevicesBadRequestErrorsItem) {
	s.Errors = val
}

func (*HwidUserDevicesControllerGetUserHwidDevicesBadRequest) hwidUserDevicesControllerGetUserHwidDevicesRes() {
}

type HwidUserDevicesControllerGetUserHwidDevicesBadRequestErrorsItem struct{}

type HwidUserDevicesControllerGetUserHwidDevicesInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *HwidUserDevicesControllerGetUserHwidDevicesInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *HwidUserDevicesControllerGetUserHwidDevicesInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *HwidUserDevicesControllerGetUserHwidDevicesInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *HwidUserDevicesControllerGetUserHwidDevicesInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *HwidUserDevicesControllerGetUserHwidDevicesInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *HwidUserDevicesControllerGetUserHwidDevicesInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *HwidUserDevicesControllerGetUserHwidDevicesInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *HwidUserDevicesControllerGetUserHwidDevicesInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*HwidUserDevicesControllerGetUserHwidDevicesInternalServerError) hwidUserDevicesControllerGetUserHwidDevicesRes() {
}

// Ref: #/components/schemas/InboundsResponse
type InboundsResponse struct {
	Response InboundsResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *InboundsResponse) GetResponse() InboundsResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *InboundsResponse) SetResponse(val InboundsResponseResponse) {
	s.Response = val
}

func (*InboundsResponse) configProfileControllerGetAllInboundsRes()           {}
func (*InboundsResponse) configProfileControllerGetInboundsByProfileUuidRes() {}

type InboundsResponseResponse struct {
	Total    float64                                `json:"total"`
	Inbounds []InboundsResponseResponseInboundsItem `json:"inbounds"`
}

// GetTotal returns the value of Total.
func (s *InboundsResponseResponse) GetTotal() float64 {
	return s.Total
}

// GetInbounds returns the value of Inbounds.
func (s *InboundsResponseResponse) GetInbounds() []InboundsResponseResponseInboundsItem {
	return s.Inbounds
}

// SetTotal sets the value of Total.
func (s *InboundsResponseResponse) SetTotal(val float64) {
	s.Total = val
}

// SetInbounds sets the value of Inbounds.
func (s *InboundsResponseResponse) SetInbounds(val []InboundsResponseResponseInboundsItem) {
	s.Inbounds = val
}

type InboundsResponseResponseInboundsItem struct {
	UUID         uuid.UUID   `json:"uuid"`
	ProfileUuid  uuid.UUID   `json:"profileUuid"`
	Tag          string      `json:"tag"`
	Type         string      `json:"type"`
	Network      NilString   `json:"network"`
	Security     NilString   `json:"security"`
	Port         NilFloat64  `json:"port"`
	RawInbound   jx.Raw      `json:"rawInbound"`
	ActiveSquads []uuid.UUID `json:"activeSquads"`
}

// GetUUID returns the value of UUID.
func (s *InboundsResponseResponseInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetProfileUuid returns the value of ProfileUuid.
func (s *InboundsResponseResponseInboundsItem) GetProfileUuid() uuid.UUID {
	return s.ProfileUuid
}

// GetTag returns the value of Tag.
func (s *InboundsResponseResponseInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *InboundsResponseResponseInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *InboundsResponseResponseInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *InboundsResponseResponseInboundsItem) GetSecurity() NilString {
	return s.Security
}

// GetPort returns the value of Port.
func (s *InboundsResponseResponseInboundsItem) GetPort() NilFloat64 {
	return s.Port
}

// GetRawInbound returns the value of RawInbound.
func (s *InboundsResponseResponseInboundsItem) GetRawInbound() jx.Raw {
	return s.RawInbound
}

// GetActiveSquads returns the value of ActiveSquads.
func (s *InboundsResponseResponseInboundsItem) GetActiveSquads() []uuid.UUID {
	return s.ActiveSquads
}

// SetUUID sets the value of UUID.
func (s *InboundsResponseResponseInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetProfileUuid sets the value of ProfileUuid.
func (s *InboundsResponseResponseInboundsItem) SetProfileUuid(val uuid.UUID) {
	s.ProfileUuid = val
}

// SetTag sets the value of Tag.
func (s *InboundsResponseResponseInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *InboundsResponseResponseInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *InboundsResponseResponseInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *InboundsResponseResponseInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

// SetPort sets the value of Port.
func (s *InboundsResponseResponseInboundsItem) SetPort(val NilFloat64) {
	s.Port = val
}

// SetRawInbound sets the value of RawInbound.
func (s *InboundsResponseResponseInboundsItem) SetRawInbound(val jx.Raw) {
	s.RawInbound = val
}

// SetActiveSquads sets the value of ActiveSquads.
func (s *InboundsResponseResponseInboundsItem) SetActiveSquads(val []uuid.UUID) {
	s.ActiveSquads = val
}

type InfraBillingControllerCreateInfraBillingHistoryRecordBadRequest struct {
	Message    OptString                                                                   `json:"message"`
	StatusCode OptFloat64                                                                  `json:"statusCode"`
	Errors     []InfraBillingControllerCreateInfraBillingHistoryRecordBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerCreateInfraBillingHistoryRecordBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InfraBillingControllerCreateInfraBillingHistoryRecordBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InfraBillingControllerCreateInfraBillingHistoryRecordBadRequest) GetErrors() []InfraBillingControllerCreateInfraBillingHistoryRecordBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerCreateInfraBillingHistoryRecordBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InfraBillingControllerCreateInfraBillingHistoryRecordBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InfraBillingControllerCreateInfraBillingHistoryRecordBadRequest) SetErrors(val []InfraBillingControllerCreateInfraBillingHistoryRecordBadRequestErrorsItem) {
	s.Errors = val
}

func (*InfraBillingControllerCreateInfraBillingHistoryRecordBadRequest) infraBillingControllerCreateInfraBillingHistoryRecordRes() {
}

type InfraBillingControllerCreateInfraBillingHistoryRecordBadRequestErrorsItem struct{}

type InfraBillingControllerCreateInfraBillingHistoryRecordInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InfraBillingControllerCreateInfraBillingHistoryRecordInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InfraBillingControllerCreateInfraBillingHistoryRecordInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerCreateInfraBillingHistoryRecordInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InfraBillingControllerCreateInfraBillingHistoryRecordInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InfraBillingControllerCreateInfraBillingHistoryRecordInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InfraBillingControllerCreateInfraBillingHistoryRecordInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerCreateInfraBillingHistoryRecordInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InfraBillingControllerCreateInfraBillingHistoryRecordInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InfraBillingControllerCreateInfraBillingHistoryRecordInternalServerError) infraBillingControllerCreateInfraBillingHistoryRecordRes() {
}

type InfraBillingControllerCreateInfraBillingNodeBadRequest struct {
	Message    OptString                                                          `json:"message"`
	StatusCode OptFloat64                                                         `json:"statusCode"`
	Errors     []InfraBillingControllerCreateInfraBillingNodeBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerCreateInfraBillingNodeBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InfraBillingControllerCreateInfraBillingNodeBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InfraBillingControllerCreateInfraBillingNodeBadRequest) GetErrors() []InfraBillingControllerCreateInfraBillingNodeBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerCreateInfraBillingNodeBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InfraBillingControllerCreateInfraBillingNodeBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InfraBillingControllerCreateInfraBillingNodeBadRequest) SetErrors(val []InfraBillingControllerCreateInfraBillingNodeBadRequestErrorsItem) {
	s.Errors = val
}

func (*InfraBillingControllerCreateInfraBillingNodeBadRequest) infraBillingControllerCreateInfraBillingNodeRes() {
}

type InfraBillingControllerCreateInfraBillingNodeBadRequestErrorsItem struct{}

type InfraBillingControllerCreateInfraBillingNodeInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InfraBillingControllerCreateInfraBillingNodeInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InfraBillingControllerCreateInfraBillingNodeInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerCreateInfraBillingNodeInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InfraBillingControllerCreateInfraBillingNodeInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InfraBillingControllerCreateInfraBillingNodeInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InfraBillingControllerCreateInfraBillingNodeInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerCreateInfraBillingNodeInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InfraBillingControllerCreateInfraBillingNodeInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InfraBillingControllerCreateInfraBillingNodeInternalServerError) infraBillingControllerCreateInfraBillingNodeRes() {
}

type InfraBillingControllerCreateInfraProviderBadRequest struct {
	Message    OptString                                                       `json:"message"`
	StatusCode OptFloat64                                                      `json:"statusCode"`
	Errors     []InfraBillingControllerCreateInfraProviderBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerCreateInfraProviderBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InfraBillingControllerCreateInfraProviderBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InfraBillingControllerCreateInfraProviderBadRequest) GetErrors() []InfraBillingControllerCreateInfraProviderBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerCreateInfraProviderBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InfraBillingControllerCreateInfraProviderBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InfraBillingControllerCreateInfraProviderBadRequest) SetErrors(val []InfraBillingControllerCreateInfraProviderBadRequestErrorsItem) {
	s.Errors = val
}

func (*InfraBillingControllerCreateInfraProviderBadRequest) infraBillingControllerCreateInfraProviderRes() {
}

type InfraBillingControllerCreateInfraProviderBadRequestErrorsItem struct{}

type InfraBillingControllerCreateInfraProviderInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InfraBillingControllerCreateInfraProviderInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InfraBillingControllerCreateInfraProviderInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerCreateInfraProviderInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InfraBillingControllerCreateInfraProviderInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InfraBillingControllerCreateInfraProviderInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InfraBillingControllerCreateInfraProviderInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerCreateInfraProviderInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InfraBillingControllerCreateInfraProviderInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InfraBillingControllerCreateInfraProviderInternalServerError) infraBillingControllerCreateInfraProviderRes() {
}

type InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidBadRequest struct {
	Message    OptString                                                                         `json:"message"`
	StatusCode OptFloat64                                                                        `json:"statusCode"`
	Errors     []InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidBadRequest) GetErrors() []InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidBadRequest) SetErrors(val []InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidBadRequestErrorsItem) {
	s.Errors = val
}

func (*InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidBadRequest) infraBillingControllerDeleteInfraBillingHistoryRecordByUuidRes() {
}

type InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidBadRequestErrorsItem struct{}

type InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InfraBillingControllerDeleteInfraBillingHistoryRecordByUuidInternalServerError) infraBillingControllerDeleteInfraBillingHistoryRecordByUuidRes() {
}

type InfraBillingControllerDeleteInfraBillingNodeByUuidBadRequest struct {
	Message    OptString                                                                `json:"message"`
	StatusCode OptFloat64                                                               `json:"statusCode"`
	Errors     []InfraBillingControllerDeleteInfraBillingNodeByUuidBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerDeleteInfraBillingNodeByUuidBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InfraBillingControllerDeleteInfraBillingNodeByUuidBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InfraBillingControllerDeleteInfraBillingNodeByUuidBadRequest) GetErrors() []InfraBillingControllerDeleteInfraBillingNodeByUuidBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerDeleteInfraBillingNodeByUuidBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InfraBillingControllerDeleteInfraBillingNodeByUuidBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InfraBillingControllerDeleteInfraBillingNodeByUuidBadRequest) SetErrors(val []InfraBillingControllerDeleteInfraBillingNodeByUuidBadRequestErrorsItem) {
	s.Errors = val
}

func (*InfraBillingControllerDeleteInfraBillingNodeByUuidBadRequest) infraBillingControllerDeleteInfraBillingNodeByUuidRes() {
}

type InfraBillingControllerDeleteInfraBillingNodeByUuidBadRequestErrorsItem struct{}

type InfraBillingControllerDeleteInfraBillingNodeByUuidInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InfraBillingControllerDeleteInfraBillingNodeByUuidInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InfraBillingControllerDeleteInfraBillingNodeByUuidInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerDeleteInfraBillingNodeByUuidInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InfraBillingControllerDeleteInfraBillingNodeByUuidInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InfraBillingControllerDeleteInfraBillingNodeByUuidInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InfraBillingControllerDeleteInfraBillingNodeByUuidInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerDeleteInfraBillingNodeByUuidInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InfraBillingControllerDeleteInfraBillingNodeByUuidInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InfraBillingControllerDeleteInfraBillingNodeByUuidInternalServerError) infraBillingControllerDeleteInfraBillingNodeByUuidRes() {
}

type InfraBillingControllerDeleteInfraProviderByUuidBadRequest struct {
	Message    OptString                                                             `json:"message"`
	StatusCode OptFloat64                                                            `json:"statusCode"`
	Errors     []InfraBillingControllerDeleteInfraProviderByUuidBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerDeleteInfraProviderByUuidBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InfraBillingControllerDeleteInfraProviderByUuidBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InfraBillingControllerDeleteInfraProviderByUuidBadRequest) GetErrors() []InfraBillingControllerDeleteInfraProviderByUuidBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerDeleteInfraProviderByUuidBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InfraBillingControllerDeleteInfraProviderByUuidBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InfraBillingControllerDeleteInfraProviderByUuidBadRequest) SetErrors(val []InfraBillingControllerDeleteInfraProviderByUuidBadRequestErrorsItem) {
	s.Errors = val
}

func (*InfraBillingControllerDeleteInfraProviderByUuidBadRequest) infraBillingControllerDeleteInfraProviderByUuidRes() {
}

type InfraBillingControllerDeleteInfraProviderByUuidBadRequestErrorsItem struct{}

type InfraBillingControllerDeleteInfraProviderByUuidInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InfraBillingControllerDeleteInfraProviderByUuidInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InfraBillingControllerDeleteInfraProviderByUuidInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerDeleteInfraProviderByUuidInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InfraBillingControllerDeleteInfraProviderByUuidInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InfraBillingControllerDeleteInfraProviderByUuidInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InfraBillingControllerDeleteInfraProviderByUuidInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerDeleteInfraProviderByUuidInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InfraBillingControllerDeleteInfraProviderByUuidInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InfraBillingControllerDeleteInfraProviderByUuidInternalServerError) infraBillingControllerDeleteInfraProviderByUuidRes() {
}

type InfraBillingControllerGetBillingNodesBadRequest struct {
	Message    OptString                                                   `json:"message"`
	StatusCode OptFloat64                                                  `json:"statusCode"`
	Errors     []InfraBillingControllerGetBillingNodesBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerGetBillingNodesBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InfraBillingControllerGetBillingNodesBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InfraBillingControllerGetBillingNodesBadRequest) GetErrors() []InfraBillingControllerGetBillingNodesBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerGetBillingNodesBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InfraBillingControllerGetBillingNodesBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InfraBillingControllerGetBillingNodesBadRequest) SetErrors(val []InfraBillingControllerGetBillingNodesBadRequestErrorsItem) {
	s.Errors = val
}

func (*InfraBillingControllerGetBillingNodesBadRequest) infraBillingControllerGetBillingNodesRes() {}

type InfraBillingControllerGetBillingNodesBadRequestErrorsItem struct{}

type InfraBillingControllerGetBillingNodesInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InfraBillingControllerGetBillingNodesInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InfraBillingControllerGetBillingNodesInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerGetBillingNodesInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InfraBillingControllerGetBillingNodesInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InfraBillingControllerGetBillingNodesInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InfraBillingControllerGetBillingNodesInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerGetBillingNodesInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InfraBillingControllerGetBillingNodesInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InfraBillingControllerGetBillingNodesInternalServerError) infraBillingControllerGetBillingNodesRes() {
}

type InfraBillingControllerGetInfraBillingHistoryRecordsBadRequest struct {
	Message    OptString                                                                 `json:"message"`
	StatusCode OptFloat64                                                                `json:"statusCode"`
	Errors     []InfraBillingControllerGetInfraBillingHistoryRecordsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerGetInfraBillingHistoryRecordsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InfraBillingControllerGetInfraBillingHistoryRecordsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InfraBillingControllerGetInfraBillingHistoryRecordsBadRequest) GetErrors() []InfraBillingControllerGetInfraBillingHistoryRecordsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerGetInfraBillingHistoryRecordsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InfraBillingControllerGetInfraBillingHistoryRecordsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InfraBillingControllerGetInfraBillingHistoryRecordsBadRequest) SetErrors(val []InfraBillingControllerGetInfraBillingHistoryRecordsBadRequestErrorsItem) {
	s.Errors = val
}

func (*InfraBillingControllerGetInfraBillingHistoryRecordsBadRequest) infraBillingControllerGetInfraBillingHistoryRecordsRes() {
}

type InfraBillingControllerGetInfraBillingHistoryRecordsBadRequestErrorsItem struct{}

type InfraBillingControllerGetInfraBillingHistoryRecordsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InfraBillingControllerGetInfraBillingHistoryRecordsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InfraBillingControllerGetInfraBillingHistoryRecordsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerGetInfraBillingHistoryRecordsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InfraBillingControllerGetInfraBillingHistoryRecordsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InfraBillingControllerGetInfraBillingHistoryRecordsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InfraBillingControllerGetInfraBillingHistoryRecordsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerGetInfraBillingHistoryRecordsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InfraBillingControllerGetInfraBillingHistoryRecordsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InfraBillingControllerGetInfraBillingHistoryRecordsInternalServerError) infraBillingControllerGetInfraBillingHistoryRecordsRes() {
}

type InfraBillingControllerGetInfraProviderByUuidBadRequest struct {
	Message    OptString                                                          `json:"message"`
	StatusCode OptFloat64                                                         `json:"statusCode"`
	Errors     []InfraBillingControllerGetInfraProviderByUuidBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerGetInfraProviderByUuidBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InfraBillingControllerGetInfraProviderByUuidBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InfraBillingControllerGetInfraProviderByUuidBadRequest) GetErrors() []InfraBillingControllerGetInfraProviderByUuidBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerGetInfraProviderByUuidBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InfraBillingControllerGetInfraProviderByUuidBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InfraBillingControllerGetInfraProviderByUuidBadRequest) SetErrors(val []InfraBillingControllerGetInfraProviderByUuidBadRequestErrorsItem) {
	s.Errors = val
}

func (*InfraBillingControllerGetInfraProviderByUuidBadRequest) infraBillingControllerGetInfraProviderByUuidRes() {
}

type InfraBillingControllerGetInfraProviderByUuidBadRequestErrorsItem struct{}

type InfraBillingControllerGetInfraProviderByUuidInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InfraBillingControllerGetInfraProviderByUuidInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InfraBillingControllerGetInfraProviderByUuidInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerGetInfraProviderByUuidInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InfraBillingControllerGetInfraProviderByUuidInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InfraBillingControllerGetInfraProviderByUuidInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InfraBillingControllerGetInfraProviderByUuidInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerGetInfraProviderByUuidInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InfraBillingControllerGetInfraProviderByUuidInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InfraBillingControllerGetInfraProviderByUuidInternalServerError) infraBillingControllerGetInfraProviderByUuidRes() {
}

// InfraBillingControllerGetInfraProviderByUuidNotFound is response for InfraBillingControllerGetInfraProviderByUuid operation.
type InfraBillingControllerGetInfraProviderByUuidNotFound struct{}

func (*InfraBillingControllerGetInfraProviderByUuidNotFound) infraBillingControllerGetInfraProviderByUuidRes() {
}

type InfraBillingControllerGetInfraProvidersBadRequest struct {
	Message    OptString                                                     `json:"message"`
	StatusCode OptFloat64                                                    `json:"statusCode"`
	Errors     []InfraBillingControllerGetInfraProvidersBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerGetInfraProvidersBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InfraBillingControllerGetInfraProvidersBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InfraBillingControllerGetInfraProvidersBadRequest) GetErrors() []InfraBillingControllerGetInfraProvidersBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerGetInfraProvidersBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InfraBillingControllerGetInfraProvidersBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InfraBillingControllerGetInfraProvidersBadRequest) SetErrors(val []InfraBillingControllerGetInfraProvidersBadRequestErrorsItem) {
	s.Errors = val
}

func (*InfraBillingControllerGetInfraProvidersBadRequest) infraBillingControllerGetInfraProvidersRes() {
}

type InfraBillingControllerGetInfraProvidersBadRequestErrorsItem struct{}

type InfraBillingControllerGetInfraProvidersInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InfraBillingControllerGetInfraProvidersInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InfraBillingControllerGetInfraProvidersInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerGetInfraProvidersInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InfraBillingControllerGetInfraProvidersInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InfraBillingControllerGetInfraProvidersInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InfraBillingControllerGetInfraProvidersInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerGetInfraProvidersInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InfraBillingControllerGetInfraProvidersInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InfraBillingControllerGetInfraProvidersInternalServerError) infraBillingControllerGetInfraProvidersRes() {
}

type InfraBillingControllerUpdateInfraBillingNodeBadRequest struct {
	Message    OptString                                                          `json:"message"`
	StatusCode OptFloat64                                                         `json:"statusCode"`
	Errors     []InfraBillingControllerUpdateInfraBillingNodeBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerUpdateInfraBillingNodeBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InfraBillingControllerUpdateInfraBillingNodeBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InfraBillingControllerUpdateInfraBillingNodeBadRequest) GetErrors() []InfraBillingControllerUpdateInfraBillingNodeBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerUpdateInfraBillingNodeBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InfraBillingControllerUpdateInfraBillingNodeBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InfraBillingControllerUpdateInfraBillingNodeBadRequest) SetErrors(val []InfraBillingControllerUpdateInfraBillingNodeBadRequestErrorsItem) {
	s.Errors = val
}

func (*InfraBillingControllerUpdateInfraBillingNodeBadRequest) infraBillingControllerUpdateInfraBillingNodeRes() {
}

type InfraBillingControllerUpdateInfraBillingNodeBadRequestErrorsItem struct{}

type InfraBillingControllerUpdateInfraBillingNodeInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InfraBillingControllerUpdateInfraBillingNodeInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InfraBillingControllerUpdateInfraBillingNodeInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerUpdateInfraBillingNodeInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InfraBillingControllerUpdateInfraBillingNodeInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InfraBillingControllerUpdateInfraBillingNodeInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InfraBillingControllerUpdateInfraBillingNodeInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerUpdateInfraBillingNodeInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InfraBillingControllerUpdateInfraBillingNodeInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InfraBillingControllerUpdateInfraBillingNodeInternalServerError) infraBillingControllerUpdateInfraBillingNodeRes() {
}

type InfraBillingControllerUpdateInfraProviderBadRequest struct {
	Message    OptString                                                       `json:"message"`
	StatusCode OptFloat64                                                      `json:"statusCode"`
	Errors     []InfraBillingControllerUpdateInfraProviderBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerUpdateInfraProviderBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InfraBillingControllerUpdateInfraProviderBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InfraBillingControllerUpdateInfraProviderBadRequest) GetErrors() []InfraBillingControllerUpdateInfraProviderBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerUpdateInfraProviderBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InfraBillingControllerUpdateInfraProviderBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InfraBillingControllerUpdateInfraProviderBadRequest) SetErrors(val []InfraBillingControllerUpdateInfraProviderBadRequestErrorsItem) {
	s.Errors = val
}

func (*InfraBillingControllerUpdateInfraProviderBadRequest) infraBillingControllerUpdateInfraProviderRes() {
}

type InfraBillingControllerUpdateInfraProviderBadRequestErrorsItem struct{}

type InfraBillingControllerUpdateInfraProviderInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InfraBillingControllerUpdateInfraProviderInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InfraBillingControllerUpdateInfraProviderInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InfraBillingControllerUpdateInfraProviderInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InfraBillingControllerUpdateInfraProviderInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InfraBillingControllerUpdateInfraProviderInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InfraBillingControllerUpdateInfraProviderInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InfraBillingControllerUpdateInfraProviderInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InfraBillingControllerUpdateInfraProviderInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InfraBillingControllerUpdateInfraProviderInternalServerError) infraBillingControllerUpdateInfraProviderRes() {
}

// Ref: #/components/schemas/InfraProviderResponse
type InfraProviderResponse struct {
	Response InfraProviderResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *InfraProviderResponse) GetResponse() InfraProviderResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *InfraProviderResponse) SetResponse(val InfraProviderResponseResponse) {
	s.Response = val
}

func (*InfraProviderResponse) infraBillingControllerCreateInfraProviderRes()    {}
func (*InfraProviderResponse) infraBillingControllerGetInfraProviderByUuidRes() {}
func (*InfraProviderResponse) infraBillingControllerUpdateInfraProviderRes()    {}

type InfraProviderResponseResponse struct {
	UUID           uuid.UUID                                       `json:"uuid"`
	Name           string                                          `json:"name"`
	FaviconLink    NilString                                       `json:"faviconLink"`
	LoginUrl       NilString                                       `json:"loginUrl"`
	CreatedAt      time.Time                                       `json:"createdAt"`
	UpdatedAt      time.Time                                       `json:"updatedAt"`
	BillingHistory InfraProviderResponseResponseBillingHistory     `json:"billingHistory"`
	BillingNodes   []InfraProviderResponseResponseBillingNodesItem `json:"billingNodes"`
}

// GetUUID returns the value of UUID.
func (s *InfraProviderResponseResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *InfraProviderResponseResponse) GetName() string {
	return s.Name
}

// GetFaviconLink returns the value of FaviconLink.
func (s *InfraProviderResponseResponse) GetFaviconLink() NilString {
	return s.FaviconLink
}

// GetLoginUrl returns the value of LoginUrl.
func (s *InfraProviderResponseResponse) GetLoginUrl() NilString {
	return s.LoginUrl
}

// GetCreatedAt returns the value of CreatedAt.
func (s *InfraProviderResponseResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *InfraProviderResponseResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetBillingHistory returns the value of BillingHistory.
func (s *InfraProviderResponseResponse) GetBillingHistory() InfraProviderResponseResponseBillingHistory {
	return s.BillingHistory
}

// GetBillingNodes returns the value of BillingNodes.
func (s *InfraProviderResponseResponse) GetBillingNodes() []InfraProviderResponseResponseBillingNodesItem {
	return s.BillingNodes
}

// SetUUID sets the value of UUID.
func (s *InfraProviderResponseResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *InfraProviderResponseResponse) SetName(val string) {
	s.Name = val
}

// SetFaviconLink sets the value of FaviconLink.
func (s *InfraProviderResponseResponse) SetFaviconLink(val NilString) {
	s.FaviconLink = val
}

// SetLoginUrl sets the value of LoginUrl.
func (s *InfraProviderResponseResponse) SetLoginUrl(val NilString) {
	s.LoginUrl = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *InfraProviderResponseResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *InfraProviderResponseResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetBillingHistory sets the value of BillingHistory.
func (s *InfraProviderResponseResponse) SetBillingHistory(val InfraProviderResponseResponseBillingHistory) {
	s.BillingHistory = val
}

// SetBillingNodes sets the value of BillingNodes.
func (s *InfraProviderResponseResponse) SetBillingNodes(val []InfraProviderResponseResponseBillingNodesItem) {
	s.BillingNodes = val
}

type InfraProviderResponseResponseBillingHistory struct {
	TotalAmount float64 `json:"totalAmount"`
	TotalBills  float64 `json:"totalBills"`
}

// GetTotalAmount returns the value of TotalAmount.
func (s *InfraProviderResponseResponseBillingHistory) GetTotalAmount() float64 {
	return s.TotalAmount
}

// GetTotalBills returns the value of TotalBills.
func (s *InfraProviderResponseResponseBillingHistory) GetTotalBills() float64 {
	return s.TotalBills
}

// SetTotalAmount sets the value of TotalAmount.
func (s *InfraProviderResponseResponseBillingHistory) SetTotalAmount(val float64) {
	s.TotalAmount = val
}

// SetTotalBills sets the value of TotalBills.
func (s *InfraProviderResponseResponseBillingHistory) SetTotalBills(val float64) {
	s.TotalBills = val
}

type InfraProviderResponseResponseBillingNodesItem struct {
	NodeUuid    uuid.UUID `json:"nodeUuid"`
	Name        string    `json:"name"`
	CountryCode string    `json:"countryCode"`
}

// GetNodeUuid returns the value of NodeUuid.
func (s *InfraProviderResponseResponseBillingNodesItem) GetNodeUuid() uuid.UUID {
	return s.NodeUuid
}

// GetName returns the value of Name.
func (s *InfraProviderResponseResponseBillingNodesItem) GetName() string {
	return s.Name
}

// GetCountryCode returns the value of CountryCode.
func (s *InfraProviderResponseResponseBillingNodesItem) GetCountryCode() string {
	return s.CountryCode
}

// SetNodeUuid sets the value of NodeUuid.
func (s *InfraProviderResponseResponseBillingNodesItem) SetNodeUuid(val uuid.UUID) {
	s.NodeUuid = val
}

// SetName sets the value of Name.
func (s *InfraProviderResponseResponseBillingNodesItem) SetName(val string) {
	s.Name = val
}

// SetCountryCode sets the value of CountryCode.
func (s *InfraProviderResponseResponseBillingNodesItem) SetCountryCode(val string) {
	s.CountryCode = val
}

type InternalSquadControllerAddUsersToInternalSquadBadRequest struct {
	Message    OptString                                                            `json:"message"`
	StatusCode OptFloat64                                                           `json:"statusCode"`
	Errors     []InternalSquadControllerAddUsersToInternalSquadBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InternalSquadControllerAddUsersToInternalSquadBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InternalSquadControllerAddUsersToInternalSquadBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InternalSquadControllerAddUsersToInternalSquadBadRequest) GetErrors() []InternalSquadControllerAddUsersToInternalSquadBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InternalSquadControllerAddUsersToInternalSquadBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InternalSquadControllerAddUsersToInternalSquadBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InternalSquadControllerAddUsersToInternalSquadBadRequest) SetErrors(val []InternalSquadControllerAddUsersToInternalSquadBadRequestErrorsItem) {
	s.Errors = val
}

func (*InternalSquadControllerAddUsersToInternalSquadBadRequest) internalSquadControllerAddUsersToInternalSquadRes() {
}

type InternalSquadControllerAddUsersToInternalSquadBadRequestErrorsItem struct{}

type InternalSquadControllerAddUsersToInternalSquadInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InternalSquadControllerAddUsersToInternalSquadInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InternalSquadControllerAddUsersToInternalSquadInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InternalSquadControllerAddUsersToInternalSquadInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InternalSquadControllerAddUsersToInternalSquadInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InternalSquadControllerAddUsersToInternalSquadInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InternalSquadControllerAddUsersToInternalSquadInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InternalSquadControllerAddUsersToInternalSquadInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InternalSquadControllerAddUsersToInternalSquadInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InternalSquadControllerAddUsersToInternalSquadInternalServerError) internalSquadControllerAddUsersToInternalSquadRes() {
}

// InternalSquadControllerAddUsersToInternalSquadNotFound is response for InternalSquadControllerAddUsersToInternalSquad operation.
type InternalSquadControllerAddUsersToInternalSquadNotFound struct{}

func (*InternalSquadControllerAddUsersToInternalSquadNotFound) internalSquadControllerAddUsersToInternalSquadRes() {
}

type InternalSquadControllerCreateInternalSquadBadRequest struct {
	Message    OptString                                                        `json:"message"`
	StatusCode OptFloat64                                                       `json:"statusCode"`
	Errors     []InternalSquadControllerCreateInternalSquadBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InternalSquadControllerCreateInternalSquadBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InternalSquadControllerCreateInternalSquadBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InternalSquadControllerCreateInternalSquadBadRequest) GetErrors() []InternalSquadControllerCreateInternalSquadBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InternalSquadControllerCreateInternalSquadBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InternalSquadControllerCreateInternalSquadBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InternalSquadControllerCreateInternalSquadBadRequest) SetErrors(val []InternalSquadControllerCreateInternalSquadBadRequestErrorsItem) {
	s.Errors = val
}

func (*InternalSquadControllerCreateInternalSquadBadRequest) internalSquadControllerCreateInternalSquadRes() {
}

type InternalSquadControllerCreateInternalSquadBadRequestErrorsItem struct{}

// InternalSquadControllerCreateInternalSquadConflict is response for InternalSquadControllerCreateInternalSquad operation.
type InternalSquadControllerCreateInternalSquadConflict struct{}

func (*InternalSquadControllerCreateInternalSquadConflict) internalSquadControllerCreateInternalSquadRes() {
}

type InternalSquadControllerCreateInternalSquadInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InternalSquadControllerCreateInternalSquadInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InternalSquadControllerCreateInternalSquadInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InternalSquadControllerCreateInternalSquadInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InternalSquadControllerCreateInternalSquadInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InternalSquadControllerCreateInternalSquadInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InternalSquadControllerCreateInternalSquadInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InternalSquadControllerCreateInternalSquadInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InternalSquadControllerCreateInternalSquadInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InternalSquadControllerCreateInternalSquadInternalServerError) internalSquadControllerCreateInternalSquadRes() {
}

type InternalSquadControllerDeleteInternalSquadBadRequest struct {
	Message    OptString                                                        `json:"message"`
	StatusCode OptFloat64                                                       `json:"statusCode"`
	Errors     []InternalSquadControllerDeleteInternalSquadBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InternalSquadControllerDeleteInternalSquadBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InternalSquadControllerDeleteInternalSquadBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InternalSquadControllerDeleteInternalSquadBadRequest) GetErrors() []InternalSquadControllerDeleteInternalSquadBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InternalSquadControllerDeleteInternalSquadBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InternalSquadControllerDeleteInternalSquadBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InternalSquadControllerDeleteInternalSquadBadRequest) SetErrors(val []InternalSquadControllerDeleteInternalSquadBadRequestErrorsItem) {
	s.Errors = val
}

func (*InternalSquadControllerDeleteInternalSquadBadRequest) internalSquadControllerDeleteInternalSquadRes() {
}

type InternalSquadControllerDeleteInternalSquadBadRequestErrorsItem struct{}

type InternalSquadControllerDeleteInternalSquadInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InternalSquadControllerDeleteInternalSquadInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InternalSquadControllerDeleteInternalSquadInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InternalSquadControllerDeleteInternalSquadInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InternalSquadControllerDeleteInternalSquadInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InternalSquadControllerDeleteInternalSquadInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InternalSquadControllerDeleteInternalSquadInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InternalSquadControllerDeleteInternalSquadInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InternalSquadControllerDeleteInternalSquadInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InternalSquadControllerDeleteInternalSquadInternalServerError) internalSquadControllerDeleteInternalSquadRes() {
}

// InternalSquadControllerDeleteInternalSquadNotFound is response for InternalSquadControllerDeleteInternalSquad operation.
type InternalSquadControllerDeleteInternalSquadNotFound struct{}

func (*InternalSquadControllerDeleteInternalSquadNotFound) internalSquadControllerDeleteInternalSquadRes() {
}

type InternalSquadControllerGetInternalSquadAccessibleNodesBadRequest struct {
	Message    OptString                                                                    `json:"message"`
	StatusCode OptFloat64                                                                   `json:"statusCode"`
	Errors     []InternalSquadControllerGetInternalSquadAccessibleNodesBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InternalSquadControllerGetInternalSquadAccessibleNodesBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InternalSquadControllerGetInternalSquadAccessibleNodesBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InternalSquadControllerGetInternalSquadAccessibleNodesBadRequest) GetErrors() []InternalSquadControllerGetInternalSquadAccessibleNodesBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InternalSquadControllerGetInternalSquadAccessibleNodesBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InternalSquadControllerGetInternalSquadAccessibleNodesBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InternalSquadControllerGetInternalSquadAccessibleNodesBadRequest) SetErrors(val []InternalSquadControllerGetInternalSquadAccessibleNodesBadRequestErrorsItem) {
	s.Errors = val
}

func (*InternalSquadControllerGetInternalSquadAccessibleNodesBadRequest) internalSquadControllerGetInternalSquadAccessibleNodesRes() {
}

type InternalSquadControllerGetInternalSquadAccessibleNodesBadRequestErrorsItem struct{}

type InternalSquadControllerGetInternalSquadAccessibleNodesInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InternalSquadControllerGetInternalSquadAccessibleNodesInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InternalSquadControllerGetInternalSquadAccessibleNodesInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InternalSquadControllerGetInternalSquadAccessibleNodesInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InternalSquadControllerGetInternalSquadAccessibleNodesInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InternalSquadControllerGetInternalSquadAccessibleNodesInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InternalSquadControllerGetInternalSquadAccessibleNodesInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InternalSquadControllerGetInternalSquadAccessibleNodesInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InternalSquadControllerGetInternalSquadAccessibleNodesInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InternalSquadControllerGetInternalSquadAccessibleNodesInternalServerError) internalSquadControllerGetInternalSquadAccessibleNodesRes() {
}

// InternalSquadControllerGetInternalSquadAccessibleNodesNotFound is response for InternalSquadControllerGetInternalSquadAccessibleNodes operation.
type InternalSquadControllerGetInternalSquadAccessibleNodesNotFound struct{}

func (*InternalSquadControllerGetInternalSquadAccessibleNodesNotFound) internalSquadControllerGetInternalSquadAccessibleNodesRes() {
}

type InternalSquadControllerGetInternalSquadByUuidBadRequest struct {
	Message    OptString                                                           `json:"message"`
	StatusCode OptFloat64                                                          `json:"statusCode"`
	Errors     []InternalSquadControllerGetInternalSquadByUuidBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InternalSquadControllerGetInternalSquadByUuidBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InternalSquadControllerGetInternalSquadByUuidBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InternalSquadControllerGetInternalSquadByUuidBadRequest) GetErrors() []InternalSquadControllerGetInternalSquadByUuidBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InternalSquadControllerGetInternalSquadByUuidBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InternalSquadControllerGetInternalSquadByUuidBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InternalSquadControllerGetInternalSquadByUuidBadRequest) SetErrors(val []InternalSquadControllerGetInternalSquadByUuidBadRequestErrorsItem) {
	s.Errors = val
}

func (*InternalSquadControllerGetInternalSquadByUuidBadRequest) internalSquadControllerGetInternalSquadByUuidRes() {
}

type InternalSquadControllerGetInternalSquadByUuidBadRequestErrorsItem struct{}

type InternalSquadControllerGetInternalSquadByUuidInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InternalSquadControllerGetInternalSquadByUuidInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InternalSquadControllerGetInternalSquadByUuidInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InternalSquadControllerGetInternalSquadByUuidInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InternalSquadControllerGetInternalSquadByUuidInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InternalSquadControllerGetInternalSquadByUuidInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InternalSquadControllerGetInternalSquadByUuidInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InternalSquadControllerGetInternalSquadByUuidInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InternalSquadControllerGetInternalSquadByUuidInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InternalSquadControllerGetInternalSquadByUuidInternalServerError) internalSquadControllerGetInternalSquadByUuidRes() {
}

type InternalSquadControllerGetInternalSquadsBadRequest struct {
	Message    OptString                                                      `json:"message"`
	StatusCode OptFloat64                                                     `json:"statusCode"`
	Errors     []InternalSquadControllerGetInternalSquadsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InternalSquadControllerGetInternalSquadsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InternalSquadControllerGetInternalSquadsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InternalSquadControllerGetInternalSquadsBadRequest) GetErrors() []InternalSquadControllerGetInternalSquadsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InternalSquadControllerGetInternalSquadsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InternalSquadControllerGetInternalSquadsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InternalSquadControllerGetInternalSquadsBadRequest) SetErrors(val []InternalSquadControllerGetInternalSquadsBadRequestErrorsItem) {
	s.Errors = val
}

func (*InternalSquadControllerGetInternalSquadsBadRequest) internalSquadControllerGetInternalSquadsRes() {
}

type InternalSquadControllerGetInternalSquadsBadRequestErrorsItem struct{}

type InternalSquadControllerGetInternalSquadsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InternalSquadControllerGetInternalSquadsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InternalSquadControllerGetInternalSquadsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InternalSquadControllerGetInternalSquadsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InternalSquadControllerGetInternalSquadsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InternalSquadControllerGetInternalSquadsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InternalSquadControllerGetInternalSquadsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InternalSquadControllerGetInternalSquadsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InternalSquadControllerGetInternalSquadsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InternalSquadControllerGetInternalSquadsInternalServerError) internalSquadControllerGetInternalSquadsRes() {
}

type InternalSquadControllerRemoveUsersFromInternalSquadBadRequest struct {
	Message    OptString                                                                 `json:"message"`
	StatusCode OptFloat64                                                                `json:"statusCode"`
	Errors     []InternalSquadControllerRemoveUsersFromInternalSquadBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InternalSquadControllerRemoveUsersFromInternalSquadBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InternalSquadControllerRemoveUsersFromInternalSquadBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InternalSquadControllerRemoveUsersFromInternalSquadBadRequest) GetErrors() []InternalSquadControllerRemoveUsersFromInternalSquadBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InternalSquadControllerRemoveUsersFromInternalSquadBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InternalSquadControllerRemoveUsersFromInternalSquadBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InternalSquadControllerRemoveUsersFromInternalSquadBadRequest) SetErrors(val []InternalSquadControllerRemoveUsersFromInternalSquadBadRequestErrorsItem) {
	s.Errors = val
}

func (*InternalSquadControllerRemoveUsersFromInternalSquadBadRequest) internalSquadControllerRemoveUsersFromInternalSquadRes() {
}

type InternalSquadControllerRemoveUsersFromInternalSquadBadRequestErrorsItem struct{}

type InternalSquadControllerRemoveUsersFromInternalSquadInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InternalSquadControllerRemoveUsersFromInternalSquadInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InternalSquadControllerRemoveUsersFromInternalSquadInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InternalSquadControllerRemoveUsersFromInternalSquadInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InternalSquadControllerRemoveUsersFromInternalSquadInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InternalSquadControllerRemoveUsersFromInternalSquadInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InternalSquadControllerRemoveUsersFromInternalSquadInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InternalSquadControllerRemoveUsersFromInternalSquadInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InternalSquadControllerRemoveUsersFromInternalSquadInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InternalSquadControllerRemoveUsersFromInternalSquadInternalServerError) internalSquadControllerRemoveUsersFromInternalSquadRes() {
}

// InternalSquadControllerRemoveUsersFromInternalSquadNotFound is response for InternalSquadControllerRemoveUsersFromInternalSquad operation.
type InternalSquadControllerRemoveUsersFromInternalSquadNotFound struct{}

func (*InternalSquadControllerRemoveUsersFromInternalSquadNotFound) internalSquadControllerRemoveUsersFromInternalSquadRes() {
}

type InternalSquadControllerUpdateInternalSquadBadRequest struct {
	Message    OptString                                                        `json:"message"`
	StatusCode OptFloat64                                                       `json:"statusCode"`
	Errors     []InternalSquadControllerUpdateInternalSquadBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *InternalSquadControllerUpdateInternalSquadBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *InternalSquadControllerUpdateInternalSquadBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *InternalSquadControllerUpdateInternalSquadBadRequest) GetErrors() []InternalSquadControllerUpdateInternalSquadBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *InternalSquadControllerUpdateInternalSquadBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *InternalSquadControllerUpdateInternalSquadBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *InternalSquadControllerUpdateInternalSquadBadRequest) SetErrors(val []InternalSquadControllerUpdateInternalSquadBadRequestErrorsItem) {
	s.Errors = val
}

func (*InternalSquadControllerUpdateInternalSquadBadRequest) internalSquadControllerUpdateInternalSquadRes() {
}

type InternalSquadControllerUpdateInternalSquadBadRequestErrorsItem struct{}

// InternalSquadControllerUpdateInternalSquadConflict is response for InternalSquadControllerUpdateInternalSquad operation.
type InternalSquadControllerUpdateInternalSquadConflict struct{}

func (*InternalSquadControllerUpdateInternalSquadConflict) internalSquadControllerUpdateInternalSquadRes() {
}

type InternalSquadControllerUpdateInternalSquadInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *InternalSquadControllerUpdateInternalSquadInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *InternalSquadControllerUpdateInternalSquadInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *InternalSquadControllerUpdateInternalSquadInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *InternalSquadControllerUpdateInternalSquadInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *InternalSquadControllerUpdateInternalSquadInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *InternalSquadControllerUpdateInternalSquadInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *InternalSquadControllerUpdateInternalSquadInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *InternalSquadControllerUpdateInternalSquadInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*InternalSquadControllerUpdateInternalSquadInternalServerError) internalSquadControllerUpdateInternalSquadRes() {
}

// InternalSquadControllerUpdateInternalSquadNotFound is response for InternalSquadControllerUpdateInternalSquad operation.
type InternalSquadControllerUpdateInternalSquadNotFound struct{}

func (*InternalSquadControllerUpdateInternalSquadNotFound) internalSquadControllerUpdateInternalSquadRes() {
}

// Ref: #/components/schemas/InternalSquadResponse
type InternalSquadResponse struct {
	Response InternalSquadResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *InternalSquadResponse) GetResponse() InternalSquadResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *InternalSquadResponse) SetResponse(val InternalSquadResponseResponse) {
	s.Response = val
}

func (*InternalSquadResponse) internalSquadControllerCreateInternalSquadRes()    {}
func (*InternalSquadResponse) internalSquadControllerGetInternalSquadByUuidRes() {}
func (*InternalSquadResponse) internalSquadControllerUpdateInternalSquadRes()    {}

type InternalSquadResponseResponse struct {
	UUID      uuid.UUID                                   `json:"uuid"`
	Name      string                                      `json:"name"`
	Info      InternalSquadResponseResponseInfo           `json:"info"`
	Inbounds  []InternalSquadResponseResponseInboundsItem `json:"inbounds"`
	CreatedAt time.Time                                   `json:"createdAt"`
	UpdatedAt time.Time                                   `json:"updatedAt"`
}

// GetUUID returns the value of UUID.
func (s *InternalSquadResponseResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *InternalSquadResponseResponse) GetName() string {
	return s.Name
}

// GetInfo returns the value of Info.
func (s *InternalSquadResponseResponse) GetInfo() InternalSquadResponseResponseInfo {
	return s.Info
}

// GetInbounds returns the value of Inbounds.
func (s *InternalSquadResponseResponse) GetInbounds() []InternalSquadResponseResponseInboundsItem {
	return s.Inbounds
}

// GetCreatedAt returns the value of CreatedAt.
func (s *InternalSquadResponseResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *InternalSquadResponseResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetUUID sets the value of UUID.
func (s *InternalSquadResponseResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *InternalSquadResponseResponse) SetName(val string) {
	s.Name = val
}

// SetInfo sets the value of Info.
func (s *InternalSquadResponseResponse) SetInfo(val InternalSquadResponseResponseInfo) {
	s.Info = val
}

// SetInbounds sets the value of Inbounds.
func (s *InternalSquadResponseResponse) SetInbounds(val []InternalSquadResponseResponseInboundsItem) {
	s.Inbounds = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *InternalSquadResponseResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *InternalSquadResponseResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type InternalSquadResponseResponseInboundsItem struct {
	UUID        uuid.UUID  `json:"uuid"`
	ProfileUuid uuid.UUID  `json:"profileUuid"`
	Tag         string     `json:"tag"`
	Type        string     `json:"type"`
	Network     NilString  `json:"network"`
	Security    NilString  `json:"security"`
	Port        NilFloat64 `json:"port"`
	RawInbound  jx.Raw     `json:"rawInbound"`
}

// GetUUID returns the value of UUID.
func (s *InternalSquadResponseResponseInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetProfileUuid returns the value of ProfileUuid.
func (s *InternalSquadResponseResponseInboundsItem) GetProfileUuid() uuid.UUID {
	return s.ProfileUuid
}

// GetTag returns the value of Tag.
func (s *InternalSquadResponseResponseInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *InternalSquadResponseResponseInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *InternalSquadResponseResponseInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *InternalSquadResponseResponseInboundsItem) GetSecurity() NilString {
	return s.Security
}

// GetPort returns the value of Port.
func (s *InternalSquadResponseResponseInboundsItem) GetPort() NilFloat64 {
	return s.Port
}

// GetRawInbound returns the value of RawInbound.
func (s *InternalSquadResponseResponseInboundsItem) GetRawInbound() jx.Raw {
	return s.RawInbound
}

// SetUUID sets the value of UUID.
func (s *InternalSquadResponseResponseInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetProfileUuid sets the value of ProfileUuid.
func (s *InternalSquadResponseResponseInboundsItem) SetProfileUuid(val uuid.UUID) {
	s.ProfileUuid = val
}

// SetTag sets the value of Tag.
func (s *InternalSquadResponseResponseInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *InternalSquadResponseResponseInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *InternalSquadResponseResponseInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *InternalSquadResponseResponseInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

// SetPort sets the value of Port.
func (s *InternalSquadResponseResponseInboundsItem) SetPort(val NilFloat64) {
	s.Port = val
}

// SetRawInbound sets the value of RawInbound.
func (s *InternalSquadResponseResponseInboundsItem) SetRawInbound(val jx.Raw) {
	s.RawInbound = val
}

type InternalSquadResponseResponseInfo struct {
	MembersCount  float64 `json:"membersCount"`
	InboundsCount float64 `json:"inboundsCount"`
}

// GetMembersCount returns the value of MembersCount.
func (s *InternalSquadResponseResponseInfo) GetMembersCount() float64 {
	return s.MembersCount
}

// GetInboundsCount returns the value of InboundsCount.
func (s *InternalSquadResponseResponseInfo) GetInboundsCount() float64 {
	return s.InboundsCount
}

// SetMembersCount sets the value of MembersCount.
func (s *InternalSquadResponseResponseInfo) SetMembersCount(val float64) {
	s.MembersCount = val
}

// SetInboundsCount sets the value of InboundsCount.
func (s *InternalSquadResponseResponseInfo) SetInboundsCount(val float64) {
	s.InboundsCount = val
}

type KeygenControllerGenerateKeyBadRequest struct {
	Message    OptString                                         `json:"message"`
	StatusCode OptFloat64                                        `json:"statusCode"`
	Errors     []KeygenControllerGenerateKeyBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *KeygenControllerGenerateKeyBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *KeygenControllerGenerateKeyBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *KeygenControllerGenerateKeyBadRequest) GetErrors() []KeygenControllerGenerateKeyBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *KeygenControllerGenerateKeyBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *KeygenControllerGenerateKeyBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *KeygenControllerGenerateKeyBadRequest) SetErrors(val []KeygenControllerGenerateKeyBadRequestErrorsItem) {
	s.Errors = val
}

func (*KeygenControllerGenerateKeyBadRequest) keygenControllerGenerateKeyRes() {}

type KeygenControllerGenerateKeyBadRequestErrorsItem struct{}

type KeygenControllerGenerateKeyInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *KeygenControllerGenerateKeyInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *KeygenControllerGenerateKeyInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *KeygenControllerGenerateKeyInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *KeygenControllerGenerateKeyInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *KeygenControllerGenerateKeyInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *KeygenControllerGenerateKeyInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *KeygenControllerGenerateKeyInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *KeygenControllerGenerateKeyInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*KeygenControllerGenerateKeyInternalServerError) keygenControllerGenerateKeyRes() {}

// Ref: #/components/schemas/LoginRequestDto
type LoginRequestDto struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

// GetUsername returns the value of Username.
func (s *LoginRequestDto) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *LoginRequestDto) GetPassword() string {
	return s.Password
}

// SetUsername sets the value of Username.
func (s *LoginRequestDto) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *LoginRequestDto) SetPassword(val string) {
	s.Password = val
}

// NewNilDateTime returns new NilDateTime with value set to v.
func NewNilDateTime(v time.Time) NilDateTime {
	return NilDateTime{
		Value: v,
	}
}

// NilDateTime is nullable time.Time.
type NilDateTime struct {
	Value time.Time
	Null  bool
}

// SetTo sets value to v.
func (o *NilDateTime) SetTo(v time.Time) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilDateTime) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilDateTime) SetToNull() {
	o.Null = true
	var v time.Time
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilDateTime) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilDebugSrrMatcherResponseDtoResponseMatchedRule returns new NilDebugSrrMatcherResponseDtoResponseMatchedRule with value set to v.
func NewNilDebugSrrMatcherResponseDtoResponseMatchedRule(v DebugSrrMatcherResponseDtoResponseMatchedRule) NilDebugSrrMatcherResponseDtoResponseMatchedRule {
	return NilDebugSrrMatcherResponseDtoResponseMatchedRule{
		Value: v,
	}
}

// NilDebugSrrMatcherResponseDtoResponseMatchedRule is nullable DebugSrrMatcherResponseDtoResponseMatchedRule.
type NilDebugSrrMatcherResponseDtoResponseMatchedRule struct {
	Value DebugSrrMatcherResponseDtoResponseMatchedRule
	Null  bool
}

// SetTo sets value to v.
func (o *NilDebugSrrMatcherResponseDtoResponseMatchedRule) SetTo(v DebugSrrMatcherResponseDtoResponseMatchedRule) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilDebugSrrMatcherResponseDtoResponseMatchedRule) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilDebugSrrMatcherResponseDtoResponseMatchedRule) SetToNull() {
	o.Null = true
	var v DebugSrrMatcherResponseDtoResponseMatchedRule
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilDebugSrrMatcherResponseDtoResponseMatchedRule) Get() (v DebugSrrMatcherResponseDtoResponseMatchedRule, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilDebugSrrMatcherResponseDtoResponseMatchedRule) Or(d DebugSrrMatcherResponseDtoResponseMatchedRule) DebugSrrMatcherResponseDtoResponseMatchedRule {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilExternalSquadResponseResponseSubscriptionSettings returns new NilExternalSquadResponseResponseSubscriptionSettings with value set to v.
func NewNilExternalSquadResponseResponseSubscriptionSettings(v ExternalSquadResponseResponseSubscriptionSettings) NilExternalSquadResponseResponseSubscriptionSettings {
	return NilExternalSquadResponseResponseSubscriptionSettings{
		Value: v,
	}
}

// NilExternalSquadResponseResponseSubscriptionSettings is nullable ExternalSquadResponseResponseSubscriptionSettings.
type NilExternalSquadResponseResponseSubscriptionSettings struct {
	Value ExternalSquadResponseResponseSubscriptionSettings
	Null  bool
}

// SetTo sets value to v.
func (o *NilExternalSquadResponseResponseSubscriptionSettings) SetTo(v ExternalSquadResponseResponseSubscriptionSettings) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilExternalSquadResponseResponseSubscriptionSettings) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilExternalSquadResponseResponseSubscriptionSettings) SetToNull() {
	o.Null = true
	var v ExternalSquadResponseResponseSubscriptionSettings
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilExternalSquadResponseResponseSubscriptionSettings) Get() (v ExternalSquadResponseResponseSubscriptionSettings, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilExternalSquadResponseResponseSubscriptionSettings) Or(d ExternalSquadResponseResponseSubscriptionSettings) ExternalSquadResponseResponseSubscriptionSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilFloat64 returns new NilFloat64 with value set to v.
func NewNilFloat64(v float64) NilFloat64 {
	return NilFloat64{
		Value: v,
	}
}

// NilFloat64 is nullable float64.
type NilFloat64 struct {
	Value float64
	Null  bool
}

// SetTo sets value to v.
func (o *NilFloat64) SetTo(v float64) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilFloat64) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilFloat64) SetToNull() {
	o.Null = true
	var v float64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilFloat64) Get() (v float64, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilGetAllUsersResponseDtoResponseUsersItemLastConnectedNode returns new NilGetAllUsersResponseDtoResponseUsersItemLastConnectedNode with value set to v.
func NewNilGetAllUsersResponseDtoResponseUsersItemLastConnectedNode(v GetAllUsersResponseDtoResponseUsersItemLastConnectedNode) NilGetAllUsersResponseDtoResponseUsersItemLastConnectedNode {
	return NilGetAllUsersResponseDtoResponseUsersItemLastConnectedNode{
		Value: v,
	}
}

// NilGetAllUsersResponseDtoResponseUsersItemLastConnectedNode is nullable GetAllUsersResponseDtoResponseUsersItemLastConnectedNode.
type NilGetAllUsersResponseDtoResponseUsersItemLastConnectedNode struct {
	Value GetAllUsersResponseDtoResponseUsersItemLastConnectedNode
	Null  bool
}

// SetTo sets value to v.
func (o *NilGetAllUsersResponseDtoResponseUsersItemLastConnectedNode) SetTo(v GetAllUsersResponseDtoResponseUsersItemLastConnectedNode) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilGetAllUsersResponseDtoResponseUsersItemLastConnectedNode) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilGetAllUsersResponseDtoResponseUsersItemLastConnectedNode) SetToNull() {
	o.Null = true
	var v GetAllUsersResponseDtoResponseUsersItemLastConnectedNode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilGetAllUsersResponseDtoResponseUsersItemLastConnectedNode) Get() (v GetAllUsersResponseDtoResponseUsersItemLastConnectedNode, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilGetAllUsersResponseDtoResponseUsersItemLastConnectedNode) Or(d GetAllUsersResponseDtoResponseUsersItemLastConnectedNode) GetAllUsersResponseDtoResponseUsersItemLastConnectedNode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilGetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings returns new NilGetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings with value set to v.
func NewNilGetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings(v GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) NilGetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings {
	return NilGetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings{
		Value: v,
	}
}

// NilGetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings is nullable GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings.
type NilGetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings struct {
	Value GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings
	Null  bool
}

// SetTo sets value to v.
func (o *NilGetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) SetTo(v GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilGetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) IsNull() bool {
	return o.Null
}

// SetToNull sets value to null.
func (o *NilGetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) SetToNull() {
	o.Null = true
	var v GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilGetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) Get() (v GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilGetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) Or(d GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings) GetExternalSquadsResponseDtoResponseExternalSquadsItemSubscriptionSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilGetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode returns new NilGetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode with value set to v.
func NewNilGetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode(v GetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode) NilGetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode {
	return NilGetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode{
		Value: v,
	}
}

// NilGetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode is nullable GetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode.
type NilGetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode struct {
	Value GetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode
	Null  bool
}

// SetTo sets value to v.
func (o *NilGetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode) SetTo(v GetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilGetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode) IsNull() bool {
	return o.Null
}

// SetToNull sets value to null.
func (o *NilGetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode) SetToNull() {
	o.Null = true
	var v GetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilGetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode) Get() (v GetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilGetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode) Or(d GetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode) GetRawSubscriptionByShortUuidResponseDtoResponseUserLastConnectedNode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilGetStatusResponseDtoResponseAuthentication returns new NilGetStatusResponseDtoResponseAuthentication with value set to v.
func NewNilGetStatusResponseDtoResponseAuthentication(v GetStatusResponseDtoResponseAuthentication) NilGetStatusResponseDtoResponseAuthentication {
	return NilGetStatusResponseDtoResponseAuthentication{
		Value: v,
	}
}

// NilGetStatusResponseDtoResponseAuthentication is nullable GetStatusResponseDtoResponseAuthentication.
type NilGetStatusResponseDtoResponseAuthentication struct {
	Value GetStatusResponseDtoResponseAuthentication
	Null  bool
}

// SetTo sets value to v.
func (o *NilGetStatusResponseDtoResponseAuthentication) SetTo(v GetStatusResponseDtoResponseAuthentication) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilGetStatusResponseDtoResponseAuthentication) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilGetStatusResponseDtoResponseAuthentication) SetToNull() {
	o.Null = true
	var v GetStatusResponseDtoResponseAuthentication
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilGetStatusResponseDtoResponseAuthentication) Get() (v GetStatusResponseDtoResponseAuthentication, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilGetStatusResponseDtoResponseAuthentication) Or(d GetStatusResponseDtoResponseAuthentication) GetStatusResponseDtoResponseAuthentication {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilInt returns new NilInt with value set to v.
func NewNilInt(v int) NilInt {
	return NilInt{
		Value: v,
	}
}

// NilInt is nullable int.
type NilInt struct {
	Value int
	Null  bool
}

// SetTo sets value to v.
func (o *NilInt) SetTo(v int) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilInt) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilInt) SetToNull() {
	o.Null = true
	var v int
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilNodeResponseResponseProvider returns new NilNodeResponseResponseProvider with value set to v.
func NewNilNodeResponseResponseProvider(v NodeResponseResponseProvider) NilNodeResponseResponseProvider {
	return NilNodeResponseResponseProvider{
		Value: v,
	}
}

// NilNodeResponseResponseProvider is nullable NodeResponseResponseProvider.
type NilNodeResponseResponseProvider struct {
	Value NodeResponseResponseProvider
	Null  bool
}

// SetTo sets value to v.
func (o *NilNodeResponseResponseProvider) SetTo(v NodeResponseResponseProvider) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilNodeResponseResponseProvider) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilNodeResponseResponseProvider) SetToNull() {
	o.Null = true
	var v NodeResponseResponseProvider
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilNodeResponseResponseProvider) Get() (v NodeResponseResponseProvider, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilNodeResponseResponseProvider) Or(d NodeResponseResponseProvider) NodeResponseResponseProvider {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilNodesResponseResponseItemProvider returns new NilNodesResponseResponseItemProvider with value set to v.
func NewNilNodesResponseResponseItemProvider(v NodesResponseResponseItemProvider) NilNodesResponseResponseItemProvider {
	return NilNodesResponseResponseItemProvider{
		Value: v,
	}
}

// NilNodesResponseResponseItemProvider is nullable NodesResponseResponseItemProvider.
type NilNodesResponseResponseItemProvider struct {
	Value NodesResponseResponseItemProvider
	Null  bool
}

// SetTo sets value to v.
func (o *NilNodesResponseResponseItemProvider) SetTo(v NodesResponseResponseItemProvider) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilNodesResponseResponseItemProvider) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilNodesResponseResponseItemProvider) SetToNull() {
	o.Null = true
	var v NodesResponseResponseItemProvider
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilNodesResponseResponseItemProvider) Get() (v NodesResponseResponseItemProvider, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilNodesResponseResponseItemProvider) Or(d NodesResponseResponseItemProvider) NodesResponseResponseItemProvider {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilSettingsResponseResponseBrandingSettings returns new NilSettingsResponseResponseBrandingSettings with value set to v.
func NewNilSettingsResponseResponseBrandingSettings(v SettingsResponseResponseBrandingSettings) NilSettingsResponseResponseBrandingSettings {
	return NilSettingsResponseResponseBrandingSettings{
		Value: v,
	}
}

// NilSettingsResponseResponseBrandingSettings is nullable SettingsResponseResponseBrandingSettings.
type NilSettingsResponseResponseBrandingSettings struct {
	Value SettingsResponseResponseBrandingSettings
	Null  bool
}

// SetTo sets value to v.
func (o *NilSettingsResponseResponseBrandingSettings) SetTo(v SettingsResponseResponseBrandingSettings) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilSettingsResponseResponseBrandingSettings) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilSettingsResponseResponseBrandingSettings) SetToNull() {
	o.Null = true
	var v SettingsResponseResponseBrandingSettings
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilSettingsResponseResponseBrandingSettings) Get() (v SettingsResponseResponseBrandingSettings, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilSettingsResponseResponseBrandingSettings) Or(d SettingsResponseResponseBrandingSettings) SettingsResponseResponseBrandingSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilSettingsResponseResponseOauth2Settings returns new NilSettingsResponseResponseOauth2Settings with value set to v.
func NewNilSettingsResponseResponseOauth2Settings(v SettingsResponseResponseOauth2Settings) NilSettingsResponseResponseOauth2Settings {
	return NilSettingsResponseResponseOauth2Settings{
		Value: v,
	}
}

// NilSettingsResponseResponseOauth2Settings is nullable SettingsResponseResponseOauth2Settings.
type NilSettingsResponseResponseOauth2Settings struct {
	Value SettingsResponseResponseOauth2Settings
	Null  bool
}

// SetTo sets value to v.
func (o *NilSettingsResponseResponseOauth2Settings) SetTo(v SettingsResponseResponseOauth2Settings) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilSettingsResponseResponseOauth2Settings) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilSettingsResponseResponseOauth2Settings) SetToNull() {
	o.Null = true
	var v SettingsResponseResponseOauth2Settings
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilSettingsResponseResponseOauth2Settings) Get() (v SettingsResponseResponseOauth2Settings, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilSettingsResponseResponseOauth2Settings) Or(d SettingsResponseResponseOauth2Settings) SettingsResponseResponseOauth2Settings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilSettingsResponseResponsePasskeySettings returns new NilSettingsResponseResponsePasskeySettings with value set to v.
func NewNilSettingsResponseResponsePasskeySettings(v SettingsResponseResponsePasskeySettings) NilSettingsResponseResponsePasskeySettings {
	return NilSettingsResponseResponsePasskeySettings{
		Value: v,
	}
}

// NilSettingsResponseResponsePasskeySettings is nullable SettingsResponseResponsePasskeySettings.
type NilSettingsResponseResponsePasskeySettings struct {
	Value SettingsResponseResponsePasskeySettings
	Null  bool
}

// SetTo sets value to v.
func (o *NilSettingsResponseResponsePasskeySettings) SetTo(v SettingsResponseResponsePasskeySettings) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilSettingsResponseResponsePasskeySettings) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilSettingsResponseResponsePasskeySettings) SetToNull() {
	o.Null = true
	var v SettingsResponseResponsePasskeySettings
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilSettingsResponseResponsePasskeySettings) Get() (v SettingsResponseResponsePasskeySettings, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilSettingsResponseResponsePasskeySettings) Or(d SettingsResponseResponsePasskeySettings) SettingsResponseResponsePasskeySettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilSettingsResponseResponsePasswordSettings returns new NilSettingsResponseResponsePasswordSettings with value set to v.
func NewNilSettingsResponseResponsePasswordSettings(v SettingsResponseResponsePasswordSettings) NilSettingsResponseResponsePasswordSettings {
	return NilSettingsResponseResponsePasswordSettings{
		Value: v,
	}
}

// NilSettingsResponseResponsePasswordSettings is nullable SettingsResponseResponsePasswordSettings.
type NilSettingsResponseResponsePasswordSettings struct {
	Value SettingsResponseResponsePasswordSettings
	Null  bool
}

// SetTo sets value to v.
func (o *NilSettingsResponseResponsePasswordSettings) SetTo(v SettingsResponseResponsePasswordSettings) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilSettingsResponseResponsePasswordSettings) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilSettingsResponseResponsePasswordSettings) SetToNull() {
	o.Null = true
	var v SettingsResponseResponsePasswordSettings
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilSettingsResponseResponsePasswordSettings) Get() (v SettingsResponseResponsePasswordSettings, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilSettingsResponseResponsePasswordSettings) Or(d SettingsResponseResponsePasswordSettings) SettingsResponseResponsePasswordSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilSettingsResponseResponseTgAuthSettings returns new NilSettingsResponseResponseTgAuthSettings with value set to v.
func NewNilSettingsResponseResponseTgAuthSettings(v SettingsResponseResponseTgAuthSettings) NilSettingsResponseResponseTgAuthSettings {
	return NilSettingsResponseResponseTgAuthSettings{
		Value: v,
	}
}

// NilSettingsResponseResponseTgAuthSettings is nullable SettingsResponseResponseTgAuthSettings.
type NilSettingsResponseResponseTgAuthSettings struct {
	Value SettingsResponseResponseTgAuthSettings
	Null  bool
}

// SetTo sets value to v.
func (o *NilSettingsResponseResponseTgAuthSettings) SetTo(v SettingsResponseResponseTgAuthSettings) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilSettingsResponseResponseTgAuthSettings) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilSettingsResponseResponseTgAuthSettings) SetToNull() {
	o.Null = true
	var v SettingsResponseResponseTgAuthSettings
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilSettingsResponseResponseTgAuthSettings) Get() (v SettingsResponseResponseTgAuthSettings, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilSettingsResponseResponseTgAuthSettings) Or(d SettingsResponseResponseTgAuthSettings) SettingsResponseResponseTgAuthSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilString returns new NilString with value set to v.
func NewNilString(v string) NilString {
	return NilString{
		Value: v,
	}
}

// NilString is nullable string.
type NilString struct {
	Value string
	Null  bool
}

// SetTo sets value to v.
func (o *NilString) SetTo(v string) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilString) SetToNull() {
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilSubscriptionSettingsResponseResponseCustomResponseHeaders returns new NilSubscriptionSettingsResponseResponseCustomResponseHeaders with value set to v.
func NewNilSubscriptionSettingsResponseResponseCustomResponseHeaders(v SubscriptionSettingsResponseResponseCustomResponseHeaders) NilSubscriptionSettingsResponseResponseCustomResponseHeaders {
	return NilSubscriptionSettingsResponseResponseCustomResponseHeaders{
		Value: v,
	}
}

// NilSubscriptionSettingsResponseResponseCustomResponseHeaders is nullable SubscriptionSettingsResponseResponseCustomResponseHeaders.
type NilSubscriptionSettingsResponseResponseCustomResponseHeaders struct {
	Value SubscriptionSettingsResponseResponseCustomResponseHeaders
	Null  bool
}

// SetTo sets value to v.
func (o *NilSubscriptionSettingsResponseResponseCustomResponseHeaders) SetTo(v SubscriptionSettingsResponseResponseCustomResponseHeaders) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilSubscriptionSettingsResponseResponseCustomResponseHeaders) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilSubscriptionSettingsResponseResponseCustomResponseHeaders) SetToNull() {
	o.Null = true
	var v SubscriptionSettingsResponseResponseCustomResponseHeaders
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilSubscriptionSettingsResponseResponseCustomResponseHeaders) Get() (v SubscriptionSettingsResponseResponseCustomResponseHeaders, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilSubscriptionSettingsResponseResponseCustomResponseHeaders) Or(d SubscriptionSettingsResponseResponseCustomResponseHeaders) SubscriptionSettingsResponseResponseCustomResponseHeaders {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilSubscriptionSettingsResponseResponseResponseRules returns new NilSubscriptionSettingsResponseResponseResponseRules with value set to v.
func NewNilSubscriptionSettingsResponseResponseResponseRules(v SubscriptionSettingsResponseResponseResponseRules) NilSubscriptionSettingsResponseResponseResponseRules {
	return NilSubscriptionSettingsResponseResponseResponseRules{
		Value: v,
	}
}

// NilSubscriptionSettingsResponseResponseResponseRules is nullable SubscriptionSettingsResponseResponseResponseRules.
type NilSubscriptionSettingsResponseResponseResponseRules struct {
	Value SubscriptionSettingsResponseResponseResponseRules
	Null  bool
}

// SetTo sets value to v.
func (o *NilSubscriptionSettingsResponseResponseResponseRules) SetTo(v SubscriptionSettingsResponseResponseResponseRules) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilSubscriptionSettingsResponseResponseResponseRules) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilSubscriptionSettingsResponseResponseResponseRules) SetToNull() {
	o.Null = true
	var v SubscriptionSettingsResponseResponseResponseRules
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilSubscriptionSettingsResponseResponseResponseRules) Get() (v SubscriptionSettingsResponseResponseResponseRules, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilSubscriptionSettingsResponseResponseResponseRules) Or(d SubscriptionSettingsResponseResponseResponseRules) SubscriptionSettingsResponseResponseResponseRules {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilURI returns new NilURI with value set to v.
func NewNilURI(v url.URL) NilURI {
	return NilURI{
		Value: v,
	}
}

// NilURI is nullable url.URL.
type NilURI struct {
	Value url.URL
	Null  bool
}

// SetTo sets value to v.
func (o *NilURI) SetTo(v url.URL) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilURI) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilURI) SetToNull() {
	o.Null = true
	var v url.URL
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilURI) Get() (v url.URL, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilUUID returns new NilUUID with value set to v.
func NewNilUUID(v uuid.UUID) NilUUID {
	return NilUUID{
		Value: v,
	}
}

// NilUUID is nullable uuid.UUID.
type NilUUID struct {
	Value uuid.UUID
	Null  bool
}

// SetTo sets value to v.
func (o *NilUUID) SetTo(v uuid.UUID) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilUUID) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilUUID) SetToNull() {
	o.Null = true
	var v uuid.UUID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilUUID) Get() (v uuid.UUID, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilUserResponseResponseLastConnectedNode returns new NilUserResponseResponseLastConnectedNode with value set to v.
func NewNilUserResponseResponseLastConnectedNode(v UserResponseResponseLastConnectedNode) NilUserResponseResponseLastConnectedNode {
	return NilUserResponseResponseLastConnectedNode{
		Value: v,
	}
}

// NilUserResponseResponseLastConnectedNode is nullable UserResponseResponseLastConnectedNode.
type NilUserResponseResponseLastConnectedNode struct {
	Value UserResponseResponseLastConnectedNode
	Null  bool
}

// SetTo sets value to v.
func (o *NilUserResponseResponseLastConnectedNode) SetTo(v UserResponseResponseLastConnectedNode) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilUserResponseResponseLastConnectedNode) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilUserResponseResponseLastConnectedNode) SetToNull() {
	o.Null = true
	var v UserResponseResponseLastConnectedNode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilUserResponseResponseLastConnectedNode) Get() (v UserResponseResponseLastConnectedNode, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilUserResponseResponseLastConnectedNode) Or(d UserResponseResponseLastConnectedNode) UserResponseResponseLastConnectedNode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilUsersResponseResponseItemLastConnectedNode returns new NilUsersResponseResponseItemLastConnectedNode with value set to v.
func NewNilUsersResponseResponseItemLastConnectedNode(v UsersResponseResponseItemLastConnectedNode) NilUsersResponseResponseItemLastConnectedNode {
	return NilUsersResponseResponseItemLastConnectedNode{
		Value: v,
	}
}

// NilUsersResponseResponseItemLastConnectedNode is nullable UsersResponseResponseItemLastConnectedNode.
type NilUsersResponseResponseItemLastConnectedNode struct {
	Value UsersResponseResponseItemLastConnectedNode
	Null  bool
}

// SetTo sets value to v.
func (o *NilUsersResponseResponseItemLastConnectedNode) SetTo(v UsersResponseResponseItemLastConnectedNode) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilUsersResponseResponseItemLastConnectedNode) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilUsersResponseResponseItemLastConnectedNode) SetToNull() {
	o.Null = true
	var v UsersResponseResponseItemLastConnectedNode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilUsersResponseResponseItemLastConnectedNode) Get() (v UsersResponseResponseItemLastConnectedNode, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilUsersResponseResponseItemLastConnectedNode) Or(d UsersResponseResponseItemLastConnectedNode) UsersResponseResponseItemLastConnectedNode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/NodeResponse
type NodeResponse struct {
	Response NodeResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *NodeResponse) GetResponse() NodeResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *NodeResponse) SetResponse(val NodeResponseResponse) {
	s.Response = val
}

func (*NodeResponse) nodesControllerCreateNodeRes()  {}
func (*NodeResponse) nodesControllerDisableNodeRes() {}
func (*NodeResponse) nodesControllerEnableNodeRes()  {}
func (*NodeResponse) nodesControllerGetOneNodeRes()  {}
func (*NodeResponse) nodesControllerUpdateNodeRes()  {}

type NodeResponseResponse struct {
	UUID                    uuid.UUID                         `json:"uuid"`
	Name                    string                            `json:"name"`
	Address                 string                            `json:"address"`
	Port                    NilInt                            `json:"port"`
	IsConnected             bool                              `json:"isConnected"`
	IsDisabled              bool                              `json:"isDisabled"`
	IsConnecting            bool                              `json:"isConnecting"`
	IsNodeOnline            bool                              `json:"isNodeOnline"`
	IsXrayRunning           bool                              `json:"isXrayRunning"`
	LastStatusChange        NilDateTime                       `json:"lastStatusChange"`
	LastStatusMessage       NilString                         `json:"lastStatusMessage"`
	XrayVersion             NilString                         `json:"xrayVersion"`
	NodeVersion             NilString                         `json:"nodeVersion"`
	XrayUptime              string                            `json:"xrayUptime"`
	IsTrafficTrackingActive bool                              `json:"isTrafficTrackingActive"`
	TrafficResetDay         NilInt                            `json:"trafficResetDay"`
	TrafficLimitBytes       NilFloat64                        `json:"trafficLimitBytes"`
	TrafficUsedBytes        NilFloat64                        `json:"trafficUsedBytes"`
	NotifyPercent           NilInt                            `json:"notifyPercent"`
	UsersOnline             NilInt                            `json:"usersOnline"`
	ViewPosition            int                               `json:"viewPosition"`
	CountryCode             string                            `json:"countryCode"`
	ConsumptionMultiplier   float64                           `json:"consumptionMultiplier"`
	CpuCount                NilInt                            `json:"cpuCount"`
	CpuModel                NilString                         `json:"cpuModel"`
	TotalRam                NilString                         `json:"totalRam"`
	CreatedAt               time.Time                         `json:"createdAt"`
	UpdatedAt               time.Time                         `json:"updatedAt"`
	ConfigProfile           NodeResponseResponseConfigProfile `json:"configProfile"`
	ProviderUuid            NilUUID                           `json:"providerUuid"`
	Provider                NilNodeResponseResponseProvider   `json:"provider"`
}

// GetUUID returns the value of UUID.
func (s *NodeResponseResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *NodeResponseResponse) GetName() string {
	return s.Name
}

// GetAddress returns the value of Address.
func (s *NodeResponseResponse) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *NodeResponseResponse) GetPort() NilInt {
	return s.Port
}

// GetIsConnected returns the value of IsConnected.
func (s *NodeResponseResponse) GetIsConnected() bool {
	return s.IsConnected
}

// GetIsDisabled returns the value of IsDisabled.
func (s *NodeResponseResponse) GetIsDisabled() bool {
	return s.IsDisabled
}

// GetIsConnecting returns the value of IsConnecting.
func (s *NodeResponseResponse) GetIsConnecting() bool {
	return s.IsConnecting
}

// GetIsNodeOnline returns the value of IsNodeOnline.
func (s *NodeResponseResponse) GetIsNodeOnline() bool {
	return s.IsNodeOnline
}

// GetIsXrayRunning returns the value of IsXrayRunning.
func (s *NodeResponseResponse) GetIsXrayRunning() bool {
	return s.IsXrayRunning
}

// GetLastStatusChange returns the value of LastStatusChange.
func (s *NodeResponseResponse) GetLastStatusChange() NilDateTime {
	return s.LastStatusChange
}

// GetLastStatusMessage returns the value of LastStatusMessage.
func (s *NodeResponseResponse) GetLastStatusMessage() NilString {
	return s.LastStatusMessage
}

// GetXrayVersion returns the value of XrayVersion.
func (s *NodeResponseResponse) GetXrayVersion() NilString {
	return s.XrayVersion
}

// GetNodeVersion returns the value of NodeVersion.
func (s *NodeResponseResponse) GetNodeVersion() NilString {
	return s.NodeVersion
}

// GetXrayUptime returns the value of XrayUptime.
func (s *NodeResponseResponse) GetXrayUptime() string {
	return s.XrayUptime
}

// GetIsTrafficTrackingActive returns the value of IsTrafficTrackingActive.
func (s *NodeResponseResponse) GetIsTrafficTrackingActive() bool {
	return s.IsTrafficTrackingActive
}

// GetTrafficResetDay returns the value of TrafficResetDay.
func (s *NodeResponseResponse) GetTrafficResetDay() NilInt {
	return s.TrafficResetDay
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *NodeResponseResponse) GetTrafficLimitBytes() NilFloat64 {
	return s.TrafficLimitBytes
}

// GetTrafficUsedBytes returns the value of TrafficUsedBytes.
func (s *NodeResponseResponse) GetTrafficUsedBytes() NilFloat64 {
	return s.TrafficUsedBytes
}

// GetNotifyPercent returns the value of NotifyPercent.
func (s *NodeResponseResponse) GetNotifyPercent() NilInt {
	return s.NotifyPercent
}

// GetUsersOnline returns the value of UsersOnline.
func (s *NodeResponseResponse) GetUsersOnline() NilInt {
	return s.UsersOnline
}

// GetViewPosition returns the value of ViewPosition.
func (s *NodeResponseResponse) GetViewPosition() int {
	return s.ViewPosition
}

// GetCountryCode returns the value of CountryCode.
func (s *NodeResponseResponse) GetCountryCode() string {
	return s.CountryCode
}

// GetConsumptionMultiplier returns the value of ConsumptionMultiplier.
func (s *NodeResponseResponse) GetConsumptionMultiplier() float64 {
	return s.ConsumptionMultiplier
}

// GetCpuCount returns the value of CpuCount.
func (s *NodeResponseResponse) GetCpuCount() NilInt {
	return s.CpuCount
}

// GetCpuModel returns the value of CpuModel.
func (s *NodeResponseResponse) GetCpuModel() NilString {
	return s.CpuModel
}

// GetTotalRam returns the value of TotalRam.
func (s *NodeResponseResponse) GetTotalRam() NilString {
	return s.TotalRam
}

// GetCreatedAt returns the value of CreatedAt.
func (s *NodeResponseResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *NodeResponseResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetConfigProfile returns the value of ConfigProfile.
func (s *NodeResponseResponse) GetConfigProfile() NodeResponseResponseConfigProfile {
	return s.ConfigProfile
}

// GetProviderUuid returns the value of ProviderUuid.
func (s *NodeResponseResponse) GetProviderUuid() NilUUID {
	return s.ProviderUuid
}

// GetProvider returns the value of Provider.
func (s *NodeResponseResponse) GetProvider() NilNodeResponseResponseProvider {
	return s.Provider
}

// SetUUID sets the value of UUID.
func (s *NodeResponseResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *NodeResponseResponse) SetName(val string) {
	s.Name = val
}

// SetAddress sets the value of Address.
func (s *NodeResponseResponse) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *NodeResponseResponse) SetPort(val NilInt) {
	s.Port = val
}

// SetIsConnected sets the value of IsConnected.
func (s *NodeResponseResponse) SetIsConnected(val bool) {
	s.IsConnected = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *NodeResponseResponse) SetIsDisabled(val bool) {
	s.IsDisabled = val
}

// SetIsConnecting sets the value of IsConnecting.
func (s *NodeResponseResponse) SetIsConnecting(val bool) {
	s.IsConnecting = val
}

// SetIsNodeOnline sets the value of IsNodeOnline.
func (s *NodeResponseResponse) SetIsNodeOnline(val bool) {
	s.IsNodeOnline = val
}

// SetIsXrayRunning sets the value of IsXrayRunning.
func (s *NodeResponseResponse) SetIsXrayRunning(val bool) {
	s.IsXrayRunning = val
}

// SetLastStatusChange sets the value of LastStatusChange.
func (s *NodeResponseResponse) SetLastStatusChange(val NilDateTime) {
	s.LastStatusChange = val
}

// SetLastStatusMessage sets the value of LastStatusMessage.
func (s *NodeResponseResponse) SetLastStatusMessage(val NilString) {
	s.LastStatusMessage = val
}

// SetXrayVersion sets the value of XrayVersion.
func (s *NodeResponseResponse) SetXrayVersion(val NilString) {
	s.XrayVersion = val
}

// SetNodeVersion sets the value of NodeVersion.
func (s *NodeResponseResponse) SetNodeVersion(val NilString) {
	s.NodeVersion = val
}

// SetXrayUptime sets the value of XrayUptime.
func (s *NodeResponseResponse) SetXrayUptime(val string) {
	s.XrayUptime = val
}

// SetIsTrafficTrackingActive sets the value of IsTrafficTrackingActive.
func (s *NodeResponseResponse) SetIsTrafficTrackingActive(val bool) {
	s.IsTrafficTrackingActive = val
}

// SetTrafficResetDay sets the value of TrafficResetDay.
func (s *NodeResponseResponse) SetTrafficResetDay(val NilInt) {
	s.TrafficResetDay = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *NodeResponseResponse) SetTrafficLimitBytes(val NilFloat64) {
	s.TrafficLimitBytes = val
}

// SetTrafficUsedBytes sets the value of TrafficUsedBytes.
func (s *NodeResponseResponse) SetTrafficUsedBytes(val NilFloat64) {
	s.TrafficUsedBytes = val
}

// SetNotifyPercent sets the value of NotifyPercent.
func (s *NodeResponseResponse) SetNotifyPercent(val NilInt) {
	s.NotifyPercent = val
}

// SetUsersOnline sets the value of UsersOnline.
func (s *NodeResponseResponse) SetUsersOnline(val NilInt) {
	s.UsersOnline = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *NodeResponseResponse) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetCountryCode sets the value of CountryCode.
func (s *NodeResponseResponse) SetCountryCode(val string) {
	s.CountryCode = val
}

// SetConsumptionMultiplier sets the value of ConsumptionMultiplier.
func (s *NodeResponseResponse) SetConsumptionMultiplier(val float64) {
	s.ConsumptionMultiplier = val
}

// SetCpuCount sets the value of CpuCount.
func (s *NodeResponseResponse) SetCpuCount(val NilInt) {
	s.CpuCount = val
}

// SetCpuModel sets the value of CpuModel.
func (s *NodeResponseResponse) SetCpuModel(val NilString) {
	s.CpuModel = val
}

// SetTotalRam sets the value of TotalRam.
func (s *NodeResponseResponse) SetTotalRam(val NilString) {
	s.TotalRam = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *NodeResponseResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *NodeResponseResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetConfigProfile sets the value of ConfigProfile.
func (s *NodeResponseResponse) SetConfigProfile(val NodeResponseResponseConfigProfile) {
	s.ConfigProfile = val
}

// SetProviderUuid sets the value of ProviderUuid.
func (s *NodeResponseResponse) SetProviderUuid(val NilUUID) {
	s.ProviderUuid = val
}

// SetProvider sets the value of Provider.
func (s *NodeResponseResponse) SetProvider(val NilNodeResponseResponseProvider) {
	s.Provider = val
}

type NodeResponseResponseConfigProfile struct {
	ActiveConfigProfileUuid NilUUID                                               `json:"activeConfigProfileUuid"`
	ActiveInbounds          []NodeResponseResponseConfigProfileActiveInboundsItem `json:"activeInbounds"`
}

// GetActiveConfigProfileUuid returns the value of ActiveConfigProfileUuid.
func (s *NodeResponseResponseConfigProfile) GetActiveConfigProfileUuid() NilUUID {
	return s.ActiveConfigProfileUuid
}

// GetActiveInbounds returns the value of ActiveInbounds.
func (s *NodeResponseResponseConfigProfile) GetActiveInbounds() []NodeResponseResponseConfigProfileActiveInboundsItem {
	return s.ActiveInbounds
}

// SetActiveConfigProfileUuid sets the value of ActiveConfigProfileUuid.
func (s *NodeResponseResponseConfigProfile) SetActiveConfigProfileUuid(val NilUUID) {
	s.ActiveConfigProfileUuid = val
}

// SetActiveInbounds sets the value of ActiveInbounds.
func (s *NodeResponseResponseConfigProfile) SetActiveInbounds(val []NodeResponseResponseConfigProfileActiveInboundsItem) {
	s.ActiveInbounds = val
}

type NodeResponseResponseConfigProfileActiveInboundsItem struct {
	UUID        uuid.UUID  `json:"uuid"`
	ProfileUuid uuid.UUID  `json:"profileUuid"`
	Tag         string     `json:"tag"`
	Type        string     `json:"type"`
	Network     NilString  `json:"network"`
	Security    NilString  `json:"security"`
	Port        NilFloat64 `json:"port"`
	RawInbound  jx.Raw     `json:"rawInbound"`
}

// GetUUID returns the value of UUID.
func (s *NodeResponseResponseConfigProfileActiveInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetProfileUuid returns the value of ProfileUuid.
func (s *NodeResponseResponseConfigProfileActiveInboundsItem) GetProfileUuid() uuid.UUID {
	return s.ProfileUuid
}

// GetTag returns the value of Tag.
func (s *NodeResponseResponseConfigProfileActiveInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *NodeResponseResponseConfigProfileActiveInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *NodeResponseResponseConfigProfileActiveInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *NodeResponseResponseConfigProfileActiveInboundsItem) GetSecurity() NilString {
	return s.Security
}

// GetPort returns the value of Port.
func (s *NodeResponseResponseConfigProfileActiveInboundsItem) GetPort() NilFloat64 {
	return s.Port
}

// GetRawInbound returns the value of RawInbound.
func (s *NodeResponseResponseConfigProfileActiveInboundsItem) GetRawInbound() jx.Raw {
	return s.RawInbound
}

// SetUUID sets the value of UUID.
func (s *NodeResponseResponseConfigProfileActiveInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetProfileUuid sets the value of ProfileUuid.
func (s *NodeResponseResponseConfigProfileActiveInboundsItem) SetProfileUuid(val uuid.UUID) {
	s.ProfileUuid = val
}

// SetTag sets the value of Tag.
func (s *NodeResponseResponseConfigProfileActiveInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *NodeResponseResponseConfigProfileActiveInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *NodeResponseResponseConfigProfileActiveInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *NodeResponseResponseConfigProfileActiveInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

// SetPort sets the value of Port.
func (s *NodeResponseResponseConfigProfileActiveInboundsItem) SetPort(val NilFloat64) {
	s.Port = val
}

// SetRawInbound sets the value of RawInbound.
func (s *NodeResponseResponseConfigProfileActiveInboundsItem) SetRawInbound(val jx.Raw) {
	s.RawInbound = val
}

type NodeResponseResponseProvider struct {
	UUID        uuid.UUID `json:"uuid"`
	Name        string    `json:"name"`
	FaviconLink NilString `json:"faviconLink"`
	LoginUrl    NilString `json:"loginUrl"`
	CreatedAt   time.Time `json:"createdAt"`
	UpdatedAt   time.Time `json:"updatedAt"`
}

// GetUUID returns the value of UUID.
func (s *NodeResponseResponseProvider) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *NodeResponseResponseProvider) GetName() string {
	return s.Name
}

// GetFaviconLink returns the value of FaviconLink.
func (s *NodeResponseResponseProvider) GetFaviconLink() NilString {
	return s.FaviconLink
}

// GetLoginUrl returns the value of LoginUrl.
func (s *NodeResponseResponseProvider) GetLoginUrl() NilString {
	return s.LoginUrl
}

// GetCreatedAt returns the value of CreatedAt.
func (s *NodeResponseResponseProvider) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *NodeResponseResponseProvider) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetUUID sets the value of UUID.
func (s *NodeResponseResponseProvider) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *NodeResponseResponseProvider) SetName(val string) {
	s.Name = val
}

// SetFaviconLink sets the value of FaviconLink.
func (s *NodeResponseResponseProvider) SetFaviconLink(val NilString) {
	s.FaviconLink = val
}

// SetLoginUrl sets the value of LoginUrl.
func (s *NodeResponseResponseProvider) SetLoginUrl(val NilString) {
	s.LoginUrl = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *NodeResponseResponseProvider) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *NodeResponseResponseProvider) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type NodesControllerCreateNodeBadRequest struct {
	Message    OptString                                       `json:"message"`
	StatusCode OptFloat64                                      `json:"statusCode"`
	Errors     []NodesControllerCreateNodeBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *NodesControllerCreateNodeBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *NodesControllerCreateNodeBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *NodesControllerCreateNodeBadRequest) GetErrors() []NodesControllerCreateNodeBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *NodesControllerCreateNodeBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *NodesControllerCreateNodeBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *NodesControllerCreateNodeBadRequest) SetErrors(val []NodesControllerCreateNodeBadRequestErrorsItem) {
	s.Errors = val
}

func (*NodesControllerCreateNodeBadRequest) nodesControllerCreateNodeRes() {}

type NodesControllerCreateNodeBadRequestErrorsItem struct{}

type NodesControllerCreateNodeInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *NodesControllerCreateNodeInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *NodesControllerCreateNodeInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *NodesControllerCreateNodeInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *NodesControllerCreateNodeInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *NodesControllerCreateNodeInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *NodesControllerCreateNodeInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *NodesControllerCreateNodeInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *NodesControllerCreateNodeInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*NodesControllerCreateNodeInternalServerError) nodesControllerCreateNodeRes() {}

type NodesControllerDeleteNodeBadRequest struct {
	Message    OptString                                       `json:"message"`
	StatusCode OptFloat64                                      `json:"statusCode"`
	Errors     []NodesControllerDeleteNodeBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *NodesControllerDeleteNodeBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *NodesControllerDeleteNodeBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *NodesControllerDeleteNodeBadRequest) GetErrors() []NodesControllerDeleteNodeBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *NodesControllerDeleteNodeBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *NodesControllerDeleteNodeBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *NodesControllerDeleteNodeBadRequest) SetErrors(val []NodesControllerDeleteNodeBadRequestErrorsItem) {
	s.Errors = val
}

func (*NodesControllerDeleteNodeBadRequest) nodesControllerDeleteNodeRes() {}

type NodesControllerDeleteNodeBadRequestErrorsItem struct{}

type NodesControllerDeleteNodeInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *NodesControllerDeleteNodeInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *NodesControllerDeleteNodeInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *NodesControllerDeleteNodeInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *NodesControllerDeleteNodeInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *NodesControllerDeleteNodeInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *NodesControllerDeleteNodeInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *NodesControllerDeleteNodeInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *NodesControllerDeleteNodeInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*NodesControllerDeleteNodeInternalServerError) nodesControllerDeleteNodeRes() {}

type NodesControllerDisableNodeBadRequest struct {
	Message    OptString                                        `json:"message"`
	StatusCode OptFloat64                                       `json:"statusCode"`
	Errors     []NodesControllerDisableNodeBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *NodesControllerDisableNodeBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *NodesControllerDisableNodeBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *NodesControllerDisableNodeBadRequest) GetErrors() []NodesControllerDisableNodeBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *NodesControllerDisableNodeBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *NodesControllerDisableNodeBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *NodesControllerDisableNodeBadRequest) SetErrors(val []NodesControllerDisableNodeBadRequestErrorsItem) {
	s.Errors = val
}

func (*NodesControllerDisableNodeBadRequest) nodesControllerDisableNodeRes() {}

type NodesControllerDisableNodeBadRequestErrorsItem struct{}

type NodesControllerDisableNodeInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *NodesControllerDisableNodeInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *NodesControllerDisableNodeInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *NodesControllerDisableNodeInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *NodesControllerDisableNodeInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *NodesControllerDisableNodeInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *NodesControllerDisableNodeInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *NodesControllerDisableNodeInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *NodesControllerDisableNodeInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*NodesControllerDisableNodeInternalServerError) nodesControllerDisableNodeRes() {}

type NodesControllerEnableNodeBadRequest struct {
	Message    OptString                                       `json:"message"`
	StatusCode OptFloat64                                      `json:"statusCode"`
	Errors     []NodesControllerEnableNodeBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *NodesControllerEnableNodeBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *NodesControllerEnableNodeBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *NodesControllerEnableNodeBadRequest) GetErrors() []NodesControllerEnableNodeBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *NodesControllerEnableNodeBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *NodesControllerEnableNodeBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *NodesControllerEnableNodeBadRequest) SetErrors(val []NodesControllerEnableNodeBadRequestErrorsItem) {
	s.Errors = val
}

func (*NodesControllerEnableNodeBadRequest) nodesControllerEnableNodeRes() {}

type NodesControllerEnableNodeBadRequestErrorsItem struct{}

type NodesControllerEnableNodeInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *NodesControllerEnableNodeInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *NodesControllerEnableNodeInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *NodesControllerEnableNodeInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *NodesControllerEnableNodeInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *NodesControllerEnableNodeInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *NodesControllerEnableNodeInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *NodesControllerEnableNodeInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *NodesControllerEnableNodeInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*NodesControllerEnableNodeInternalServerError) nodesControllerEnableNodeRes() {}

type NodesControllerGetAllNodesBadRequest struct {
	Message    OptString                                        `json:"message"`
	StatusCode OptFloat64                                       `json:"statusCode"`
	Errors     []NodesControllerGetAllNodesBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *NodesControllerGetAllNodesBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *NodesControllerGetAllNodesBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *NodesControllerGetAllNodesBadRequest) GetErrors() []NodesControllerGetAllNodesBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *NodesControllerGetAllNodesBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *NodesControllerGetAllNodesBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *NodesControllerGetAllNodesBadRequest) SetErrors(val []NodesControllerGetAllNodesBadRequestErrorsItem) {
	s.Errors = val
}

func (*NodesControllerGetAllNodesBadRequest) nodesControllerGetAllNodesRes() {}

type NodesControllerGetAllNodesBadRequestErrorsItem struct{}

type NodesControllerGetAllNodesInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *NodesControllerGetAllNodesInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *NodesControllerGetAllNodesInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *NodesControllerGetAllNodesInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *NodesControllerGetAllNodesInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *NodesControllerGetAllNodesInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *NodesControllerGetAllNodesInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *NodesControllerGetAllNodesInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *NodesControllerGetAllNodesInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*NodesControllerGetAllNodesInternalServerError) nodesControllerGetAllNodesRes() {}

type NodesControllerGetOneNodeBadRequest struct {
	Message    OptString                                       `json:"message"`
	StatusCode OptFloat64                                      `json:"statusCode"`
	Errors     []NodesControllerGetOneNodeBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *NodesControllerGetOneNodeBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *NodesControllerGetOneNodeBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *NodesControllerGetOneNodeBadRequest) GetErrors() []NodesControllerGetOneNodeBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *NodesControllerGetOneNodeBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *NodesControllerGetOneNodeBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *NodesControllerGetOneNodeBadRequest) SetErrors(val []NodesControllerGetOneNodeBadRequestErrorsItem) {
	s.Errors = val
}

func (*NodesControllerGetOneNodeBadRequest) nodesControllerGetOneNodeRes() {}

type NodesControllerGetOneNodeBadRequestErrorsItem struct{}

type NodesControllerGetOneNodeInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *NodesControllerGetOneNodeInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *NodesControllerGetOneNodeInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *NodesControllerGetOneNodeInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *NodesControllerGetOneNodeInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *NodesControllerGetOneNodeInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *NodesControllerGetOneNodeInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *NodesControllerGetOneNodeInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *NodesControllerGetOneNodeInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*NodesControllerGetOneNodeInternalServerError) nodesControllerGetOneNodeRes() {}

type NodesControllerReorderNodesBadRequest struct {
	Message    OptString                                         `json:"message"`
	StatusCode OptFloat64                                        `json:"statusCode"`
	Errors     []NodesControllerReorderNodesBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *NodesControllerReorderNodesBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *NodesControllerReorderNodesBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *NodesControllerReorderNodesBadRequest) GetErrors() []NodesControllerReorderNodesBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *NodesControllerReorderNodesBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *NodesControllerReorderNodesBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *NodesControllerReorderNodesBadRequest) SetErrors(val []NodesControllerReorderNodesBadRequestErrorsItem) {
	s.Errors = val
}

func (*NodesControllerReorderNodesBadRequest) nodesControllerReorderNodesRes() {}

type NodesControllerReorderNodesBadRequestErrorsItem struct{}

type NodesControllerReorderNodesInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *NodesControllerReorderNodesInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *NodesControllerReorderNodesInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *NodesControllerReorderNodesInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *NodesControllerReorderNodesInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *NodesControllerReorderNodesInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *NodesControllerReorderNodesInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *NodesControllerReorderNodesInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *NodesControllerReorderNodesInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*NodesControllerReorderNodesInternalServerError) nodesControllerReorderNodesRes() {}

type NodesControllerRestartAllNodesBadRequest struct {
	Message    OptString                                            `json:"message"`
	StatusCode OptFloat64                                           `json:"statusCode"`
	Errors     []NodesControllerRestartAllNodesBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *NodesControllerRestartAllNodesBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *NodesControllerRestartAllNodesBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *NodesControllerRestartAllNodesBadRequest) GetErrors() []NodesControllerRestartAllNodesBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *NodesControllerRestartAllNodesBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *NodesControllerRestartAllNodesBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *NodesControllerRestartAllNodesBadRequest) SetErrors(val []NodesControllerRestartAllNodesBadRequestErrorsItem) {
	s.Errors = val
}

func (*NodesControllerRestartAllNodesBadRequest) nodesControllerRestartAllNodesRes() {}

type NodesControllerRestartAllNodesBadRequestErrorsItem struct{}

type NodesControllerRestartAllNodesInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *NodesControllerRestartAllNodesInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *NodesControllerRestartAllNodesInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *NodesControllerRestartAllNodesInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *NodesControllerRestartAllNodesInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *NodesControllerRestartAllNodesInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *NodesControllerRestartAllNodesInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *NodesControllerRestartAllNodesInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *NodesControllerRestartAllNodesInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*NodesControllerRestartAllNodesInternalServerError) nodesControllerRestartAllNodesRes() {}

type NodesControllerRestartNodeBadRequest struct {
	Message    OptString                                        `json:"message"`
	StatusCode OptFloat64                                       `json:"statusCode"`
	Errors     []NodesControllerRestartNodeBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *NodesControllerRestartNodeBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *NodesControllerRestartNodeBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *NodesControllerRestartNodeBadRequest) GetErrors() []NodesControllerRestartNodeBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *NodesControllerRestartNodeBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *NodesControllerRestartNodeBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *NodesControllerRestartNodeBadRequest) SetErrors(val []NodesControllerRestartNodeBadRequestErrorsItem) {
	s.Errors = val
}

func (*NodesControllerRestartNodeBadRequest) nodesControllerRestartNodeRes() {}

type NodesControllerRestartNodeBadRequestErrorsItem struct{}

type NodesControllerRestartNodeInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *NodesControllerRestartNodeInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *NodesControllerRestartNodeInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *NodesControllerRestartNodeInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *NodesControllerRestartNodeInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *NodesControllerRestartNodeInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *NodesControllerRestartNodeInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *NodesControllerRestartNodeInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *NodesControllerRestartNodeInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*NodesControllerRestartNodeInternalServerError) nodesControllerRestartNodeRes() {}

type NodesControllerUpdateNodeBadRequest struct {
	Message    OptString                                       `json:"message"`
	StatusCode OptFloat64                                      `json:"statusCode"`
	Errors     []NodesControllerUpdateNodeBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *NodesControllerUpdateNodeBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *NodesControllerUpdateNodeBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *NodesControllerUpdateNodeBadRequest) GetErrors() []NodesControllerUpdateNodeBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *NodesControllerUpdateNodeBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *NodesControllerUpdateNodeBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *NodesControllerUpdateNodeBadRequest) SetErrors(val []NodesControllerUpdateNodeBadRequestErrorsItem) {
	s.Errors = val
}

func (*NodesControllerUpdateNodeBadRequest) nodesControllerUpdateNodeRes() {}

type NodesControllerUpdateNodeBadRequestErrorsItem struct{}

type NodesControllerUpdateNodeInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *NodesControllerUpdateNodeInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *NodesControllerUpdateNodeInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *NodesControllerUpdateNodeInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *NodesControllerUpdateNodeInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *NodesControllerUpdateNodeInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *NodesControllerUpdateNodeInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *NodesControllerUpdateNodeInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *NodesControllerUpdateNodeInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*NodesControllerUpdateNodeInternalServerError) nodesControllerUpdateNodeRes() {}

// Ref: #/components/schemas/NodesResponse
type NodesResponse struct {
	Response []NodesResponseResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *NodesResponse) GetResponse() []NodesResponseResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *NodesResponse) SetResponse(val []NodesResponseResponseItem) {
	s.Response = val
}

func (*NodesResponse) nodesControllerGetAllNodesRes()  {}
func (*NodesResponse) nodesControllerReorderNodesRes() {}

type NodesResponseResponseItem struct {
	UUID                    uuid.UUID                              `json:"uuid"`
	Name                    string                                 `json:"name"`
	Address                 string                                 `json:"address"`
	Port                    NilInt                                 `json:"port"`
	IsConnected             bool                                   `json:"isConnected"`
	IsDisabled              bool                                   `json:"isDisabled"`
	IsConnecting            bool                                   `json:"isConnecting"`
	IsNodeOnline            bool                                   `json:"isNodeOnline"`
	IsXrayRunning           bool                                   `json:"isXrayRunning"`
	LastStatusChange        NilDateTime                            `json:"lastStatusChange"`
	LastStatusMessage       NilString                              `json:"lastStatusMessage"`
	XrayVersion             NilString                              `json:"xrayVersion"`
	NodeVersion             NilString                              `json:"nodeVersion"`
	XrayUptime              string                                 `json:"xrayUptime"`
	IsTrafficTrackingActive bool                                   `json:"isTrafficTrackingActive"`
	TrafficResetDay         NilInt                                 `json:"trafficResetDay"`
	TrafficLimitBytes       NilFloat64                             `json:"trafficLimitBytes"`
	TrafficUsedBytes        NilFloat64                             `json:"trafficUsedBytes"`
	NotifyPercent           NilInt                                 `json:"notifyPercent"`
	UsersOnline             NilInt                                 `json:"usersOnline"`
	ViewPosition            int                                    `json:"viewPosition"`
	CountryCode             string                                 `json:"countryCode"`
	ConsumptionMultiplier   float64                                `json:"consumptionMultiplier"`
	CpuCount                NilInt                                 `json:"cpuCount"`
	CpuModel                NilString                              `json:"cpuModel"`
	TotalRam                NilString                              `json:"totalRam"`
	CreatedAt               time.Time                              `json:"createdAt"`
	UpdatedAt               time.Time                              `json:"updatedAt"`
	ConfigProfile           NodesResponseResponseItemConfigProfile `json:"configProfile"`
	ProviderUuid            NilUUID                                `json:"providerUuid"`
	Provider                NilNodesResponseResponseItemProvider   `json:"provider"`
}

// GetUUID returns the value of UUID.
func (s *NodesResponseResponseItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *NodesResponseResponseItem) GetName() string {
	return s.Name
}

// GetAddress returns the value of Address.
func (s *NodesResponseResponseItem) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *NodesResponseResponseItem) GetPort() NilInt {
	return s.Port
}

// GetIsConnected returns the value of IsConnected.
func (s *NodesResponseResponseItem) GetIsConnected() bool {
	return s.IsConnected
}

// GetIsDisabled returns the value of IsDisabled.
func (s *NodesResponseResponseItem) GetIsDisabled() bool {
	return s.IsDisabled
}

// GetIsConnecting returns the value of IsConnecting.
func (s *NodesResponseResponseItem) GetIsConnecting() bool {
	return s.IsConnecting
}

// GetIsNodeOnline returns the value of IsNodeOnline.
func (s *NodesResponseResponseItem) GetIsNodeOnline() bool {
	return s.IsNodeOnline
}

// GetIsXrayRunning returns the value of IsXrayRunning.
func (s *NodesResponseResponseItem) GetIsXrayRunning() bool {
	return s.IsXrayRunning
}

// GetLastStatusChange returns the value of LastStatusChange.
func (s *NodesResponseResponseItem) GetLastStatusChange() NilDateTime {
	return s.LastStatusChange
}

// GetLastStatusMessage returns the value of LastStatusMessage.
func (s *NodesResponseResponseItem) GetLastStatusMessage() NilString {
	return s.LastStatusMessage
}

// GetXrayVersion returns the value of XrayVersion.
func (s *NodesResponseResponseItem) GetXrayVersion() NilString {
	return s.XrayVersion
}

// GetNodeVersion returns the value of NodeVersion.
func (s *NodesResponseResponseItem) GetNodeVersion() NilString {
	return s.NodeVersion
}

// GetXrayUptime returns the value of XrayUptime.
func (s *NodesResponseResponseItem) GetXrayUptime() string {
	return s.XrayUptime
}

// GetIsTrafficTrackingActive returns the value of IsTrafficTrackingActive.
func (s *NodesResponseResponseItem) GetIsTrafficTrackingActive() bool {
	return s.IsTrafficTrackingActive
}

// GetTrafficResetDay returns the value of TrafficResetDay.
func (s *NodesResponseResponseItem) GetTrafficResetDay() NilInt {
	return s.TrafficResetDay
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *NodesResponseResponseItem) GetTrafficLimitBytes() NilFloat64 {
	return s.TrafficLimitBytes
}

// GetTrafficUsedBytes returns the value of TrafficUsedBytes.
func (s *NodesResponseResponseItem) GetTrafficUsedBytes() NilFloat64 {
	return s.TrafficUsedBytes
}

// GetNotifyPercent returns the value of NotifyPercent.
func (s *NodesResponseResponseItem) GetNotifyPercent() NilInt {
	return s.NotifyPercent
}

// GetUsersOnline returns the value of UsersOnline.
func (s *NodesResponseResponseItem) GetUsersOnline() NilInt {
	return s.UsersOnline
}

// GetViewPosition returns the value of ViewPosition.
func (s *NodesResponseResponseItem) GetViewPosition() int {
	return s.ViewPosition
}

// GetCountryCode returns the value of CountryCode.
func (s *NodesResponseResponseItem) GetCountryCode() string {
	return s.CountryCode
}

// GetConsumptionMultiplier returns the value of ConsumptionMultiplier.
func (s *NodesResponseResponseItem) GetConsumptionMultiplier() float64 {
	return s.ConsumptionMultiplier
}

// GetCpuCount returns the value of CpuCount.
func (s *NodesResponseResponseItem) GetCpuCount() NilInt {
	return s.CpuCount
}

// GetCpuModel returns the value of CpuModel.
func (s *NodesResponseResponseItem) GetCpuModel() NilString {
	return s.CpuModel
}

// GetTotalRam returns the value of TotalRam.
func (s *NodesResponseResponseItem) GetTotalRam() NilString {
	return s.TotalRam
}

// GetCreatedAt returns the value of CreatedAt.
func (s *NodesResponseResponseItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *NodesResponseResponseItem) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetConfigProfile returns the value of ConfigProfile.
func (s *NodesResponseResponseItem) GetConfigProfile() NodesResponseResponseItemConfigProfile {
	return s.ConfigProfile
}

// GetProviderUuid returns the value of ProviderUuid.
func (s *NodesResponseResponseItem) GetProviderUuid() NilUUID {
	return s.ProviderUuid
}

// GetProvider returns the value of Provider.
func (s *NodesResponseResponseItem) GetProvider() NilNodesResponseResponseItemProvider {
	return s.Provider
}

// SetUUID sets the value of UUID.
func (s *NodesResponseResponseItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *NodesResponseResponseItem) SetName(val string) {
	s.Name = val
}

// SetAddress sets the value of Address.
func (s *NodesResponseResponseItem) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *NodesResponseResponseItem) SetPort(val NilInt) {
	s.Port = val
}

// SetIsConnected sets the value of IsConnected.
func (s *NodesResponseResponseItem) SetIsConnected(val bool) {
	s.IsConnected = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *NodesResponseResponseItem) SetIsDisabled(val bool) {
	s.IsDisabled = val
}

// SetIsConnecting sets the value of IsConnecting.
func (s *NodesResponseResponseItem) SetIsConnecting(val bool) {
	s.IsConnecting = val
}

// SetIsNodeOnline sets the value of IsNodeOnline.
func (s *NodesResponseResponseItem) SetIsNodeOnline(val bool) {
	s.IsNodeOnline = val
}

// SetIsXrayRunning sets the value of IsXrayRunning.
func (s *NodesResponseResponseItem) SetIsXrayRunning(val bool) {
	s.IsXrayRunning = val
}

// SetLastStatusChange sets the value of LastStatusChange.
func (s *NodesResponseResponseItem) SetLastStatusChange(val NilDateTime) {
	s.LastStatusChange = val
}

// SetLastStatusMessage sets the value of LastStatusMessage.
func (s *NodesResponseResponseItem) SetLastStatusMessage(val NilString) {
	s.LastStatusMessage = val
}

// SetXrayVersion sets the value of XrayVersion.
func (s *NodesResponseResponseItem) SetXrayVersion(val NilString) {
	s.XrayVersion = val
}

// SetNodeVersion sets the value of NodeVersion.
func (s *NodesResponseResponseItem) SetNodeVersion(val NilString) {
	s.NodeVersion = val
}

// SetXrayUptime sets the value of XrayUptime.
func (s *NodesResponseResponseItem) SetXrayUptime(val string) {
	s.XrayUptime = val
}

// SetIsTrafficTrackingActive sets the value of IsTrafficTrackingActive.
func (s *NodesResponseResponseItem) SetIsTrafficTrackingActive(val bool) {
	s.IsTrafficTrackingActive = val
}

// SetTrafficResetDay sets the value of TrafficResetDay.
func (s *NodesResponseResponseItem) SetTrafficResetDay(val NilInt) {
	s.TrafficResetDay = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *NodesResponseResponseItem) SetTrafficLimitBytes(val NilFloat64) {
	s.TrafficLimitBytes = val
}

// SetTrafficUsedBytes sets the value of TrafficUsedBytes.
func (s *NodesResponseResponseItem) SetTrafficUsedBytes(val NilFloat64) {
	s.TrafficUsedBytes = val
}

// SetNotifyPercent sets the value of NotifyPercent.
func (s *NodesResponseResponseItem) SetNotifyPercent(val NilInt) {
	s.NotifyPercent = val
}

// SetUsersOnline sets the value of UsersOnline.
func (s *NodesResponseResponseItem) SetUsersOnline(val NilInt) {
	s.UsersOnline = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *NodesResponseResponseItem) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetCountryCode sets the value of CountryCode.
func (s *NodesResponseResponseItem) SetCountryCode(val string) {
	s.CountryCode = val
}

// SetConsumptionMultiplier sets the value of ConsumptionMultiplier.
func (s *NodesResponseResponseItem) SetConsumptionMultiplier(val float64) {
	s.ConsumptionMultiplier = val
}

// SetCpuCount sets the value of CpuCount.
func (s *NodesResponseResponseItem) SetCpuCount(val NilInt) {
	s.CpuCount = val
}

// SetCpuModel sets the value of CpuModel.
func (s *NodesResponseResponseItem) SetCpuModel(val NilString) {
	s.CpuModel = val
}

// SetTotalRam sets the value of TotalRam.
func (s *NodesResponseResponseItem) SetTotalRam(val NilString) {
	s.TotalRam = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *NodesResponseResponseItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *NodesResponseResponseItem) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetConfigProfile sets the value of ConfigProfile.
func (s *NodesResponseResponseItem) SetConfigProfile(val NodesResponseResponseItemConfigProfile) {
	s.ConfigProfile = val
}

// SetProviderUuid sets the value of ProviderUuid.
func (s *NodesResponseResponseItem) SetProviderUuid(val NilUUID) {
	s.ProviderUuid = val
}

// SetProvider sets the value of Provider.
func (s *NodesResponseResponseItem) SetProvider(val NilNodesResponseResponseItemProvider) {
	s.Provider = val
}

type NodesResponseResponseItemConfigProfile struct {
	ActiveConfigProfileUuid NilUUID                                                    `json:"activeConfigProfileUuid"`
	ActiveInbounds          []NodesResponseResponseItemConfigProfileActiveInboundsItem `json:"activeInbounds"`
}

// GetActiveConfigProfileUuid returns the value of ActiveConfigProfileUuid.
func (s *NodesResponseResponseItemConfigProfile) GetActiveConfigProfileUuid() NilUUID {
	return s.ActiveConfigProfileUuid
}

// GetActiveInbounds returns the value of ActiveInbounds.
func (s *NodesResponseResponseItemConfigProfile) GetActiveInbounds() []NodesResponseResponseItemConfigProfileActiveInboundsItem {
	return s.ActiveInbounds
}

// SetActiveConfigProfileUuid sets the value of ActiveConfigProfileUuid.
func (s *NodesResponseResponseItemConfigProfile) SetActiveConfigProfileUuid(val NilUUID) {
	s.ActiveConfigProfileUuid = val
}

// SetActiveInbounds sets the value of ActiveInbounds.
func (s *NodesResponseResponseItemConfigProfile) SetActiveInbounds(val []NodesResponseResponseItemConfigProfileActiveInboundsItem) {
	s.ActiveInbounds = val
}

type NodesResponseResponseItemConfigProfileActiveInboundsItem struct {
	UUID        uuid.UUID  `json:"uuid"`
	ProfileUuid uuid.UUID  `json:"profileUuid"`
	Tag         string     `json:"tag"`
	Type        string     `json:"type"`
	Network     NilString  `json:"network"`
	Security    NilString  `json:"security"`
	Port        NilFloat64 `json:"port"`
	RawInbound  jx.Raw     `json:"rawInbound"`
}

// GetUUID returns the value of UUID.
func (s *NodesResponseResponseItemConfigProfileActiveInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetProfileUuid returns the value of ProfileUuid.
func (s *NodesResponseResponseItemConfigProfileActiveInboundsItem) GetProfileUuid() uuid.UUID {
	return s.ProfileUuid
}

// GetTag returns the value of Tag.
func (s *NodesResponseResponseItemConfigProfileActiveInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *NodesResponseResponseItemConfigProfileActiveInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *NodesResponseResponseItemConfigProfileActiveInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *NodesResponseResponseItemConfigProfileActiveInboundsItem) GetSecurity() NilString {
	return s.Security
}

// GetPort returns the value of Port.
func (s *NodesResponseResponseItemConfigProfileActiveInboundsItem) GetPort() NilFloat64 {
	return s.Port
}

// GetRawInbound returns the value of RawInbound.
func (s *NodesResponseResponseItemConfigProfileActiveInboundsItem) GetRawInbound() jx.Raw {
	return s.RawInbound
}

// SetUUID sets the value of UUID.
func (s *NodesResponseResponseItemConfigProfileActiveInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetProfileUuid sets the value of ProfileUuid.
func (s *NodesResponseResponseItemConfigProfileActiveInboundsItem) SetProfileUuid(val uuid.UUID) {
	s.ProfileUuid = val
}

// SetTag sets the value of Tag.
func (s *NodesResponseResponseItemConfigProfileActiveInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *NodesResponseResponseItemConfigProfileActiveInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *NodesResponseResponseItemConfigProfileActiveInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *NodesResponseResponseItemConfigProfileActiveInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

// SetPort sets the value of Port.
func (s *NodesResponseResponseItemConfigProfileActiveInboundsItem) SetPort(val NilFloat64) {
	s.Port = val
}

// SetRawInbound sets the value of RawInbound.
func (s *NodesResponseResponseItemConfigProfileActiveInboundsItem) SetRawInbound(val jx.Raw) {
	s.RawInbound = val
}

type NodesResponseResponseItemProvider struct {
	UUID        uuid.UUID `json:"uuid"`
	Name        string    `json:"name"`
	FaviconLink NilString `json:"faviconLink"`
	LoginUrl    NilString `json:"loginUrl"`
	CreatedAt   time.Time `json:"createdAt"`
	UpdatedAt   time.Time `json:"updatedAt"`
}

// GetUUID returns the value of UUID.
func (s *NodesResponseResponseItemProvider) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *NodesResponseResponseItemProvider) GetName() string {
	return s.Name
}

// GetFaviconLink returns the value of FaviconLink.
func (s *NodesResponseResponseItemProvider) GetFaviconLink() NilString {
	return s.FaviconLink
}

// GetLoginUrl returns the value of LoginUrl.
func (s *NodesResponseResponseItemProvider) GetLoginUrl() NilString {
	return s.LoginUrl
}

// GetCreatedAt returns the value of CreatedAt.
func (s *NodesResponseResponseItemProvider) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *NodesResponseResponseItemProvider) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetUUID sets the value of UUID.
func (s *NodesResponseResponseItemProvider) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *NodesResponseResponseItemProvider) SetName(val string) {
	s.Name = val
}

// SetFaviconLink sets the value of FaviconLink.
func (s *NodesResponseResponseItemProvider) SetFaviconLink(val NilString) {
	s.FaviconLink = val
}

// SetLoginUrl sets the value of LoginUrl.
func (s *NodesResponseResponseItemProvider) SetLoginUrl(val NilString) {
	s.LoginUrl = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *NodesResponseResponseItemProvider) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *NodesResponseResponseItemProvider) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type NodesUsageHistoryControllerGetNodesUsageByRangeBadRequest struct {
	Message    OptString                                                             `json:"message"`
	StatusCode OptFloat64                                                            `json:"statusCode"`
	Errors     []NodesUsageHistoryControllerGetNodesUsageByRangeBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *NodesUsageHistoryControllerGetNodesUsageByRangeBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *NodesUsageHistoryControllerGetNodesUsageByRangeBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *NodesUsageHistoryControllerGetNodesUsageByRangeBadRequest) GetErrors() []NodesUsageHistoryControllerGetNodesUsageByRangeBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *NodesUsageHistoryControllerGetNodesUsageByRangeBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *NodesUsageHistoryControllerGetNodesUsageByRangeBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *NodesUsageHistoryControllerGetNodesUsageByRangeBadRequest) SetErrors(val []NodesUsageHistoryControllerGetNodesUsageByRangeBadRequestErrorsItem) {
	s.Errors = val
}

func (*NodesUsageHistoryControllerGetNodesUsageByRangeBadRequest) nodesUsageHistoryControllerGetNodesUsageByRangeRes() {
}

type NodesUsageHistoryControllerGetNodesUsageByRangeBadRequestErrorsItem struct{}

type NodesUsageHistoryControllerGetNodesUsageByRangeInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *NodesUsageHistoryControllerGetNodesUsageByRangeInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *NodesUsageHistoryControllerGetNodesUsageByRangeInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *NodesUsageHistoryControllerGetNodesUsageByRangeInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *NodesUsageHistoryControllerGetNodesUsageByRangeInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *NodesUsageHistoryControllerGetNodesUsageByRangeInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *NodesUsageHistoryControllerGetNodesUsageByRangeInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *NodesUsageHistoryControllerGetNodesUsageByRangeInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *NodesUsageHistoryControllerGetNodesUsageByRangeInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*NodesUsageHistoryControllerGetNodesUsageByRangeInternalServerError) nodesUsageHistoryControllerGetNodesUsageByRangeRes() {
}

type NodesUserUsageHistoryControllerGetNodeUserUsageBadRequest struct {
	Message    OptString                                                             `json:"message"`
	StatusCode OptFloat64                                                            `json:"statusCode"`
	Errors     []NodesUserUsageHistoryControllerGetNodeUserUsageBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *NodesUserUsageHistoryControllerGetNodeUserUsageBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *NodesUserUsageHistoryControllerGetNodeUserUsageBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *NodesUserUsageHistoryControllerGetNodeUserUsageBadRequest) GetErrors() []NodesUserUsageHistoryControllerGetNodeUserUsageBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *NodesUserUsageHistoryControllerGetNodeUserUsageBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *NodesUserUsageHistoryControllerGetNodeUserUsageBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *NodesUserUsageHistoryControllerGetNodeUserUsageBadRequest) SetErrors(val []NodesUserUsageHistoryControllerGetNodeUserUsageBadRequestErrorsItem) {
	s.Errors = val
}

func (*NodesUserUsageHistoryControllerGetNodeUserUsageBadRequest) nodesUserUsageHistoryControllerGetNodeUserUsageRes() {
}

type NodesUserUsageHistoryControllerGetNodeUserUsageBadRequestErrorsItem struct{}

type NodesUserUsageHistoryControllerGetNodeUserUsageInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *NodesUserUsageHistoryControllerGetNodeUserUsageInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *NodesUserUsageHistoryControllerGetNodeUserUsageInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *NodesUserUsageHistoryControllerGetNodeUserUsageInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *NodesUserUsageHistoryControllerGetNodeUserUsageInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *NodesUserUsageHistoryControllerGetNodeUserUsageInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *NodesUserUsageHistoryControllerGetNodeUserUsageInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *NodesUserUsageHistoryControllerGetNodeUserUsageInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *NodesUserUsageHistoryControllerGetNodeUserUsageInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*NodesUserUsageHistoryControllerGetNodeUserUsageInternalServerError) nodesUserUsageHistoryControllerGetNodeUserUsageRes() {
}

type NodesUserUsageHistoryControllerGetNodesRealtimeUsageBadRequest struct {
	Message    OptString                                                                  `json:"message"`
	StatusCode OptFloat64                                                                 `json:"statusCode"`
	Errors     []NodesUserUsageHistoryControllerGetNodesRealtimeUsageBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *NodesUserUsageHistoryControllerGetNodesRealtimeUsageBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *NodesUserUsageHistoryControllerGetNodesRealtimeUsageBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *NodesUserUsageHistoryControllerGetNodesRealtimeUsageBadRequest) GetErrors() []NodesUserUsageHistoryControllerGetNodesRealtimeUsageBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *NodesUserUsageHistoryControllerGetNodesRealtimeUsageBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *NodesUserUsageHistoryControllerGetNodesRealtimeUsageBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *NodesUserUsageHistoryControllerGetNodesRealtimeUsageBadRequest) SetErrors(val []NodesUserUsageHistoryControllerGetNodesRealtimeUsageBadRequestErrorsItem) {
	s.Errors = val
}

func (*NodesUserUsageHistoryControllerGetNodesRealtimeUsageBadRequest) nodesUserUsageHistoryControllerGetNodesRealtimeUsageRes() {
}

type NodesUserUsageHistoryControllerGetNodesRealtimeUsageBadRequestErrorsItem struct{}

type NodesUserUsageHistoryControllerGetNodesRealtimeUsageInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *NodesUserUsageHistoryControllerGetNodesRealtimeUsageInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *NodesUserUsageHistoryControllerGetNodesRealtimeUsageInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *NodesUserUsageHistoryControllerGetNodesRealtimeUsageInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *NodesUserUsageHistoryControllerGetNodesRealtimeUsageInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *NodesUserUsageHistoryControllerGetNodesRealtimeUsageInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *NodesUserUsageHistoryControllerGetNodesRealtimeUsageInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *NodesUserUsageHistoryControllerGetNodesRealtimeUsageInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *NodesUserUsageHistoryControllerGetNodesRealtimeUsageInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*NodesUserUsageHistoryControllerGetNodesRealtimeUsageInternalServerError) nodesUserUsageHistoryControllerGetNodesRealtimeUsageRes() {
}

// Ref: #/components/schemas/OAuth2AuthorizeRequestDto
type OAuth2AuthorizeRequestDto struct {
	Provider OAuth2AuthorizeRequestDtoProvider `json:"provider"`
}

// GetProvider returns the value of Provider.
func (s *OAuth2AuthorizeRequestDto) GetProvider() OAuth2AuthorizeRequestDtoProvider {
	return s.Provider
}

// SetProvider sets the value of Provider.
func (s *OAuth2AuthorizeRequestDto) SetProvider(val OAuth2AuthorizeRequestDtoProvider) {
	s.Provider = val
}

type OAuth2AuthorizeRequestDtoProvider string

const (
	OAuth2AuthorizeRequestDtoProviderGithub   OAuth2AuthorizeRequestDtoProvider = "github"
	OAuth2AuthorizeRequestDtoProviderPocketid OAuth2AuthorizeRequestDtoProvider = "pocketid"
	OAuth2AuthorizeRequestDtoProviderYandex   OAuth2AuthorizeRequestDtoProvider = "yandex"
)

// AllValues returns all OAuth2AuthorizeRequestDtoProvider values.
func (OAuth2AuthorizeRequestDtoProvider) AllValues() []OAuth2AuthorizeRequestDtoProvider {
	return []OAuth2AuthorizeRequestDtoProvider{
		OAuth2AuthorizeRequestDtoProviderGithub,
		OAuth2AuthorizeRequestDtoProviderPocketid,
		OAuth2AuthorizeRequestDtoProviderYandex,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OAuth2AuthorizeRequestDtoProvider) MarshalText() ([]byte, error) {
	switch s {
	case OAuth2AuthorizeRequestDtoProviderGithub:
		return []byte(s), nil
	case OAuth2AuthorizeRequestDtoProviderPocketid:
		return []byte(s), nil
	case OAuth2AuthorizeRequestDtoProviderYandex:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OAuth2AuthorizeRequestDtoProvider) UnmarshalText(data []byte) error {
	switch OAuth2AuthorizeRequestDtoProvider(data) {
	case OAuth2AuthorizeRequestDtoProviderGithub:
		*s = OAuth2AuthorizeRequestDtoProviderGithub
		return nil
	case OAuth2AuthorizeRequestDtoProviderPocketid:
		*s = OAuth2AuthorizeRequestDtoProviderPocketid
		return nil
	case OAuth2AuthorizeRequestDtoProviderYandex:
		*s = OAuth2AuthorizeRequestDtoProviderYandex
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/OAuth2AuthorizeResponseDto
type OAuth2AuthorizeResponseDto struct {
	Response OAuth2AuthorizeResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *OAuth2AuthorizeResponseDto) GetResponse() OAuth2AuthorizeResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *OAuth2AuthorizeResponseDto) SetResponse(val OAuth2AuthorizeResponseDtoResponse) {
	s.Response = val
}

type OAuth2AuthorizeResponseDtoResponse struct {
	AuthorizationUrl NilURI `json:"authorizationUrl"`
}

// GetAuthorizationUrl returns the value of AuthorizationUrl.
func (s *OAuth2AuthorizeResponseDtoResponse) GetAuthorizationUrl() NilURI {
	return s.AuthorizationUrl
}

// SetAuthorizationUrl sets the value of AuthorizationUrl.
func (s *OAuth2AuthorizeResponseDtoResponse) SetAuthorizationUrl(val NilURI) {
	s.AuthorizationUrl = val
}

// OAuth2AuthorizeResponseDtoStatusCode wraps OAuth2AuthorizeResponseDto with StatusCode.
type OAuth2AuthorizeResponseDtoStatusCode struct {
	StatusCode int
	Response   OAuth2AuthorizeResponseDto
}

// GetStatusCode returns the value of StatusCode.
func (s *OAuth2AuthorizeResponseDtoStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *OAuth2AuthorizeResponseDtoStatusCode) GetResponse() OAuth2AuthorizeResponseDto {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *OAuth2AuthorizeResponseDtoStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *OAuth2AuthorizeResponseDtoStatusCode) SetResponse(val OAuth2AuthorizeResponseDto) {
	s.Response = val
}

func (*OAuth2AuthorizeResponseDtoStatusCode) authControllerOauth2AuthorizeRes() {}

// Ref: #/components/schemas/OAuth2CallbackRequestDto
type OAuth2CallbackRequestDto struct {
	Provider OAuth2CallbackRequestDtoProvider `json:"provider"`
	Code     string                           `json:"code"`
	State    string                           `json:"state"`
}

// GetProvider returns the value of Provider.
func (s *OAuth2CallbackRequestDto) GetProvider() OAuth2CallbackRequestDtoProvider {
	return s.Provider
}

// GetCode returns the value of Code.
func (s *OAuth2CallbackRequestDto) GetCode() string {
	return s.Code
}

// GetState returns the value of State.
func (s *OAuth2CallbackRequestDto) GetState() string {
	return s.State
}

// SetProvider sets the value of Provider.
func (s *OAuth2CallbackRequestDto) SetProvider(val OAuth2CallbackRequestDtoProvider) {
	s.Provider = val
}

// SetCode sets the value of Code.
func (s *OAuth2CallbackRequestDto) SetCode(val string) {
	s.Code = val
}

// SetState sets the value of State.
func (s *OAuth2CallbackRequestDto) SetState(val string) {
	s.State = val
}

type OAuth2CallbackRequestDtoProvider string

const (
	OAuth2CallbackRequestDtoProviderGithub   OAuth2CallbackRequestDtoProvider = "github"
	OAuth2CallbackRequestDtoProviderPocketid OAuth2CallbackRequestDtoProvider = "pocketid"
	OAuth2CallbackRequestDtoProviderYandex   OAuth2CallbackRequestDtoProvider = "yandex"
)

// AllValues returns all OAuth2CallbackRequestDtoProvider values.
func (OAuth2CallbackRequestDtoProvider) AllValues() []OAuth2CallbackRequestDtoProvider {
	return []OAuth2CallbackRequestDtoProvider{
		OAuth2CallbackRequestDtoProviderGithub,
		OAuth2CallbackRequestDtoProviderPocketid,
		OAuth2CallbackRequestDtoProviderYandex,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OAuth2CallbackRequestDtoProvider) MarshalText() ([]byte, error) {
	switch s {
	case OAuth2CallbackRequestDtoProviderGithub:
		return []byte(s), nil
	case OAuth2CallbackRequestDtoProviderPocketid:
		return []byte(s), nil
	case OAuth2CallbackRequestDtoProviderYandex:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OAuth2CallbackRequestDtoProvider) UnmarshalText(data []byte) error {
	switch OAuth2CallbackRequestDtoProvider(data) {
	case OAuth2CallbackRequestDtoProviderGithub:
		*s = OAuth2CallbackRequestDtoProviderGithub
		return nil
	case OAuth2CallbackRequestDtoProviderPocketid:
		*s = OAuth2CallbackRequestDtoProviderPocketid
		return nil
	case OAuth2CallbackRequestDtoProviderYandex:
		*s = OAuth2CallbackRequestDtoProviderYandex
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBulkAllUpdateUsersRequestDtoStatus returns new OptBulkAllUpdateUsersRequestDtoStatus with value set to v.
func NewOptBulkAllUpdateUsersRequestDtoStatus(v BulkAllUpdateUsersRequestDtoStatus) OptBulkAllUpdateUsersRequestDtoStatus {
	return OptBulkAllUpdateUsersRequestDtoStatus{
		Value: v,
		Set:   true,
	}
}

// OptBulkAllUpdateUsersRequestDtoStatus is optional BulkAllUpdateUsersRequestDtoStatus.
type OptBulkAllUpdateUsersRequestDtoStatus struct {
	Value BulkAllUpdateUsersRequestDtoStatus
	Set   bool
}

// IsSet returns true if OptBulkAllUpdateUsersRequestDtoStatus was set.
func (o OptBulkAllUpdateUsersRequestDtoStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBulkAllUpdateUsersRequestDtoStatus) Reset() {
	var v BulkAllUpdateUsersRequestDtoStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBulkAllUpdateUsersRequestDtoStatus) SetTo(v BulkAllUpdateUsersRequestDtoStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBulkAllUpdateUsersRequestDtoStatus) Get() (v BulkAllUpdateUsersRequestDtoStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBulkAllUpdateUsersRequestDtoStatus) Or(d BulkAllUpdateUsersRequestDtoStatus) BulkAllUpdateUsersRequestDtoStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy returns new OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy with value set to v.
func NewOptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy(v BulkAllUpdateUsersRequestDtoTrafficLimitStrategy) OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy {
	return OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy{
		Value: v,
		Set:   true,
	}
}

// OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy is optional BulkAllUpdateUsersRequestDtoTrafficLimitStrategy.
type OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy struct {
	Value BulkAllUpdateUsersRequestDtoTrafficLimitStrategy
	Set   bool
}

// IsSet returns true if OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy was set.
func (o OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy) Reset() {
	var v BulkAllUpdateUsersRequestDtoTrafficLimitStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy) SetTo(v BulkAllUpdateUsersRequestDtoTrafficLimitStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy) Get() (v BulkAllUpdateUsersRequestDtoTrafficLimitStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy) Or(d BulkAllUpdateUsersRequestDtoTrafficLimitStrategy) BulkAllUpdateUsersRequestDtoTrafficLimitStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBulkDeleteUsersByStatusRequestDtoStatus returns new OptBulkDeleteUsersByStatusRequestDtoStatus with value set to v.
func NewOptBulkDeleteUsersByStatusRequestDtoStatus(v BulkDeleteUsersByStatusRequestDtoStatus) OptBulkDeleteUsersByStatusRequestDtoStatus {
	return OptBulkDeleteUsersByStatusRequestDtoStatus{
		Value: v,
		Set:   true,
	}
}

// OptBulkDeleteUsersByStatusRequestDtoStatus is optional BulkDeleteUsersByStatusRequestDtoStatus.
type OptBulkDeleteUsersByStatusRequestDtoStatus struct {
	Value BulkDeleteUsersByStatusRequestDtoStatus
	Set   bool
}

// IsSet returns true if OptBulkDeleteUsersByStatusRequestDtoStatus was set.
func (o OptBulkDeleteUsersByStatusRequestDtoStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBulkDeleteUsersByStatusRequestDtoStatus) Reset() {
	var v BulkDeleteUsersByStatusRequestDtoStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBulkDeleteUsersByStatusRequestDtoStatus) SetTo(v BulkDeleteUsersByStatusRequestDtoStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBulkDeleteUsersByStatusRequestDtoStatus) Get() (v BulkDeleteUsersByStatusRequestDtoStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBulkDeleteUsersByStatusRequestDtoStatus) Or(d BulkDeleteUsersByStatusRequestDtoStatus) BulkDeleteUsersByStatusRequestDtoStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBulkUpdateUsersRequestDtoFieldsStatus returns new OptBulkUpdateUsersRequestDtoFieldsStatus with value set to v.
func NewOptBulkUpdateUsersRequestDtoFieldsStatus(v BulkUpdateUsersRequestDtoFieldsStatus) OptBulkUpdateUsersRequestDtoFieldsStatus {
	return OptBulkUpdateUsersRequestDtoFieldsStatus{
		Value: v,
		Set:   true,
	}
}

// OptBulkUpdateUsersRequestDtoFieldsStatus is optional BulkUpdateUsersRequestDtoFieldsStatus.
type OptBulkUpdateUsersRequestDtoFieldsStatus struct {
	Value BulkUpdateUsersRequestDtoFieldsStatus
	Set   bool
}

// IsSet returns true if OptBulkUpdateUsersRequestDtoFieldsStatus was set.
func (o OptBulkUpdateUsersRequestDtoFieldsStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBulkUpdateUsersRequestDtoFieldsStatus) Reset() {
	var v BulkUpdateUsersRequestDtoFieldsStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBulkUpdateUsersRequestDtoFieldsStatus) SetTo(v BulkUpdateUsersRequestDtoFieldsStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBulkUpdateUsersRequestDtoFieldsStatus) Get() (v BulkUpdateUsersRequestDtoFieldsStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBulkUpdateUsersRequestDtoFieldsStatus) Or(d BulkUpdateUsersRequestDtoFieldsStatus) BulkUpdateUsersRequestDtoFieldsStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy returns new OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy with value set to v.
func NewOptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy(v BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy {
	return OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy{
		Value: v,
		Set:   true,
	}
}

// OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy is optional BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy.
type OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy struct {
	Value BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy
	Set   bool
}

// IsSet returns true if OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy was set.
func (o OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) Reset() {
	var v BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) SetTo(v BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) Get() (v BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) Or(d BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateHostRequestDtoSecurityLayer returns new OptCreateHostRequestDtoSecurityLayer with value set to v.
func NewOptCreateHostRequestDtoSecurityLayer(v CreateHostRequestDtoSecurityLayer) OptCreateHostRequestDtoSecurityLayer {
	return OptCreateHostRequestDtoSecurityLayer{
		Value: v,
		Set:   true,
	}
}

// OptCreateHostRequestDtoSecurityLayer is optional CreateHostRequestDtoSecurityLayer.
type OptCreateHostRequestDtoSecurityLayer struct {
	Value CreateHostRequestDtoSecurityLayer
	Set   bool
}

// IsSet returns true if OptCreateHostRequestDtoSecurityLayer was set.
func (o OptCreateHostRequestDtoSecurityLayer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateHostRequestDtoSecurityLayer) Reset() {
	var v CreateHostRequestDtoSecurityLayer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateHostRequestDtoSecurityLayer) SetTo(v CreateHostRequestDtoSecurityLayer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateHostRequestDtoSecurityLayer) Get() (v CreateHostRequestDtoSecurityLayer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateHostRequestDtoSecurityLayer) Or(d CreateHostRequestDtoSecurityLayer) CreateHostRequestDtoSecurityLayer {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateUserRequestDtoStatus returns new OptCreateUserRequestDtoStatus with value set to v.
func NewOptCreateUserRequestDtoStatus(v CreateUserRequestDtoStatus) OptCreateUserRequestDtoStatus {
	return OptCreateUserRequestDtoStatus{
		Value: v,
		Set:   true,
	}
}

// OptCreateUserRequestDtoStatus is optional CreateUserRequestDtoStatus.
type OptCreateUserRequestDtoStatus struct {
	Value CreateUserRequestDtoStatus
	Set   bool
}

// IsSet returns true if OptCreateUserRequestDtoStatus was set.
func (o OptCreateUserRequestDtoStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateUserRequestDtoStatus) Reset() {
	var v CreateUserRequestDtoStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateUserRequestDtoStatus) SetTo(v CreateUserRequestDtoStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateUserRequestDtoStatus) Get() (v CreateUserRequestDtoStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateUserRequestDtoStatus) Or(d CreateUserRequestDtoStatus) CreateUserRequestDtoStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateUserRequestDtoTrafficLimitStrategy returns new OptCreateUserRequestDtoTrafficLimitStrategy with value set to v.
func NewOptCreateUserRequestDtoTrafficLimitStrategy(v CreateUserRequestDtoTrafficLimitStrategy) OptCreateUserRequestDtoTrafficLimitStrategy {
	return OptCreateUserRequestDtoTrafficLimitStrategy{
		Value: v,
		Set:   true,
	}
}

// OptCreateUserRequestDtoTrafficLimitStrategy is optional CreateUserRequestDtoTrafficLimitStrategy.
type OptCreateUserRequestDtoTrafficLimitStrategy struct {
	Value CreateUserRequestDtoTrafficLimitStrategy
	Set   bool
}

// IsSet returns true if OptCreateUserRequestDtoTrafficLimitStrategy was set.
func (o OptCreateUserRequestDtoTrafficLimitStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateUserRequestDtoTrafficLimitStrategy) Reset() {
	var v CreateUserRequestDtoTrafficLimitStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateUserRequestDtoTrafficLimitStrategy) SetTo(v CreateUserRequestDtoTrafficLimitStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateUserRequestDtoTrafficLimitStrategy) Get() (v CreateUserRequestDtoTrafficLimitStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateUserRequestDtoTrafficLimitStrategy) Or(d CreateUserRequestDtoTrafficLimitStrategy) CreateUserRequestDtoTrafficLimitStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications returns new OptDebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications with value set to v.
func NewOptDebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications(v DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications) OptDebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications {
	return OptDebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications{
		Value: v,
		Set:   true,
	}
}

// OptDebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications is optional DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications.
type OptDebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications struct {
	Value DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications
	Set   bool
}

// IsSet returns true if OptDebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications was set.
func (o OptDebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptDebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications) Reset() {
	var v DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications) SetTo(v DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications) Get() (v DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications) Or(d DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications) DebugSrrMatcherRequestDtoResponseRulesRulesItemResponseModifications {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications returns new OptDebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications with value set to v.
func NewOptDebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications(v DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications) OptDebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications {
	return OptDebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications{
		Value: v,
		Set:   true,
	}
}

// OptDebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications is optional DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications.
type OptDebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications struct {
	Value DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications
	Set   bool
}

// IsSet returns true if OptDebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications was set.
func (o OptDebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptDebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications) Reset() {
	var v DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications) SetTo(v DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications) Get() (v DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications) Or(d DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications) DebugSrrMatcherResponseDtoResponseMatchedRuleResponseModifications {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetAllUsersResponseDtoResponseUsersItemStatus returns new OptGetAllUsersResponseDtoResponseUsersItemStatus with value set to v.
func NewOptGetAllUsersResponseDtoResponseUsersItemStatus(v GetAllUsersResponseDtoResponseUsersItemStatus) OptGetAllUsersResponseDtoResponseUsersItemStatus {
	return OptGetAllUsersResponseDtoResponseUsersItemStatus{
		Value: v,
		Set:   true,
	}
}

// OptGetAllUsersResponseDtoResponseUsersItemStatus is optional GetAllUsersResponseDtoResponseUsersItemStatus.
type OptGetAllUsersResponseDtoResponseUsersItemStatus struct {
	Value GetAllUsersResponseDtoResponseUsersItemStatus
	Set   bool
}

// IsSet returns true if OptGetAllUsersResponseDtoResponseUsersItemStatus was set.
func (o OptGetAllUsersResponseDtoResponseUsersItemStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetAllUsersResponseDtoResponseUsersItemStatus) Reset() {
	var v GetAllUsersResponseDtoResponseUsersItemStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetAllUsersResponseDtoResponseUsersItemStatus) SetTo(v GetAllUsersResponseDtoResponseUsersItemStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetAllUsersResponseDtoResponseUsersItemStatus) Get() (v GetAllUsersResponseDtoResponseUsersItemStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetAllUsersResponseDtoResponseUsersItemStatus) Or(d GetAllUsersResponseDtoResponseUsersItemStatus) GetAllUsersResponseDtoResponseUsersItemStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy returns new OptGetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy with value set to v.
func NewOptGetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy(v GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy) OptGetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy {
	return OptGetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy{
		Value: v,
		Set:   true,
	}
}

// OptGetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy is optional GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy.
type OptGetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy struct {
	Value GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy
	Set   bool
}

// IsSet returns true if OptGetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy was set.
func (o OptGetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy) Reset() {
	var v GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy) SetTo(v GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy) Get() (v GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy) Or(d GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy) GetAllUsersResponseDtoResponseUsersItemTrafficLimitStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData returns new OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData with value set to v.
func NewOptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData(v GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData {
	return OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData{
		Value: v,
		Set:   true,
	}
}

// OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData is optional GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData.
type OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData struct {
	Value GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData
	Set   bool
}

// IsSet returns true if OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData was set.
func (o OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) Reset() {
	var v GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) SetTo(v GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) Get() (v GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) Or(d GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData) GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemDbData {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams returns new OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams with value set to v.
func NewOptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams(v *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams) OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams {
	return OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams{
		Value: v,
		Set:   true,
	}
}

// OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams is optional *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams.
type OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams struct {
	Value *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams
	Set   bool
}

// IsSet returns true if OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams was set.
func (o OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams) Reset() {
	var v *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams) SetTo(v *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams) Get() (v *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams) Or(d *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams) *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemMuxParams {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams returns new OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams with value set to v.
func NewOptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams(v *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams) OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams {
	return OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams{
		Value: v,
		Set:   true,
	}
}

// OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams is optional *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams.
type OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams struct {
	Value *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams
	Set   bool
}

// IsSet returns true if OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams was set.
func (o OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams) Reset() {
	var v *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams) SetTo(v *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams) Get() (v *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams) Or(d *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams) *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemSockoptParams {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams returns new OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams with value set to v.
func NewOptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams(v *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams) OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams {
	return OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams{
		Value: v,
		Set:   true,
	}
}

// OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams is optional *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams.
type OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams struct {
	Value *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams
	Set   bool
}

// IsSet returns true if OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams was set.
func (o OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams) Reset() {
	var v *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams) SetTo(v *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams) Get() (v *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams) Or(d *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams) *GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemXHttpExtraParams {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetRawSubscriptionByShortUuidResponseDtoResponseUserStatus returns new OptGetRawSubscriptionByShortUuidResponseDtoResponseUserStatus with value set to v.
func NewOptGetRawSubscriptionByShortUuidResponseDtoResponseUserStatus(v GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus) OptGetRawSubscriptionByShortUuidResponseDtoResponseUserStatus {
	return OptGetRawSubscriptionByShortUuidResponseDtoResponseUserStatus{
		Value: v,
		Set:   true,
	}
}

// OptGetRawSubscriptionByShortUuidResponseDtoResponseUserStatus is optional GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus.
type OptGetRawSubscriptionByShortUuidResponseDtoResponseUserStatus struct {
	Value GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus
	Set   bool
}

// IsSet returns true if OptGetRawSubscriptionByShortUuidResponseDtoResponseUserStatus was set.
func (o OptGetRawSubscriptionByShortUuidResponseDtoResponseUserStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetRawSubscriptionByShortUuidResponseDtoResponseUserStatus) Reset() {
	var v GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetRawSubscriptionByShortUuidResponseDtoResponseUserStatus) SetTo(v GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetRawSubscriptionByShortUuidResponseDtoResponseUserStatus) Get() (v GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetRawSubscriptionByShortUuidResponseDtoResponseUserStatus) Or(d GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus) GetRawSubscriptionByShortUuidResponseDtoResponseUserStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy returns new OptGetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy with value set to v.
func NewOptGetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy(v GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy) OptGetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy {
	return OptGetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy{
		Value: v,
		Set:   true,
	}
}

// OptGetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy is optional GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy.
type OptGetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy struct {
	Value GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy
	Set   bool
}

// IsSet returns true if OptGetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy was set.
func (o OptGetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy) Reset() {
	var v GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy) SetTo(v GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy) Get() (v GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy) Or(d GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy) GetRawSubscriptionByShortUuidResponseDtoResponseUserTrafficLimitStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHostListResponseResponseItemSecurityLayer returns new OptHostListResponseResponseItemSecurityLayer with value set to v.
func NewOptHostListResponseResponseItemSecurityLayer(v HostListResponseResponseItemSecurityLayer) OptHostListResponseResponseItemSecurityLayer {
	return OptHostListResponseResponseItemSecurityLayer{
		Value: v,
		Set:   true,
	}
}

// OptHostListResponseResponseItemSecurityLayer is optional HostListResponseResponseItemSecurityLayer.
type OptHostListResponseResponseItemSecurityLayer struct {
	Value HostListResponseResponseItemSecurityLayer
	Set   bool
}

// IsSet returns true if OptHostListResponseResponseItemSecurityLayer was set.
func (o OptHostListResponseResponseItemSecurityLayer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHostListResponseResponseItemSecurityLayer) Reset() {
	var v HostListResponseResponseItemSecurityLayer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHostListResponseResponseItemSecurityLayer) SetTo(v HostListResponseResponseItemSecurityLayer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHostListResponseResponseItemSecurityLayer) Get() (v HostListResponseResponseItemSecurityLayer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHostListResponseResponseItemSecurityLayer) Or(d HostListResponseResponseItemSecurityLayer) HostListResponseResponseItemSecurityLayer {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHostResponseResponseSecurityLayer returns new OptHostResponseResponseSecurityLayer with value set to v.
func NewOptHostResponseResponseSecurityLayer(v HostResponseResponseSecurityLayer) OptHostResponseResponseSecurityLayer {
	return OptHostResponseResponseSecurityLayer{
		Value: v,
		Set:   true,
	}
}

// OptHostResponseResponseSecurityLayer is optional HostResponseResponseSecurityLayer.
type OptHostResponseResponseSecurityLayer struct {
	Value HostResponseResponseSecurityLayer
	Set   bool
}

// IsSet returns true if OptHostResponseResponseSecurityLayer was set.
func (o OptHostResponseResponseSecurityLayer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHostResponseResponseSecurityLayer) Reset() {
	var v HostResponseResponseSecurityLayer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHostResponseResponseSecurityLayer) SetTo(v HostResponseResponseSecurityLayer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHostResponseResponseSecurityLayer) Get() (v HostResponseResponseSecurityLayer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHostResponseResponseSecurityLayer) Or(d HostResponseResponseSecurityLayer) HostResponseResponseSecurityLayer {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilBool returns new OptNilBool with value set to v.
func NewOptNilBool(v bool) OptNilBool {
	return OptNilBool{
		Value: v,
		Set:   true,
	}
}

// OptNilBool is optional nullable bool.
type OptNilBool struct {
	Value bool
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilBool was set.
func (o OptNilBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilBool) SetTo(v bool) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilBool) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilBool) SetToNull() {
	o.Set = true
	o.Null = true
	var v bool
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilBool) Get() (v bool, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateHostRequestDtoAlpn returns new OptNilCreateHostRequestDtoAlpn with value set to v.
func NewOptNilCreateHostRequestDtoAlpn(v CreateHostRequestDtoAlpn) OptNilCreateHostRequestDtoAlpn {
	return OptNilCreateHostRequestDtoAlpn{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateHostRequestDtoAlpn is optional nullable CreateHostRequestDtoAlpn.
type OptNilCreateHostRequestDtoAlpn struct {
	Value CreateHostRequestDtoAlpn
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateHostRequestDtoAlpn was set.
func (o OptNilCreateHostRequestDtoAlpn) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateHostRequestDtoAlpn) Reset() {
	var v CreateHostRequestDtoAlpn
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateHostRequestDtoAlpn) SetTo(v CreateHostRequestDtoAlpn) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilCreateHostRequestDtoAlpn) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilCreateHostRequestDtoAlpn) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateHostRequestDtoAlpn
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateHostRequestDtoAlpn) Get() (v CreateHostRequestDtoAlpn, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateHostRequestDtoAlpn) Or(d CreateHostRequestDtoAlpn) CreateHostRequestDtoAlpn {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateHostRequestDtoFingerprint returns new OptNilCreateHostRequestDtoFingerprint with value set to v.
func NewOptNilCreateHostRequestDtoFingerprint(v CreateHostRequestDtoFingerprint) OptNilCreateHostRequestDtoFingerprint {
	return OptNilCreateHostRequestDtoFingerprint{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateHostRequestDtoFingerprint is optional nullable CreateHostRequestDtoFingerprint.
type OptNilCreateHostRequestDtoFingerprint struct {
	Value CreateHostRequestDtoFingerprint
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateHostRequestDtoFingerprint was set.
func (o OptNilCreateHostRequestDtoFingerprint) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateHostRequestDtoFingerprint) Reset() {
	var v CreateHostRequestDtoFingerprint
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateHostRequestDtoFingerprint) SetTo(v CreateHostRequestDtoFingerprint) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilCreateHostRequestDtoFingerprint) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilCreateHostRequestDtoFingerprint) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateHostRequestDtoFingerprint
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateHostRequestDtoFingerprint) Get() (v CreateHostRequestDtoFingerprint, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateHostRequestDtoFingerprint) Or(d CreateHostRequestDtoFingerprint) CreateHostRequestDtoFingerprint {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilFloat64 returns new OptNilFloat64 with value set to v.
func NewOptNilFloat64(v float64) OptNilFloat64 {
	return OptNilFloat64{
		Value: v,
		Set:   true,
	}
}

// OptNilFloat64 is optional nullable float64.
type OptNilFloat64 struct {
	Value float64
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilFloat64 was set.
func (o OptNilFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilFloat64) SetTo(v float64) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilFloat64) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilFloat64) SetToNull() {
	o.Set = true
	o.Null = true
	var v float64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilFloat64) Get() (v float64, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams returns new OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams with value set to v.
func NewOptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams(v GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams) OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams {
	return OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams{
		Value: v,
		Set:   true,
	}
}

// OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams is optional nullable GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams.
type OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams struct {
	Value GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams was set.
func (o OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams) Reset() {
	var v GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams) SetTo(v GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams) IsNull() bool {
	return o.Null
}

// SetToNull sets value to null.
func (o *OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams) SetToNull() {
	o.Set = true
	o.Null = true
	var v GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams) Get() (v GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams) Or(d GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams) GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemAdditionalParams {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions returns new OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions with value set to v.
func NewOptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions(v GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions) OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions {
	return OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions{
		Value: v,
		Set:   true,
	}
}

// OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions is optional nullable GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions.
type OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions struct {
	Value GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions was set.
func (o OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions) Reset() {
	var v GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions) SetTo(v GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions) IsNull() bool {
	return o.Null
}

// SetToNull sets value to null.
func (o *OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions) SetToNull() {
	o.Set = true
	o.Null = true
	var v GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions) Get() (v GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions) Or(d GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions) GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptions {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs returns new OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs with value set to v.
func NewOptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs(v GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs) OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs {
	return OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs{
		Value: v,
		Set:   true,
	}
}

// OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs is optional nullable GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs.
type OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs struct {
	Value GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs was set.
func (o OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs) Reset() {
	var v GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs) SetTo(v GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs) IsNull() bool {
	return o.Null
}

// SetToNull sets value to null.
func (o *OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs) SetToNull() {
	o.Set = true
	o.Null = true
	var v GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs) Get() (v GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilGetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs) Or(d GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs) GetRawSubscriptionByShortUuidResponseDtoResponseRawHostsItemProtocolOptionsSs {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt returns new OptNilInt with value set to v.
func NewOptNilInt(v int) OptNilInt {
	return OptNilInt{
		Value: v,
		Set:   true,
	}
}

// OptNilInt is optional nullable int.
type OptNilInt struct {
	Value int
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt was set.
func (o OptNilInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt) SetTo(v int) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilInt) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilInt) SetToNull() {
	o.Set = true
	o.Null = true
	var v int
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilURI returns new OptNilURI with value set to v.
func NewOptNilURI(v url.URL) OptNilURI {
	return OptNilURI{
		Value: v,
		Set:   true,
	}
}

// OptNilURI is optional nullable url.URL.
type OptNilURI struct {
	Value url.URL
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilURI was set.
func (o OptNilURI) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilURI) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilURI) SetTo(v url.URL) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilURI) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilURI) SetToNull() {
	o.Set = true
	o.Null = true
	var v url.URL
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilURI) Get() (v url.URL, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUUID returns new OptNilUUID with value set to v.
func NewOptNilUUID(v uuid.UUID) OptNilUUID {
	return OptNilUUID{
		Value: v,
		Set:   true,
	}
}

// OptNilUUID is optional nullable uuid.UUID.
type OptNilUUID struct {
	Value uuid.UUID
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUUID was set.
func (o OptNilUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilUUID) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilUUID) SetToNull() {
	o.Set = true
	o.Null = true
	var v uuid.UUID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUUID) Get() (v uuid.UUID, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUpdateHostRequestDtoAlpn returns new OptNilUpdateHostRequestDtoAlpn with value set to v.
func NewOptNilUpdateHostRequestDtoAlpn(v UpdateHostRequestDtoAlpn) OptNilUpdateHostRequestDtoAlpn {
	return OptNilUpdateHostRequestDtoAlpn{
		Value: v,
		Set:   true,
	}
}

// OptNilUpdateHostRequestDtoAlpn is optional nullable UpdateHostRequestDtoAlpn.
type OptNilUpdateHostRequestDtoAlpn struct {
	Value UpdateHostRequestDtoAlpn
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUpdateHostRequestDtoAlpn was set.
func (o OptNilUpdateHostRequestDtoAlpn) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUpdateHostRequestDtoAlpn) Reset() {
	var v UpdateHostRequestDtoAlpn
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUpdateHostRequestDtoAlpn) SetTo(v UpdateHostRequestDtoAlpn) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilUpdateHostRequestDtoAlpn) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilUpdateHostRequestDtoAlpn) SetToNull() {
	o.Set = true
	o.Null = true
	var v UpdateHostRequestDtoAlpn
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUpdateHostRequestDtoAlpn) Get() (v UpdateHostRequestDtoAlpn, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUpdateHostRequestDtoAlpn) Or(d UpdateHostRequestDtoAlpn) UpdateHostRequestDtoAlpn {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUpdateHostRequestDtoFingerprint returns new OptNilUpdateHostRequestDtoFingerprint with value set to v.
func NewOptNilUpdateHostRequestDtoFingerprint(v UpdateHostRequestDtoFingerprint) OptNilUpdateHostRequestDtoFingerprint {
	return OptNilUpdateHostRequestDtoFingerprint{
		Value: v,
		Set:   true,
	}
}

// OptNilUpdateHostRequestDtoFingerprint is optional nullable UpdateHostRequestDtoFingerprint.
type OptNilUpdateHostRequestDtoFingerprint struct {
	Value UpdateHostRequestDtoFingerprint
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUpdateHostRequestDtoFingerprint was set.
func (o OptNilUpdateHostRequestDtoFingerprint) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUpdateHostRequestDtoFingerprint) Reset() {
	var v UpdateHostRequestDtoFingerprint
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUpdateHostRequestDtoFingerprint) SetTo(v UpdateHostRequestDtoFingerprint) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilUpdateHostRequestDtoFingerprint) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilUpdateHostRequestDtoFingerprint) SetToNull() {
	o.Set = true
	o.Null = true
	var v UpdateHostRequestDtoFingerprint
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUpdateHostRequestDtoFingerprint) Get() (v UpdateHostRequestDtoFingerprint, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUpdateHostRequestDtoFingerprint) Or(d UpdateHostRequestDtoFingerprint) UpdateHostRequestDtoFingerprint {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications returns new OptSubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications with value set to v.
func NewOptSubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications(v SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications) OptSubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications {
	return OptSubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications{
		Value: v,
		Set:   true,
	}
}

// OptSubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications is optional SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications.
type OptSubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications struct {
	Value SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications
	Set   bool
}

// IsSet returns true if OptSubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications was set.
func (o OptSubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptSubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications) Reset() {
	var v SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications) SetTo(v SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications) Get() (v SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications) Or(d SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications) SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptURI returns new OptURI with value set to v.
func NewOptURI(v url.URL) OptURI {
	return OptURI{
		Value: v,
		Set:   true,
	}
}

// OptURI is optional url.URL.
type OptURI struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURI was set.
func (o OptURI) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURI) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURI) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURI) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUUID returns new OptUUID with value set to v.
func NewOptUUID(v uuid.UUID) OptUUID {
	return OptUUID{
		Value: v,
		Set:   true,
	}
}

// OptUUID is optional uuid.UUID.
type OptUUID struct {
	Value uuid.UUID
	Set   bool
}

// IsSet returns true if OptUUID was set.
func (o OptUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUUID) Get() (v uuid.UUID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateExternalSquadRequestDtoSubscriptionSettings returns new OptUpdateExternalSquadRequestDtoSubscriptionSettings with value set to v.
func NewOptUpdateExternalSquadRequestDtoSubscriptionSettings(v UpdateExternalSquadRequestDtoSubscriptionSettings) OptUpdateExternalSquadRequestDtoSubscriptionSettings {
	return OptUpdateExternalSquadRequestDtoSubscriptionSettings{
		Value: v,
		Set:   true,
	}
}

// OptUpdateExternalSquadRequestDtoSubscriptionSettings is optional UpdateExternalSquadRequestDtoSubscriptionSettings.
type OptUpdateExternalSquadRequestDtoSubscriptionSettings struct {
	Value UpdateExternalSquadRequestDtoSubscriptionSettings
	Set   bool
}

// IsSet returns true if OptUpdateExternalSquadRequestDtoSubscriptionSettings was set.
func (o OptUpdateExternalSquadRequestDtoSubscriptionSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateExternalSquadRequestDtoSubscriptionSettings) Reset() {
	var v UpdateExternalSquadRequestDtoSubscriptionSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateExternalSquadRequestDtoSubscriptionSettings) SetTo(v UpdateExternalSquadRequestDtoSubscriptionSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateExternalSquadRequestDtoSubscriptionSettings) Get() (v UpdateExternalSquadRequestDtoSubscriptionSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateExternalSquadRequestDtoSubscriptionSettings) Or(d UpdateExternalSquadRequestDtoSubscriptionSettings) UpdateExternalSquadRequestDtoSubscriptionSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateHostRequestDtoInbound returns new OptUpdateHostRequestDtoInbound with value set to v.
func NewOptUpdateHostRequestDtoInbound(v UpdateHostRequestDtoInbound) OptUpdateHostRequestDtoInbound {
	return OptUpdateHostRequestDtoInbound{
		Value: v,
		Set:   true,
	}
}

// OptUpdateHostRequestDtoInbound is optional UpdateHostRequestDtoInbound.
type OptUpdateHostRequestDtoInbound struct {
	Value UpdateHostRequestDtoInbound
	Set   bool
}

// IsSet returns true if OptUpdateHostRequestDtoInbound was set.
func (o OptUpdateHostRequestDtoInbound) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateHostRequestDtoInbound) Reset() {
	var v UpdateHostRequestDtoInbound
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateHostRequestDtoInbound) SetTo(v UpdateHostRequestDtoInbound) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateHostRequestDtoInbound) Get() (v UpdateHostRequestDtoInbound, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateHostRequestDtoInbound) Or(d UpdateHostRequestDtoInbound) UpdateHostRequestDtoInbound {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateHostRequestDtoSecurityLayer returns new OptUpdateHostRequestDtoSecurityLayer with value set to v.
func NewOptUpdateHostRequestDtoSecurityLayer(v UpdateHostRequestDtoSecurityLayer) OptUpdateHostRequestDtoSecurityLayer {
	return OptUpdateHostRequestDtoSecurityLayer{
		Value: v,
		Set:   true,
	}
}

// OptUpdateHostRequestDtoSecurityLayer is optional UpdateHostRequestDtoSecurityLayer.
type OptUpdateHostRequestDtoSecurityLayer struct {
	Value UpdateHostRequestDtoSecurityLayer
	Set   bool
}

// IsSet returns true if OptUpdateHostRequestDtoSecurityLayer was set.
func (o OptUpdateHostRequestDtoSecurityLayer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateHostRequestDtoSecurityLayer) Reset() {
	var v UpdateHostRequestDtoSecurityLayer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateHostRequestDtoSecurityLayer) SetTo(v UpdateHostRequestDtoSecurityLayer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateHostRequestDtoSecurityLayer) Get() (v UpdateHostRequestDtoSecurityLayer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateHostRequestDtoSecurityLayer) Or(d UpdateHostRequestDtoSecurityLayer) UpdateHostRequestDtoSecurityLayer {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateNodeRequestDtoConfigProfile returns new OptUpdateNodeRequestDtoConfigProfile with value set to v.
func NewOptUpdateNodeRequestDtoConfigProfile(v UpdateNodeRequestDtoConfigProfile) OptUpdateNodeRequestDtoConfigProfile {
	return OptUpdateNodeRequestDtoConfigProfile{
		Value: v,
		Set:   true,
	}
}

// OptUpdateNodeRequestDtoConfigProfile is optional UpdateNodeRequestDtoConfigProfile.
type OptUpdateNodeRequestDtoConfigProfile struct {
	Value UpdateNodeRequestDtoConfigProfile
	Set   bool
}

// IsSet returns true if OptUpdateNodeRequestDtoConfigProfile was set.
func (o OptUpdateNodeRequestDtoConfigProfile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateNodeRequestDtoConfigProfile) Reset() {
	var v UpdateNodeRequestDtoConfigProfile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateNodeRequestDtoConfigProfile) SetTo(v UpdateNodeRequestDtoConfigProfile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateNodeRequestDtoConfigProfile) Get() (v UpdateNodeRequestDtoConfigProfile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateNodeRequestDtoConfigProfile) Or(d UpdateNodeRequestDtoConfigProfile) UpdateNodeRequestDtoConfigProfile {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateRemnawaveSettingsRequestDtoBrandingSettings returns new OptUpdateRemnawaveSettingsRequestDtoBrandingSettings with value set to v.
func NewOptUpdateRemnawaveSettingsRequestDtoBrandingSettings(v UpdateRemnawaveSettingsRequestDtoBrandingSettings) OptUpdateRemnawaveSettingsRequestDtoBrandingSettings {
	return OptUpdateRemnawaveSettingsRequestDtoBrandingSettings{
		Value: v,
		Set:   true,
	}
}

// OptUpdateRemnawaveSettingsRequestDtoBrandingSettings is optional UpdateRemnawaveSettingsRequestDtoBrandingSettings.
type OptUpdateRemnawaveSettingsRequestDtoBrandingSettings struct {
	Value UpdateRemnawaveSettingsRequestDtoBrandingSettings
	Set   bool
}

// IsSet returns true if OptUpdateRemnawaveSettingsRequestDtoBrandingSettings was set.
func (o OptUpdateRemnawaveSettingsRequestDtoBrandingSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateRemnawaveSettingsRequestDtoBrandingSettings) Reset() {
	var v UpdateRemnawaveSettingsRequestDtoBrandingSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateRemnawaveSettingsRequestDtoBrandingSettings) SetTo(v UpdateRemnawaveSettingsRequestDtoBrandingSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateRemnawaveSettingsRequestDtoBrandingSettings) Get() (v UpdateRemnawaveSettingsRequestDtoBrandingSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateRemnawaveSettingsRequestDtoBrandingSettings) Or(d UpdateRemnawaveSettingsRequestDtoBrandingSettings) UpdateRemnawaveSettingsRequestDtoBrandingSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateRemnawaveSettingsRequestDtoOauth2Settings returns new OptUpdateRemnawaveSettingsRequestDtoOauth2Settings with value set to v.
func NewOptUpdateRemnawaveSettingsRequestDtoOauth2Settings(v UpdateRemnawaveSettingsRequestDtoOauth2Settings) OptUpdateRemnawaveSettingsRequestDtoOauth2Settings {
	return OptUpdateRemnawaveSettingsRequestDtoOauth2Settings{
		Value: v,
		Set:   true,
	}
}

// OptUpdateRemnawaveSettingsRequestDtoOauth2Settings is optional UpdateRemnawaveSettingsRequestDtoOauth2Settings.
type OptUpdateRemnawaveSettingsRequestDtoOauth2Settings struct {
	Value UpdateRemnawaveSettingsRequestDtoOauth2Settings
	Set   bool
}

// IsSet returns true if OptUpdateRemnawaveSettingsRequestDtoOauth2Settings was set.
func (o OptUpdateRemnawaveSettingsRequestDtoOauth2Settings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateRemnawaveSettingsRequestDtoOauth2Settings) Reset() {
	var v UpdateRemnawaveSettingsRequestDtoOauth2Settings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateRemnawaveSettingsRequestDtoOauth2Settings) SetTo(v UpdateRemnawaveSettingsRequestDtoOauth2Settings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateRemnawaveSettingsRequestDtoOauth2Settings) Get() (v UpdateRemnawaveSettingsRequestDtoOauth2Settings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateRemnawaveSettingsRequestDtoOauth2Settings) Or(d UpdateRemnawaveSettingsRequestDtoOauth2Settings) UpdateRemnawaveSettingsRequestDtoOauth2Settings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateRemnawaveSettingsRequestDtoPasskeySettings returns new OptUpdateRemnawaveSettingsRequestDtoPasskeySettings with value set to v.
func NewOptUpdateRemnawaveSettingsRequestDtoPasskeySettings(v UpdateRemnawaveSettingsRequestDtoPasskeySettings) OptUpdateRemnawaveSettingsRequestDtoPasskeySettings {
	return OptUpdateRemnawaveSettingsRequestDtoPasskeySettings{
		Value: v,
		Set:   true,
	}
}

// OptUpdateRemnawaveSettingsRequestDtoPasskeySettings is optional UpdateRemnawaveSettingsRequestDtoPasskeySettings.
type OptUpdateRemnawaveSettingsRequestDtoPasskeySettings struct {
	Value UpdateRemnawaveSettingsRequestDtoPasskeySettings
	Set   bool
}

// IsSet returns true if OptUpdateRemnawaveSettingsRequestDtoPasskeySettings was set.
func (o OptUpdateRemnawaveSettingsRequestDtoPasskeySettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateRemnawaveSettingsRequestDtoPasskeySettings) Reset() {
	var v UpdateRemnawaveSettingsRequestDtoPasskeySettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateRemnawaveSettingsRequestDtoPasskeySettings) SetTo(v UpdateRemnawaveSettingsRequestDtoPasskeySettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateRemnawaveSettingsRequestDtoPasskeySettings) Get() (v UpdateRemnawaveSettingsRequestDtoPasskeySettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateRemnawaveSettingsRequestDtoPasskeySettings) Or(d UpdateRemnawaveSettingsRequestDtoPasskeySettings) UpdateRemnawaveSettingsRequestDtoPasskeySettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateRemnawaveSettingsRequestDtoPasswordSettings returns new OptUpdateRemnawaveSettingsRequestDtoPasswordSettings with value set to v.
func NewOptUpdateRemnawaveSettingsRequestDtoPasswordSettings(v UpdateRemnawaveSettingsRequestDtoPasswordSettings) OptUpdateRemnawaveSettingsRequestDtoPasswordSettings {
	return OptUpdateRemnawaveSettingsRequestDtoPasswordSettings{
		Value: v,
		Set:   true,
	}
}

// OptUpdateRemnawaveSettingsRequestDtoPasswordSettings is optional UpdateRemnawaveSettingsRequestDtoPasswordSettings.
type OptUpdateRemnawaveSettingsRequestDtoPasswordSettings struct {
	Value UpdateRemnawaveSettingsRequestDtoPasswordSettings
	Set   bool
}

// IsSet returns true if OptUpdateRemnawaveSettingsRequestDtoPasswordSettings was set.
func (o OptUpdateRemnawaveSettingsRequestDtoPasswordSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateRemnawaveSettingsRequestDtoPasswordSettings) Reset() {
	var v UpdateRemnawaveSettingsRequestDtoPasswordSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateRemnawaveSettingsRequestDtoPasswordSettings) SetTo(v UpdateRemnawaveSettingsRequestDtoPasswordSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateRemnawaveSettingsRequestDtoPasswordSettings) Get() (v UpdateRemnawaveSettingsRequestDtoPasswordSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateRemnawaveSettingsRequestDtoPasswordSettings) Or(d UpdateRemnawaveSettingsRequestDtoPasswordSettings) UpdateRemnawaveSettingsRequestDtoPasswordSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateRemnawaveSettingsRequestDtoTgAuthSettings returns new OptUpdateRemnawaveSettingsRequestDtoTgAuthSettings with value set to v.
func NewOptUpdateRemnawaveSettingsRequestDtoTgAuthSettings(v UpdateRemnawaveSettingsRequestDtoTgAuthSettings) OptUpdateRemnawaveSettingsRequestDtoTgAuthSettings {
	return OptUpdateRemnawaveSettingsRequestDtoTgAuthSettings{
		Value: v,
		Set:   true,
	}
}

// OptUpdateRemnawaveSettingsRequestDtoTgAuthSettings is optional UpdateRemnawaveSettingsRequestDtoTgAuthSettings.
type OptUpdateRemnawaveSettingsRequestDtoTgAuthSettings struct {
	Value UpdateRemnawaveSettingsRequestDtoTgAuthSettings
	Set   bool
}

// IsSet returns true if OptUpdateRemnawaveSettingsRequestDtoTgAuthSettings was set.
func (o OptUpdateRemnawaveSettingsRequestDtoTgAuthSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateRemnawaveSettingsRequestDtoTgAuthSettings) Reset() {
	var v UpdateRemnawaveSettingsRequestDtoTgAuthSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateRemnawaveSettingsRequestDtoTgAuthSettings) SetTo(v UpdateRemnawaveSettingsRequestDtoTgAuthSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateRemnawaveSettingsRequestDtoTgAuthSettings) Get() (v UpdateRemnawaveSettingsRequestDtoTgAuthSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateRemnawaveSettingsRequestDtoTgAuthSettings) Or(d UpdateRemnawaveSettingsRequestDtoTgAuthSettings) UpdateRemnawaveSettingsRequestDtoTgAuthSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders returns new OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders with value set to v.
func NewOptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders(v UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders {
	return OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders is optional UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders.
type OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders struct {
	Value UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders
	Set   bool
}

// IsSet returns true if OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders was set.
func (o OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) Reset() {
	var v UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) SetTo(v UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) Get() (v UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) Or(d UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSubscriptionSettingsRequestDtoResponseRules returns new OptUpdateSubscriptionSettingsRequestDtoResponseRules with value set to v.
func NewOptUpdateSubscriptionSettingsRequestDtoResponseRules(v UpdateSubscriptionSettingsRequestDtoResponseRules) OptUpdateSubscriptionSettingsRequestDtoResponseRules {
	return OptUpdateSubscriptionSettingsRequestDtoResponseRules{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSubscriptionSettingsRequestDtoResponseRules is optional UpdateSubscriptionSettingsRequestDtoResponseRules.
type OptUpdateSubscriptionSettingsRequestDtoResponseRules struct {
	Value UpdateSubscriptionSettingsRequestDtoResponseRules
	Set   bool
}

// IsSet returns true if OptUpdateSubscriptionSettingsRequestDtoResponseRules was set.
func (o OptUpdateSubscriptionSettingsRequestDtoResponseRules) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSubscriptionSettingsRequestDtoResponseRules) Reset() {
	var v UpdateSubscriptionSettingsRequestDtoResponseRules
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSubscriptionSettingsRequestDtoResponseRules) SetTo(v UpdateSubscriptionSettingsRequestDtoResponseRules) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSubscriptionSettingsRequestDtoResponseRules) Get() (v UpdateSubscriptionSettingsRequestDtoResponseRules, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSubscriptionSettingsRequestDtoResponseRules) Or(d UpdateSubscriptionSettingsRequestDtoResponseRules) UpdateSubscriptionSettingsRequestDtoResponseRules {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications returns new OptUpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications with value set to v.
func NewOptUpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications(v UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications) OptUpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications {
	return OptUpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications is optional UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications.
type OptUpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications struct {
	Value UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications
	Set   bool
}

// IsSet returns true if OptUpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications was set.
func (o OptUpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications) Reset() {
	var v UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications) SetTo(v UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications) Get() (v UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications) Or(d UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications) UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserRequestDtoStatus returns new OptUpdateUserRequestDtoStatus with value set to v.
func NewOptUpdateUserRequestDtoStatus(v UpdateUserRequestDtoStatus) OptUpdateUserRequestDtoStatus {
	return OptUpdateUserRequestDtoStatus{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserRequestDtoStatus is optional UpdateUserRequestDtoStatus.
type OptUpdateUserRequestDtoStatus struct {
	Value UpdateUserRequestDtoStatus
	Set   bool
}

// IsSet returns true if OptUpdateUserRequestDtoStatus was set.
func (o OptUpdateUserRequestDtoStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserRequestDtoStatus) Reset() {
	var v UpdateUserRequestDtoStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserRequestDtoStatus) SetTo(v UpdateUserRequestDtoStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserRequestDtoStatus) Get() (v UpdateUserRequestDtoStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserRequestDtoStatus) Or(d UpdateUserRequestDtoStatus) UpdateUserRequestDtoStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserRequestDtoTrafficLimitStrategy returns new OptUpdateUserRequestDtoTrafficLimitStrategy with value set to v.
func NewOptUpdateUserRequestDtoTrafficLimitStrategy(v UpdateUserRequestDtoTrafficLimitStrategy) OptUpdateUserRequestDtoTrafficLimitStrategy {
	return OptUpdateUserRequestDtoTrafficLimitStrategy{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserRequestDtoTrafficLimitStrategy is optional UpdateUserRequestDtoTrafficLimitStrategy.
type OptUpdateUserRequestDtoTrafficLimitStrategy struct {
	Value UpdateUserRequestDtoTrafficLimitStrategy
	Set   bool
}

// IsSet returns true if OptUpdateUserRequestDtoTrafficLimitStrategy was set.
func (o OptUpdateUserRequestDtoTrafficLimitStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserRequestDtoTrafficLimitStrategy) Reset() {
	var v UpdateUserRequestDtoTrafficLimitStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserRequestDtoTrafficLimitStrategy) SetTo(v UpdateUserRequestDtoTrafficLimitStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserRequestDtoTrafficLimitStrategy) Get() (v UpdateUserRequestDtoTrafficLimitStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserRequestDtoTrafficLimitStrategy) Or(d UpdateUserRequestDtoTrafficLimitStrategy) UpdateUserRequestDtoTrafficLimitStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserResponseResponseStatus returns new OptUserResponseResponseStatus with value set to v.
func NewOptUserResponseResponseStatus(v UserResponseResponseStatus) OptUserResponseResponseStatus {
	return OptUserResponseResponseStatus{
		Value: v,
		Set:   true,
	}
}

// OptUserResponseResponseStatus is optional UserResponseResponseStatus.
type OptUserResponseResponseStatus struct {
	Value UserResponseResponseStatus
	Set   bool
}

// IsSet returns true if OptUserResponseResponseStatus was set.
func (o OptUserResponseResponseStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserResponseResponseStatus) Reset() {
	var v UserResponseResponseStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserResponseResponseStatus) SetTo(v UserResponseResponseStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserResponseResponseStatus) Get() (v UserResponseResponseStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserResponseResponseStatus) Or(d UserResponseResponseStatus) UserResponseResponseStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserResponseResponseTrafficLimitStrategy returns new OptUserResponseResponseTrafficLimitStrategy with value set to v.
func NewOptUserResponseResponseTrafficLimitStrategy(v UserResponseResponseTrafficLimitStrategy) OptUserResponseResponseTrafficLimitStrategy {
	return OptUserResponseResponseTrafficLimitStrategy{
		Value: v,
		Set:   true,
	}
}

// OptUserResponseResponseTrafficLimitStrategy is optional UserResponseResponseTrafficLimitStrategy.
type OptUserResponseResponseTrafficLimitStrategy struct {
	Value UserResponseResponseTrafficLimitStrategy
	Set   bool
}

// IsSet returns true if OptUserResponseResponseTrafficLimitStrategy was set.
func (o OptUserResponseResponseTrafficLimitStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserResponseResponseTrafficLimitStrategy) Reset() {
	var v UserResponseResponseTrafficLimitStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserResponseResponseTrafficLimitStrategy) SetTo(v UserResponseResponseTrafficLimitStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserResponseResponseTrafficLimitStrategy) Get() (v UserResponseResponseTrafficLimitStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserResponseResponseTrafficLimitStrategy) Or(d UserResponseResponseTrafficLimitStrategy) UserResponseResponseTrafficLimitStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUsersResponseResponseItemStatus returns new OptUsersResponseResponseItemStatus with value set to v.
func NewOptUsersResponseResponseItemStatus(v UsersResponseResponseItemStatus) OptUsersResponseResponseItemStatus {
	return OptUsersResponseResponseItemStatus{
		Value: v,
		Set:   true,
	}
}

// OptUsersResponseResponseItemStatus is optional UsersResponseResponseItemStatus.
type OptUsersResponseResponseItemStatus struct {
	Value UsersResponseResponseItemStatus
	Set   bool
}

// IsSet returns true if OptUsersResponseResponseItemStatus was set.
func (o OptUsersResponseResponseItemStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUsersResponseResponseItemStatus) Reset() {
	var v UsersResponseResponseItemStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUsersResponseResponseItemStatus) SetTo(v UsersResponseResponseItemStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUsersResponseResponseItemStatus) Get() (v UsersResponseResponseItemStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUsersResponseResponseItemStatus) Or(d UsersResponseResponseItemStatus) UsersResponseResponseItemStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUsersResponseResponseItemTrafficLimitStrategy returns new OptUsersResponseResponseItemTrafficLimitStrategy with value set to v.
func NewOptUsersResponseResponseItemTrafficLimitStrategy(v UsersResponseResponseItemTrafficLimitStrategy) OptUsersResponseResponseItemTrafficLimitStrategy {
	return OptUsersResponseResponseItemTrafficLimitStrategy{
		Value: v,
		Set:   true,
	}
}

// OptUsersResponseResponseItemTrafficLimitStrategy is optional UsersResponseResponseItemTrafficLimitStrategy.
type OptUsersResponseResponseItemTrafficLimitStrategy struct {
	Value UsersResponseResponseItemTrafficLimitStrategy
	Set   bool
}

// IsSet returns true if OptUsersResponseResponseItemTrafficLimitStrategy was set.
func (o OptUsersResponseResponseItemTrafficLimitStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUsersResponseResponseItemTrafficLimitStrategy) Reset() {
	var v UsersResponseResponseItemTrafficLimitStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUsersResponseResponseItemTrafficLimitStrategy) SetTo(v UsersResponseResponseItemTrafficLimitStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUsersResponseResponseItemTrafficLimitStrategy) Get() (v UsersResponseResponseItemTrafficLimitStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUsersResponseResponseItemTrafficLimitStrategy) Or(d UsersResponseResponseItemTrafficLimitStrategy) UsersResponseResponseItemTrafficLimitStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type PasskeyControllerDeletePasskeyBadRequest struct {
	Message    OptString                                            `json:"message"`
	StatusCode OptFloat64                                           `json:"statusCode"`
	Errors     []PasskeyControllerDeletePasskeyBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *PasskeyControllerDeletePasskeyBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *PasskeyControllerDeletePasskeyBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *PasskeyControllerDeletePasskeyBadRequest) GetErrors() []PasskeyControllerDeletePasskeyBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *PasskeyControllerDeletePasskeyBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *PasskeyControllerDeletePasskeyBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *PasskeyControllerDeletePasskeyBadRequest) SetErrors(val []PasskeyControllerDeletePasskeyBadRequestErrorsItem) {
	s.Errors = val
}

func (*PasskeyControllerDeletePasskeyBadRequest) passkeyControllerDeletePasskeyRes() {}

type PasskeyControllerDeletePasskeyBadRequestErrorsItem struct{}

type PasskeyControllerDeletePasskeyInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *PasskeyControllerDeletePasskeyInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *PasskeyControllerDeletePasskeyInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *PasskeyControllerDeletePasskeyInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *PasskeyControllerDeletePasskeyInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *PasskeyControllerDeletePasskeyInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *PasskeyControllerDeletePasskeyInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *PasskeyControllerDeletePasskeyInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PasskeyControllerDeletePasskeyInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*PasskeyControllerDeletePasskeyInternalServerError) passkeyControllerDeletePasskeyRes() {}

type PasskeyControllerGetActivePasskeysBadRequest struct {
	Message    OptString                                                `json:"message"`
	StatusCode OptFloat64                                               `json:"statusCode"`
	Errors     []PasskeyControllerGetActivePasskeysBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *PasskeyControllerGetActivePasskeysBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *PasskeyControllerGetActivePasskeysBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *PasskeyControllerGetActivePasskeysBadRequest) GetErrors() []PasskeyControllerGetActivePasskeysBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *PasskeyControllerGetActivePasskeysBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *PasskeyControllerGetActivePasskeysBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *PasskeyControllerGetActivePasskeysBadRequest) SetErrors(val []PasskeyControllerGetActivePasskeysBadRequestErrorsItem) {
	s.Errors = val
}

func (*PasskeyControllerGetActivePasskeysBadRequest) passkeyControllerGetActivePasskeysRes() {}

type PasskeyControllerGetActivePasskeysBadRequestErrorsItem struct{}

type PasskeyControllerGetActivePasskeysInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *PasskeyControllerGetActivePasskeysInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *PasskeyControllerGetActivePasskeysInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *PasskeyControllerGetActivePasskeysInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *PasskeyControllerGetActivePasskeysInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *PasskeyControllerGetActivePasskeysInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *PasskeyControllerGetActivePasskeysInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *PasskeyControllerGetActivePasskeysInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PasskeyControllerGetActivePasskeysInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*PasskeyControllerGetActivePasskeysInternalServerError) passkeyControllerGetActivePasskeysRes() {
}

type PasskeyControllerPasskeyRegistrationOptionsBadRequest struct {
	Message    OptString                                                         `json:"message"`
	StatusCode OptFloat64                                                        `json:"statusCode"`
	Errors     []PasskeyControllerPasskeyRegistrationOptionsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *PasskeyControllerPasskeyRegistrationOptionsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *PasskeyControllerPasskeyRegistrationOptionsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *PasskeyControllerPasskeyRegistrationOptionsBadRequest) GetErrors() []PasskeyControllerPasskeyRegistrationOptionsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *PasskeyControllerPasskeyRegistrationOptionsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *PasskeyControllerPasskeyRegistrationOptionsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *PasskeyControllerPasskeyRegistrationOptionsBadRequest) SetErrors(val []PasskeyControllerPasskeyRegistrationOptionsBadRequestErrorsItem) {
	s.Errors = val
}

func (*PasskeyControllerPasskeyRegistrationOptionsBadRequest) passkeyControllerPasskeyRegistrationOptionsRes() {
}

type PasskeyControllerPasskeyRegistrationOptionsBadRequestErrorsItem struct{}

type PasskeyControllerPasskeyRegistrationOptionsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *PasskeyControllerPasskeyRegistrationOptionsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *PasskeyControllerPasskeyRegistrationOptionsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *PasskeyControllerPasskeyRegistrationOptionsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *PasskeyControllerPasskeyRegistrationOptionsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *PasskeyControllerPasskeyRegistrationOptionsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *PasskeyControllerPasskeyRegistrationOptionsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *PasskeyControllerPasskeyRegistrationOptionsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PasskeyControllerPasskeyRegistrationOptionsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*PasskeyControllerPasskeyRegistrationOptionsInternalServerError) passkeyControllerPasskeyRegistrationOptionsRes() {
}

type PasskeyControllerPasskeyRegistrationVerifyBadRequest struct {
	Message    OptString                                                        `json:"message"`
	StatusCode OptFloat64                                                       `json:"statusCode"`
	Errors     []PasskeyControllerPasskeyRegistrationVerifyBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *PasskeyControllerPasskeyRegistrationVerifyBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *PasskeyControllerPasskeyRegistrationVerifyBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *PasskeyControllerPasskeyRegistrationVerifyBadRequest) GetErrors() []PasskeyControllerPasskeyRegistrationVerifyBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *PasskeyControllerPasskeyRegistrationVerifyBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *PasskeyControllerPasskeyRegistrationVerifyBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *PasskeyControllerPasskeyRegistrationVerifyBadRequest) SetErrors(val []PasskeyControllerPasskeyRegistrationVerifyBadRequestErrorsItem) {
	s.Errors = val
}

func (*PasskeyControllerPasskeyRegistrationVerifyBadRequest) passkeyControllerPasskeyRegistrationVerifyRes() {
}

type PasskeyControllerPasskeyRegistrationVerifyBadRequestErrorsItem struct{}

type PasskeyControllerPasskeyRegistrationVerifyInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *PasskeyControllerPasskeyRegistrationVerifyInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *PasskeyControllerPasskeyRegistrationVerifyInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *PasskeyControllerPasskeyRegistrationVerifyInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *PasskeyControllerPasskeyRegistrationVerifyInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *PasskeyControllerPasskeyRegistrationVerifyInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *PasskeyControllerPasskeyRegistrationVerifyInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *PasskeyControllerPasskeyRegistrationVerifyInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PasskeyControllerPasskeyRegistrationVerifyInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*PasskeyControllerPasskeyRegistrationVerifyInternalServerError) passkeyControllerPasskeyRegistrationVerifyRes() {
}

// Ref: #/components/schemas/PasskeyOptionsResponse
type PasskeyOptionsResponse struct {
	Response jx.Raw `json:"response"`
}

// GetResponse returns the value of Response.
func (s *PasskeyOptionsResponse) GetResponse() jx.Raw {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *PasskeyOptionsResponse) SetResponse(val jx.Raw) {
	s.Response = val
}

// PasskeyOptionsResponseStatusCode wraps PasskeyOptionsResponse with StatusCode.
type PasskeyOptionsResponseStatusCode struct {
	StatusCode int
	Response   PasskeyOptionsResponse
}

// GetStatusCode returns the value of StatusCode.
func (s *PasskeyOptionsResponseStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *PasskeyOptionsResponseStatusCode) GetResponse() PasskeyOptionsResponse {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *PasskeyOptionsResponseStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *PasskeyOptionsResponseStatusCode) SetResponse(val PasskeyOptionsResponse) {
	s.Response = val
}

func (*PasskeyOptionsResponseStatusCode) authControllerPasskeyAuthenticationOptionsRes()  {}
func (*PasskeyOptionsResponseStatusCode) passkeyControllerPasskeyRegistrationOptionsRes() {}

// Ref: #/components/schemas/PasskeysResponse
type PasskeysResponse struct {
	Response PasskeysResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *PasskeysResponse) GetResponse() PasskeysResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *PasskeysResponse) SetResponse(val PasskeysResponseResponse) {
	s.Response = val
}

type PasskeysResponseResponse struct {
	Passkeys []PasskeysResponseResponsePasskeysItem `json:"passkeys"`
}

// GetPasskeys returns the value of Passkeys.
func (s *PasskeysResponseResponse) GetPasskeys() []PasskeysResponseResponsePasskeysItem {
	return s.Passkeys
}

// SetPasskeys sets the value of Passkeys.
func (s *PasskeysResponseResponse) SetPasskeys(val []PasskeysResponseResponsePasskeysItem) {
	s.Passkeys = val
}

type PasskeysResponseResponsePasskeysItem struct {
	ID   string `json:"id"`
	Name string `json:"name"`
	// Created date. Format: 2025-01-17T15:38:45.065Z.
	CreatedAt time.Time `json:"createdAt"`
	// Last used date. Format: 2025-01-17T15:38:45.065Z.
	LastUsedAt time.Time `json:"lastUsedAt"`
}

// GetID returns the value of ID.
func (s *PasskeysResponseResponsePasskeysItem) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *PasskeysResponseResponsePasskeysItem) GetName() string {
	return s.Name
}

// GetCreatedAt returns the value of CreatedAt.
func (s *PasskeysResponseResponsePasskeysItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetLastUsedAt returns the value of LastUsedAt.
func (s *PasskeysResponseResponsePasskeysItem) GetLastUsedAt() time.Time {
	return s.LastUsedAt
}

// SetID sets the value of ID.
func (s *PasskeysResponseResponsePasskeysItem) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *PasskeysResponseResponsePasskeysItem) SetName(val string) {
	s.Name = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *PasskeysResponseResponsePasskeysItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetLastUsedAt sets the value of LastUsedAt.
func (s *PasskeysResponseResponsePasskeysItem) SetLastUsedAt(val time.Time) {
	s.LastUsedAt = val
}

// PasskeysResponseStatusCode wraps PasskeysResponse with StatusCode.
type PasskeysResponseStatusCode struct {
	StatusCode int
	Response   PasskeysResponse
}

// GetStatusCode returns the value of StatusCode.
func (s *PasskeysResponseStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *PasskeysResponseStatusCode) GetResponse() PasskeysResponse {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *PasskeysResponseStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *PasskeysResponseStatusCode) SetResponse(val PasskeysResponse) {
	s.Response = val
}

func (*PasskeysResponseStatusCode) passkeyControllerDeletePasskeyRes()     {}
func (*PasskeysResponseStatusCode) passkeyControllerGetActivePasskeysRes() {}

// Ref: #/components/schemas/RegisterRequestDto
type RegisterRequestDto struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

// GetUsername returns the value of Username.
func (s *RegisterRequestDto) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *RegisterRequestDto) GetPassword() string {
	return s.Password
}

// SetUsername sets the value of Username.
func (s *RegisterRequestDto) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *RegisterRequestDto) SetPassword(val string) {
	s.Password = val
}

type RemnawaveSettingsControllerGetSettingsBadRequest struct {
	Message    OptString                                                    `json:"message"`
	StatusCode OptFloat64                                                   `json:"statusCode"`
	Errors     []RemnawaveSettingsControllerGetSettingsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *RemnawaveSettingsControllerGetSettingsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *RemnawaveSettingsControllerGetSettingsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *RemnawaveSettingsControllerGetSettingsBadRequest) GetErrors() []RemnawaveSettingsControllerGetSettingsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *RemnawaveSettingsControllerGetSettingsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *RemnawaveSettingsControllerGetSettingsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *RemnawaveSettingsControllerGetSettingsBadRequest) SetErrors(val []RemnawaveSettingsControllerGetSettingsBadRequestErrorsItem) {
	s.Errors = val
}

func (*RemnawaveSettingsControllerGetSettingsBadRequest) remnawaveSettingsControllerGetSettingsRes() {
}

type RemnawaveSettingsControllerGetSettingsBadRequestErrorsItem struct{}

type RemnawaveSettingsControllerGetSettingsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *RemnawaveSettingsControllerGetSettingsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *RemnawaveSettingsControllerGetSettingsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *RemnawaveSettingsControllerGetSettingsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *RemnawaveSettingsControllerGetSettingsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *RemnawaveSettingsControllerGetSettingsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *RemnawaveSettingsControllerGetSettingsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *RemnawaveSettingsControllerGetSettingsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *RemnawaveSettingsControllerGetSettingsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*RemnawaveSettingsControllerGetSettingsInternalServerError) remnawaveSettingsControllerGetSettingsRes() {
}

type RemnawaveSettingsControllerUpdateSettingsBadRequest struct {
	Message    OptString                                                       `json:"message"`
	StatusCode OptFloat64                                                      `json:"statusCode"`
	Errors     []RemnawaveSettingsControllerUpdateSettingsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *RemnawaveSettingsControllerUpdateSettingsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *RemnawaveSettingsControllerUpdateSettingsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *RemnawaveSettingsControllerUpdateSettingsBadRequest) GetErrors() []RemnawaveSettingsControllerUpdateSettingsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *RemnawaveSettingsControllerUpdateSettingsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *RemnawaveSettingsControllerUpdateSettingsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *RemnawaveSettingsControllerUpdateSettingsBadRequest) SetErrors(val []RemnawaveSettingsControllerUpdateSettingsBadRequestErrorsItem) {
	s.Errors = val
}

func (*RemnawaveSettingsControllerUpdateSettingsBadRequest) remnawaveSettingsControllerUpdateSettingsRes() {
}

type RemnawaveSettingsControllerUpdateSettingsBadRequestErrorsItem struct{}

type RemnawaveSettingsControllerUpdateSettingsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *RemnawaveSettingsControllerUpdateSettingsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *RemnawaveSettingsControllerUpdateSettingsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *RemnawaveSettingsControllerUpdateSettingsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *RemnawaveSettingsControllerUpdateSettingsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *RemnawaveSettingsControllerUpdateSettingsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *RemnawaveSettingsControllerUpdateSettingsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *RemnawaveSettingsControllerUpdateSettingsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *RemnawaveSettingsControllerUpdateSettingsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*RemnawaveSettingsControllerUpdateSettingsInternalServerError) remnawaveSettingsControllerUpdateSettingsRes() {
}

// Ref: #/components/schemas/ReorderHostRequestDto
type ReorderHostRequestDto struct {
	Hosts []ReorderHostRequestDtoHostsItem `json:"hosts"`
}

// GetHosts returns the value of Hosts.
func (s *ReorderHostRequestDto) GetHosts() []ReorderHostRequestDtoHostsItem {
	return s.Hosts
}

// SetHosts sets the value of Hosts.
func (s *ReorderHostRequestDto) SetHosts(val []ReorderHostRequestDtoHostsItem) {
	s.Hosts = val
}

type ReorderHostRequestDtoHostsItem struct {
	ViewPosition int       `json:"viewPosition"`
	UUID         uuid.UUID `json:"uuid"`
}

// GetViewPosition returns the value of ViewPosition.
func (s *ReorderHostRequestDtoHostsItem) GetViewPosition() int {
	return s.ViewPosition
}

// GetUUID returns the value of UUID.
func (s *ReorderHostRequestDtoHostsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// SetViewPosition sets the value of ViewPosition.
func (s *ReorderHostRequestDtoHostsItem) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetUUID sets the value of UUID.
func (s *ReorderHostRequestDtoHostsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// Ref: #/components/schemas/ReorderHostResponseDto
type ReorderHostResponseDto struct {
	Response ReorderHostResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *ReorderHostResponseDto) GetResponse() ReorderHostResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *ReorderHostResponseDto) SetResponse(val ReorderHostResponseDtoResponse) {
	s.Response = val
}

func (*ReorderHostResponseDto) hostsControllerReorderHostsRes() {}

type ReorderHostResponseDtoResponse struct {
	IsUpdated bool `json:"isUpdated"`
}

// GetIsUpdated returns the value of IsUpdated.
func (s *ReorderHostResponseDtoResponse) GetIsUpdated() bool {
	return s.IsUpdated
}

// SetIsUpdated sets the value of IsUpdated.
func (s *ReorderHostResponseDtoResponse) SetIsUpdated(val bool) {
	s.IsUpdated = val
}

// Ref: #/components/schemas/ReorderNodeRequestDto
type ReorderNodeRequestDto struct {
	Nodes []ReorderNodeRequestDtoNodesItem `json:"nodes"`
}

// GetNodes returns the value of Nodes.
func (s *ReorderNodeRequestDto) GetNodes() []ReorderNodeRequestDtoNodesItem {
	return s.Nodes
}

// SetNodes sets the value of Nodes.
func (s *ReorderNodeRequestDto) SetNodes(val []ReorderNodeRequestDtoNodesItem) {
	s.Nodes = val
}

type ReorderNodeRequestDtoNodesItem struct {
	ViewPosition int       `json:"viewPosition"`
	UUID         uuid.UUID `json:"uuid"`
}

// GetViewPosition returns the value of ViewPosition.
func (s *ReorderNodeRequestDtoNodesItem) GetViewPosition() int {
	return s.ViewPosition
}

// GetUUID returns the value of UUID.
func (s *ReorderNodeRequestDtoNodesItem) GetUUID() uuid.UUID {
	return s.UUID
}

// SetViewPosition sets the value of ViewPosition.
func (s *ReorderNodeRequestDtoNodesItem) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetUUID sets the value of UUID.
func (s *ReorderNodeRequestDtoNodesItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// Ref: #/components/schemas/RestartAllNodesRequestBodyDto
type RestartAllNodesRequestBodyDto struct {
	ForceRestart OptBool `json:"forceRestart"`
}

// GetForceRestart returns the value of ForceRestart.
func (s *RestartAllNodesRequestBodyDto) GetForceRestart() OptBool {
	return s.ForceRestart
}

// SetForceRestart sets the value of ForceRestart.
func (s *RestartAllNodesRequestBodyDto) SetForceRestart(val OptBool) {
	s.ForceRestart = val
}

// Ref: #/components/schemas/RevokeUserSubscriptionBodyDto
type RevokeUserSubscriptionBodyDto struct {
	// Optional. If not provided, a new short UUID will be generated by Remnawave. Please note that it is
	// strongly recommended to allow Remnawave to generate the short UUID.
	ShortUuid OptString `json:"shortUuid"`
}

// GetShortUuid returns the value of ShortUuid.
func (s *RevokeUserSubscriptionBodyDto) GetShortUuid() OptString {
	return s.ShortUuid
}

// SetShortUuid sets the value of ShortUuid.
func (s *RevokeUserSubscriptionBodyDto) SetShortUuid(val OptString) {
	s.ShortUuid = val
}

// Ref: #/components/schemas/SetInboundToManyHostsRequestDto
type SetInboundToManyHostsRequestDto struct {
	Uuids                    []uuid.UUID `json:"uuids"`
	ConfigProfileUuid        uuid.UUID   `json:"configProfileUuid"`
	ConfigProfileInboundUuid uuid.UUID   `json:"configProfileInboundUuid"`
}

// GetUuids returns the value of Uuids.
func (s *SetInboundToManyHostsRequestDto) GetUuids() []uuid.UUID {
	return s.Uuids
}

// GetConfigProfileUuid returns the value of ConfigProfileUuid.
func (s *SetInboundToManyHostsRequestDto) GetConfigProfileUuid() uuid.UUID {
	return s.ConfigProfileUuid
}

// GetConfigProfileInboundUuid returns the value of ConfigProfileInboundUuid.
func (s *SetInboundToManyHostsRequestDto) GetConfigProfileInboundUuid() uuid.UUID {
	return s.ConfigProfileInboundUuid
}

// SetUuids sets the value of Uuids.
func (s *SetInboundToManyHostsRequestDto) SetUuids(val []uuid.UUID) {
	s.Uuids = val
}

// SetConfigProfileUuid sets the value of ConfigProfileUuid.
func (s *SetInboundToManyHostsRequestDto) SetConfigProfileUuid(val uuid.UUID) {
	s.ConfigProfileUuid = val
}

// SetConfigProfileInboundUuid sets the value of ConfigProfileInboundUuid.
func (s *SetInboundToManyHostsRequestDto) SetConfigProfileInboundUuid(val uuid.UUID) {
	s.ConfigProfileInboundUuid = val
}

// Ref: #/components/schemas/SetPortToManyHostsRequestDto
type SetPortToManyHostsRequestDto struct {
	Uuids []uuid.UUID `json:"uuids"`
	Port  int         `json:"port"`
}

// GetUuids returns the value of Uuids.
func (s *SetPortToManyHostsRequestDto) GetUuids() []uuid.UUID {
	return s.Uuids
}

// GetPort returns the value of Port.
func (s *SetPortToManyHostsRequestDto) GetPort() int {
	return s.Port
}

// SetUuids sets the value of Uuids.
func (s *SetPortToManyHostsRequestDto) SetUuids(val []uuid.UUID) {
	s.Uuids = val
}

// SetPort sets the value of Port.
func (s *SetPortToManyHostsRequestDto) SetPort(val int) {
	s.Port = val
}

// Ref: #/components/schemas/SettingsResponse
type SettingsResponse struct {
	Response SettingsResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *SettingsResponse) GetResponse() SettingsResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *SettingsResponse) SetResponse(val SettingsResponseResponse) {
	s.Response = val
}

func (*SettingsResponse) remnawaveSettingsControllerGetSettingsRes()    {}
func (*SettingsResponse) remnawaveSettingsControllerUpdateSettingsRes() {}

type SettingsResponseResponse struct {
	PasskeySettings  NilSettingsResponseResponsePasskeySettings  `json:"passkeySettings"`
	Oauth2Settings   NilSettingsResponseResponseOauth2Settings   `json:"oauth2Settings"`
	TgAuthSettings   NilSettingsResponseResponseTgAuthSettings   `json:"tgAuthSettings"`
	PasswordSettings NilSettingsResponseResponsePasswordSettings `json:"passwordSettings"`
	BrandingSettings NilSettingsResponseResponseBrandingSettings `json:"brandingSettings"`
}

// GetPasskeySettings returns the value of PasskeySettings.
func (s *SettingsResponseResponse) GetPasskeySettings() NilSettingsResponseResponsePasskeySettings {
	return s.PasskeySettings
}

// GetOauth2Settings returns the value of Oauth2Settings.
func (s *SettingsResponseResponse) GetOauth2Settings() NilSettingsResponseResponseOauth2Settings {
	return s.Oauth2Settings
}

// GetTgAuthSettings returns the value of TgAuthSettings.
func (s *SettingsResponseResponse) GetTgAuthSettings() NilSettingsResponseResponseTgAuthSettings {
	return s.TgAuthSettings
}

// GetPasswordSettings returns the value of PasswordSettings.
func (s *SettingsResponseResponse) GetPasswordSettings() NilSettingsResponseResponsePasswordSettings {
	return s.PasswordSettings
}

// GetBrandingSettings returns the value of BrandingSettings.
func (s *SettingsResponseResponse) GetBrandingSettings() NilSettingsResponseResponseBrandingSettings {
	return s.BrandingSettings
}

// SetPasskeySettings sets the value of PasskeySettings.
func (s *SettingsResponseResponse) SetPasskeySettings(val NilSettingsResponseResponsePasskeySettings) {
	s.PasskeySettings = val
}

// SetOauth2Settings sets the value of Oauth2Settings.
func (s *SettingsResponseResponse) SetOauth2Settings(val NilSettingsResponseResponseOauth2Settings) {
	s.Oauth2Settings = val
}

// SetTgAuthSettings sets the value of TgAuthSettings.
func (s *SettingsResponseResponse) SetTgAuthSettings(val NilSettingsResponseResponseTgAuthSettings) {
	s.TgAuthSettings = val
}

// SetPasswordSettings sets the value of PasswordSettings.
func (s *SettingsResponseResponse) SetPasswordSettings(val NilSettingsResponseResponsePasswordSettings) {
	s.PasswordSettings = val
}

// SetBrandingSettings sets the value of BrandingSettings.
func (s *SettingsResponseResponse) SetBrandingSettings(val NilSettingsResponseResponseBrandingSettings) {
	s.BrandingSettings = val
}

type SettingsResponseResponseBrandingSettings struct {
	Title   NilString `json:"title"`
	LogoUrl NilURI    `json:"logoUrl"`
}

// GetTitle returns the value of Title.
func (s *SettingsResponseResponseBrandingSettings) GetTitle() NilString {
	return s.Title
}

// GetLogoUrl returns the value of LogoUrl.
func (s *SettingsResponseResponseBrandingSettings) GetLogoUrl() NilURI {
	return s.LogoUrl
}

// SetTitle sets the value of Title.
func (s *SettingsResponseResponseBrandingSettings) SetTitle(val NilString) {
	s.Title = val
}

// SetLogoUrl sets the value of LogoUrl.
func (s *SettingsResponseResponseBrandingSettings) SetLogoUrl(val NilURI) {
	s.LogoUrl = val
}

type SettingsResponseResponseOauth2Settings struct {
	Github   SettingsResponseResponseOauth2SettingsGithub   `json:"github"`
	Pocketid SettingsResponseResponseOauth2SettingsPocketid `json:"pocketid"`
	Yandex   SettingsResponseResponseOauth2SettingsYandex   `json:"yandex"`
}

// GetGithub returns the value of Github.
func (s *SettingsResponseResponseOauth2Settings) GetGithub() SettingsResponseResponseOauth2SettingsGithub {
	return s.Github
}

// GetPocketid returns the value of Pocketid.
func (s *SettingsResponseResponseOauth2Settings) GetPocketid() SettingsResponseResponseOauth2SettingsPocketid {
	return s.Pocketid
}

// GetYandex returns the value of Yandex.
func (s *SettingsResponseResponseOauth2Settings) GetYandex() SettingsResponseResponseOauth2SettingsYandex {
	return s.Yandex
}

// SetGithub sets the value of Github.
func (s *SettingsResponseResponseOauth2Settings) SetGithub(val SettingsResponseResponseOauth2SettingsGithub) {
	s.Github = val
}

// SetPocketid sets the value of Pocketid.
func (s *SettingsResponseResponseOauth2Settings) SetPocketid(val SettingsResponseResponseOauth2SettingsPocketid) {
	s.Pocketid = val
}

// SetYandex sets the value of Yandex.
func (s *SettingsResponseResponseOauth2Settings) SetYandex(val SettingsResponseResponseOauth2SettingsYandex) {
	s.Yandex = val
}

type SettingsResponseResponseOauth2SettingsGithub struct {
	Enabled       bool      `json:"enabled"`
	ClientId      NilString `json:"clientId"`
	ClientSecret  NilString `json:"clientSecret"`
	AllowedEmails []string  `json:"allowedEmails"`
}

// GetEnabled returns the value of Enabled.
func (s *SettingsResponseResponseOauth2SettingsGithub) GetEnabled() bool {
	return s.Enabled
}

// GetClientId returns the value of ClientId.
func (s *SettingsResponseResponseOauth2SettingsGithub) GetClientId() NilString {
	return s.ClientId
}

// GetClientSecret returns the value of ClientSecret.
func (s *SettingsResponseResponseOauth2SettingsGithub) GetClientSecret() NilString {
	return s.ClientSecret
}

// GetAllowedEmails returns the value of AllowedEmails.
func (s *SettingsResponseResponseOauth2SettingsGithub) GetAllowedEmails() []string {
	return s.AllowedEmails
}

// SetEnabled sets the value of Enabled.
func (s *SettingsResponseResponseOauth2SettingsGithub) SetEnabled(val bool) {
	s.Enabled = val
}

// SetClientId sets the value of ClientId.
func (s *SettingsResponseResponseOauth2SettingsGithub) SetClientId(val NilString) {
	s.ClientId = val
}

// SetClientSecret sets the value of ClientSecret.
func (s *SettingsResponseResponseOauth2SettingsGithub) SetClientSecret(val NilString) {
	s.ClientSecret = val
}

// SetAllowedEmails sets the value of AllowedEmails.
func (s *SettingsResponseResponseOauth2SettingsGithub) SetAllowedEmails(val []string) {
	s.AllowedEmails = val
}

type SettingsResponseResponseOauth2SettingsPocketid struct {
	Enabled       bool      `json:"enabled"`
	ClientId      NilString `json:"clientId"`
	ClientSecret  NilString `json:"clientSecret"`
	PlainDomain   NilString `json:"plainDomain"`
	AllowedEmails []string  `json:"allowedEmails"`
}

// GetEnabled returns the value of Enabled.
func (s *SettingsResponseResponseOauth2SettingsPocketid) GetEnabled() bool {
	return s.Enabled
}

// GetClientId returns the value of ClientId.
func (s *SettingsResponseResponseOauth2SettingsPocketid) GetClientId() NilString {
	return s.ClientId
}

// GetClientSecret returns the value of ClientSecret.
func (s *SettingsResponseResponseOauth2SettingsPocketid) GetClientSecret() NilString {
	return s.ClientSecret
}

// GetPlainDomain returns the value of PlainDomain.
func (s *SettingsResponseResponseOauth2SettingsPocketid) GetPlainDomain() NilString {
	return s.PlainDomain
}

// GetAllowedEmails returns the value of AllowedEmails.
func (s *SettingsResponseResponseOauth2SettingsPocketid) GetAllowedEmails() []string {
	return s.AllowedEmails
}

// SetEnabled sets the value of Enabled.
func (s *SettingsResponseResponseOauth2SettingsPocketid) SetEnabled(val bool) {
	s.Enabled = val
}

// SetClientId sets the value of ClientId.
func (s *SettingsResponseResponseOauth2SettingsPocketid) SetClientId(val NilString) {
	s.ClientId = val
}

// SetClientSecret sets the value of ClientSecret.
func (s *SettingsResponseResponseOauth2SettingsPocketid) SetClientSecret(val NilString) {
	s.ClientSecret = val
}

// SetPlainDomain sets the value of PlainDomain.
func (s *SettingsResponseResponseOauth2SettingsPocketid) SetPlainDomain(val NilString) {
	s.PlainDomain = val
}

// SetAllowedEmails sets the value of AllowedEmails.
func (s *SettingsResponseResponseOauth2SettingsPocketid) SetAllowedEmails(val []string) {
	s.AllowedEmails = val
}

type SettingsResponseResponseOauth2SettingsYandex struct {
	Enabled       bool      `json:"enabled"`
	ClientId      NilString `json:"clientId"`
	ClientSecret  NilString `json:"clientSecret"`
	AllowedEmails []string  `json:"allowedEmails"`
}

// GetEnabled returns the value of Enabled.
func (s *SettingsResponseResponseOauth2SettingsYandex) GetEnabled() bool {
	return s.Enabled
}

// GetClientId returns the value of ClientId.
func (s *SettingsResponseResponseOauth2SettingsYandex) GetClientId() NilString {
	return s.ClientId
}

// GetClientSecret returns the value of ClientSecret.
func (s *SettingsResponseResponseOauth2SettingsYandex) GetClientSecret() NilString {
	return s.ClientSecret
}

// GetAllowedEmails returns the value of AllowedEmails.
func (s *SettingsResponseResponseOauth2SettingsYandex) GetAllowedEmails() []string {
	return s.AllowedEmails
}

// SetEnabled sets the value of Enabled.
func (s *SettingsResponseResponseOauth2SettingsYandex) SetEnabled(val bool) {
	s.Enabled = val
}

// SetClientId sets the value of ClientId.
func (s *SettingsResponseResponseOauth2SettingsYandex) SetClientId(val NilString) {
	s.ClientId = val
}

// SetClientSecret sets the value of ClientSecret.
func (s *SettingsResponseResponseOauth2SettingsYandex) SetClientSecret(val NilString) {
	s.ClientSecret = val
}

// SetAllowedEmails sets the value of AllowedEmails.
func (s *SettingsResponseResponseOauth2SettingsYandex) SetAllowedEmails(val []string) {
	s.AllowedEmails = val
}

type SettingsResponseResponsePasskeySettings struct {
	Enabled bool      `json:"enabled"`
	RpId    NilString `json:"rpId"`
	Origin  NilString `json:"origin"`
}

// GetEnabled returns the value of Enabled.
func (s *SettingsResponseResponsePasskeySettings) GetEnabled() bool {
	return s.Enabled
}

// GetRpId returns the value of RpId.
func (s *SettingsResponseResponsePasskeySettings) GetRpId() NilString {
	return s.RpId
}

// GetOrigin returns the value of Origin.
func (s *SettingsResponseResponsePasskeySettings) GetOrigin() NilString {
	return s.Origin
}

// SetEnabled sets the value of Enabled.
func (s *SettingsResponseResponsePasskeySettings) SetEnabled(val bool) {
	s.Enabled = val
}

// SetRpId sets the value of RpId.
func (s *SettingsResponseResponsePasskeySettings) SetRpId(val NilString) {
	s.RpId = val
}

// SetOrigin sets the value of Origin.
func (s *SettingsResponseResponsePasskeySettings) SetOrigin(val NilString) {
	s.Origin = val
}

type SettingsResponseResponsePasswordSettings struct {
	Enabled bool `json:"enabled"`
}

// GetEnabled returns the value of Enabled.
func (s *SettingsResponseResponsePasswordSettings) GetEnabled() bool {
	return s.Enabled
}

// SetEnabled sets the value of Enabled.
func (s *SettingsResponseResponsePasswordSettings) SetEnabled(val bool) {
	s.Enabled = val
}

type SettingsResponseResponseTgAuthSettings struct {
	Enabled  bool      `json:"enabled"`
	BotToken NilString `json:"botToken"`
	AdminIds []string  `json:"adminIds"`
}

// GetEnabled returns the value of Enabled.
func (s *SettingsResponseResponseTgAuthSettings) GetEnabled() bool {
	return s.Enabled
}

// GetBotToken returns the value of BotToken.
func (s *SettingsResponseResponseTgAuthSettings) GetBotToken() NilString {
	return s.BotToken
}

// GetAdminIds returns the value of AdminIds.
func (s *SettingsResponseResponseTgAuthSettings) GetAdminIds() []string {
	return s.AdminIds
}

// SetEnabled sets the value of Enabled.
func (s *SettingsResponseResponseTgAuthSettings) SetEnabled(val bool) {
	s.Enabled = val
}

// SetBotToken sets the value of BotToken.
func (s *SettingsResponseResponseTgAuthSettings) SetBotToken(val NilString) {
	s.BotToken = val
}

// SetAdminIds sets the value of AdminIds.
func (s *SettingsResponseResponseTgAuthSettings) SetAdminIds(val []string) {
	s.AdminIds = val
}

// Ref: #/components/schemas/SnippetRequest
type SnippetRequest struct {
	Name    string                      `json:"name"`
	Snippet []SnippetRequestSnippetItem `json:"snippet"`
}

// GetName returns the value of Name.
func (s *SnippetRequest) GetName() string {
	return s.Name
}

// GetSnippet returns the value of Snippet.
func (s *SnippetRequest) GetSnippet() []SnippetRequestSnippetItem {
	return s.Snippet
}

// SetName sets the value of Name.
func (s *SnippetRequest) SetName(val string) {
	s.Name = val
}

// SetSnippet sets the value of Snippet.
func (s *SnippetRequest) SetSnippet(val []SnippetRequestSnippetItem) {
	s.Snippet = val
}

type SnippetRequestSnippetItem struct{}

type SnippetsControllerCreateSnippetBadRequest struct {
	Message    OptString                                             `json:"message"`
	StatusCode OptFloat64                                            `json:"statusCode"`
	Errors     []SnippetsControllerCreateSnippetBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SnippetsControllerCreateSnippetBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SnippetsControllerCreateSnippetBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SnippetsControllerCreateSnippetBadRequest) GetErrors() []SnippetsControllerCreateSnippetBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SnippetsControllerCreateSnippetBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SnippetsControllerCreateSnippetBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SnippetsControllerCreateSnippetBadRequest) SetErrors(val []SnippetsControllerCreateSnippetBadRequestErrorsItem) {
	s.Errors = val
}

func (*SnippetsControllerCreateSnippetBadRequest) snippetsControllerCreateSnippetRes() {}

type SnippetsControllerCreateSnippetBadRequestErrorsItem struct{}

// SnippetsControllerCreateSnippetConflict is response for SnippetsControllerCreateSnippet operation.
type SnippetsControllerCreateSnippetConflict struct{}

func (*SnippetsControllerCreateSnippetConflict) snippetsControllerCreateSnippetRes() {}

type SnippetsControllerCreateSnippetInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SnippetsControllerCreateSnippetInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SnippetsControllerCreateSnippetInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SnippetsControllerCreateSnippetInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SnippetsControllerCreateSnippetInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SnippetsControllerCreateSnippetInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SnippetsControllerCreateSnippetInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SnippetsControllerCreateSnippetInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SnippetsControllerCreateSnippetInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SnippetsControllerCreateSnippetInternalServerError) snippetsControllerCreateSnippetRes() {}

type SnippetsControllerDeleteSnippetByNameBadRequest struct {
	Message    OptString                                                   `json:"message"`
	StatusCode OptFloat64                                                  `json:"statusCode"`
	Errors     []SnippetsControllerDeleteSnippetByNameBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SnippetsControllerDeleteSnippetByNameBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SnippetsControllerDeleteSnippetByNameBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SnippetsControllerDeleteSnippetByNameBadRequest) GetErrors() []SnippetsControllerDeleteSnippetByNameBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SnippetsControllerDeleteSnippetByNameBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SnippetsControllerDeleteSnippetByNameBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SnippetsControllerDeleteSnippetByNameBadRequest) SetErrors(val []SnippetsControllerDeleteSnippetByNameBadRequestErrorsItem) {
	s.Errors = val
}

func (*SnippetsControllerDeleteSnippetByNameBadRequest) snippetsControllerDeleteSnippetByNameRes() {}

type SnippetsControllerDeleteSnippetByNameBadRequestErrorsItem struct{}

type SnippetsControllerDeleteSnippetByNameInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SnippetsControllerDeleteSnippetByNameInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SnippetsControllerDeleteSnippetByNameInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SnippetsControllerDeleteSnippetByNameInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SnippetsControllerDeleteSnippetByNameInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SnippetsControllerDeleteSnippetByNameInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SnippetsControllerDeleteSnippetByNameInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SnippetsControllerDeleteSnippetByNameInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SnippetsControllerDeleteSnippetByNameInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SnippetsControllerDeleteSnippetByNameInternalServerError) snippetsControllerDeleteSnippetByNameRes() {
}

// SnippetsControllerDeleteSnippetByNameNotFound is response for SnippetsControllerDeleteSnippetByName operation.
type SnippetsControllerDeleteSnippetByNameNotFound struct{}

func (*SnippetsControllerDeleteSnippetByNameNotFound) snippetsControllerDeleteSnippetByNameRes() {}

type SnippetsControllerGetSnippetsBadRequest struct {
	Message    OptString                                           `json:"message"`
	StatusCode OptFloat64                                          `json:"statusCode"`
	Errors     []SnippetsControllerGetSnippetsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SnippetsControllerGetSnippetsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SnippetsControllerGetSnippetsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SnippetsControllerGetSnippetsBadRequest) GetErrors() []SnippetsControllerGetSnippetsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SnippetsControllerGetSnippetsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SnippetsControllerGetSnippetsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SnippetsControllerGetSnippetsBadRequest) SetErrors(val []SnippetsControllerGetSnippetsBadRequestErrorsItem) {
	s.Errors = val
}

func (*SnippetsControllerGetSnippetsBadRequest) snippetsControllerGetSnippetsRes() {}

type SnippetsControllerGetSnippetsBadRequestErrorsItem struct{}

type SnippetsControllerGetSnippetsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SnippetsControllerGetSnippetsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SnippetsControllerGetSnippetsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SnippetsControllerGetSnippetsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SnippetsControllerGetSnippetsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SnippetsControllerGetSnippetsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SnippetsControllerGetSnippetsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SnippetsControllerGetSnippetsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SnippetsControllerGetSnippetsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SnippetsControllerGetSnippetsInternalServerError) snippetsControllerGetSnippetsRes() {}

type SnippetsControllerUpdateSnippetBadRequest struct {
	Message    OptString                                             `json:"message"`
	StatusCode OptFloat64                                            `json:"statusCode"`
	Errors     []SnippetsControllerUpdateSnippetBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SnippetsControllerUpdateSnippetBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SnippetsControllerUpdateSnippetBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SnippetsControllerUpdateSnippetBadRequest) GetErrors() []SnippetsControllerUpdateSnippetBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SnippetsControllerUpdateSnippetBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SnippetsControllerUpdateSnippetBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SnippetsControllerUpdateSnippetBadRequest) SetErrors(val []SnippetsControllerUpdateSnippetBadRequestErrorsItem) {
	s.Errors = val
}

func (*SnippetsControllerUpdateSnippetBadRequest) snippetsControllerUpdateSnippetRes() {}

type SnippetsControllerUpdateSnippetBadRequestErrorsItem struct{}

// SnippetsControllerUpdateSnippetConflict is response for SnippetsControllerUpdateSnippet operation.
type SnippetsControllerUpdateSnippetConflict struct{}

func (*SnippetsControllerUpdateSnippetConflict) snippetsControllerUpdateSnippetRes() {}

type SnippetsControllerUpdateSnippetInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SnippetsControllerUpdateSnippetInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SnippetsControllerUpdateSnippetInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SnippetsControllerUpdateSnippetInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SnippetsControllerUpdateSnippetInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SnippetsControllerUpdateSnippetInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SnippetsControllerUpdateSnippetInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SnippetsControllerUpdateSnippetInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SnippetsControllerUpdateSnippetInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SnippetsControllerUpdateSnippetInternalServerError) snippetsControllerUpdateSnippetRes() {}

// SnippetsControllerUpdateSnippetNotFound is response for SnippetsControllerUpdateSnippet operation.
type SnippetsControllerUpdateSnippetNotFound struct{}

func (*SnippetsControllerUpdateSnippetNotFound) snippetsControllerUpdateSnippetRes() {}

// Ref: #/components/schemas/SnippetsResponse
type SnippetsResponse struct {
	Response SnippetsResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *SnippetsResponse) GetResponse() SnippetsResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *SnippetsResponse) SetResponse(val SnippetsResponseResponse) {
	s.Response = val
}

func (*SnippetsResponse) snippetsControllerCreateSnippetRes()       {}
func (*SnippetsResponse) snippetsControllerDeleteSnippetByNameRes() {}
func (*SnippetsResponse) snippetsControllerGetSnippetsRes()         {}
func (*SnippetsResponse) snippetsControllerUpdateSnippetRes()       {}

type SnippetsResponseResponse struct {
	Total    float64                                `json:"total"`
	Snippets []SnippetsResponseResponseSnippetsItem `json:"snippets"`
}

// GetTotal returns the value of Total.
func (s *SnippetsResponseResponse) GetTotal() float64 {
	return s.Total
}

// GetSnippets returns the value of Snippets.
func (s *SnippetsResponseResponse) GetSnippets() []SnippetsResponseResponseSnippetsItem {
	return s.Snippets
}

// SetTotal sets the value of Total.
func (s *SnippetsResponseResponse) SetTotal(val float64) {
	s.Total = val
}

// SetSnippets sets the value of Snippets.
func (s *SnippetsResponseResponse) SetSnippets(val []SnippetsResponseResponseSnippetsItem) {
	s.Snippets = val
}

type SnippetsResponseResponseSnippetsItem struct {
	Name    string `json:"name"`
	Snippet jx.Raw `json:"snippet"`
}

// GetName returns the value of Name.
func (s *SnippetsResponseResponseSnippetsItem) GetName() string {
	return s.Name
}

// GetSnippet returns the value of Snippet.
func (s *SnippetsResponseResponseSnippetsItem) GetSnippet() jx.Raw {
	return s.Snippet
}

// SetName sets the value of Name.
func (s *SnippetsResponseResponseSnippetsItem) SetName(val string) {
	s.Name = val
}

// SetSnippet sets the value of Snippet.
func (s *SnippetsResponseResponseSnippetsItem) SetSnippet(val jx.Raw) {
	s.Snippet = val
}

type SubscriptionControllerGetSubscriptionByClientTypeClientType string

const (
	SubscriptionControllerGetSubscriptionByClientTypeClientTypeStash     SubscriptionControllerGetSubscriptionByClientTypeClientType = "stash"
	SubscriptionControllerGetSubscriptionByClientTypeClientTypeSingbox   SubscriptionControllerGetSubscriptionByClientTypeClientType = "singbox"
	SubscriptionControllerGetSubscriptionByClientTypeClientTypeMihomo    SubscriptionControllerGetSubscriptionByClientTypeClientType = "mihomo"
	SubscriptionControllerGetSubscriptionByClientTypeClientTypeJSON      SubscriptionControllerGetSubscriptionByClientTypeClientType = "json"
	SubscriptionControllerGetSubscriptionByClientTypeClientTypeV2rayJSON SubscriptionControllerGetSubscriptionByClientTypeClientType = "v2ray-json"
	SubscriptionControllerGetSubscriptionByClientTypeClientTypeClash     SubscriptionControllerGetSubscriptionByClientTypeClientType = "clash"
)

// AllValues returns all SubscriptionControllerGetSubscriptionByClientTypeClientType values.
func (SubscriptionControllerGetSubscriptionByClientTypeClientType) AllValues() []SubscriptionControllerGetSubscriptionByClientTypeClientType {
	return []SubscriptionControllerGetSubscriptionByClientTypeClientType{
		SubscriptionControllerGetSubscriptionByClientTypeClientTypeStash,
		SubscriptionControllerGetSubscriptionByClientTypeClientTypeSingbox,
		SubscriptionControllerGetSubscriptionByClientTypeClientTypeMihomo,
		SubscriptionControllerGetSubscriptionByClientTypeClientTypeJSON,
		SubscriptionControllerGetSubscriptionByClientTypeClientTypeV2rayJSON,
		SubscriptionControllerGetSubscriptionByClientTypeClientTypeClash,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SubscriptionControllerGetSubscriptionByClientTypeClientType) MarshalText() ([]byte, error) {
	switch s {
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeStash:
		return []byte(s), nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeSingbox:
		return []byte(s), nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeMihomo:
		return []byte(s), nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeJSON:
		return []byte(s), nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeV2rayJSON:
		return []byte(s), nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeClash:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SubscriptionControllerGetSubscriptionByClientTypeClientType) UnmarshalText(data []byte) error {
	switch SubscriptionControllerGetSubscriptionByClientTypeClientType(data) {
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeStash:
		*s = SubscriptionControllerGetSubscriptionByClientTypeClientTypeStash
		return nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeSingbox:
		*s = SubscriptionControllerGetSubscriptionByClientTypeClientTypeSingbox
		return nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeMihomo:
		*s = SubscriptionControllerGetSubscriptionByClientTypeClientTypeMihomo
		return nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeJSON:
		*s = SubscriptionControllerGetSubscriptionByClientTypeClientTypeJSON
		return nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeV2rayJSON:
		*s = SubscriptionControllerGetSubscriptionByClientTypeClientTypeV2rayJSON
		return nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeClash:
		*s = SubscriptionControllerGetSubscriptionByClientTypeClientTypeClash
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// SubscriptionControllerGetSubscriptionByClientTypeOK is response for SubscriptionControllerGetSubscriptionByClientType operation.
type SubscriptionControllerGetSubscriptionByClientTypeOK struct{}

type SubscriptionControllerGetSubscriptionInfoByShortUuidBadRequest struct {
	Message    OptString                                                                  `json:"message"`
	StatusCode OptFloat64                                                                 `json:"statusCode"`
	Errors     []SubscriptionControllerGetSubscriptionInfoByShortUuidBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SubscriptionControllerGetSubscriptionInfoByShortUuidBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SubscriptionControllerGetSubscriptionInfoByShortUuidBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SubscriptionControllerGetSubscriptionInfoByShortUuidBadRequest) GetErrors() []SubscriptionControllerGetSubscriptionInfoByShortUuidBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SubscriptionControllerGetSubscriptionInfoByShortUuidBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SubscriptionControllerGetSubscriptionInfoByShortUuidBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SubscriptionControllerGetSubscriptionInfoByShortUuidBadRequest) SetErrors(val []SubscriptionControllerGetSubscriptionInfoByShortUuidBadRequestErrorsItem) {
	s.Errors = val
}

func (*SubscriptionControllerGetSubscriptionInfoByShortUuidBadRequest) subscriptionControllerGetSubscriptionInfoByShortUuidRes() {
}

type SubscriptionControllerGetSubscriptionInfoByShortUuidBadRequestErrorsItem struct{}

type SubscriptionControllerGetSubscriptionInfoByShortUuidInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SubscriptionControllerGetSubscriptionInfoByShortUuidInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SubscriptionControllerGetSubscriptionInfoByShortUuidInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SubscriptionControllerGetSubscriptionInfoByShortUuidInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SubscriptionControllerGetSubscriptionInfoByShortUuidInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SubscriptionControllerGetSubscriptionInfoByShortUuidInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SubscriptionControllerGetSubscriptionInfoByShortUuidInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SubscriptionControllerGetSubscriptionInfoByShortUuidInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SubscriptionControllerGetSubscriptionInfoByShortUuidInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SubscriptionControllerGetSubscriptionInfoByShortUuidInternalServerError) subscriptionControllerGetSubscriptionInfoByShortUuidRes() {
}

// SubscriptionControllerGetSubscriptionOK is response for SubscriptionControllerGetSubscription operation.
type SubscriptionControllerGetSubscriptionOK struct{}

// SubscriptionControllerGetSubscriptionWithTypeOK is response for SubscriptionControllerGetSubscriptionWithType operation.
type SubscriptionControllerGetSubscriptionWithTypeOK struct{}

// Ref: #/components/schemas/SubscriptionResponse
type SubscriptionResponse struct {
	Response SubscriptionResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *SubscriptionResponse) GetResponse() SubscriptionResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *SubscriptionResponse) SetResponse(val SubscriptionResponseResponse) {
	s.Response = val
}

func (*SubscriptionResponse) subscriptionControllerGetSubscriptionInfoByShortUuidRes()       {}
func (*SubscriptionResponse) subscriptionsControllerGetSubscriptionByShortUuidProtectedRes() {}
func (*SubscriptionResponse) subscriptionsControllerGetSubscriptionByUsernameRes()           {}
func (*SubscriptionResponse) subscriptionsControllerGetSubscriptionByUuidRes()               {}

type SubscriptionResponseResponse struct {
	IsFound         bool                                    `json:"isFound"`
	User            SubscriptionResponseResponseUser        `json:"user"`
	Links           []string                                `json:"links"`
	SsConfLinks     SubscriptionResponseResponseSsConfLinks `json:"ssConfLinks"`
	SubscriptionUrl string                                  `json:"subscriptionUrl"`
	Happ            SubscriptionResponseResponseHapp        `json:"happ"`
}

// GetIsFound returns the value of IsFound.
func (s *SubscriptionResponseResponse) GetIsFound() bool {
	return s.IsFound
}

// GetUser returns the value of User.
func (s *SubscriptionResponseResponse) GetUser() SubscriptionResponseResponseUser {
	return s.User
}

// GetLinks returns the value of Links.
func (s *SubscriptionResponseResponse) GetLinks() []string {
	return s.Links
}

// GetSsConfLinks returns the value of SsConfLinks.
func (s *SubscriptionResponseResponse) GetSsConfLinks() SubscriptionResponseResponseSsConfLinks {
	return s.SsConfLinks
}

// GetSubscriptionUrl returns the value of SubscriptionUrl.
func (s *SubscriptionResponseResponse) GetSubscriptionUrl() string {
	return s.SubscriptionUrl
}

// GetHapp returns the value of Happ.
func (s *SubscriptionResponseResponse) GetHapp() SubscriptionResponseResponseHapp {
	return s.Happ
}

// SetIsFound sets the value of IsFound.
func (s *SubscriptionResponseResponse) SetIsFound(val bool) {
	s.IsFound = val
}

// SetUser sets the value of User.
func (s *SubscriptionResponseResponse) SetUser(val SubscriptionResponseResponseUser) {
	s.User = val
}

// SetLinks sets the value of Links.
func (s *SubscriptionResponseResponse) SetLinks(val []string) {
	s.Links = val
}

// SetSsConfLinks sets the value of SsConfLinks.
func (s *SubscriptionResponseResponse) SetSsConfLinks(val SubscriptionResponseResponseSsConfLinks) {
	s.SsConfLinks = val
}

// SetSubscriptionUrl sets the value of SubscriptionUrl.
func (s *SubscriptionResponseResponse) SetSubscriptionUrl(val string) {
	s.SubscriptionUrl = val
}

// SetHapp sets the value of Happ.
func (s *SubscriptionResponseResponse) SetHapp(val SubscriptionResponseResponseHapp) {
	s.Happ = val
}

type SubscriptionResponseResponseHapp struct {
	CryptoLink string `json:"cryptoLink"`
}

// GetCryptoLink returns the value of CryptoLink.
func (s *SubscriptionResponseResponseHapp) GetCryptoLink() string {
	return s.CryptoLink
}

// SetCryptoLink sets the value of CryptoLink.
func (s *SubscriptionResponseResponseHapp) SetCryptoLink(val string) {
	s.CryptoLink = val
}

type SubscriptionResponseResponseSsConfLinks map[string]string

func (s *SubscriptionResponseResponseSsConfLinks) init() SubscriptionResponseResponseSsConfLinks {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

type SubscriptionResponseResponseUser struct {
	ShortUuid                string                                               `json:"shortUuid"`
	DaysLeft                 float64                                              `json:"daysLeft"`
	TrafficUsed              string                                               `json:"trafficUsed"`
	TrafficLimit             string                                               `json:"trafficLimit"`
	LifetimeTrafficUsed      string                                               `json:"lifetimeTrafficUsed"`
	TrafficUsedBytes         string                                               `json:"trafficUsedBytes"`
	TrafficLimitBytes        string                                               `json:"trafficLimitBytes"`
	LifetimeTrafficUsedBytes string                                               `json:"lifetimeTrafficUsedBytes"`
	Username                 string                                               `json:"username"`
	ExpiresAt                time.Time                                            `json:"expiresAt"`
	IsActive                 bool                                                 `json:"isActive"`
	UserStatus               SubscriptionResponseResponseUserUserStatus           `json:"userStatus"`
	TrafficLimitStrategy     SubscriptionResponseResponseUserTrafficLimitStrategy `json:"trafficLimitStrategy"`
}

// GetShortUuid returns the value of ShortUuid.
func (s *SubscriptionResponseResponseUser) GetShortUuid() string {
	return s.ShortUuid
}

// GetDaysLeft returns the value of DaysLeft.
func (s *SubscriptionResponseResponseUser) GetDaysLeft() float64 {
	return s.DaysLeft
}

// GetTrafficUsed returns the value of TrafficUsed.
func (s *SubscriptionResponseResponseUser) GetTrafficUsed() string {
	return s.TrafficUsed
}

// GetTrafficLimit returns the value of TrafficLimit.
func (s *SubscriptionResponseResponseUser) GetTrafficLimit() string {
	return s.TrafficLimit
}

// GetLifetimeTrafficUsed returns the value of LifetimeTrafficUsed.
func (s *SubscriptionResponseResponseUser) GetLifetimeTrafficUsed() string {
	return s.LifetimeTrafficUsed
}

// GetTrafficUsedBytes returns the value of TrafficUsedBytes.
func (s *SubscriptionResponseResponseUser) GetTrafficUsedBytes() string {
	return s.TrafficUsedBytes
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *SubscriptionResponseResponseUser) GetTrafficLimitBytes() string {
	return s.TrafficLimitBytes
}

// GetLifetimeTrafficUsedBytes returns the value of LifetimeTrafficUsedBytes.
func (s *SubscriptionResponseResponseUser) GetLifetimeTrafficUsedBytes() string {
	return s.LifetimeTrafficUsedBytes
}

// GetUsername returns the value of Username.
func (s *SubscriptionResponseResponseUser) GetUsername() string {
	return s.Username
}

// GetExpiresAt returns the value of ExpiresAt.
func (s *SubscriptionResponseResponseUser) GetExpiresAt() time.Time {
	return s.ExpiresAt
}

// GetIsActive returns the value of IsActive.
func (s *SubscriptionResponseResponseUser) GetIsActive() bool {
	return s.IsActive
}

// GetUserStatus returns the value of UserStatus.
func (s *SubscriptionResponseResponseUser) GetUserStatus() SubscriptionResponseResponseUserUserStatus {
	return s.UserStatus
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *SubscriptionResponseResponseUser) GetTrafficLimitStrategy() SubscriptionResponseResponseUserTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// SetShortUuid sets the value of ShortUuid.
func (s *SubscriptionResponseResponseUser) SetShortUuid(val string) {
	s.ShortUuid = val
}

// SetDaysLeft sets the value of DaysLeft.
func (s *SubscriptionResponseResponseUser) SetDaysLeft(val float64) {
	s.DaysLeft = val
}

// SetTrafficUsed sets the value of TrafficUsed.
func (s *SubscriptionResponseResponseUser) SetTrafficUsed(val string) {
	s.TrafficUsed = val
}

// SetTrafficLimit sets the value of TrafficLimit.
func (s *SubscriptionResponseResponseUser) SetTrafficLimit(val string) {
	s.TrafficLimit = val
}

// SetLifetimeTrafficUsed sets the value of LifetimeTrafficUsed.
func (s *SubscriptionResponseResponseUser) SetLifetimeTrafficUsed(val string) {
	s.LifetimeTrafficUsed = val
}

// SetTrafficUsedBytes sets the value of TrafficUsedBytes.
func (s *SubscriptionResponseResponseUser) SetTrafficUsedBytes(val string) {
	s.TrafficUsedBytes = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *SubscriptionResponseResponseUser) SetTrafficLimitBytes(val string) {
	s.TrafficLimitBytes = val
}

// SetLifetimeTrafficUsedBytes sets the value of LifetimeTrafficUsedBytes.
func (s *SubscriptionResponseResponseUser) SetLifetimeTrafficUsedBytes(val string) {
	s.LifetimeTrafficUsedBytes = val
}

// SetUsername sets the value of Username.
func (s *SubscriptionResponseResponseUser) SetUsername(val string) {
	s.Username = val
}

// SetExpiresAt sets the value of ExpiresAt.
func (s *SubscriptionResponseResponseUser) SetExpiresAt(val time.Time) {
	s.ExpiresAt = val
}

// SetIsActive sets the value of IsActive.
func (s *SubscriptionResponseResponseUser) SetIsActive(val bool) {
	s.IsActive = val
}

// SetUserStatus sets the value of UserStatus.
func (s *SubscriptionResponseResponseUser) SetUserStatus(val SubscriptionResponseResponseUserUserStatus) {
	s.UserStatus = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *SubscriptionResponseResponseUser) SetTrafficLimitStrategy(val SubscriptionResponseResponseUserTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

type SubscriptionResponseResponseUserTrafficLimitStrategy string

const (
	SubscriptionResponseResponseUserTrafficLimitStrategyNORESET SubscriptionResponseResponseUserTrafficLimitStrategy = "NO_RESET"
	SubscriptionResponseResponseUserTrafficLimitStrategyDAY     SubscriptionResponseResponseUserTrafficLimitStrategy = "DAY"
	SubscriptionResponseResponseUserTrafficLimitStrategyWEEK    SubscriptionResponseResponseUserTrafficLimitStrategy = "WEEK"
	SubscriptionResponseResponseUserTrafficLimitStrategyMONTH   SubscriptionResponseResponseUserTrafficLimitStrategy = "MONTH"
)

// AllValues returns all SubscriptionResponseResponseUserTrafficLimitStrategy values.
func (SubscriptionResponseResponseUserTrafficLimitStrategy) AllValues() []SubscriptionResponseResponseUserTrafficLimitStrategy {
	return []SubscriptionResponseResponseUserTrafficLimitStrategy{
		SubscriptionResponseResponseUserTrafficLimitStrategyNORESET,
		SubscriptionResponseResponseUserTrafficLimitStrategyDAY,
		SubscriptionResponseResponseUserTrafficLimitStrategyWEEK,
		SubscriptionResponseResponseUserTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SubscriptionResponseResponseUserTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case SubscriptionResponseResponseUserTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case SubscriptionResponseResponseUserTrafficLimitStrategyDAY:
		return []byte(s), nil
	case SubscriptionResponseResponseUserTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case SubscriptionResponseResponseUserTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SubscriptionResponseResponseUserTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch SubscriptionResponseResponseUserTrafficLimitStrategy(data) {
	case SubscriptionResponseResponseUserTrafficLimitStrategyNORESET:
		*s = SubscriptionResponseResponseUserTrafficLimitStrategyNORESET
		return nil
	case SubscriptionResponseResponseUserTrafficLimitStrategyDAY:
		*s = SubscriptionResponseResponseUserTrafficLimitStrategyDAY
		return nil
	case SubscriptionResponseResponseUserTrafficLimitStrategyWEEK:
		*s = SubscriptionResponseResponseUserTrafficLimitStrategyWEEK
		return nil
	case SubscriptionResponseResponseUserTrafficLimitStrategyMONTH:
		*s = SubscriptionResponseResponseUserTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type SubscriptionResponseResponseUserUserStatus string

const (
	SubscriptionResponseResponseUserUserStatusACTIVE   SubscriptionResponseResponseUserUserStatus = "ACTIVE"
	SubscriptionResponseResponseUserUserStatusDISABLED SubscriptionResponseResponseUserUserStatus = "DISABLED"
	SubscriptionResponseResponseUserUserStatusLIMITED  SubscriptionResponseResponseUserUserStatus = "LIMITED"
	SubscriptionResponseResponseUserUserStatusEXPIRED  SubscriptionResponseResponseUserUserStatus = "EXPIRED"
)

// AllValues returns all SubscriptionResponseResponseUserUserStatus values.
func (SubscriptionResponseResponseUserUserStatus) AllValues() []SubscriptionResponseResponseUserUserStatus {
	return []SubscriptionResponseResponseUserUserStatus{
		SubscriptionResponseResponseUserUserStatusACTIVE,
		SubscriptionResponseResponseUserUserStatusDISABLED,
		SubscriptionResponseResponseUserUserStatusLIMITED,
		SubscriptionResponseResponseUserUserStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SubscriptionResponseResponseUserUserStatus) MarshalText() ([]byte, error) {
	switch s {
	case SubscriptionResponseResponseUserUserStatusACTIVE:
		return []byte(s), nil
	case SubscriptionResponseResponseUserUserStatusDISABLED:
		return []byte(s), nil
	case SubscriptionResponseResponseUserUserStatusLIMITED:
		return []byte(s), nil
	case SubscriptionResponseResponseUserUserStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SubscriptionResponseResponseUserUserStatus) UnmarshalText(data []byte) error {
	switch SubscriptionResponseResponseUserUserStatus(data) {
	case SubscriptionResponseResponseUserUserStatusACTIVE:
		*s = SubscriptionResponseResponseUserUserStatusACTIVE
		return nil
	case SubscriptionResponseResponseUserUserStatusDISABLED:
		*s = SubscriptionResponseResponseUserUserStatusDISABLED
		return nil
	case SubscriptionResponseResponseUserUserStatusLIMITED:
		*s = SubscriptionResponseResponseUserUserStatusLIMITED
		return nil
	case SubscriptionResponseResponseUserUserStatusEXPIRED:
		*s = SubscriptionResponseResponseUserUserStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type SubscriptionSettingsControllerGetSettingsBadRequest struct {
	Message    OptString                                                       `json:"message"`
	StatusCode OptFloat64                                                      `json:"statusCode"`
	Errors     []SubscriptionSettingsControllerGetSettingsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SubscriptionSettingsControllerGetSettingsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SubscriptionSettingsControllerGetSettingsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SubscriptionSettingsControllerGetSettingsBadRequest) GetErrors() []SubscriptionSettingsControllerGetSettingsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SubscriptionSettingsControllerGetSettingsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SubscriptionSettingsControllerGetSettingsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SubscriptionSettingsControllerGetSettingsBadRequest) SetErrors(val []SubscriptionSettingsControllerGetSettingsBadRequestErrorsItem) {
	s.Errors = val
}

func (*SubscriptionSettingsControllerGetSettingsBadRequest) subscriptionSettingsControllerGetSettingsRes() {
}

type SubscriptionSettingsControllerGetSettingsBadRequestErrorsItem struct{}

type SubscriptionSettingsControllerGetSettingsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SubscriptionSettingsControllerGetSettingsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SubscriptionSettingsControllerGetSettingsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SubscriptionSettingsControllerGetSettingsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SubscriptionSettingsControllerGetSettingsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SubscriptionSettingsControllerGetSettingsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SubscriptionSettingsControllerGetSettingsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SubscriptionSettingsControllerGetSettingsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SubscriptionSettingsControllerGetSettingsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SubscriptionSettingsControllerGetSettingsInternalServerError) subscriptionSettingsControllerGetSettingsRes() {
}

type SubscriptionSettingsControllerUpdateSettingsBadRequest struct {
	Message    OptString                                                          `json:"message"`
	StatusCode OptFloat64                                                         `json:"statusCode"`
	Errors     []SubscriptionSettingsControllerUpdateSettingsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SubscriptionSettingsControllerUpdateSettingsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SubscriptionSettingsControllerUpdateSettingsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SubscriptionSettingsControllerUpdateSettingsBadRequest) GetErrors() []SubscriptionSettingsControllerUpdateSettingsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SubscriptionSettingsControllerUpdateSettingsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SubscriptionSettingsControllerUpdateSettingsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SubscriptionSettingsControllerUpdateSettingsBadRequest) SetErrors(val []SubscriptionSettingsControllerUpdateSettingsBadRequestErrorsItem) {
	s.Errors = val
}

func (*SubscriptionSettingsControllerUpdateSettingsBadRequest) subscriptionSettingsControllerUpdateSettingsRes() {
}

type SubscriptionSettingsControllerUpdateSettingsBadRequestErrorsItem struct{}

type SubscriptionSettingsControllerUpdateSettingsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SubscriptionSettingsControllerUpdateSettingsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SubscriptionSettingsControllerUpdateSettingsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SubscriptionSettingsControllerUpdateSettingsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SubscriptionSettingsControllerUpdateSettingsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SubscriptionSettingsControllerUpdateSettingsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SubscriptionSettingsControllerUpdateSettingsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SubscriptionSettingsControllerUpdateSettingsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SubscriptionSettingsControllerUpdateSettingsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SubscriptionSettingsControllerUpdateSettingsInternalServerError) subscriptionSettingsControllerUpdateSettingsRes() {
}

// Ref: #/components/schemas/SubscriptionSettingsResponse
type SubscriptionSettingsResponse struct {
	Response SubscriptionSettingsResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *SubscriptionSettingsResponse) GetResponse() SubscriptionSettingsResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *SubscriptionSettingsResponse) SetResponse(val SubscriptionSettingsResponseResponse) {
	s.Response = val
}

func (*SubscriptionSettingsResponse) subscriptionSettingsControllerGetSettingsRes()    {}
func (*SubscriptionSettingsResponse) subscriptionSettingsControllerUpdateSettingsRes() {}

type SubscriptionSettingsResponseResponse struct {
	UUID                          uuid.UUID                                                    `json:"uuid"`
	ProfileTitle                  string                                                       `json:"profileTitle"`
	SupportLink                   string                                                       `json:"supportLink"`
	ProfileUpdateInterval         int                                                          `json:"profileUpdateInterval"`
	IsProfileWebpageUrlEnabled    bool                                                         `json:"isProfileWebpageUrlEnabled"`
	ServeJsonAtBaseSubscription   bool                                                         `json:"serveJsonAtBaseSubscription"`
	AddUsernameToBaseSubscription bool                                                         `json:"addUsernameToBaseSubscription"`
	IsShowCustomRemarks           bool                                                         `json:"isShowCustomRemarks"`
	HappAnnounce                  NilString                                                    `json:"happAnnounce"`
	HappRouting                   NilString                                                    `json:"happRouting"`
	ExpiredUsersRemarks           []string                                                     `json:"expiredUsersRemarks"`
	LimitedUsersRemarks           []string                                                     `json:"limitedUsersRemarks"`
	DisabledUsersRemarks          []string                                                     `json:"disabledUsersRemarks"`
	CustomResponseHeaders         NilSubscriptionSettingsResponseResponseCustomResponseHeaders `json:"customResponseHeaders"`
	RandomizeHosts                bool                                                         `json:"randomizeHosts"`
	ResponseRules                 NilSubscriptionSettingsResponseResponseResponseRules         `json:"responseRules"`
	CreatedAt                     time.Time                                                    `json:"createdAt"`
	UpdatedAt                     time.Time                                                    `json:"updatedAt"`
}

// GetUUID returns the value of UUID.
func (s *SubscriptionSettingsResponseResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetProfileTitle returns the value of ProfileTitle.
func (s *SubscriptionSettingsResponseResponse) GetProfileTitle() string {
	return s.ProfileTitle
}

// GetSupportLink returns the value of SupportLink.
func (s *SubscriptionSettingsResponseResponse) GetSupportLink() string {
	return s.SupportLink
}

// GetProfileUpdateInterval returns the value of ProfileUpdateInterval.
func (s *SubscriptionSettingsResponseResponse) GetProfileUpdateInterval() int {
	return s.ProfileUpdateInterval
}

// GetIsProfileWebpageUrlEnabled returns the value of IsProfileWebpageUrlEnabled.
func (s *SubscriptionSettingsResponseResponse) GetIsProfileWebpageUrlEnabled() bool {
	return s.IsProfileWebpageUrlEnabled
}

// GetServeJsonAtBaseSubscription returns the value of ServeJsonAtBaseSubscription.
func (s *SubscriptionSettingsResponseResponse) GetServeJsonAtBaseSubscription() bool {
	return s.ServeJsonAtBaseSubscription
}

// GetAddUsernameToBaseSubscription returns the value of AddUsernameToBaseSubscription.
func (s *SubscriptionSettingsResponseResponse) GetAddUsernameToBaseSubscription() bool {
	return s.AddUsernameToBaseSubscription
}

// GetIsShowCustomRemarks returns the value of IsShowCustomRemarks.
func (s *SubscriptionSettingsResponseResponse) GetIsShowCustomRemarks() bool {
	return s.IsShowCustomRemarks
}

// GetHappAnnounce returns the value of HappAnnounce.
func (s *SubscriptionSettingsResponseResponse) GetHappAnnounce() NilString {
	return s.HappAnnounce
}

// GetHappRouting returns the value of HappRouting.
func (s *SubscriptionSettingsResponseResponse) GetHappRouting() NilString {
	return s.HappRouting
}

// GetExpiredUsersRemarks returns the value of ExpiredUsersRemarks.
func (s *SubscriptionSettingsResponseResponse) GetExpiredUsersRemarks() []string {
	return s.ExpiredUsersRemarks
}

// GetLimitedUsersRemarks returns the value of LimitedUsersRemarks.
func (s *SubscriptionSettingsResponseResponse) GetLimitedUsersRemarks() []string {
	return s.LimitedUsersRemarks
}

// GetDisabledUsersRemarks returns the value of DisabledUsersRemarks.
func (s *SubscriptionSettingsResponseResponse) GetDisabledUsersRemarks() []string {
	return s.DisabledUsersRemarks
}

// GetCustomResponseHeaders returns the value of CustomResponseHeaders.
func (s *SubscriptionSettingsResponseResponse) GetCustomResponseHeaders() NilSubscriptionSettingsResponseResponseCustomResponseHeaders {
	return s.CustomResponseHeaders
}

// GetRandomizeHosts returns the value of RandomizeHosts.
func (s *SubscriptionSettingsResponseResponse) GetRandomizeHosts() bool {
	return s.RandomizeHosts
}

// GetResponseRules returns the value of ResponseRules.
func (s *SubscriptionSettingsResponseResponse) GetResponseRules() NilSubscriptionSettingsResponseResponseResponseRules {
	return s.ResponseRules
}

// GetCreatedAt returns the value of CreatedAt.
func (s *SubscriptionSettingsResponseResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *SubscriptionSettingsResponseResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetUUID sets the value of UUID.
func (s *SubscriptionSettingsResponseResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetProfileTitle sets the value of ProfileTitle.
func (s *SubscriptionSettingsResponseResponse) SetProfileTitle(val string) {
	s.ProfileTitle = val
}

// SetSupportLink sets the value of SupportLink.
func (s *SubscriptionSettingsResponseResponse) SetSupportLink(val string) {
	s.SupportLink = val
}

// SetProfileUpdateInterval sets the value of ProfileUpdateInterval.
func (s *SubscriptionSettingsResponseResponse) SetProfileUpdateInterval(val int) {
	s.ProfileUpdateInterval = val
}

// SetIsProfileWebpageUrlEnabled sets the value of IsProfileWebpageUrlEnabled.
func (s *SubscriptionSettingsResponseResponse) SetIsProfileWebpageUrlEnabled(val bool) {
	s.IsProfileWebpageUrlEnabled = val
}

// SetServeJsonAtBaseSubscription sets the value of ServeJsonAtBaseSubscription.
func (s *SubscriptionSettingsResponseResponse) SetServeJsonAtBaseSubscription(val bool) {
	s.ServeJsonAtBaseSubscription = val
}

// SetAddUsernameToBaseSubscription sets the value of AddUsernameToBaseSubscription.
func (s *SubscriptionSettingsResponseResponse) SetAddUsernameToBaseSubscription(val bool) {
	s.AddUsernameToBaseSubscription = val
}

// SetIsShowCustomRemarks sets the value of IsShowCustomRemarks.
func (s *SubscriptionSettingsResponseResponse) SetIsShowCustomRemarks(val bool) {
	s.IsShowCustomRemarks = val
}

// SetHappAnnounce sets the value of HappAnnounce.
func (s *SubscriptionSettingsResponseResponse) SetHappAnnounce(val NilString) {
	s.HappAnnounce = val
}

// SetHappRouting sets the value of HappRouting.
func (s *SubscriptionSettingsResponseResponse) SetHappRouting(val NilString) {
	s.HappRouting = val
}

// SetExpiredUsersRemarks sets the value of ExpiredUsersRemarks.
func (s *SubscriptionSettingsResponseResponse) SetExpiredUsersRemarks(val []string) {
	s.ExpiredUsersRemarks = val
}

// SetLimitedUsersRemarks sets the value of LimitedUsersRemarks.
func (s *SubscriptionSettingsResponseResponse) SetLimitedUsersRemarks(val []string) {
	s.LimitedUsersRemarks = val
}

// SetDisabledUsersRemarks sets the value of DisabledUsersRemarks.
func (s *SubscriptionSettingsResponseResponse) SetDisabledUsersRemarks(val []string) {
	s.DisabledUsersRemarks = val
}

// SetCustomResponseHeaders sets the value of CustomResponseHeaders.
func (s *SubscriptionSettingsResponseResponse) SetCustomResponseHeaders(val NilSubscriptionSettingsResponseResponseCustomResponseHeaders) {
	s.CustomResponseHeaders = val
}

// SetRandomizeHosts sets the value of RandomizeHosts.
func (s *SubscriptionSettingsResponseResponse) SetRandomizeHosts(val bool) {
	s.RandomizeHosts = val
}

// SetResponseRules sets the value of ResponseRules.
func (s *SubscriptionSettingsResponseResponse) SetResponseRules(val NilSubscriptionSettingsResponseResponseResponseRules) {
	s.ResponseRules = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *SubscriptionSettingsResponseResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *SubscriptionSettingsResponseResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type SubscriptionSettingsResponseResponseCustomResponseHeaders map[string]string

func (s *SubscriptionSettingsResponseResponseCustomResponseHeaders) init() SubscriptionSettingsResponseResponseCustomResponseHeaders {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

type SubscriptionSettingsResponseResponseResponseRules struct {
	// {"title":"Response Rules Config Version","markdownDescription":"Version of the **response rules**
	// config. Currently supported version is **1**."}.
	Version SubscriptionSettingsResponseResponseResponseRulesVersion `json:"version"`
	// {"title":"Response Rules","markdownDescription":"Array of **response rules**. Rules are evaluated
	// in order and the first rule that matches is applied. If no rule matches, request will be blocked
	// by default.\n\n**Example:**\n```json\n[\n  {\n    \"name\": \"Blank rule\",\n    \"description\":
	// \"Blank rule\",\n    \"operator\": \"AND\",\n    \"enabled\": true,\n    \"conditions\": [],\n
	// \"responseType\": \"BLOCK\",\n    \"responseModifications\": {\n      \"headers\": []\n    }\n
	// }\n]\n```","defaultSnippets":[]}.
	Rules []SubscriptionSettingsResponseResponseResponseRulesRulesItem `json:"rules"`
}

// GetVersion returns the value of Version.
func (s *SubscriptionSettingsResponseResponseResponseRules) GetVersion() SubscriptionSettingsResponseResponseResponseRulesVersion {
	return s.Version
}

// GetRules returns the value of Rules.
func (s *SubscriptionSettingsResponseResponseResponseRules) GetRules() []SubscriptionSettingsResponseResponseResponseRulesRulesItem {
	return s.Rules
}

// SetVersion sets the value of Version.
func (s *SubscriptionSettingsResponseResponseResponseRules) SetVersion(val SubscriptionSettingsResponseResponseResponseRulesVersion) {
	s.Version = val
}

// SetRules sets the value of Rules.
func (s *SubscriptionSettingsResponseResponseResponseRules) SetRules(val []SubscriptionSettingsResponseResponseResponseRulesRulesItem) {
	s.Rules = val
}

// {"defaultSnippets":[{"label":"Examples: Blank rule","markdownDescription":"Simple blank rule with
// no conditions or modifications.\n```json\n{\n  \"name\": \"Blank rule\",\n  \"description\":
// \"Blank rule\",\n  \"operator\": \"AND\",\n  \"enabled\": true,\n  \"conditions\": [],\n
// \"responseType\": \"BLOCK\",\n  \"responseModifications\": {\n    \"headers\": []\n  }\n}\n```",
// "body":{"name":"Blank rule","description":"Blank rule","operator":"AND","enabled":true,
// "conditions":[],"responseType":"BLOCK","responseModifications":{"headers":[]}}},
// {"label":"Examples: Block Legacy Clients","markdownDescription":"Block requests from legacy
// clients\n```json\n{\n  \"name\": \"Block Legacy Clients\",\n  \"description\": \"Block requests
// from legacy clients\",\n  \"enabled\": true,\n  \"operator\": \"OR\",\n  \"conditions\": [\n
// {\n      \"headerName\": \"user-agent\",\n      \"operator\": \"CONTAINS\",\n      \"value\":
// \"Hiddify\",\n      \"caseSensitive\": true\n    },\n    {\n      \"headerName\": \"user-agent\",
// \n      \"operator\": \"CONTAINS\",\n      \"value\": \"FoxRay\",\n      \"caseSensitive\": true\n
//
//	}\n  ],\n  \"responseType\": \"BLOCK\"\n}\n```","body":{"name":"Block Legacy Clients",
//
// "description":"Block requests from legacy clients","enabled":true,"operator":"OR",
// "conditions":[{"headerName":"user-agent","operator":"CONTAINS","value":"Hiddify",
// "caseSensitive":true},{"headerName":"user-agent","operator":"CONTAINS","value":"FoxRay",
// "caseSensitive":true}],"responseType":"BLOCK"}}],"title":"Response Rule",
// "markdownDescription":"Response rule configuration.\n\n**Fields:**\n- **name**: Name of the
// response rule.\n- **description**: Description of the response rule. Optional.\n- **enabled**:
// Control whether the response rule is enabled or disabled. \n\n - `true` the rule will be applied.
// \n\n - `false` the rule will be always ignored.\n- **operator**: Operator to use for combining
// conditions in the rule.\n- **conditions**: Array of conditions to check against the request
// headers. Conditions are applied with **operator**. If conditions are empty, the rule will be
// matched.\n- **responseType**: Type of the response. Determines the type of **response** to be
// returned when the rule is matched.\n- **responseModifications**: Response modifications to be
// applied when the rule is matched. Optional.\n\n**Example:**\n```json\n{\n  \"name\": \"Block
// Legacy Clients\",\n  \"description\": \"Block requests from legacy clients\",\n  \"enabled\": true,
// \n  \"operator\": \"OR\",\n  \"conditions\": [\n    {\n      \"headerName\": \"user-agent\",\n
//
//	\"operator\": \"CONTAINS\",\n      \"value\": \"Hiddify\",\n      \"caseSensitive\": true\n    },
//
// \n    {\n      \"headerName\": \"user-agent\",\n      \"operator\": \"CONTAINS\",\n
// \"value\": \"FoxRay\",\n      \"caseSensitive\": true\n    }\n  ],\n  \"responseType\":
// \"BLOCK\"\n}\n```"}.
type SubscriptionSettingsResponseResponseResponseRulesRulesItem struct {
	// {"markdownDescription":"Name of the response rule."}.
	Name string `json:"name"`
	// {"markdownDescription":"Description of the response rule. Optional."}.
	Description OptString `json:"description"`
	// {"markdownDescription":"Control whether the response rule is enabled or disabled. \n\n - `true`
	// the rule will be applied. \n\n - `false` the rule will be always ignored."}.
	Enabled bool `json:"enabled"`
	// {"markdownDescription":"Operator to use for combining conditions in the rule."}.
	Operator SubscriptionSettingsResponseResponseResponseRulesRulesItemOperator `json:"operator"`
	// {"markdownDescription":"Array of conditions to check against the request headers. Conditions are
	// applied with **operator**. If conditions are empty, the rule will be matched."}.
	Conditions []SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItem `json:"conditions"`
	// {"errorMessage":"Invalid response type. Please select a valid response type.",
	// "markdownDescription":"Type of the response. Determines the type of **response** to be returned
	// when the rule is matched.","markdownEnumDescriptions":["Return **subscription** in XRAY-JSON
	// format. (Using `Xray Json` template)","Return **subscription** in BASE64 encoded string.
	// Compatible with most client application with Xray core.","Return **subscription** in Mihomo format.
	//  (Using `Mihomo` template)","Return **subscription** in Stash format. (Using `Stash` template)",
	// "Return **subscription** in Clash format. (Using `Clash` template) Useful for client application
	// that use Legacy Clash core.","Return **subscription** in Singbox format. (Using `Singbox`
	// template) Format which is used by Singbox client application.","Return **subscription** as browser
	// format. The same as on `/info` route.","**Drop** request and return `403` status code.","**Drop**
	// request and return `404` status code.","**Drop** request and return `451` status code.","**Drop**
	// the socket connection."]}.
	ResponseType SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType `json:"responseType"`
	// {"examples":[{"headers":[{"key":"X-Custom-Header","value":"CustomValue"}]}],
	// "markdownDescription":"Response modifications to be applied when the rule is matched. Optional."}.
	ResponseModifications OptSubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications `json:"responseModifications"`
}

// GetName returns the value of Name.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItem) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItem) GetDescription() OptString {
	return s.Description
}

// GetEnabled returns the value of Enabled.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItem) GetEnabled() bool {
	return s.Enabled
}

// GetOperator returns the value of Operator.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItem) GetOperator() SubscriptionSettingsResponseResponseResponseRulesRulesItemOperator {
	return s.Operator
}

// GetConditions returns the value of Conditions.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItem) GetConditions() []SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItem {
	return s.Conditions
}

// GetResponseType returns the value of ResponseType.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItem) GetResponseType() SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType {
	return s.ResponseType
}

// GetResponseModifications returns the value of ResponseModifications.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItem) GetResponseModifications() OptSubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications {
	return s.ResponseModifications
}

// SetName sets the value of Name.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItem) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItem) SetDescription(val OptString) {
	s.Description = val
}

// SetEnabled sets the value of Enabled.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItem) SetEnabled(val bool) {
	s.Enabled = val
}

// SetOperator sets the value of Operator.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItem) SetOperator(val SubscriptionSettingsResponseResponseResponseRulesRulesItemOperator) {
	s.Operator = val
}

// SetConditions sets the value of Conditions.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItem) SetConditions(val []SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItem) {
	s.Conditions = val
}

// SetResponseType sets the value of ResponseType.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItem) SetResponseType(val SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType) {
	s.ResponseType = val
}

// SetResponseModifications sets the value of ResponseModifications.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItem) SetResponseModifications(val OptSubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications) {
	s.ResponseModifications = val
}

// {"markdownDescription":"Condition to check against the **headerName**.",
// "defaultSnippets":[{"label":"Examples: Check if header contains \"text/html\"",
// "markdownDescription":"Condition to check if **headerName** contains \"text/html\"",
// "body":{"headerName":"accept","operator":"CONTAINS","value":"text/html","caseSensitive":true}}]}.
type SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItem struct {
	// {"markdownDescription":"**Name** of the HTTP header to check. Must comply with RFC 7230."}.
	HeaderName string `json:"headerName"`
	// {"errorMessage":"Invalid operator. Please select a valid operator.",
	// "markdownDescription":"Operator to use for comparing the `headerName` with `value`.",
	// "markdownEnumDescriptions":["Performs an exact, comparison between the header value and specified
	// string. `string === value`","Ensures the header value does not exactly match the specified string.
	// `string !== value`","Checks if the header value contains the specified string as a substring.
	// `string.includes()`","Verifies the header value does not contain the specified string as a
	// substring. `!string.includes()`","Validates that the header value begins with the specified string.
	//  `string.startsWith()`","Validates that the header value does not begin with the specified string.
	// `!string.startsWith()`","Confirms the header value ends with the specified string. `string.
	// endsWith()`","Confirms the header value does not end with the specified string. `!string.
	// endsWith()`","Evaluates if the header value matches the specified regular expression pattern.
	// `regex.test()`","Evaluates if the header value does not match the specified regular expression
	// pattern. `!regex.test()`"]}.
	Operator SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator `json:"operator"`
	// {"markdownDescription":"**Value** to check against the **headerName**."}.
	Value string `json:"value"`
	// {"markdownDescription":"Whether the value is **case sensitive**. \n\n - `true`: the value will be
	// compared as is. \n\n - `false`: the value will be lowercased **before** comparison."}.
	CaseSensitive bool `json:"caseSensitive"`
}

// GetHeaderName returns the value of HeaderName.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItem) GetHeaderName() string {
	return s.HeaderName
}

// GetOperator returns the value of Operator.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItem) GetOperator() SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator {
	return s.Operator
}

// GetValue returns the value of Value.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItem) GetValue() string {
	return s.Value
}

// GetCaseSensitive returns the value of CaseSensitive.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItem) GetCaseSensitive() bool {
	return s.CaseSensitive
}

// SetHeaderName sets the value of HeaderName.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItem) SetHeaderName(val string) {
	s.HeaderName = val
}

// SetOperator sets the value of Operator.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItem) SetOperator(val SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator) {
	s.Operator = val
}

// SetValue sets the value of Value.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItem) SetValue(val string) {
	s.Value = val
}

// SetCaseSensitive sets the value of CaseSensitive.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItem) SetCaseSensitive(val bool) {
	s.CaseSensitive = val
}

// {"errorMessage":"Invalid operator. Please select a valid operator.",
// "markdownDescription":"Operator to use for comparing the `headerName` with `value`.",
// "markdownEnumDescriptions":["Performs an exact, comparison between the header value and specified
// string. `string === value`","Ensures the header value does not exactly match the specified string.
// `string !== value`","Checks if the header value contains the specified string as a substring.
// `string.includes()`","Verifies the header value does not contain the specified string as a
// substring. `!string.includes()`","Validates that the header value begins with the specified string.
//
//	`string.startsWith()`","Validates that the header value does not begin with the specified string.
//
// `!string.startsWith()`","Confirms the header value ends with the specified string. `string.
// endsWith()`","Confirms the header value does not end with the specified string. `!string.
// endsWith()`","Evaluates if the header value matches the specified regular expression pattern.
// `regex.test()`","Evaluates if the header value does not match the specified regular expression
// pattern. `!regex.test()`"]}.
type SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator string

const (
	SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorEQUALS        SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator = "EQUALS"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTEQUALS     SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator = "NOT_EQUALS"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorCONTAINS      SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator = "CONTAINS"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTCONTAINS   SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator = "NOT_CONTAINS"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorSTARTSWITH    SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator = "STARTS_WITH"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTSTARTSWITH SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator = "NOT_STARTS_WITH"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorENDSWITH      SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator = "ENDS_WITH"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTENDSWITH   SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator = "NOT_ENDS_WITH"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorREGEX         SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator = "REGEX"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTREGEX      SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator = "NOT_REGEX"
)

// AllValues returns all SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator values.
func (SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator) AllValues() []SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator {
	return []SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator{
		SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorEQUALS,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTEQUALS,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorCONTAINS,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTCONTAINS,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorSTARTSWITH,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTSTARTSWITH,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorENDSWITH,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTENDSWITH,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorREGEX,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTREGEX,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator) MarshalText() ([]byte, error) {
	switch s {
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorEQUALS:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTEQUALS:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorCONTAINS:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTCONTAINS:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorSTARTSWITH:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTSTARTSWITH:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorENDSWITH:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTENDSWITH:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorREGEX:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTREGEX:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator) UnmarshalText(data []byte) error {
	switch SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperator(data) {
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorEQUALS:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorEQUALS
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTEQUALS:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTEQUALS
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorCONTAINS:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorCONTAINS
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTCONTAINS:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTCONTAINS
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorSTARTSWITH:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorSTARTSWITH
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTSTARTSWITH:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTSTARTSWITH
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorENDSWITH:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorENDSWITH
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTENDSWITH:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTENDSWITH
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorREGEX:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorREGEX
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTREGEX:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemConditionsItemOperatorNOTREGEX
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// {"markdownDescription":"Operator to use for combining conditions in the rule."}.
type SubscriptionSettingsResponseResponseResponseRulesRulesItemOperator string

const (
	SubscriptionSettingsResponseResponseResponseRulesRulesItemOperatorAND SubscriptionSettingsResponseResponseResponseRulesRulesItemOperator = "AND"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemOperatorOR  SubscriptionSettingsResponseResponseResponseRulesRulesItemOperator = "OR"
)

// AllValues returns all SubscriptionSettingsResponseResponseResponseRulesRulesItemOperator values.
func (SubscriptionSettingsResponseResponseResponseRulesRulesItemOperator) AllValues() []SubscriptionSettingsResponseResponseResponseRulesRulesItemOperator {
	return []SubscriptionSettingsResponseResponseResponseRulesRulesItemOperator{
		SubscriptionSettingsResponseResponseResponseRulesRulesItemOperatorAND,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemOperatorOR,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SubscriptionSettingsResponseResponseResponseRulesRulesItemOperator) MarshalText() ([]byte, error) {
	switch s {
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemOperatorAND:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemOperatorOR:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemOperator) UnmarshalText(data []byte) error {
	switch SubscriptionSettingsResponseResponseResponseRulesRulesItemOperator(data) {
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemOperatorAND:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemOperatorAND
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemOperatorOR:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemOperatorOR
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// {"examples":[{"headers":[{"key":"X-Custom-Header","value":"CustomValue"}]}],
// "markdownDescription":"Response modifications to be applied when the rule is matched. Optional."}.
type SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications struct {
	// {"defaultSnippets":[{"label":"Examples: Add custom header","markdownDescription":"Add a custom
	// header to the response","body":[{"key":"X-Custom-Header","value":"CustomValue"}]}],
	// "markdownDescription":"Array of headers to be added when the rule is matched."}.
	Headers []SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModificationsHeadersItem `json:"headers"`
	// {"markdownDescription":"Override the subscription template with the given name. If not provided,
	// the default subscription template will be used. If the template name is not found, the default
	// subscription template for this type will be used. **This modification have higher priority than
	// settings from External Squads.**"}.
	SubscriptionTemplate OptString `json:"subscriptionTemplate"`
}

// GetHeaders returns the value of Headers.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications) GetHeaders() []SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModificationsHeadersItem {
	return s.Headers
}

// GetSubscriptionTemplate returns the value of SubscriptionTemplate.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications) GetSubscriptionTemplate() OptString {
	return s.SubscriptionTemplate
}

// SetHeaders sets the value of Headers.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications) SetHeaders(val []SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModificationsHeadersItem) {
	s.Headers = val
}

// SetSubscriptionTemplate sets the value of SubscriptionTemplate.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModifications) SetSubscriptionTemplate(val OptString) {
	s.SubscriptionTemplate = val
}

// {"markdownDescription":"**Key** and **value** of the response header will be added to the response.
// "}.
type SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModificationsHeadersItem struct {
	// {"markdownDescription":"Key of the response header. Must comply with RFC 7230."}.
	Key string `json:"key"`
	// {"markdownDescription":"Value of the response header. "}.
	Value string `json:"value"`
}

// GetKey returns the value of Key.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModificationsHeadersItem) GetKey() string {
	return s.Key
}

// GetValue returns the value of Value.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModificationsHeadersItem) GetValue() string {
	return s.Value
}

// SetKey sets the value of Key.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModificationsHeadersItem) SetKey(val string) {
	s.Key = val
}

// SetValue sets the value of Value.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseModificationsHeadersItem) SetValue(val string) {
	s.Value = val
}

// {"errorMessage":"Invalid response type. Please select a valid response type.",
// "markdownDescription":"Type of the response. Determines the type of **response** to be returned
// when the rule is matched.","markdownEnumDescriptions":["Return **subscription** in XRAY-JSON
// format. (Using `Xray Json` template)","Return **subscription** in BASE64 encoded string.
// Compatible with most client application with Xray core.","Return **subscription** in Mihomo format.
//
//	(Using `Mihomo` template)","Return **subscription** in Stash format. (Using `Stash` template)",
//
// "Return **subscription** in Clash format. (Using `Clash` template) Useful for client application
// that use Legacy Clash core.","Return **subscription** in Singbox format. (Using `Singbox`
// template) Format which is used by Singbox client application.","Return **subscription** as browser
// format. The same as on `/info` route.","**Drop** request and return `403` status code.","**Drop**
// request and return `404` status code.","**Drop** request and return `451` status code.","**Drop**
// the socket connection."]}.
type SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType string

const (
	SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeXRAYJSON      SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType = "XRAY_JSON"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeXRAYBASE64    SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType = "XRAY_BASE64"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeMIHOMO        SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType = "MIHOMO"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSTASH         SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType = "STASH"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeCLASH         SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType = "CLASH"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSINGBOX       SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType = "SINGBOX"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeBROWSER       SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType = "BROWSER"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeBLOCK         SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType = "BLOCK"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSTATUSCODE404 SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType = "STATUS_CODE_404"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSTATUSCODE451 SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType = "STATUS_CODE_451"
	SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSOCKETDROP    SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType = "SOCKET_DROP"
)

// AllValues returns all SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType values.
func (SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType) AllValues() []SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType {
	return []SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType{
		SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeXRAYJSON,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeXRAYBASE64,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeMIHOMO,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSTASH,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeCLASH,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSINGBOX,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeBROWSER,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeBLOCK,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSTATUSCODE404,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSTATUSCODE451,
		SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSOCKETDROP,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType) MarshalText() ([]byte, error) {
	switch s {
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeXRAYJSON:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeXRAYBASE64:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeMIHOMO:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSTASH:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeCLASH:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSINGBOX:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeBROWSER:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeBLOCK:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSTATUSCODE404:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSTATUSCODE451:
		return []byte(s), nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSOCKETDROP:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType) UnmarshalText(data []byte) error {
	switch SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseType(data) {
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeXRAYJSON:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeXRAYJSON
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeXRAYBASE64:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeXRAYBASE64
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeMIHOMO:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeMIHOMO
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSTASH:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSTASH
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeCLASH:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeCLASH
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSINGBOX:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSINGBOX
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeBROWSER:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeBROWSER
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeBLOCK:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeBLOCK
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSTATUSCODE404:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSTATUSCODE404
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSTATUSCODE451:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSTATUSCODE451
		return nil
	case SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSOCKETDROP:
		*s = SubscriptionSettingsResponseResponseResponseRulesRulesItemResponseTypeSOCKETDROP
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// {"title":"Response Rules Config Version","markdownDescription":"Version of the **response rules**
// config. Currently supported version is **1**."}.
type SubscriptionSettingsResponseResponseResponseRulesVersion string

const (
	SubscriptionSettingsResponseResponseResponseRulesVersion1 SubscriptionSettingsResponseResponseResponseRulesVersion = "1"
)

// AllValues returns all SubscriptionSettingsResponseResponseResponseRulesVersion values.
func (SubscriptionSettingsResponseResponseResponseRulesVersion) AllValues() []SubscriptionSettingsResponseResponseResponseRulesVersion {
	return []SubscriptionSettingsResponseResponseResponseRulesVersion{
		SubscriptionSettingsResponseResponseResponseRulesVersion1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SubscriptionSettingsResponseResponseResponseRulesVersion) MarshalText() ([]byte, error) {
	switch s {
	case SubscriptionSettingsResponseResponseResponseRulesVersion1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SubscriptionSettingsResponseResponseResponseRulesVersion) UnmarshalText(data []byte) error {
	switch SubscriptionSettingsResponseResponseResponseRulesVersion(data) {
	case SubscriptionSettingsResponseResponseResponseRulesVersion1:
		*s = SubscriptionSettingsResponseResponseResponseRulesVersion1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type SubscriptionTemplateControllerCreateTemplateBadRequest struct {
	Message    OptString                                                          `json:"message"`
	StatusCode OptFloat64                                                         `json:"statusCode"`
	Errors     []SubscriptionTemplateControllerCreateTemplateBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SubscriptionTemplateControllerCreateTemplateBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SubscriptionTemplateControllerCreateTemplateBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SubscriptionTemplateControllerCreateTemplateBadRequest) GetErrors() []SubscriptionTemplateControllerCreateTemplateBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SubscriptionTemplateControllerCreateTemplateBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SubscriptionTemplateControllerCreateTemplateBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SubscriptionTemplateControllerCreateTemplateBadRequest) SetErrors(val []SubscriptionTemplateControllerCreateTemplateBadRequestErrorsItem) {
	s.Errors = val
}

func (*SubscriptionTemplateControllerCreateTemplateBadRequest) subscriptionTemplateControllerCreateTemplateRes() {
}

type SubscriptionTemplateControllerCreateTemplateBadRequestErrorsItem struct{}

type SubscriptionTemplateControllerCreateTemplateInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SubscriptionTemplateControllerCreateTemplateInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SubscriptionTemplateControllerCreateTemplateInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SubscriptionTemplateControllerCreateTemplateInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SubscriptionTemplateControllerCreateTemplateInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SubscriptionTemplateControllerCreateTemplateInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SubscriptionTemplateControllerCreateTemplateInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SubscriptionTemplateControllerCreateTemplateInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SubscriptionTemplateControllerCreateTemplateInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SubscriptionTemplateControllerCreateTemplateInternalServerError) subscriptionTemplateControllerCreateTemplateRes() {
}

type SubscriptionTemplateControllerDeleteTemplateBadRequest struct {
	Message    OptString                                                          `json:"message"`
	StatusCode OptFloat64                                                         `json:"statusCode"`
	Errors     []SubscriptionTemplateControllerDeleteTemplateBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SubscriptionTemplateControllerDeleteTemplateBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SubscriptionTemplateControllerDeleteTemplateBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SubscriptionTemplateControllerDeleteTemplateBadRequest) GetErrors() []SubscriptionTemplateControllerDeleteTemplateBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SubscriptionTemplateControllerDeleteTemplateBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SubscriptionTemplateControllerDeleteTemplateBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SubscriptionTemplateControllerDeleteTemplateBadRequest) SetErrors(val []SubscriptionTemplateControllerDeleteTemplateBadRequestErrorsItem) {
	s.Errors = val
}

func (*SubscriptionTemplateControllerDeleteTemplateBadRequest) subscriptionTemplateControllerDeleteTemplateRes() {
}

type SubscriptionTemplateControllerDeleteTemplateBadRequestErrorsItem struct{}

type SubscriptionTemplateControllerDeleteTemplateInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SubscriptionTemplateControllerDeleteTemplateInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SubscriptionTemplateControllerDeleteTemplateInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SubscriptionTemplateControllerDeleteTemplateInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SubscriptionTemplateControllerDeleteTemplateInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SubscriptionTemplateControllerDeleteTemplateInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SubscriptionTemplateControllerDeleteTemplateInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SubscriptionTemplateControllerDeleteTemplateInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SubscriptionTemplateControllerDeleteTemplateInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SubscriptionTemplateControllerDeleteTemplateInternalServerError) subscriptionTemplateControllerDeleteTemplateRes() {
}

type SubscriptionTemplateControllerGetAllTemplatesBadRequest struct {
	Message    OptString                                                           `json:"message"`
	StatusCode OptFloat64                                                          `json:"statusCode"`
	Errors     []SubscriptionTemplateControllerGetAllTemplatesBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SubscriptionTemplateControllerGetAllTemplatesBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SubscriptionTemplateControllerGetAllTemplatesBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SubscriptionTemplateControllerGetAllTemplatesBadRequest) GetErrors() []SubscriptionTemplateControllerGetAllTemplatesBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SubscriptionTemplateControllerGetAllTemplatesBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SubscriptionTemplateControllerGetAllTemplatesBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SubscriptionTemplateControllerGetAllTemplatesBadRequest) SetErrors(val []SubscriptionTemplateControllerGetAllTemplatesBadRequestErrorsItem) {
	s.Errors = val
}

func (*SubscriptionTemplateControllerGetAllTemplatesBadRequest) subscriptionTemplateControllerGetAllTemplatesRes() {
}

type SubscriptionTemplateControllerGetAllTemplatesBadRequestErrorsItem struct{}

type SubscriptionTemplateControllerGetAllTemplatesInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SubscriptionTemplateControllerGetAllTemplatesInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SubscriptionTemplateControllerGetAllTemplatesInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SubscriptionTemplateControllerGetAllTemplatesInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SubscriptionTemplateControllerGetAllTemplatesInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SubscriptionTemplateControllerGetAllTemplatesInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SubscriptionTemplateControllerGetAllTemplatesInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SubscriptionTemplateControllerGetAllTemplatesInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SubscriptionTemplateControllerGetAllTemplatesInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SubscriptionTemplateControllerGetAllTemplatesInternalServerError) subscriptionTemplateControllerGetAllTemplatesRes() {
}

type SubscriptionTemplateControllerGetTemplateByUuidBadRequest struct {
	Message    OptString                                                             `json:"message"`
	StatusCode OptFloat64                                                            `json:"statusCode"`
	Errors     []SubscriptionTemplateControllerGetTemplateByUuidBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SubscriptionTemplateControllerGetTemplateByUuidBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SubscriptionTemplateControllerGetTemplateByUuidBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SubscriptionTemplateControllerGetTemplateByUuidBadRequest) GetErrors() []SubscriptionTemplateControllerGetTemplateByUuidBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SubscriptionTemplateControllerGetTemplateByUuidBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SubscriptionTemplateControllerGetTemplateByUuidBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SubscriptionTemplateControllerGetTemplateByUuidBadRequest) SetErrors(val []SubscriptionTemplateControllerGetTemplateByUuidBadRequestErrorsItem) {
	s.Errors = val
}

func (*SubscriptionTemplateControllerGetTemplateByUuidBadRequest) subscriptionTemplateControllerGetTemplateByUuidRes() {
}

type SubscriptionTemplateControllerGetTemplateByUuidBadRequestErrorsItem struct{}

type SubscriptionTemplateControllerGetTemplateByUuidInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SubscriptionTemplateControllerGetTemplateByUuidInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SubscriptionTemplateControllerGetTemplateByUuidInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SubscriptionTemplateControllerGetTemplateByUuidInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SubscriptionTemplateControllerGetTemplateByUuidInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SubscriptionTemplateControllerGetTemplateByUuidInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SubscriptionTemplateControllerGetTemplateByUuidInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SubscriptionTemplateControllerGetTemplateByUuidInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SubscriptionTemplateControllerGetTemplateByUuidInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SubscriptionTemplateControllerGetTemplateByUuidInternalServerError) subscriptionTemplateControllerGetTemplateByUuidRes() {
}

type SubscriptionTemplateControllerUpdateTemplateBadRequest struct {
	Message    OptString                                                          `json:"message"`
	StatusCode OptFloat64                                                         `json:"statusCode"`
	Errors     []SubscriptionTemplateControllerUpdateTemplateBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SubscriptionTemplateControllerUpdateTemplateBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SubscriptionTemplateControllerUpdateTemplateBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SubscriptionTemplateControllerUpdateTemplateBadRequest) GetErrors() []SubscriptionTemplateControllerUpdateTemplateBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SubscriptionTemplateControllerUpdateTemplateBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SubscriptionTemplateControllerUpdateTemplateBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SubscriptionTemplateControllerUpdateTemplateBadRequest) SetErrors(val []SubscriptionTemplateControllerUpdateTemplateBadRequestErrorsItem) {
	s.Errors = val
}

func (*SubscriptionTemplateControllerUpdateTemplateBadRequest) subscriptionTemplateControllerUpdateTemplateRes() {
}

type SubscriptionTemplateControllerUpdateTemplateBadRequestErrorsItem struct{}

type SubscriptionTemplateControllerUpdateTemplateInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SubscriptionTemplateControllerUpdateTemplateInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SubscriptionTemplateControllerUpdateTemplateInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SubscriptionTemplateControllerUpdateTemplateInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SubscriptionTemplateControllerUpdateTemplateInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SubscriptionTemplateControllerUpdateTemplateInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SubscriptionTemplateControllerUpdateTemplateInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SubscriptionTemplateControllerUpdateTemplateInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SubscriptionTemplateControllerUpdateTemplateInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SubscriptionTemplateControllerUpdateTemplateInternalServerError) subscriptionTemplateControllerUpdateTemplateRes() {
}

type SubscriptionsControllerGetAllSubscriptionsBadRequest struct {
	Message    OptString                                                        `json:"message"`
	StatusCode OptFloat64                                                       `json:"statusCode"`
	Errors     []SubscriptionsControllerGetAllSubscriptionsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SubscriptionsControllerGetAllSubscriptionsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SubscriptionsControllerGetAllSubscriptionsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SubscriptionsControllerGetAllSubscriptionsBadRequest) GetErrors() []SubscriptionsControllerGetAllSubscriptionsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SubscriptionsControllerGetAllSubscriptionsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SubscriptionsControllerGetAllSubscriptionsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SubscriptionsControllerGetAllSubscriptionsBadRequest) SetErrors(val []SubscriptionsControllerGetAllSubscriptionsBadRequestErrorsItem) {
	s.Errors = val
}

func (*SubscriptionsControllerGetAllSubscriptionsBadRequest) subscriptionsControllerGetAllSubscriptionsRes() {
}

type SubscriptionsControllerGetAllSubscriptionsBadRequestErrorsItem struct{}

type SubscriptionsControllerGetAllSubscriptionsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SubscriptionsControllerGetAllSubscriptionsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SubscriptionsControllerGetAllSubscriptionsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SubscriptionsControllerGetAllSubscriptionsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SubscriptionsControllerGetAllSubscriptionsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SubscriptionsControllerGetAllSubscriptionsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SubscriptionsControllerGetAllSubscriptionsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SubscriptionsControllerGetAllSubscriptionsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SubscriptionsControllerGetAllSubscriptionsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SubscriptionsControllerGetAllSubscriptionsInternalServerError) subscriptionsControllerGetAllSubscriptionsRes() {
}

type SubscriptionsControllerGetRawSubscriptionByShortUuidBadRequest struct {
	Message    OptString                                                                  `json:"message"`
	StatusCode OptFloat64                                                                 `json:"statusCode"`
	Errors     []SubscriptionsControllerGetRawSubscriptionByShortUuidBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SubscriptionsControllerGetRawSubscriptionByShortUuidBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SubscriptionsControllerGetRawSubscriptionByShortUuidBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SubscriptionsControllerGetRawSubscriptionByShortUuidBadRequest) GetErrors() []SubscriptionsControllerGetRawSubscriptionByShortUuidBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SubscriptionsControllerGetRawSubscriptionByShortUuidBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SubscriptionsControllerGetRawSubscriptionByShortUuidBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SubscriptionsControllerGetRawSubscriptionByShortUuidBadRequest) SetErrors(val []SubscriptionsControllerGetRawSubscriptionByShortUuidBadRequestErrorsItem) {
	s.Errors = val
}

func (*SubscriptionsControllerGetRawSubscriptionByShortUuidBadRequest) subscriptionsControllerGetRawSubscriptionByShortUuidRes() {
}

type SubscriptionsControllerGetRawSubscriptionByShortUuidBadRequestErrorsItem struct{}

type SubscriptionsControllerGetRawSubscriptionByShortUuidInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SubscriptionsControllerGetRawSubscriptionByShortUuidInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SubscriptionsControllerGetRawSubscriptionByShortUuidInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SubscriptionsControllerGetRawSubscriptionByShortUuidInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SubscriptionsControllerGetRawSubscriptionByShortUuidInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SubscriptionsControllerGetRawSubscriptionByShortUuidInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SubscriptionsControllerGetRawSubscriptionByShortUuidInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SubscriptionsControllerGetRawSubscriptionByShortUuidInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SubscriptionsControllerGetRawSubscriptionByShortUuidInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SubscriptionsControllerGetRawSubscriptionByShortUuidInternalServerError) subscriptionsControllerGetRawSubscriptionByShortUuidRes() {
}

type SubscriptionsControllerGetSubscriptionByShortUuidProtectedBadRequest struct {
	Message    OptString                                                                        `json:"message"`
	StatusCode OptFloat64                                                                       `json:"statusCode"`
	Errors     []SubscriptionsControllerGetSubscriptionByShortUuidProtectedBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedBadRequest) GetErrors() []SubscriptionsControllerGetSubscriptionByShortUuidProtectedBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedBadRequest) SetErrors(val []SubscriptionsControllerGetSubscriptionByShortUuidProtectedBadRequestErrorsItem) {
	s.Errors = val
}

func (*SubscriptionsControllerGetSubscriptionByShortUuidProtectedBadRequest) subscriptionsControllerGetSubscriptionByShortUuidProtectedRes() {
}

type SubscriptionsControllerGetSubscriptionByShortUuidProtectedBadRequestErrorsItem struct{}

type SubscriptionsControllerGetSubscriptionByShortUuidProtectedInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SubscriptionsControllerGetSubscriptionByShortUuidProtectedInternalServerError) subscriptionsControllerGetSubscriptionByShortUuidProtectedRes() {
}

type SubscriptionsControllerGetSubscriptionByShortUuidProtectedNotFound struct {
	Timestamp OptDateTime `json:"timestamp"`
	Path      OptString   `json:"path"`
	Message   OptString   `json:"message"`
	ErrorCode OptString   `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedNotFound) GetTimestamp() OptDateTime {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedNotFound) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedNotFound) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedNotFound) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedNotFound) SetTimestamp(val OptDateTime) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedNotFound) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedNotFound) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SubscriptionsControllerGetSubscriptionByShortUuidProtectedNotFound) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SubscriptionsControllerGetSubscriptionByShortUuidProtectedNotFound) subscriptionsControllerGetSubscriptionByShortUuidProtectedRes() {
}

type SubscriptionsControllerGetSubscriptionByUsernameBadRequest struct {
	Message    OptString                                                              `json:"message"`
	StatusCode OptFloat64                                                             `json:"statusCode"`
	Errors     []SubscriptionsControllerGetSubscriptionByUsernameBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByUsernameBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SubscriptionsControllerGetSubscriptionByUsernameBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SubscriptionsControllerGetSubscriptionByUsernameBadRequest) GetErrors() []SubscriptionsControllerGetSubscriptionByUsernameBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByUsernameBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SubscriptionsControllerGetSubscriptionByUsernameBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SubscriptionsControllerGetSubscriptionByUsernameBadRequest) SetErrors(val []SubscriptionsControllerGetSubscriptionByUsernameBadRequestErrorsItem) {
	s.Errors = val
}

func (*SubscriptionsControllerGetSubscriptionByUsernameBadRequest) subscriptionsControllerGetSubscriptionByUsernameRes() {
}

type SubscriptionsControllerGetSubscriptionByUsernameBadRequestErrorsItem struct{}

type SubscriptionsControllerGetSubscriptionByUsernameInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SubscriptionsControllerGetSubscriptionByUsernameInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SubscriptionsControllerGetSubscriptionByUsernameInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByUsernameInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SubscriptionsControllerGetSubscriptionByUsernameInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SubscriptionsControllerGetSubscriptionByUsernameInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SubscriptionsControllerGetSubscriptionByUsernameInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByUsernameInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SubscriptionsControllerGetSubscriptionByUsernameInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SubscriptionsControllerGetSubscriptionByUsernameInternalServerError) subscriptionsControllerGetSubscriptionByUsernameRes() {
}

type SubscriptionsControllerGetSubscriptionByUsernameNotFound struct {
	Timestamp OptDateTime `json:"timestamp"`
	Path      OptString   `json:"path"`
	Message   OptString   `json:"message"`
	ErrorCode OptString   `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SubscriptionsControllerGetSubscriptionByUsernameNotFound) GetTimestamp() OptDateTime {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SubscriptionsControllerGetSubscriptionByUsernameNotFound) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByUsernameNotFound) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SubscriptionsControllerGetSubscriptionByUsernameNotFound) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SubscriptionsControllerGetSubscriptionByUsernameNotFound) SetTimestamp(val OptDateTime) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SubscriptionsControllerGetSubscriptionByUsernameNotFound) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByUsernameNotFound) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SubscriptionsControllerGetSubscriptionByUsernameNotFound) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SubscriptionsControllerGetSubscriptionByUsernameNotFound) subscriptionsControllerGetSubscriptionByUsernameRes() {
}

type SubscriptionsControllerGetSubscriptionByUuidBadRequest struct {
	Message    OptString                                                          `json:"message"`
	StatusCode OptFloat64                                                         `json:"statusCode"`
	Errors     []SubscriptionsControllerGetSubscriptionByUuidBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByUuidBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SubscriptionsControllerGetSubscriptionByUuidBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SubscriptionsControllerGetSubscriptionByUuidBadRequest) GetErrors() []SubscriptionsControllerGetSubscriptionByUuidBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByUuidBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SubscriptionsControllerGetSubscriptionByUuidBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SubscriptionsControllerGetSubscriptionByUuidBadRequest) SetErrors(val []SubscriptionsControllerGetSubscriptionByUuidBadRequestErrorsItem) {
	s.Errors = val
}

func (*SubscriptionsControllerGetSubscriptionByUuidBadRequest) subscriptionsControllerGetSubscriptionByUuidRes() {
}

type SubscriptionsControllerGetSubscriptionByUuidBadRequestErrorsItem struct{}

type SubscriptionsControllerGetSubscriptionByUuidInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SubscriptionsControllerGetSubscriptionByUuidInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SubscriptionsControllerGetSubscriptionByUuidInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByUuidInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SubscriptionsControllerGetSubscriptionByUuidInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SubscriptionsControllerGetSubscriptionByUuidInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SubscriptionsControllerGetSubscriptionByUuidInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByUuidInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SubscriptionsControllerGetSubscriptionByUuidInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SubscriptionsControllerGetSubscriptionByUuidInternalServerError) subscriptionsControllerGetSubscriptionByUuidRes() {
}

type SubscriptionsControllerGetSubscriptionByUuidNotFound struct {
	Timestamp OptDateTime `json:"timestamp"`
	Path      OptString   `json:"path"`
	Message   OptString   `json:"message"`
	ErrorCode OptString   `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SubscriptionsControllerGetSubscriptionByUuidNotFound) GetTimestamp() OptDateTime {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SubscriptionsControllerGetSubscriptionByUuidNotFound) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByUuidNotFound) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SubscriptionsControllerGetSubscriptionByUuidNotFound) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SubscriptionsControllerGetSubscriptionByUuidNotFound) SetTimestamp(val OptDateTime) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SubscriptionsControllerGetSubscriptionByUuidNotFound) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByUuidNotFound) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SubscriptionsControllerGetSubscriptionByUuidNotFound) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SubscriptionsControllerGetSubscriptionByUuidNotFound) subscriptionsControllerGetSubscriptionByUuidRes() {
}

type SystemControllerDebugSrrMatcherBadRequest struct {
	Message    OptString                                             `json:"message"`
	StatusCode OptFloat64                                            `json:"statusCode"`
	Errors     []SystemControllerDebugSrrMatcherBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SystemControllerDebugSrrMatcherBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SystemControllerDebugSrrMatcherBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SystemControllerDebugSrrMatcherBadRequest) GetErrors() []SystemControllerDebugSrrMatcherBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SystemControllerDebugSrrMatcherBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SystemControllerDebugSrrMatcherBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SystemControllerDebugSrrMatcherBadRequest) SetErrors(val []SystemControllerDebugSrrMatcherBadRequestErrorsItem) {
	s.Errors = val
}

func (*SystemControllerDebugSrrMatcherBadRequest) systemControllerDebugSrrMatcherRes() {}

type SystemControllerDebugSrrMatcherBadRequestErrorsItem struct{}

type SystemControllerDebugSrrMatcherInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SystemControllerDebugSrrMatcherInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SystemControllerDebugSrrMatcherInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SystemControllerDebugSrrMatcherInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SystemControllerDebugSrrMatcherInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SystemControllerDebugSrrMatcherInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SystemControllerDebugSrrMatcherInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SystemControllerDebugSrrMatcherInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SystemControllerDebugSrrMatcherInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SystemControllerDebugSrrMatcherInternalServerError) systemControllerDebugSrrMatcherRes() {}

type SystemControllerEncryptHappCryptoLinkBadRequest struct {
	Message    OptString                                                   `json:"message"`
	StatusCode OptFloat64                                                  `json:"statusCode"`
	Errors     []SystemControllerEncryptHappCryptoLinkBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SystemControllerEncryptHappCryptoLinkBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SystemControllerEncryptHappCryptoLinkBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SystemControllerEncryptHappCryptoLinkBadRequest) GetErrors() []SystemControllerEncryptHappCryptoLinkBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SystemControllerEncryptHappCryptoLinkBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SystemControllerEncryptHappCryptoLinkBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SystemControllerEncryptHappCryptoLinkBadRequest) SetErrors(val []SystemControllerEncryptHappCryptoLinkBadRequestErrorsItem) {
	s.Errors = val
}

func (*SystemControllerEncryptHappCryptoLinkBadRequest) systemControllerEncryptHappCryptoLinkRes() {}

type SystemControllerEncryptHappCryptoLinkBadRequestErrorsItem struct{}

type SystemControllerEncryptHappCryptoLinkInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SystemControllerEncryptHappCryptoLinkInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SystemControllerEncryptHappCryptoLinkInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SystemControllerEncryptHappCryptoLinkInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SystemControllerEncryptHappCryptoLinkInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SystemControllerEncryptHappCryptoLinkInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SystemControllerEncryptHappCryptoLinkInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SystemControllerEncryptHappCryptoLinkInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SystemControllerEncryptHappCryptoLinkInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SystemControllerEncryptHappCryptoLinkInternalServerError) systemControllerEncryptHappCryptoLinkRes() {
}

type SystemControllerGetBandwidthStatsBadRequest struct {
	Message    OptString                                               `json:"message"`
	StatusCode OptFloat64                                              `json:"statusCode"`
	Errors     []SystemControllerGetBandwidthStatsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SystemControllerGetBandwidthStatsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SystemControllerGetBandwidthStatsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SystemControllerGetBandwidthStatsBadRequest) GetErrors() []SystemControllerGetBandwidthStatsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SystemControllerGetBandwidthStatsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SystemControllerGetBandwidthStatsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SystemControllerGetBandwidthStatsBadRequest) SetErrors(val []SystemControllerGetBandwidthStatsBadRequestErrorsItem) {
	s.Errors = val
}

func (*SystemControllerGetBandwidthStatsBadRequest) systemControllerGetBandwidthStatsRes() {}

type SystemControllerGetBandwidthStatsBadRequestErrorsItem struct{}

type SystemControllerGetBandwidthStatsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SystemControllerGetBandwidthStatsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SystemControllerGetBandwidthStatsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SystemControllerGetBandwidthStatsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SystemControllerGetBandwidthStatsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SystemControllerGetBandwidthStatsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SystemControllerGetBandwidthStatsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SystemControllerGetBandwidthStatsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SystemControllerGetBandwidthStatsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SystemControllerGetBandwidthStatsInternalServerError) systemControllerGetBandwidthStatsRes() {}

type SystemControllerGetNodesMetricsBadRequest struct {
	Message    OptString                                             `json:"message"`
	StatusCode OptFloat64                                            `json:"statusCode"`
	Errors     []SystemControllerGetNodesMetricsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SystemControllerGetNodesMetricsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SystemControllerGetNodesMetricsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SystemControllerGetNodesMetricsBadRequest) GetErrors() []SystemControllerGetNodesMetricsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SystemControllerGetNodesMetricsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SystemControllerGetNodesMetricsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SystemControllerGetNodesMetricsBadRequest) SetErrors(val []SystemControllerGetNodesMetricsBadRequestErrorsItem) {
	s.Errors = val
}

func (*SystemControllerGetNodesMetricsBadRequest) systemControllerGetNodesMetricsRes() {}

type SystemControllerGetNodesMetricsBadRequestErrorsItem struct{}

type SystemControllerGetNodesMetricsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SystemControllerGetNodesMetricsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SystemControllerGetNodesMetricsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SystemControllerGetNodesMetricsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SystemControllerGetNodesMetricsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SystemControllerGetNodesMetricsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SystemControllerGetNodesMetricsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SystemControllerGetNodesMetricsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SystemControllerGetNodesMetricsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SystemControllerGetNodesMetricsInternalServerError) systemControllerGetNodesMetricsRes() {}

type SystemControllerGetNodesStatisticsBadRequest struct {
	Message    OptString                                                `json:"message"`
	StatusCode OptFloat64                                               `json:"statusCode"`
	Errors     []SystemControllerGetNodesStatisticsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SystemControllerGetNodesStatisticsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SystemControllerGetNodesStatisticsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SystemControllerGetNodesStatisticsBadRequest) GetErrors() []SystemControllerGetNodesStatisticsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SystemControllerGetNodesStatisticsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SystemControllerGetNodesStatisticsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SystemControllerGetNodesStatisticsBadRequest) SetErrors(val []SystemControllerGetNodesStatisticsBadRequestErrorsItem) {
	s.Errors = val
}

func (*SystemControllerGetNodesStatisticsBadRequest) systemControllerGetNodesStatisticsRes() {}

type SystemControllerGetNodesStatisticsBadRequestErrorsItem struct{}

type SystemControllerGetNodesStatisticsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SystemControllerGetNodesStatisticsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SystemControllerGetNodesStatisticsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SystemControllerGetNodesStatisticsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SystemControllerGetNodesStatisticsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SystemControllerGetNodesStatisticsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SystemControllerGetNodesStatisticsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SystemControllerGetNodesStatisticsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SystemControllerGetNodesStatisticsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SystemControllerGetNodesStatisticsInternalServerError) systemControllerGetNodesStatisticsRes() {
}

type SystemControllerGetRemnawaveHealthBadRequest struct {
	Message    OptString                                                `json:"message"`
	StatusCode OptFloat64                                               `json:"statusCode"`
	Errors     []SystemControllerGetRemnawaveHealthBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SystemControllerGetRemnawaveHealthBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SystemControllerGetRemnawaveHealthBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SystemControllerGetRemnawaveHealthBadRequest) GetErrors() []SystemControllerGetRemnawaveHealthBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SystemControllerGetRemnawaveHealthBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SystemControllerGetRemnawaveHealthBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SystemControllerGetRemnawaveHealthBadRequest) SetErrors(val []SystemControllerGetRemnawaveHealthBadRequestErrorsItem) {
	s.Errors = val
}

func (*SystemControllerGetRemnawaveHealthBadRequest) systemControllerGetRemnawaveHealthRes() {}

type SystemControllerGetRemnawaveHealthBadRequestErrorsItem struct{}

type SystemControllerGetRemnawaveHealthInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SystemControllerGetRemnawaveHealthInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SystemControllerGetRemnawaveHealthInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SystemControllerGetRemnawaveHealthInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SystemControllerGetRemnawaveHealthInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SystemControllerGetRemnawaveHealthInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SystemControllerGetRemnawaveHealthInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SystemControllerGetRemnawaveHealthInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SystemControllerGetRemnawaveHealthInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SystemControllerGetRemnawaveHealthInternalServerError) systemControllerGetRemnawaveHealthRes() {
}

type SystemControllerGetStatsBadRequest struct {
	Message    OptString                                      `json:"message"`
	StatusCode OptFloat64                                     `json:"statusCode"`
	Errors     []SystemControllerGetStatsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SystemControllerGetStatsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SystemControllerGetStatsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SystemControllerGetStatsBadRequest) GetErrors() []SystemControllerGetStatsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SystemControllerGetStatsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SystemControllerGetStatsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SystemControllerGetStatsBadRequest) SetErrors(val []SystemControllerGetStatsBadRequestErrorsItem) {
	s.Errors = val
}

func (*SystemControllerGetStatsBadRequest) systemControllerGetStatsRes() {}

type SystemControllerGetStatsBadRequestErrorsItem struct{}

type SystemControllerGetStatsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SystemControllerGetStatsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SystemControllerGetStatsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SystemControllerGetStatsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SystemControllerGetStatsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SystemControllerGetStatsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SystemControllerGetStatsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SystemControllerGetStatsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SystemControllerGetStatsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SystemControllerGetStatsInternalServerError) systemControllerGetStatsRes() {}

type SystemControllerGetX25519KeypairsBadRequest struct {
	Message    OptString                                               `json:"message"`
	StatusCode OptFloat64                                              `json:"statusCode"`
	Errors     []SystemControllerGetX25519KeypairsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *SystemControllerGetX25519KeypairsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *SystemControllerGetX25519KeypairsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *SystemControllerGetX25519KeypairsBadRequest) GetErrors() []SystemControllerGetX25519KeypairsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *SystemControllerGetX25519KeypairsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *SystemControllerGetX25519KeypairsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *SystemControllerGetX25519KeypairsBadRequest) SetErrors(val []SystemControllerGetX25519KeypairsBadRequestErrorsItem) {
	s.Errors = val
}

func (*SystemControllerGetX25519KeypairsBadRequest) systemControllerGetX25519KeypairsRes() {}

type SystemControllerGetX25519KeypairsBadRequestErrorsItem struct{}

type SystemControllerGetX25519KeypairsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SystemControllerGetX25519KeypairsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SystemControllerGetX25519KeypairsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SystemControllerGetX25519KeypairsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SystemControllerGetX25519KeypairsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SystemControllerGetX25519KeypairsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SystemControllerGetX25519KeypairsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SystemControllerGetX25519KeypairsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SystemControllerGetX25519KeypairsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SystemControllerGetX25519KeypairsInternalServerError) systemControllerGetX25519KeypairsRes() {}

// Ref: #/components/schemas/TagsResponse
type TagsResponse struct {
	Response TagsResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *TagsResponse) GetResponse() TagsResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *TagsResponse) SetResponse(val TagsResponseResponse) {
	s.Response = val
}

func (*TagsResponse) hostsControllerGetAllHostTagsRes() {}
func (*TagsResponse) usersControllerGetAllTagsRes()     {}

type TagsResponseResponse struct {
	Tags []string `json:"tags"`
}

// GetTags returns the value of Tags.
func (s *TagsResponseResponse) GetTags() []string {
	return s.Tags
}

// SetTags sets the value of Tags.
func (s *TagsResponseResponse) SetTags(val []string) {
	s.Tags = val
}

// Ref: #/components/schemas/TelegramCallbackRequestDto
type TelegramCallbackRequestDto struct {
	ID        float64   `json:"id"`
	FirstName string    `json:"first_name"`
	LastName  OptString `json:"last_name"`
	Username  OptString `json:"username"`
	PhotoURL  OptString `json:"photo_url"`
	AuthDate  float64   `json:"auth_date"`
	Hash      string    `json:"hash"`
}

// GetID returns the value of ID.
func (s *TelegramCallbackRequestDto) GetID() float64 {
	return s.ID
}

// GetFirstName returns the value of FirstName.
func (s *TelegramCallbackRequestDto) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *TelegramCallbackRequestDto) GetLastName() OptString {
	return s.LastName
}

// GetUsername returns the value of Username.
func (s *TelegramCallbackRequestDto) GetUsername() OptString {
	return s.Username
}

// GetPhotoURL returns the value of PhotoURL.
func (s *TelegramCallbackRequestDto) GetPhotoURL() OptString {
	return s.PhotoURL
}

// GetAuthDate returns the value of AuthDate.
func (s *TelegramCallbackRequestDto) GetAuthDate() float64 {
	return s.AuthDate
}

// GetHash returns the value of Hash.
func (s *TelegramCallbackRequestDto) GetHash() string {
	return s.Hash
}

// SetID sets the value of ID.
func (s *TelegramCallbackRequestDto) SetID(val float64) {
	s.ID = val
}

// SetFirstName sets the value of FirstName.
func (s *TelegramCallbackRequestDto) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *TelegramCallbackRequestDto) SetLastName(val OptString) {
	s.LastName = val
}

// SetUsername sets the value of Username.
func (s *TelegramCallbackRequestDto) SetUsername(val OptString) {
	s.Username = val
}

// SetPhotoURL sets the value of PhotoURL.
func (s *TelegramCallbackRequestDto) SetPhotoURL(val OptString) {
	s.PhotoURL = val
}

// SetAuthDate sets the value of AuthDate.
func (s *TelegramCallbackRequestDto) SetAuthDate(val float64) {
	s.AuthDate = val
}

// SetHash sets the value of Hash.
func (s *TelegramCallbackRequestDto) SetHash(val string) {
	s.Hash = val
}

// Ref: #/components/schemas/TemplateResponse
type TemplateResponse struct {
	Response TemplateResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *TemplateResponse) GetResponse() TemplateResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *TemplateResponse) SetResponse(val TemplateResponseResponse) {
	s.Response = val
}

func (*TemplateResponse) subscriptionTemplateControllerCreateTemplateRes()    {}
func (*TemplateResponse) subscriptionTemplateControllerGetTemplateByUuidRes() {}
func (*TemplateResponse) subscriptionTemplateControllerUpdateTemplateRes()    {}

type TemplateResponseResponse struct {
	UUID                uuid.UUID                            `json:"uuid"`
	Name                string                               `json:"name"`
	TemplateType        TemplateResponseResponseTemplateType `json:"templateType"`
	TemplateJson        jx.Raw                               `json:"templateJson"`
	EncodedTemplateYaml NilString                            `json:"encodedTemplateYaml"`
}

// GetUUID returns the value of UUID.
func (s *TemplateResponseResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *TemplateResponseResponse) GetName() string {
	return s.Name
}

// GetTemplateType returns the value of TemplateType.
func (s *TemplateResponseResponse) GetTemplateType() TemplateResponseResponseTemplateType {
	return s.TemplateType
}

// GetTemplateJson returns the value of TemplateJson.
func (s *TemplateResponseResponse) GetTemplateJson() jx.Raw {
	return s.TemplateJson
}

// GetEncodedTemplateYaml returns the value of EncodedTemplateYaml.
func (s *TemplateResponseResponse) GetEncodedTemplateYaml() NilString {
	return s.EncodedTemplateYaml
}

// SetUUID sets the value of UUID.
func (s *TemplateResponseResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *TemplateResponseResponse) SetName(val string) {
	s.Name = val
}

// SetTemplateType sets the value of TemplateType.
func (s *TemplateResponseResponse) SetTemplateType(val TemplateResponseResponseTemplateType) {
	s.TemplateType = val
}

// SetTemplateJson sets the value of TemplateJson.
func (s *TemplateResponseResponse) SetTemplateJson(val jx.Raw) {
	s.TemplateJson = val
}

// SetEncodedTemplateYaml sets the value of EncodedTemplateYaml.
func (s *TemplateResponseResponse) SetEncodedTemplateYaml(val NilString) {
	s.EncodedTemplateYaml = val
}

type TemplateResponseResponseTemplateType string

const (
	TemplateResponseResponseTemplateTypeXRAYJSON   TemplateResponseResponseTemplateType = "XRAY_JSON"
	TemplateResponseResponseTemplateTypeXRAYBASE64 TemplateResponseResponseTemplateType = "XRAY_BASE64"
	TemplateResponseResponseTemplateTypeMIHOMO     TemplateResponseResponseTemplateType = "MIHOMO"
	TemplateResponseResponseTemplateTypeSTASH      TemplateResponseResponseTemplateType = "STASH"
	TemplateResponseResponseTemplateTypeCLASH      TemplateResponseResponseTemplateType = "CLASH"
	TemplateResponseResponseTemplateTypeSINGBOX    TemplateResponseResponseTemplateType = "SINGBOX"
)

// AllValues returns all TemplateResponseResponseTemplateType values.
func (TemplateResponseResponseTemplateType) AllValues() []TemplateResponseResponseTemplateType {
	return []TemplateResponseResponseTemplateType{
		TemplateResponseResponseTemplateTypeXRAYJSON,
		TemplateResponseResponseTemplateTypeXRAYBASE64,
		TemplateResponseResponseTemplateTypeMIHOMO,
		TemplateResponseResponseTemplateTypeSTASH,
		TemplateResponseResponseTemplateTypeCLASH,
		TemplateResponseResponseTemplateTypeSINGBOX,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TemplateResponseResponseTemplateType) MarshalText() ([]byte, error) {
	switch s {
	case TemplateResponseResponseTemplateTypeXRAYJSON:
		return []byte(s), nil
	case TemplateResponseResponseTemplateTypeXRAYBASE64:
		return []byte(s), nil
	case TemplateResponseResponseTemplateTypeMIHOMO:
		return []byte(s), nil
	case TemplateResponseResponseTemplateTypeSTASH:
		return []byte(s), nil
	case TemplateResponseResponseTemplateTypeCLASH:
		return []byte(s), nil
	case TemplateResponseResponseTemplateTypeSINGBOX:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TemplateResponseResponseTemplateType) UnmarshalText(data []byte) error {
	switch TemplateResponseResponseTemplateType(data) {
	case TemplateResponseResponseTemplateTypeXRAYJSON:
		*s = TemplateResponseResponseTemplateTypeXRAYJSON
		return nil
	case TemplateResponseResponseTemplateTypeXRAYBASE64:
		*s = TemplateResponseResponseTemplateTypeXRAYBASE64
		return nil
	case TemplateResponseResponseTemplateTypeMIHOMO:
		*s = TemplateResponseResponseTemplateTypeMIHOMO
		return nil
	case TemplateResponseResponseTemplateTypeSTASH:
		*s = TemplateResponseResponseTemplateTypeSTASH
		return nil
	case TemplateResponseResponseTemplateTypeCLASH:
		*s = TemplateResponseResponseTemplateTypeCLASH
		return nil
	case TemplateResponseResponseTemplateTypeSINGBOX:
		*s = TemplateResponseResponseTemplateTypeSINGBOX
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/TokenResponse
type TokenResponse struct {
	Response TokenResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *TokenResponse) GetResponse() TokenResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *TokenResponse) SetResponse(val TokenResponseResponse) {
	s.Response = val
}

type TokenResponseResponse struct {
	AccessToken string `json:"accessToken"`
}

// GetAccessToken returns the value of AccessToken.
func (s *TokenResponseResponse) GetAccessToken() string {
	return s.AccessToken
}

// SetAccessToken sets the value of AccessToken.
func (s *TokenResponseResponse) SetAccessToken(val string) {
	s.AccessToken = val
}

// TokenResponseStatusCode wraps TokenResponse with StatusCode.
type TokenResponseStatusCode struct {
	StatusCode int
	Response   TokenResponse
}

// GetStatusCode returns the value of StatusCode.
func (s *TokenResponseStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *TokenResponseStatusCode) GetResponse() TokenResponse {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *TokenResponseStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *TokenResponseStatusCode) SetResponse(val TokenResponse) {
	s.Response = val
}

func (*TokenResponseStatusCode) authControllerLoginRes()                       {}
func (*TokenResponseStatusCode) authControllerOauth2CallbackRes()              {}
func (*TokenResponseStatusCode) authControllerPasskeyAuthenticationVerifyRes() {}
func (*TokenResponseStatusCode) authControllerRegisterRes()                    {}
func (*TokenResponseStatusCode) authControllerTelegramCallbackRes()            {}

// Ref: #/components/schemas/UpdateConfigProfileRequestDto
type UpdateConfigProfileRequestDto struct {
	UUID   uuid.UUID                            `json:"uuid"`
	Name   OptString                            `json:"name"`
	Config *UpdateConfigProfileRequestDtoConfig `json:"config"`
}

// GetUUID returns the value of UUID.
func (s *UpdateConfigProfileRequestDto) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *UpdateConfigProfileRequestDto) GetName() OptString {
	return s.Name
}

// GetConfig returns the value of Config.
func (s *UpdateConfigProfileRequestDto) GetConfig() *UpdateConfigProfileRequestDtoConfig {
	return s.Config
}

// SetUUID sets the value of UUID.
func (s *UpdateConfigProfileRequestDto) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *UpdateConfigProfileRequestDto) SetName(val OptString) {
	s.Name = val
}

// SetConfig sets the value of Config.
func (s *UpdateConfigProfileRequestDto) SetConfig(val *UpdateConfigProfileRequestDtoConfig) {
	s.Config = val
}

type UpdateConfigProfileRequestDtoConfig struct{}

// Ref: #/components/schemas/UpdateExternalSquadRequestDto
type UpdateExternalSquadRequestDto struct {
	UUID                 uuid.UUID                                            `json:"uuid"`
	Name                 OptString                                            `json:"name"`
	Templates            []UpdateExternalSquadRequestDtoTemplatesItem         `json:"templates"`
	SubscriptionSettings OptUpdateExternalSquadRequestDtoSubscriptionSettings `json:"subscriptionSettings"`
}

// GetUUID returns the value of UUID.
func (s *UpdateExternalSquadRequestDto) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *UpdateExternalSquadRequestDto) GetName() OptString {
	return s.Name
}

// GetTemplates returns the value of Templates.
func (s *UpdateExternalSquadRequestDto) GetTemplates() []UpdateExternalSquadRequestDtoTemplatesItem {
	return s.Templates
}

// GetSubscriptionSettings returns the value of SubscriptionSettings.
func (s *UpdateExternalSquadRequestDto) GetSubscriptionSettings() OptUpdateExternalSquadRequestDtoSubscriptionSettings {
	return s.SubscriptionSettings
}

// SetUUID sets the value of UUID.
func (s *UpdateExternalSquadRequestDto) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *UpdateExternalSquadRequestDto) SetName(val OptString) {
	s.Name = val
}

// SetTemplates sets the value of Templates.
func (s *UpdateExternalSquadRequestDto) SetTemplates(val []UpdateExternalSquadRequestDtoTemplatesItem) {
	s.Templates = val
}

// SetSubscriptionSettings sets the value of SubscriptionSettings.
func (s *UpdateExternalSquadRequestDto) SetSubscriptionSettings(val OptUpdateExternalSquadRequestDtoSubscriptionSettings) {
	s.SubscriptionSettings = val
}

type UpdateExternalSquadRequestDtoSubscriptionSettings struct {
	ProfileTitle                  OptString    `json:"profileTitle"`
	SupportLink                   OptString    `json:"supportLink"`
	ProfileUpdateInterval         OptInt       `json:"profileUpdateInterval"`
	IsProfileWebpageUrlEnabled    OptBool      `json:"isProfileWebpageUrlEnabled"`
	ServeJsonAtBaseSubscription   OptBool      `json:"serveJsonAtBaseSubscription"`
	AddUsernameToBaseSubscription OptBool      `json:"addUsernameToBaseSubscription"`
	IsShowCustomRemarks           OptBool      `json:"isShowCustomRemarks"`
	HappAnnounce                  OptNilString `json:"happAnnounce"`
	HappRouting                   OptNilString `json:"happRouting"`
	RandomizeHosts                OptBool      `json:"randomizeHosts"`
}

// GetProfileTitle returns the value of ProfileTitle.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) GetProfileTitle() OptString {
	return s.ProfileTitle
}

// GetSupportLink returns the value of SupportLink.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) GetSupportLink() OptString {
	return s.SupportLink
}

// GetProfileUpdateInterval returns the value of ProfileUpdateInterval.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) GetProfileUpdateInterval() OptInt {
	return s.ProfileUpdateInterval
}

// GetIsProfileWebpageUrlEnabled returns the value of IsProfileWebpageUrlEnabled.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) GetIsProfileWebpageUrlEnabled() OptBool {
	return s.IsProfileWebpageUrlEnabled
}

// GetServeJsonAtBaseSubscription returns the value of ServeJsonAtBaseSubscription.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) GetServeJsonAtBaseSubscription() OptBool {
	return s.ServeJsonAtBaseSubscription
}

// GetAddUsernameToBaseSubscription returns the value of AddUsernameToBaseSubscription.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) GetAddUsernameToBaseSubscription() OptBool {
	return s.AddUsernameToBaseSubscription
}

// GetIsShowCustomRemarks returns the value of IsShowCustomRemarks.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) GetIsShowCustomRemarks() OptBool {
	return s.IsShowCustomRemarks
}

// GetHappAnnounce returns the value of HappAnnounce.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) GetHappAnnounce() OptNilString {
	return s.HappAnnounce
}

// GetHappRouting returns the value of HappRouting.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) GetHappRouting() OptNilString {
	return s.HappRouting
}

// GetRandomizeHosts returns the value of RandomizeHosts.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) GetRandomizeHosts() OptBool {
	return s.RandomizeHosts
}

// SetProfileTitle sets the value of ProfileTitle.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) SetProfileTitle(val OptString) {
	s.ProfileTitle = val
}

// SetSupportLink sets the value of SupportLink.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) SetSupportLink(val OptString) {
	s.SupportLink = val
}

// SetProfileUpdateInterval sets the value of ProfileUpdateInterval.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) SetProfileUpdateInterval(val OptInt) {
	s.ProfileUpdateInterval = val
}

// SetIsProfileWebpageUrlEnabled sets the value of IsProfileWebpageUrlEnabled.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) SetIsProfileWebpageUrlEnabled(val OptBool) {
	s.IsProfileWebpageUrlEnabled = val
}

// SetServeJsonAtBaseSubscription sets the value of ServeJsonAtBaseSubscription.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) SetServeJsonAtBaseSubscription(val OptBool) {
	s.ServeJsonAtBaseSubscription = val
}

// SetAddUsernameToBaseSubscription sets the value of AddUsernameToBaseSubscription.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) SetAddUsernameToBaseSubscription(val OptBool) {
	s.AddUsernameToBaseSubscription = val
}

// SetIsShowCustomRemarks sets the value of IsShowCustomRemarks.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) SetIsShowCustomRemarks(val OptBool) {
	s.IsShowCustomRemarks = val
}

// SetHappAnnounce sets the value of HappAnnounce.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) SetHappAnnounce(val OptNilString) {
	s.HappAnnounce = val
}

// SetHappRouting sets the value of HappRouting.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) SetHappRouting(val OptNilString) {
	s.HappRouting = val
}

// SetRandomizeHosts sets the value of RandomizeHosts.
func (s *UpdateExternalSquadRequestDtoSubscriptionSettings) SetRandomizeHosts(val OptBool) {
	s.RandomizeHosts = val
}

type UpdateExternalSquadRequestDtoTemplatesItem struct {
	TemplateUuid uuid.UUID                                              `json:"templateUuid"`
	TemplateType UpdateExternalSquadRequestDtoTemplatesItemTemplateType `json:"templateType"`
}

// GetTemplateUuid returns the value of TemplateUuid.
func (s *UpdateExternalSquadRequestDtoTemplatesItem) GetTemplateUuid() uuid.UUID {
	return s.TemplateUuid
}

// GetTemplateType returns the value of TemplateType.
func (s *UpdateExternalSquadRequestDtoTemplatesItem) GetTemplateType() UpdateExternalSquadRequestDtoTemplatesItemTemplateType {
	return s.TemplateType
}

// SetTemplateUuid sets the value of TemplateUuid.
func (s *UpdateExternalSquadRequestDtoTemplatesItem) SetTemplateUuid(val uuid.UUID) {
	s.TemplateUuid = val
}

// SetTemplateType sets the value of TemplateType.
func (s *UpdateExternalSquadRequestDtoTemplatesItem) SetTemplateType(val UpdateExternalSquadRequestDtoTemplatesItemTemplateType) {
	s.TemplateType = val
}

type UpdateExternalSquadRequestDtoTemplatesItemTemplateType string

const (
	UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeXRAYJSON   UpdateExternalSquadRequestDtoTemplatesItemTemplateType = "XRAY_JSON"
	UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeXRAYBASE64 UpdateExternalSquadRequestDtoTemplatesItemTemplateType = "XRAY_BASE64"
	UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeMIHOMO     UpdateExternalSquadRequestDtoTemplatesItemTemplateType = "MIHOMO"
	UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeSTASH      UpdateExternalSquadRequestDtoTemplatesItemTemplateType = "STASH"
	UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeCLASH      UpdateExternalSquadRequestDtoTemplatesItemTemplateType = "CLASH"
	UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeSINGBOX    UpdateExternalSquadRequestDtoTemplatesItemTemplateType = "SINGBOX"
)

// AllValues returns all UpdateExternalSquadRequestDtoTemplatesItemTemplateType values.
func (UpdateExternalSquadRequestDtoTemplatesItemTemplateType) AllValues() []UpdateExternalSquadRequestDtoTemplatesItemTemplateType {
	return []UpdateExternalSquadRequestDtoTemplatesItemTemplateType{
		UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeXRAYJSON,
		UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeXRAYBASE64,
		UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeMIHOMO,
		UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeSTASH,
		UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeCLASH,
		UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeSINGBOX,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateExternalSquadRequestDtoTemplatesItemTemplateType) MarshalText() ([]byte, error) {
	switch s {
	case UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeXRAYJSON:
		return []byte(s), nil
	case UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeXRAYBASE64:
		return []byte(s), nil
	case UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeMIHOMO:
		return []byte(s), nil
	case UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeSTASH:
		return []byte(s), nil
	case UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeCLASH:
		return []byte(s), nil
	case UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeSINGBOX:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateExternalSquadRequestDtoTemplatesItemTemplateType) UnmarshalText(data []byte) error {
	switch UpdateExternalSquadRequestDtoTemplatesItemTemplateType(data) {
	case UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeXRAYJSON:
		*s = UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeXRAYJSON
		return nil
	case UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeXRAYBASE64:
		*s = UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeXRAYBASE64
		return nil
	case UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeMIHOMO:
		*s = UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeMIHOMO
		return nil
	case UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeSTASH:
		*s = UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeSTASH
		return nil
	case UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeCLASH:
		*s = UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeCLASH
		return nil
	case UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeSINGBOX:
		*s = UpdateExternalSquadRequestDtoTemplatesItemTemplateTypeSINGBOX
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/UpdateHostRequestDto
type UpdateHostRequestDto struct {
	UUID              uuid.UUID                             `json:"uuid"`
	Inbound           OptUpdateHostRequestDtoInbound        `json:"inbound"`
	Remark            OptString                             `json:"remark"`
	Address           OptString                             `json:"address"`
	Port              OptInt                                `json:"port"`
	Path              OptString                             `json:"path"`
	Sni               OptString                             `json:"sni"`
	Host              OptString                             `json:"host"`
	Alpn              OptNilUpdateHostRequestDtoAlpn        `json:"alpn"`
	Fingerprint       OptNilUpdateHostRequestDtoFingerprint `json:"fingerprint"`
	IsDisabled        OptBool                               `json:"isDisabled"`
	SecurityLayer     OptUpdateHostRequestDtoSecurityLayer  `json:"securityLayer"`
	XHttpExtraParams  jx.Raw                                `json:"xHttpExtraParams"`
	MuxParams         jx.Raw                                `json:"muxParams"`
	SockoptParams     jx.Raw                                `json:"sockoptParams"`
	ServerDescription OptNilString                          `json:"serverDescription"`
	// Optional. Host tag for categorization. Max 32 characters, uppercase letters, numbers, underscores
	// and colons are allowed.
	Tag                    OptNilString `json:"tag"`
	IsHidden               OptBool      `json:"isHidden"`
	OverrideSniFromAddress OptBool      `json:"overrideSniFromAddress"`
	VlessRouteId           OptNilInt    `json:"vlessRouteId"`
	AllowInsecure          OptBool      `json:"allowInsecure"`
	ShuffleHost            OptBool      `json:"shuffleHost"`
	MihomoX25519           OptBool      `json:"mihomoX25519"`
	Nodes                  []uuid.UUID  `json:"nodes"`
}

// GetUUID returns the value of UUID.
func (s *UpdateHostRequestDto) GetUUID() uuid.UUID {
	return s.UUID
}

// GetInbound returns the value of Inbound.
func (s *UpdateHostRequestDto) GetInbound() OptUpdateHostRequestDtoInbound {
	return s.Inbound
}

// GetRemark returns the value of Remark.
func (s *UpdateHostRequestDto) GetRemark() OptString {
	return s.Remark
}

// GetAddress returns the value of Address.
func (s *UpdateHostRequestDto) GetAddress() OptString {
	return s.Address
}

// GetPort returns the value of Port.
func (s *UpdateHostRequestDto) GetPort() OptInt {
	return s.Port
}

// GetPath returns the value of Path.
func (s *UpdateHostRequestDto) GetPath() OptString {
	return s.Path
}

// GetSni returns the value of Sni.
func (s *UpdateHostRequestDto) GetSni() OptString {
	return s.Sni
}

// GetHost returns the value of Host.
func (s *UpdateHostRequestDto) GetHost() OptString {
	return s.Host
}

// GetAlpn returns the value of Alpn.
func (s *UpdateHostRequestDto) GetAlpn() OptNilUpdateHostRequestDtoAlpn {
	return s.Alpn
}

// GetFingerprint returns the value of Fingerprint.
func (s *UpdateHostRequestDto) GetFingerprint() OptNilUpdateHostRequestDtoFingerprint {
	return s.Fingerprint
}

// GetIsDisabled returns the value of IsDisabled.
func (s *UpdateHostRequestDto) GetIsDisabled() OptBool {
	return s.IsDisabled
}

// GetSecurityLayer returns the value of SecurityLayer.
func (s *UpdateHostRequestDto) GetSecurityLayer() OptUpdateHostRequestDtoSecurityLayer {
	return s.SecurityLayer
}

// GetXHttpExtraParams returns the value of XHttpExtraParams.
func (s *UpdateHostRequestDto) GetXHttpExtraParams() jx.Raw {
	return s.XHttpExtraParams
}

// GetMuxParams returns the value of MuxParams.
func (s *UpdateHostRequestDto) GetMuxParams() jx.Raw {
	return s.MuxParams
}

// GetSockoptParams returns the value of SockoptParams.
func (s *UpdateHostRequestDto) GetSockoptParams() jx.Raw {
	return s.SockoptParams
}

// GetServerDescription returns the value of ServerDescription.
func (s *UpdateHostRequestDto) GetServerDescription() OptNilString {
	return s.ServerDescription
}

// GetTag returns the value of Tag.
func (s *UpdateHostRequestDto) GetTag() OptNilString {
	return s.Tag
}

// GetIsHidden returns the value of IsHidden.
func (s *UpdateHostRequestDto) GetIsHidden() OptBool {
	return s.IsHidden
}

// GetOverrideSniFromAddress returns the value of OverrideSniFromAddress.
func (s *UpdateHostRequestDto) GetOverrideSniFromAddress() OptBool {
	return s.OverrideSniFromAddress
}

// GetVlessRouteId returns the value of VlessRouteId.
func (s *UpdateHostRequestDto) GetVlessRouteId() OptNilInt {
	return s.VlessRouteId
}

// GetAllowInsecure returns the value of AllowInsecure.
func (s *UpdateHostRequestDto) GetAllowInsecure() OptBool {
	return s.AllowInsecure
}

// GetShuffleHost returns the value of ShuffleHost.
func (s *UpdateHostRequestDto) GetShuffleHost() OptBool {
	return s.ShuffleHost
}

// GetMihomoX25519 returns the value of MihomoX25519.
func (s *UpdateHostRequestDto) GetMihomoX25519() OptBool {
	return s.MihomoX25519
}

// GetNodes returns the value of Nodes.
func (s *UpdateHostRequestDto) GetNodes() []uuid.UUID {
	return s.Nodes
}

// SetUUID sets the value of UUID.
func (s *UpdateHostRequestDto) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetInbound sets the value of Inbound.
func (s *UpdateHostRequestDto) SetInbound(val OptUpdateHostRequestDtoInbound) {
	s.Inbound = val
}

// SetRemark sets the value of Remark.
func (s *UpdateHostRequestDto) SetRemark(val OptString) {
	s.Remark = val
}

// SetAddress sets the value of Address.
func (s *UpdateHostRequestDto) SetAddress(val OptString) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *UpdateHostRequestDto) SetPort(val OptInt) {
	s.Port = val
}

// SetPath sets the value of Path.
func (s *UpdateHostRequestDto) SetPath(val OptString) {
	s.Path = val
}

// SetSni sets the value of Sni.
func (s *UpdateHostRequestDto) SetSni(val OptString) {
	s.Sni = val
}

// SetHost sets the value of Host.
func (s *UpdateHostRequestDto) SetHost(val OptString) {
	s.Host = val
}

// SetAlpn sets the value of Alpn.
func (s *UpdateHostRequestDto) SetAlpn(val OptNilUpdateHostRequestDtoAlpn) {
	s.Alpn = val
}

// SetFingerprint sets the value of Fingerprint.
func (s *UpdateHostRequestDto) SetFingerprint(val OptNilUpdateHostRequestDtoFingerprint) {
	s.Fingerprint = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *UpdateHostRequestDto) SetIsDisabled(val OptBool) {
	s.IsDisabled = val
}

// SetSecurityLayer sets the value of SecurityLayer.
func (s *UpdateHostRequestDto) SetSecurityLayer(val OptUpdateHostRequestDtoSecurityLayer) {
	s.SecurityLayer = val
}

// SetXHttpExtraParams sets the value of XHttpExtraParams.
func (s *UpdateHostRequestDto) SetXHttpExtraParams(val jx.Raw) {
	s.XHttpExtraParams = val
}

// SetMuxParams sets the value of MuxParams.
func (s *UpdateHostRequestDto) SetMuxParams(val jx.Raw) {
	s.MuxParams = val
}

// SetSockoptParams sets the value of SockoptParams.
func (s *UpdateHostRequestDto) SetSockoptParams(val jx.Raw) {
	s.SockoptParams = val
}

// SetServerDescription sets the value of ServerDescription.
func (s *UpdateHostRequestDto) SetServerDescription(val OptNilString) {
	s.ServerDescription = val
}

// SetTag sets the value of Tag.
func (s *UpdateHostRequestDto) SetTag(val OptNilString) {
	s.Tag = val
}

// SetIsHidden sets the value of IsHidden.
func (s *UpdateHostRequestDto) SetIsHidden(val OptBool) {
	s.IsHidden = val
}

// SetOverrideSniFromAddress sets the value of OverrideSniFromAddress.
func (s *UpdateHostRequestDto) SetOverrideSniFromAddress(val OptBool) {
	s.OverrideSniFromAddress = val
}

// SetVlessRouteId sets the value of VlessRouteId.
func (s *UpdateHostRequestDto) SetVlessRouteId(val OptNilInt) {
	s.VlessRouteId = val
}

// SetAllowInsecure sets the value of AllowInsecure.
func (s *UpdateHostRequestDto) SetAllowInsecure(val OptBool) {
	s.AllowInsecure = val
}

// SetShuffleHost sets the value of ShuffleHost.
func (s *UpdateHostRequestDto) SetShuffleHost(val OptBool) {
	s.ShuffleHost = val
}

// SetMihomoX25519 sets the value of MihomoX25519.
func (s *UpdateHostRequestDto) SetMihomoX25519(val OptBool) {
	s.MihomoX25519 = val
}

// SetNodes sets the value of Nodes.
func (s *UpdateHostRequestDto) SetNodes(val []uuid.UUID) {
	s.Nodes = val
}

type UpdateHostRequestDtoAlpn string

const (
	UpdateHostRequestDtoAlpnH3         UpdateHostRequestDtoAlpn = "h3"
	UpdateHostRequestDtoAlpnH2         UpdateHostRequestDtoAlpn = "h2"
	UpdateHostRequestDtoAlpnHTTP11     UpdateHostRequestDtoAlpn = "http/1.1"
	UpdateHostRequestDtoAlpnH2HTTP11   UpdateHostRequestDtoAlpn = "h2,http/1.1"
	UpdateHostRequestDtoAlpnH3H2HTTP11 UpdateHostRequestDtoAlpn = "h3,h2,http/1.1"
	UpdateHostRequestDtoAlpnH3H2       UpdateHostRequestDtoAlpn = "h3,h2"
)

// AllValues returns all UpdateHostRequestDtoAlpn values.
func (UpdateHostRequestDtoAlpn) AllValues() []UpdateHostRequestDtoAlpn {
	return []UpdateHostRequestDtoAlpn{
		UpdateHostRequestDtoAlpnH3,
		UpdateHostRequestDtoAlpnH2,
		UpdateHostRequestDtoAlpnHTTP11,
		UpdateHostRequestDtoAlpnH2HTTP11,
		UpdateHostRequestDtoAlpnH3H2HTTP11,
		UpdateHostRequestDtoAlpnH3H2,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateHostRequestDtoAlpn) MarshalText() ([]byte, error) {
	switch s {
	case UpdateHostRequestDtoAlpnH3:
		return []byte(s), nil
	case UpdateHostRequestDtoAlpnH2:
		return []byte(s), nil
	case UpdateHostRequestDtoAlpnHTTP11:
		return []byte(s), nil
	case UpdateHostRequestDtoAlpnH2HTTP11:
		return []byte(s), nil
	case UpdateHostRequestDtoAlpnH3H2HTTP11:
		return []byte(s), nil
	case UpdateHostRequestDtoAlpnH3H2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateHostRequestDtoAlpn) UnmarshalText(data []byte) error {
	switch UpdateHostRequestDtoAlpn(data) {
	case UpdateHostRequestDtoAlpnH3:
		*s = UpdateHostRequestDtoAlpnH3
		return nil
	case UpdateHostRequestDtoAlpnH2:
		*s = UpdateHostRequestDtoAlpnH2
		return nil
	case UpdateHostRequestDtoAlpnHTTP11:
		*s = UpdateHostRequestDtoAlpnHTTP11
		return nil
	case UpdateHostRequestDtoAlpnH2HTTP11:
		*s = UpdateHostRequestDtoAlpnH2HTTP11
		return nil
	case UpdateHostRequestDtoAlpnH3H2HTTP11:
		*s = UpdateHostRequestDtoAlpnH3H2HTTP11
		return nil
	case UpdateHostRequestDtoAlpnH3H2:
		*s = UpdateHostRequestDtoAlpnH3H2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type UpdateHostRequestDtoFingerprint string

const (
	UpdateHostRequestDtoFingerprintChrome     UpdateHostRequestDtoFingerprint = "chrome"
	UpdateHostRequestDtoFingerprintFirefox    UpdateHostRequestDtoFingerprint = "firefox"
	UpdateHostRequestDtoFingerprintSafari     UpdateHostRequestDtoFingerprint = "safari"
	UpdateHostRequestDtoFingerprintIos        UpdateHostRequestDtoFingerprint = "ios"
	UpdateHostRequestDtoFingerprintAndroid    UpdateHostRequestDtoFingerprint = "android"
	UpdateHostRequestDtoFingerprintEdge       UpdateHostRequestDtoFingerprint = "edge"
	UpdateHostRequestDtoFingerprintQq         UpdateHostRequestDtoFingerprint = "qq"
	UpdateHostRequestDtoFingerprintRandom     UpdateHostRequestDtoFingerprint = "random"
	UpdateHostRequestDtoFingerprintRandomized UpdateHostRequestDtoFingerprint = "randomized"
)

// AllValues returns all UpdateHostRequestDtoFingerprint values.
func (UpdateHostRequestDtoFingerprint) AllValues() []UpdateHostRequestDtoFingerprint {
	return []UpdateHostRequestDtoFingerprint{
		UpdateHostRequestDtoFingerprintChrome,
		UpdateHostRequestDtoFingerprintFirefox,
		UpdateHostRequestDtoFingerprintSafari,
		UpdateHostRequestDtoFingerprintIos,
		UpdateHostRequestDtoFingerprintAndroid,
		UpdateHostRequestDtoFingerprintEdge,
		UpdateHostRequestDtoFingerprintQq,
		UpdateHostRequestDtoFingerprintRandom,
		UpdateHostRequestDtoFingerprintRandomized,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateHostRequestDtoFingerprint) MarshalText() ([]byte, error) {
	switch s {
	case UpdateHostRequestDtoFingerprintChrome:
		return []byte(s), nil
	case UpdateHostRequestDtoFingerprintFirefox:
		return []byte(s), nil
	case UpdateHostRequestDtoFingerprintSafari:
		return []byte(s), nil
	case UpdateHostRequestDtoFingerprintIos:
		return []byte(s), nil
	case UpdateHostRequestDtoFingerprintAndroid:
		return []byte(s), nil
	case UpdateHostRequestDtoFingerprintEdge:
		return []byte(s), nil
	case UpdateHostRequestDtoFingerprintQq:
		return []byte(s), nil
	case UpdateHostRequestDtoFingerprintRandom:
		return []byte(s), nil
	case UpdateHostRequestDtoFingerprintRandomized:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateHostRequestDtoFingerprint) UnmarshalText(data []byte) error {
	switch UpdateHostRequestDtoFingerprint(data) {
	case UpdateHostRequestDtoFingerprintChrome:
		*s = UpdateHostRequestDtoFingerprintChrome
		return nil
	case UpdateHostRequestDtoFingerprintFirefox:
		*s = UpdateHostRequestDtoFingerprintFirefox
		return nil
	case UpdateHostRequestDtoFingerprintSafari:
		*s = UpdateHostRequestDtoFingerprintSafari
		return nil
	case UpdateHostRequestDtoFingerprintIos:
		*s = UpdateHostRequestDtoFingerprintIos
		return nil
	case UpdateHostRequestDtoFingerprintAndroid:
		*s = UpdateHostRequestDtoFingerprintAndroid
		return nil
	case UpdateHostRequestDtoFingerprintEdge:
		*s = UpdateHostRequestDtoFingerprintEdge
		return nil
	case UpdateHostRequestDtoFingerprintQq:
		*s = UpdateHostRequestDtoFingerprintQq
		return nil
	case UpdateHostRequestDtoFingerprintRandom:
		*s = UpdateHostRequestDtoFingerprintRandom
		return nil
	case UpdateHostRequestDtoFingerprintRandomized:
		*s = UpdateHostRequestDtoFingerprintRandomized
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type UpdateHostRequestDtoInbound struct {
	ConfigProfileUuid        uuid.UUID `json:"configProfileUuid"`
	ConfigProfileInboundUuid uuid.UUID `json:"configProfileInboundUuid"`
}

// GetConfigProfileUuid returns the value of ConfigProfileUuid.
func (s *UpdateHostRequestDtoInbound) GetConfigProfileUuid() uuid.UUID {
	return s.ConfigProfileUuid
}

// GetConfigProfileInboundUuid returns the value of ConfigProfileInboundUuid.
func (s *UpdateHostRequestDtoInbound) GetConfigProfileInboundUuid() uuid.UUID {
	return s.ConfigProfileInboundUuid
}

// SetConfigProfileUuid sets the value of ConfigProfileUuid.
func (s *UpdateHostRequestDtoInbound) SetConfigProfileUuid(val uuid.UUID) {
	s.ConfigProfileUuid = val
}

// SetConfigProfileInboundUuid sets the value of ConfigProfileInboundUuid.
func (s *UpdateHostRequestDtoInbound) SetConfigProfileInboundUuid(val uuid.UUID) {
	s.ConfigProfileInboundUuid = val
}

type UpdateHostRequestDtoSecurityLayer string

const (
	UpdateHostRequestDtoSecurityLayerDEFAULT UpdateHostRequestDtoSecurityLayer = "DEFAULT"
	UpdateHostRequestDtoSecurityLayerTLS     UpdateHostRequestDtoSecurityLayer = "TLS"
	UpdateHostRequestDtoSecurityLayerNONE    UpdateHostRequestDtoSecurityLayer = "NONE"
)

// AllValues returns all UpdateHostRequestDtoSecurityLayer values.
func (UpdateHostRequestDtoSecurityLayer) AllValues() []UpdateHostRequestDtoSecurityLayer {
	return []UpdateHostRequestDtoSecurityLayer{
		UpdateHostRequestDtoSecurityLayerDEFAULT,
		UpdateHostRequestDtoSecurityLayerTLS,
		UpdateHostRequestDtoSecurityLayerNONE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateHostRequestDtoSecurityLayer) MarshalText() ([]byte, error) {
	switch s {
	case UpdateHostRequestDtoSecurityLayerDEFAULT:
		return []byte(s), nil
	case UpdateHostRequestDtoSecurityLayerTLS:
		return []byte(s), nil
	case UpdateHostRequestDtoSecurityLayerNONE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateHostRequestDtoSecurityLayer) UnmarshalText(data []byte) error {
	switch UpdateHostRequestDtoSecurityLayer(data) {
	case UpdateHostRequestDtoSecurityLayerDEFAULT:
		*s = UpdateHostRequestDtoSecurityLayerDEFAULT
		return nil
	case UpdateHostRequestDtoSecurityLayerTLS:
		*s = UpdateHostRequestDtoSecurityLayerTLS
		return nil
	case UpdateHostRequestDtoSecurityLayerNONE:
		*s = UpdateHostRequestDtoSecurityLayerNONE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/UpdateInfraBillingNodeRequestDto
type UpdateInfraBillingNodeRequestDto struct {
	Uuids         []uuid.UUID `json:"uuids"`
	NextBillingAt time.Time   `json:"nextBillingAt"`
}

// GetUuids returns the value of Uuids.
func (s *UpdateInfraBillingNodeRequestDto) GetUuids() []uuid.UUID {
	return s.Uuids
}

// GetNextBillingAt returns the value of NextBillingAt.
func (s *UpdateInfraBillingNodeRequestDto) GetNextBillingAt() time.Time {
	return s.NextBillingAt
}

// SetUuids sets the value of Uuids.
func (s *UpdateInfraBillingNodeRequestDto) SetUuids(val []uuid.UUID) {
	s.Uuids = val
}

// SetNextBillingAt sets the value of NextBillingAt.
func (s *UpdateInfraBillingNodeRequestDto) SetNextBillingAt(val time.Time) {
	s.NextBillingAt = val
}

// Ref: #/components/schemas/UpdateInfraProviderRequestDto
type UpdateInfraProviderRequestDto struct {
	UUID        uuid.UUID `json:"uuid"`
	Name        OptString `json:"name"`
	FaviconLink OptNilURI `json:"faviconLink"`
	LoginUrl    OptNilURI `json:"loginUrl"`
}

// GetUUID returns the value of UUID.
func (s *UpdateInfraProviderRequestDto) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *UpdateInfraProviderRequestDto) GetName() OptString {
	return s.Name
}

// GetFaviconLink returns the value of FaviconLink.
func (s *UpdateInfraProviderRequestDto) GetFaviconLink() OptNilURI {
	return s.FaviconLink
}

// GetLoginUrl returns the value of LoginUrl.
func (s *UpdateInfraProviderRequestDto) GetLoginUrl() OptNilURI {
	return s.LoginUrl
}

// SetUUID sets the value of UUID.
func (s *UpdateInfraProviderRequestDto) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *UpdateInfraProviderRequestDto) SetName(val OptString) {
	s.Name = val
}

// SetFaviconLink sets the value of FaviconLink.
func (s *UpdateInfraProviderRequestDto) SetFaviconLink(val OptNilURI) {
	s.FaviconLink = val
}

// SetLoginUrl sets the value of LoginUrl.
func (s *UpdateInfraProviderRequestDto) SetLoginUrl(val OptNilURI) {
	s.LoginUrl = val
}

// Ref: #/components/schemas/UpdateInternalSquadRequestDto
type UpdateInternalSquadRequestDto struct {
	UUID     uuid.UUID   `json:"uuid"`
	Name     OptString   `json:"name"`
	Inbounds []uuid.UUID `json:"inbounds"`
}

// GetUUID returns the value of UUID.
func (s *UpdateInternalSquadRequestDto) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *UpdateInternalSquadRequestDto) GetName() OptString {
	return s.Name
}

// GetInbounds returns the value of Inbounds.
func (s *UpdateInternalSquadRequestDto) GetInbounds() []uuid.UUID {
	return s.Inbounds
}

// SetUUID sets the value of UUID.
func (s *UpdateInternalSquadRequestDto) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *UpdateInternalSquadRequestDto) SetName(val OptString) {
	s.Name = val
}

// SetInbounds sets the value of Inbounds.
func (s *UpdateInternalSquadRequestDto) SetInbounds(val []uuid.UUID) {
	s.Inbounds = val
}

// Ref: #/components/schemas/UpdateNodeRequestDto
type UpdateNodeRequestDto struct {
	UUID                    uuid.UUID                            `json:"uuid"`
	Name                    OptString                            `json:"name"`
	Address                 OptString                            `json:"address"`
	Port                    OptFloat64                           `json:"port"`
	IsTrafficTrackingActive OptBool                              `json:"isTrafficTrackingActive"`
	TrafficLimitBytes       OptFloat64                           `json:"trafficLimitBytes"`
	NotifyPercent           OptFloat64                           `json:"notifyPercent"`
	TrafficResetDay         OptFloat64                           `json:"trafficResetDay"`
	CountryCode             OptString                            `json:"countryCode"`
	ConsumptionMultiplier   OptFloat64                           `json:"consumptionMultiplier"`
	ConfigProfile           OptUpdateNodeRequestDtoConfigProfile `json:"configProfile"`
	ProviderUuid            OptNilUUID                           `json:"providerUuid"`
}

// GetUUID returns the value of UUID.
func (s *UpdateNodeRequestDto) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *UpdateNodeRequestDto) GetName() OptString {
	return s.Name
}

// GetAddress returns the value of Address.
func (s *UpdateNodeRequestDto) GetAddress() OptString {
	return s.Address
}

// GetPort returns the value of Port.
func (s *UpdateNodeRequestDto) GetPort() OptFloat64 {
	return s.Port
}

// GetIsTrafficTrackingActive returns the value of IsTrafficTrackingActive.
func (s *UpdateNodeRequestDto) GetIsTrafficTrackingActive() OptBool {
	return s.IsTrafficTrackingActive
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *UpdateNodeRequestDto) GetTrafficLimitBytes() OptFloat64 {
	return s.TrafficLimitBytes
}

// GetNotifyPercent returns the value of NotifyPercent.
func (s *UpdateNodeRequestDto) GetNotifyPercent() OptFloat64 {
	return s.NotifyPercent
}

// GetTrafficResetDay returns the value of TrafficResetDay.
func (s *UpdateNodeRequestDto) GetTrafficResetDay() OptFloat64 {
	return s.TrafficResetDay
}

// GetCountryCode returns the value of CountryCode.
func (s *UpdateNodeRequestDto) GetCountryCode() OptString {
	return s.CountryCode
}

// GetConsumptionMultiplier returns the value of ConsumptionMultiplier.
func (s *UpdateNodeRequestDto) GetConsumptionMultiplier() OptFloat64 {
	return s.ConsumptionMultiplier
}

// GetConfigProfile returns the value of ConfigProfile.
func (s *UpdateNodeRequestDto) GetConfigProfile() OptUpdateNodeRequestDtoConfigProfile {
	return s.ConfigProfile
}

// GetProviderUuid returns the value of ProviderUuid.
func (s *UpdateNodeRequestDto) GetProviderUuid() OptNilUUID {
	return s.ProviderUuid
}

// SetUUID sets the value of UUID.
func (s *UpdateNodeRequestDto) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *UpdateNodeRequestDto) SetName(val OptString) {
	s.Name = val
}

// SetAddress sets the value of Address.
func (s *UpdateNodeRequestDto) SetAddress(val OptString) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *UpdateNodeRequestDto) SetPort(val OptFloat64) {
	s.Port = val
}

// SetIsTrafficTrackingActive sets the value of IsTrafficTrackingActive.
func (s *UpdateNodeRequestDto) SetIsTrafficTrackingActive(val OptBool) {
	s.IsTrafficTrackingActive = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *UpdateNodeRequestDto) SetTrafficLimitBytes(val OptFloat64) {
	s.TrafficLimitBytes = val
}

// SetNotifyPercent sets the value of NotifyPercent.
func (s *UpdateNodeRequestDto) SetNotifyPercent(val OptFloat64) {
	s.NotifyPercent = val
}

// SetTrafficResetDay sets the value of TrafficResetDay.
func (s *UpdateNodeRequestDto) SetTrafficResetDay(val OptFloat64) {
	s.TrafficResetDay = val
}

// SetCountryCode sets the value of CountryCode.
func (s *UpdateNodeRequestDto) SetCountryCode(val OptString) {
	s.CountryCode = val
}

// SetConsumptionMultiplier sets the value of ConsumptionMultiplier.
func (s *UpdateNodeRequestDto) SetConsumptionMultiplier(val OptFloat64) {
	s.ConsumptionMultiplier = val
}

// SetConfigProfile sets the value of ConfigProfile.
func (s *UpdateNodeRequestDto) SetConfigProfile(val OptUpdateNodeRequestDtoConfigProfile) {
	s.ConfigProfile = val
}

// SetProviderUuid sets the value of ProviderUuid.
func (s *UpdateNodeRequestDto) SetProviderUuid(val OptNilUUID) {
	s.ProviderUuid = val
}

type UpdateNodeRequestDtoConfigProfile struct {
	ActiveConfigProfileUuid uuid.UUID   `json:"activeConfigProfileUuid"`
	ActiveInbounds          []uuid.UUID `json:"activeInbounds"`
}

// GetActiveConfigProfileUuid returns the value of ActiveConfigProfileUuid.
func (s *UpdateNodeRequestDtoConfigProfile) GetActiveConfigProfileUuid() uuid.UUID {
	return s.ActiveConfigProfileUuid
}

// GetActiveInbounds returns the value of ActiveInbounds.
func (s *UpdateNodeRequestDtoConfigProfile) GetActiveInbounds() []uuid.UUID {
	return s.ActiveInbounds
}

// SetActiveConfigProfileUuid sets the value of ActiveConfigProfileUuid.
func (s *UpdateNodeRequestDtoConfigProfile) SetActiveConfigProfileUuid(val uuid.UUID) {
	s.ActiveConfigProfileUuid = val
}

// SetActiveInbounds sets the value of ActiveInbounds.
func (s *UpdateNodeRequestDtoConfigProfile) SetActiveInbounds(val []uuid.UUID) {
	s.ActiveInbounds = val
}

// Ref: #/components/schemas/UpdateRemnawaveSettingsRequestDto
type UpdateRemnawaveSettingsRequestDto struct {
	PasskeySettings  OptUpdateRemnawaveSettingsRequestDtoPasskeySettings  `json:"passkeySettings"`
	Oauth2Settings   OptUpdateRemnawaveSettingsRequestDtoOauth2Settings   `json:"oauth2Settings"`
	TgAuthSettings   OptUpdateRemnawaveSettingsRequestDtoTgAuthSettings   `json:"tgAuthSettings"`
	PasswordSettings OptUpdateRemnawaveSettingsRequestDtoPasswordSettings `json:"passwordSettings"`
	BrandingSettings OptUpdateRemnawaveSettingsRequestDtoBrandingSettings `json:"brandingSettings"`
}

// GetPasskeySettings returns the value of PasskeySettings.
func (s *UpdateRemnawaveSettingsRequestDto) GetPasskeySettings() OptUpdateRemnawaveSettingsRequestDtoPasskeySettings {
	return s.PasskeySettings
}

// GetOauth2Settings returns the value of Oauth2Settings.
func (s *UpdateRemnawaveSettingsRequestDto) GetOauth2Settings() OptUpdateRemnawaveSettingsRequestDtoOauth2Settings {
	return s.Oauth2Settings
}

// GetTgAuthSettings returns the value of TgAuthSettings.
func (s *UpdateRemnawaveSettingsRequestDto) GetTgAuthSettings() OptUpdateRemnawaveSettingsRequestDtoTgAuthSettings {
	return s.TgAuthSettings
}

// GetPasswordSettings returns the value of PasswordSettings.
func (s *UpdateRemnawaveSettingsRequestDto) GetPasswordSettings() OptUpdateRemnawaveSettingsRequestDtoPasswordSettings {
	return s.PasswordSettings
}

// GetBrandingSettings returns the value of BrandingSettings.
func (s *UpdateRemnawaveSettingsRequestDto) GetBrandingSettings() OptUpdateRemnawaveSettingsRequestDtoBrandingSettings {
	return s.BrandingSettings
}

// SetPasskeySettings sets the value of PasskeySettings.
func (s *UpdateRemnawaveSettingsRequestDto) SetPasskeySettings(val OptUpdateRemnawaveSettingsRequestDtoPasskeySettings) {
	s.PasskeySettings = val
}

// SetOauth2Settings sets the value of Oauth2Settings.
func (s *UpdateRemnawaveSettingsRequestDto) SetOauth2Settings(val OptUpdateRemnawaveSettingsRequestDtoOauth2Settings) {
	s.Oauth2Settings = val
}

// SetTgAuthSettings sets the value of TgAuthSettings.
func (s *UpdateRemnawaveSettingsRequestDto) SetTgAuthSettings(val OptUpdateRemnawaveSettingsRequestDtoTgAuthSettings) {
	s.TgAuthSettings = val
}

// SetPasswordSettings sets the value of PasswordSettings.
func (s *UpdateRemnawaveSettingsRequestDto) SetPasswordSettings(val OptUpdateRemnawaveSettingsRequestDtoPasswordSettings) {
	s.PasswordSettings = val
}

// SetBrandingSettings sets the value of BrandingSettings.
func (s *UpdateRemnawaveSettingsRequestDto) SetBrandingSettings(val OptUpdateRemnawaveSettingsRequestDtoBrandingSettings) {
	s.BrandingSettings = val
}

type UpdateRemnawaveSettingsRequestDtoBrandingSettings struct {
	Title   NilString `json:"title"`
	LogoUrl NilURI    `json:"logoUrl"`
}

// GetTitle returns the value of Title.
func (s *UpdateRemnawaveSettingsRequestDtoBrandingSettings) GetTitle() NilString {
	return s.Title
}

// GetLogoUrl returns the value of LogoUrl.
func (s *UpdateRemnawaveSettingsRequestDtoBrandingSettings) GetLogoUrl() NilURI {
	return s.LogoUrl
}

// SetTitle sets the value of Title.
func (s *UpdateRemnawaveSettingsRequestDtoBrandingSettings) SetTitle(val NilString) {
	s.Title = val
}

// SetLogoUrl sets the value of LogoUrl.
func (s *UpdateRemnawaveSettingsRequestDtoBrandingSettings) SetLogoUrl(val NilURI) {
	s.LogoUrl = val
}

type UpdateRemnawaveSettingsRequestDtoOauth2Settings struct {
	Github   UpdateRemnawaveSettingsRequestDtoOauth2SettingsGithub   `json:"github"`
	Pocketid UpdateRemnawaveSettingsRequestDtoOauth2SettingsPocketid `json:"pocketid"`
	Yandex   UpdateRemnawaveSettingsRequestDtoOauth2SettingsYandex   `json:"yandex"`
}

// GetGithub returns the value of Github.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2Settings) GetGithub() UpdateRemnawaveSettingsRequestDtoOauth2SettingsGithub {
	return s.Github
}

// GetPocketid returns the value of Pocketid.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2Settings) GetPocketid() UpdateRemnawaveSettingsRequestDtoOauth2SettingsPocketid {
	return s.Pocketid
}

// GetYandex returns the value of Yandex.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2Settings) GetYandex() UpdateRemnawaveSettingsRequestDtoOauth2SettingsYandex {
	return s.Yandex
}

// SetGithub sets the value of Github.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2Settings) SetGithub(val UpdateRemnawaveSettingsRequestDtoOauth2SettingsGithub) {
	s.Github = val
}

// SetPocketid sets the value of Pocketid.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2Settings) SetPocketid(val UpdateRemnawaveSettingsRequestDtoOauth2SettingsPocketid) {
	s.Pocketid = val
}

// SetYandex sets the value of Yandex.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2Settings) SetYandex(val UpdateRemnawaveSettingsRequestDtoOauth2SettingsYandex) {
	s.Yandex = val
}

type UpdateRemnawaveSettingsRequestDtoOauth2SettingsGithub struct {
	Enabled       bool      `json:"enabled"`
	ClientId      NilString `json:"clientId"`
	ClientSecret  NilString `json:"clientSecret"`
	AllowedEmails []string  `json:"allowedEmails"`
}

// GetEnabled returns the value of Enabled.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsGithub) GetEnabled() bool {
	return s.Enabled
}

// GetClientId returns the value of ClientId.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsGithub) GetClientId() NilString {
	return s.ClientId
}

// GetClientSecret returns the value of ClientSecret.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsGithub) GetClientSecret() NilString {
	return s.ClientSecret
}

// GetAllowedEmails returns the value of AllowedEmails.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsGithub) GetAllowedEmails() []string {
	return s.AllowedEmails
}

// SetEnabled sets the value of Enabled.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsGithub) SetEnabled(val bool) {
	s.Enabled = val
}

// SetClientId sets the value of ClientId.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsGithub) SetClientId(val NilString) {
	s.ClientId = val
}

// SetClientSecret sets the value of ClientSecret.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsGithub) SetClientSecret(val NilString) {
	s.ClientSecret = val
}

// SetAllowedEmails sets the value of AllowedEmails.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsGithub) SetAllowedEmails(val []string) {
	s.AllowedEmails = val
}

type UpdateRemnawaveSettingsRequestDtoOauth2SettingsPocketid struct {
	Enabled       bool      `json:"enabled"`
	ClientId      NilString `json:"clientId"`
	ClientSecret  NilString `json:"clientSecret"`
	PlainDomain   NilString `json:"plainDomain"`
	AllowedEmails []string  `json:"allowedEmails"`
}

// GetEnabled returns the value of Enabled.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsPocketid) GetEnabled() bool {
	return s.Enabled
}

// GetClientId returns the value of ClientId.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsPocketid) GetClientId() NilString {
	return s.ClientId
}

// GetClientSecret returns the value of ClientSecret.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsPocketid) GetClientSecret() NilString {
	return s.ClientSecret
}

// GetPlainDomain returns the value of PlainDomain.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsPocketid) GetPlainDomain() NilString {
	return s.PlainDomain
}

// GetAllowedEmails returns the value of AllowedEmails.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsPocketid) GetAllowedEmails() []string {
	return s.AllowedEmails
}

// SetEnabled sets the value of Enabled.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsPocketid) SetEnabled(val bool) {
	s.Enabled = val
}

// SetClientId sets the value of ClientId.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsPocketid) SetClientId(val NilString) {
	s.ClientId = val
}

// SetClientSecret sets the value of ClientSecret.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsPocketid) SetClientSecret(val NilString) {
	s.ClientSecret = val
}

// SetPlainDomain sets the value of PlainDomain.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsPocketid) SetPlainDomain(val NilString) {
	s.PlainDomain = val
}

// SetAllowedEmails sets the value of AllowedEmails.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsPocketid) SetAllowedEmails(val []string) {
	s.AllowedEmails = val
}

type UpdateRemnawaveSettingsRequestDtoOauth2SettingsYandex struct {
	Enabled       bool      `json:"enabled"`
	ClientId      NilString `json:"clientId"`
	ClientSecret  NilString `json:"clientSecret"`
	AllowedEmails []string  `json:"allowedEmails"`
}

// GetEnabled returns the value of Enabled.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsYandex) GetEnabled() bool {
	return s.Enabled
}

// GetClientId returns the value of ClientId.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsYandex) GetClientId() NilString {
	return s.ClientId
}

// GetClientSecret returns the value of ClientSecret.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsYandex) GetClientSecret() NilString {
	return s.ClientSecret
}

// GetAllowedEmails returns the value of AllowedEmails.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsYandex) GetAllowedEmails() []string {
	return s.AllowedEmails
}

// SetEnabled sets the value of Enabled.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsYandex) SetEnabled(val bool) {
	s.Enabled = val
}

// SetClientId sets the value of ClientId.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsYandex) SetClientId(val NilString) {
	s.ClientId = val
}

// SetClientSecret sets the value of ClientSecret.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsYandex) SetClientSecret(val NilString) {
	s.ClientSecret = val
}

// SetAllowedEmails sets the value of AllowedEmails.
func (s *UpdateRemnawaveSettingsRequestDtoOauth2SettingsYandex) SetAllowedEmails(val []string) {
	s.AllowedEmails = val
}

type UpdateRemnawaveSettingsRequestDtoPasskeySettings struct {
	Enabled bool      `json:"enabled"`
	RpId    NilString `json:"rpId"`
	Origin  NilString `json:"origin"`
}

// GetEnabled returns the value of Enabled.
func (s *UpdateRemnawaveSettingsRequestDtoPasskeySettings) GetEnabled() bool {
	return s.Enabled
}

// GetRpId returns the value of RpId.
func (s *UpdateRemnawaveSettingsRequestDtoPasskeySettings) GetRpId() NilString {
	return s.RpId
}

// GetOrigin returns the value of Origin.
func (s *UpdateRemnawaveSettingsRequestDtoPasskeySettings) GetOrigin() NilString {
	return s.Origin
}

// SetEnabled sets the value of Enabled.
func (s *UpdateRemnawaveSettingsRequestDtoPasskeySettings) SetEnabled(val bool) {
	s.Enabled = val
}

// SetRpId sets the value of RpId.
func (s *UpdateRemnawaveSettingsRequestDtoPasskeySettings) SetRpId(val NilString) {
	s.RpId = val
}

// SetOrigin sets the value of Origin.
func (s *UpdateRemnawaveSettingsRequestDtoPasskeySettings) SetOrigin(val NilString) {
	s.Origin = val
}

type UpdateRemnawaveSettingsRequestDtoPasswordSettings struct {
	Enabled bool `json:"enabled"`
}

// GetEnabled returns the value of Enabled.
func (s *UpdateRemnawaveSettingsRequestDtoPasswordSettings) GetEnabled() bool {
	return s.Enabled
}

// SetEnabled sets the value of Enabled.
func (s *UpdateRemnawaveSettingsRequestDtoPasswordSettings) SetEnabled(val bool) {
	s.Enabled = val
}

type UpdateRemnawaveSettingsRequestDtoTgAuthSettings struct {
	Enabled  bool      `json:"enabled"`
	BotToken NilString `json:"botToken"`
	AdminIds []string  `json:"adminIds"`
}

// GetEnabled returns the value of Enabled.
func (s *UpdateRemnawaveSettingsRequestDtoTgAuthSettings) GetEnabled() bool {
	return s.Enabled
}

// GetBotToken returns the value of BotToken.
func (s *UpdateRemnawaveSettingsRequestDtoTgAuthSettings) GetBotToken() NilString {
	return s.BotToken
}

// GetAdminIds returns the value of AdminIds.
func (s *UpdateRemnawaveSettingsRequestDtoTgAuthSettings) GetAdminIds() []string {
	return s.AdminIds
}

// SetEnabled sets the value of Enabled.
func (s *UpdateRemnawaveSettingsRequestDtoTgAuthSettings) SetEnabled(val bool) {
	s.Enabled = val
}

// SetBotToken sets the value of BotToken.
func (s *UpdateRemnawaveSettingsRequestDtoTgAuthSettings) SetBotToken(val NilString) {
	s.BotToken = val
}

// SetAdminIds sets the value of AdminIds.
func (s *UpdateRemnawaveSettingsRequestDtoTgAuthSettings) SetAdminIds(val []string) {
	s.AdminIds = val
}

// Ref: #/components/schemas/UpdateSubscriptionSettingsRequestDto
type UpdateSubscriptionSettingsRequestDto struct {
	UUID                          uuid.UUID                                                    `json:"uuid"`
	ProfileTitle                  OptString                                                    `json:"profileTitle"`
	SupportLink                   OptString                                                    `json:"supportLink"`
	ProfileUpdateInterval         OptInt                                                       `json:"profileUpdateInterval"`
	IsProfileWebpageUrlEnabled    OptBool                                                      `json:"isProfileWebpageUrlEnabled"`
	ServeJsonAtBaseSubscription   OptBool                                                      `json:"serveJsonAtBaseSubscription"`
	AddUsernameToBaseSubscription OptBool                                                      `json:"addUsernameToBaseSubscription"`
	IsShowCustomRemarks           OptBool                                                      `json:"isShowCustomRemarks"`
	HappAnnounce                  OptNilString                                                 `json:"happAnnounce"`
	HappRouting                   OptNilString                                                 `json:"happRouting"`
	ExpiredUsersRemarks           []string                                                     `json:"expiredUsersRemarks"`
	LimitedUsersRemarks           []string                                                     `json:"limitedUsersRemarks"`
	DisabledUsersRemarks          []string                                                     `json:"disabledUsersRemarks"`
	CustomResponseHeaders         OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders `json:"customResponseHeaders"`
	RandomizeHosts                OptBool                                                      `json:"randomizeHosts"`
	ResponseRules                 OptUpdateSubscriptionSettingsRequestDtoResponseRules         `json:"responseRules"`
}

// GetUUID returns the value of UUID.
func (s *UpdateSubscriptionSettingsRequestDto) GetUUID() uuid.UUID {
	return s.UUID
}

// GetProfileTitle returns the value of ProfileTitle.
func (s *UpdateSubscriptionSettingsRequestDto) GetProfileTitle() OptString {
	return s.ProfileTitle
}

// GetSupportLink returns the value of SupportLink.
func (s *UpdateSubscriptionSettingsRequestDto) GetSupportLink() OptString {
	return s.SupportLink
}

// GetProfileUpdateInterval returns the value of ProfileUpdateInterval.
func (s *UpdateSubscriptionSettingsRequestDto) GetProfileUpdateInterval() OptInt {
	return s.ProfileUpdateInterval
}

// GetIsProfileWebpageUrlEnabled returns the value of IsProfileWebpageUrlEnabled.
func (s *UpdateSubscriptionSettingsRequestDto) GetIsProfileWebpageUrlEnabled() OptBool {
	return s.IsProfileWebpageUrlEnabled
}

// GetServeJsonAtBaseSubscription returns the value of ServeJsonAtBaseSubscription.
func (s *UpdateSubscriptionSettingsRequestDto) GetServeJsonAtBaseSubscription() OptBool {
	return s.ServeJsonAtBaseSubscription
}

// GetAddUsernameToBaseSubscription returns the value of AddUsernameToBaseSubscription.
func (s *UpdateSubscriptionSettingsRequestDto) GetAddUsernameToBaseSubscription() OptBool {
	return s.AddUsernameToBaseSubscription
}

// GetIsShowCustomRemarks returns the value of IsShowCustomRemarks.
func (s *UpdateSubscriptionSettingsRequestDto) GetIsShowCustomRemarks() OptBool {
	return s.IsShowCustomRemarks
}

// GetHappAnnounce returns the value of HappAnnounce.
func (s *UpdateSubscriptionSettingsRequestDto) GetHappAnnounce() OptNilString {
	return s.HappAnnounce
}

// GetHappRouting returns the value of HappRouting.
func (s *UpdateSubscriptionSettingsRequestDto) GetHappRouting() OptNilString {
	return s.HappRouting
}

// GetExpiredUsersRemarks returns the value of ExpiredUsersRemarks.
func (s *UpdateSubscriptionSettingsRequestDto) GetExpiredUsersRemarks() []string {
	return s.ExpiredUsersRemarks
}

// GetLimitedUsersRemarks returns the value of LimitedUsersRemarks.
func (s *UpdateSubscriptionSettingsRequestDto) GetLimitedUsersRemarks() []string {
	return s.LimitedUsersRemarks
}

// GetDisabledUsersRemarks returns the value of DisabledUsersRemarks.
func (s *UpdateSubscriptionSettingsRequestDto) GetDisabledUsersRemarks() []string {
	return s.DisabledUsersRemarks
}

// GetCustomResponseHeaders returns the value of CustomResponseHeaders.
func (s *UpdateSubscriptionSettingsRequestDto) GetCustomResponseHeaders() OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders {
	return s.CustomResponseHeaders
}

// GetRandomizeHosts returns the value of RandomizeHosts.
func (s *UpdateSubscriptionSettingsRequestDto) GetRandomizeHosts() OptBool {
	return s.RandomizeHosts
}

// GetResponseRules returns the value of ResponseRules.
func (s *UpdateSubscriptionSettingsRequestDto) GetResponseRules() OptUpdateSubscriptionSettingsRequestDtoResponseRules {
	return s.ResponseRules
}

// SetUUID sets the value of UUID.
func (s *UpdateSubscriptionSettingsRequestDto) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetProfileTitle sets the value of ProfileTitle.
func (s *UpdateSubscriptionSettingsRequestDto) SetProfileTitle(val OptString) {
	s.ProfileTitle = val
}

// SetSupportLink sets the value of SupportLink.
func (s *UpdateSubscriptionSettingsRequestDto) SetSupportLink(val OptString) {
	s.SupportLink = val
}

// SetProfileUpdateInterval sets the value of ProfileUpdateInterval.
func (s *UpdateSubscriptionSettingsRequestDto) SetProfileUpdateInterval(val OptInt) {
	s.ProfileUpdateInterval = val
}

// SetIsProfileWebpageUrlEnabled sets the value of IsProfileWebpageUrlEnabled.
func (s *UpdateSubscriptionSettingsRequestDto) SetIsProfileWebpageUrlEnabled(val OptBool) {
	s.IsProfileWebpageUrlEnabled = val
}

// SetServeJsonAtBaseSubscription sets the value of ServeJsonAtBaseSubscription.
func (s *UpdateSubscriptionSettingsRequestDto) SetServeJsonAtBaseSubscription(val OptBool) {
	s.ServeJsonAtBaseSubscription = val
}

// SetAddUsernameToBaseSubscription sets the value of AddUsernameToBaseSubscription.
func (s *UpdateSubscriptionSettingsRequestDto) SetAddUsernameToBaseSubscription(val OptBool) {
	s.AddUsernameToBaseSubscription = val
}

// SetIsShowCustomRemarks sets the value of IsShowCustomRemarks.
func (s *UpdateSubscriptionSettingsRequestDto) SetIsShowCustomRemarks(val OptBool) {
	s.IsShowCustomRemarks = val
}

// SetHappAnnounce sets the value of HappAnnounce.
func (s *UpdateSubscriptionSettingsRequestDto) SetHappAnnounce(val OptNilString) {
	s.HappAnnounce = val
}

// SetHappRouting sets the value of HappRouting.
func (s *UpdateSubscriptionSettingsRequestDto) SetHappRouting(val OptNilString) {
	s.HappRouting = val
}

// SetExpiredUsersRemarks sets the value of ExpiredUsersRemarks.
func (s *UpdateSubscriptionSettingsRequestDto) SetExpiredUsersRemarks(val []string) {
	s.ExpiredUsersRemarks = val
}

// SetLimitedUsersRemarks sets the value of LimitedUsersRemarks.
func (s *UpdateSubscriptionSettingsRequestDto) SetLimitedUsersRemarks(val []string) {
	s.LimitedUsersRemarks = val
}

// SetDisabledUsersRemarks sets the value of DisabledUsersRemarks.
func (s *UpdateSubscriptionSettingsRequestDto) SetDisabledUsersRemarks(val []string) {
	s.DisabledUsersRemarks = val
}

// SetCustomResponseHeaders sets the value of CustomResponseHeaders.
func (s *UpdateSubscriptionSettingsRequestDto) SetCustomResponseHeaders(val OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) {
	s.CustomResponseHeaders = val
}

// SetRandomizeHosts sets the value of RandomizeHosts.
func (s *UpdateSubscriptionSettingsRequestDto) SetRandomizeHosts(val OptBool) {
	s.RandomizeHosts = val
}

// SetResponseRules sets the value of ResponseRules.
func (s *UpdateSubscriptionSettingsRequestDto) SetResponseRules(val OptUpdateSubscriptionSettingsRequestDtoResponseRules) {
	s.ResponseRules = val
}

type UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders map[string]string

func (s *UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) init() UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

type UpdateSubscriptionSettingsRequestDtoResponseRules struct {
	// {"title":"Response Rules Config Version","markdownDescription":"Version of the **response rules**
	// config. Currently supported version is **1**."}.
	Version UpdateSubscriptionSettingsRequestDtoResponseRulesVersion `json:"version"`
	// {"title":"Response Rules","markdownDescription":"Array of **response rules**. Rules are evaluated
	// in order and the first rule that matches is applied. If no rule matches, request will be blocked
	// by default.\n\n**Example:**\n```json\n[\n  {\n    \"name\": \"Blank rule\",\n    \"description\":
	// \"Blank rule\",\n    \"operator\": \"AND\",\n    \"enabled\": true,\n    \"conditions\": [],\n
	// \"responseType\": \"BLOCK\",\n    \"responseModifications\": {\n      \"headers\": []\n    }\n
	// }\n]\n```","defaultSnippets":[]}.
	Rules []UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem `json:"rules"`
}

// GetVersion returns the value of Version.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRules) GetVersion() UpdateSubscriptionSettingsRequestDtoResponseRulesVersion {
	return s.Version
}

// GetRules returns the value of Rules.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRules) GetRules() []UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem {
	return s.Rules
}

// SetVersion sets the value of Version.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRules) SetVersion(val UpdateSubscriptionSettingsRequestDtoResponseRulesVersion) {
	s.Version = val
}

// SetRules sets the value of Rules.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRules) SetRules(val []UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem) {
	s.Rules = val
}

// {"defaultSnippets":[{"label":"Examples: Blank rule","markdownDescription":"Simple blank rule with
// no conditions or modifications.\n```json\n{\n  \"name\": \"Blank rule\",\n  \"description\":
// \"Blank rule\",\n  \"operator\": \"AND\",\n  \"enabled\": true,\n  \"conditions\": [],\n
// \"responseType\": \"BLOCK\",\n  \"responseModifications\": {\n    \"headers\": []\n  }\n}\n```",
// "body":{"name":"Blank rule","description":"Blank rule","operator":"AND","enabled":true,
// "conditions":[],"responseType":"BLOCK","responseModifications":{"headers":[]}}},
// {"label":"Examples: Block Legacy Clients","markdownDescription":"Block requests from legacy
// clients\n```json\n{\n  \"name\": \"Block Legacy Clients\",\n  \"description\": \"Block requests
// from legacy clients\",\n  \"enabled\": true,\n  \"operator\": \"OR\",\n  \"conditions\": [\n
// {\n      \"headerName\": \"user-agent\",\n      \"operator\": \"CONTAINS\",\n      \"value\":
// \"Hiddify\",\n      \"caseSensitive\": true\n    },\n    {\n      \"headerName\": \"user-agent\",
// \n      \"operator\": \"CONTAINS\",\n      \"value\": \"FoxRay\",\n      \"caseSensitive\": true\n
//
//	}\n  ],\n  \"responseType\": \"BLOCK\"\n}\n```","body":{"name":"Block Legacy Clients",
//
// "description":"Block requests from legacy clients","enabled":true,"operator":"OR",
// "conditions":[{"headerName":"user-agent","operator":"CONTAINS","value":"Hiddify",
// "caseSensitive":true},{"headerName":"user-agent","operator":"CONTAINS","value":"FoxRay",
// "caseSensitive":true}],"responseType":"BLOCK"}}],"title":"Response Rule",
// "markdownDescription":"Response rule configuration.\n\n**Fields:**\n- **name**: Name of the
// response rule.\n- **description**: Description of the response rule. Optional.\n- **enabled**:
// Control whether the response rule is enabled or disabled. \n\n - `true` the rule will be applied.
// \n\n - `false` the rule will be always ignored.\n- **operator**: Operator to use for combining
// conditions in the rule.\n- **conditions**: Array of conditions to check against the request
// headers. Conditions are applied with **operator**. If conditions are empty, the rule will be
// matched.\n- **responseType**: Type of the response. Determines the type of **response** to be
// returned when the rule is matched.\n- **responseModifications**: Response modifications to be
// applied when the rule is matched. Optional.\n\n**Example:**\n```json\n{\n  \"name\": \"Block
// Legacy Clients\",\n  \"description\": \"Block requests from legacy clients\",\n  \"enabled\": true,
// \n  \"operator\": \"OR\",\n  \"conditions\": [\n    {\n      \"headerName\": \"user-agent\",\n
//
//	\"operator\": \"CONTAINS\",\n      \"value\": \"Hiddify\",\n      \"caseSensitive\": true\n    },
//
// \n    {\n      \"headerName\": \"user-agent\",\n      \"operator\": \"CONTAINS\",\n
// \"value\": \"FoxRay\",\n      \"caseSensitive\": true\n    }\n  ],\n  \"responseType\":
// \"BLOCK\"\n}\n```"}.
type UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem struct {
	// {"markdownDescription":"Name of the response rule."}.
	Name string `json:"name"`
	// {"markdownDescription":"Description of the response rule. Optional."}.
	Description OptString `json:"description"`
	// {"markdownDescription":"Control whether the response rule is enabled or disabled. \n\n - `true`
	// the rule will be applied. \n\n - `false` the rule will be always ignored."}.
	Enabled bool `json:"enabled"`
	// {"markdownDescription":"Operator to use for combining conditions in the rule."}.
	Operator UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperator `json:"operator"`
	// {"markdownDescription":"Array of conditions to check against the request headers. Conditions are
	// applied with **operator**. If conditions are empty, the rule will be matched."}.
	Conditions []UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItem `json:"conditions"`
	// {"errorMessage":"Invalid response type. Please select a valid response type.",
	// "markdownDescription":"Type of the response. Determines the type of **response** to be returned
	// when the rule is matched.","markdownEnumDescriptions":["Return **subscription** in XRAY-JSON
	// format. (Using `Xray Json` template)","Return **subscription** in BASE64 encoded string.
	// Compatible with most client application with Xray core.","Return **subscription** in Mihomo format.
	//  (Using `Mihomo` template)","Return **subscription** in Stash format. (Using `Stash` template)",
	// "Return **subscription** in Clash format. (Using `Clash` template) Useful for client application
	// that use Legacy Clash core.","Return **subscription** in Singbox format. (Using `Singbox`
	// template) Format which is used by Singbox client application.","Return **subscription** as browser
	// format. The same as on `/info` route.","**Drop** request and return `403` status code.","**Drop**
	// request and return `404` status code.","**Drop** request and return `451` status code.","**Drop**
	// the socket connection."]}.
	ResponseType UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType `json:"responseType"`
	// {"examples":[{"headers":[{"key":"X-Custom-Header","value":"CustomValue"}]}],
	// "markdownDescription":"Response modifications to be applied when the rule is matched. Optional."}.
	ResponseModifications OptUpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications `json:"responseModifications"`
}

// GetName returns the value of Name.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem) GetDescription() OptString {
	return s.Description
}

// GetEnabled returns the value of Enabled.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem) GetEnabled() bool {
	return s.Enabled
}

// GetOperator returns the value of Operator.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem) GetOperator() UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperator {
	return s.Operator
}

// GetConditions returns the value of Conditions.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem) GetConditions() []UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItem {
	return s.Conditions
}

// GetResponseType returns the value of ResponseType.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem) GetResponseType() UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType {
	return s.ResponseType
}

// GetResponseModifications returns the value of ResponseModifications.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem) GetResponseModifications() OptUpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications {
	return s.ResponseModifications
}

// SetName sets the value of Name.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem) SetDescription(val OptString) {
	s.Description = val
}

// SetEnabled sets the value of Enabled.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem) SetEnabled(val bool) {
	s.Enabled = val
}

// SetOperator sets the value of Operator.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem) SetOperator(val UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperator) {
	s.Operator = val
}

// SetConditions sets the value of Conditions.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem) SetConditions(val []UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItem) {
	s.Conditions = val
}

// SetResponseType sets the value of ResponseType.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem) SetResponseType(val UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType) {
	s.ResponseType = val
}

// SetResponseModifications sets the value of ResponseModifications.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItem) SetResponseModifications(val OptUpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications) {
	s.ResponseModifications = val
}

// {"markdownDescription":"Condition to check against the **headerName**.",
// "defaultSnippets":[{"label":"Examples: Check if header contains \"text/html\"",
// "markdownDescription":"Condition to check if **headerName** contains \"text/html\"",
// "body":{"headerName":"accept","operator":"CONTAINS","value":"text/html","caseSensitive":true}}]}.
type UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItem struct {
	// {"markdownDescription":"**Name** of the HTTP header to check. Must comply with RFC 7230."}.
	HeaderName string `json:"headerName"`
	// {"errorMessage":"Invalid operator. Please select a valid operator.",
	// "markdownDescription":"Operator to use for comparing the `headerName` with `value`.",
	// "markdownEnumDescriptions":["Performs an exact, comparison between the header value and specified
	// string. `string === value`","Ensures the header value does not exactly match the specified string.
	// `string !== value`","Checks if the header value contains the specified string as a substring.
	// `string.includes()`","Verifies the header value does not contain the specified string as a
	// substring. `!string.includes()`","Validates that the header value begins with the specified string.
	//  `string.startsWith()`","Validates that the header value does not begin with the specified string.
	// `!string.startsWith()`","Confirms the header value ends with the specified string. `string.
	// endsWith()`","Confirms the header value does not end with the specified string. `!string.
	// endsWith()`","Evaluates if the header value matches the specified regular expression pattern.
	// `regex.test()`","Evaluates if the header value does not match the specified regular expression
	// pattern. `!regex.test()`"]}.
	Operator UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator `json:"operator"`
	// {"markdownDescription":"**Value** to check against the **headerName**."}.
	Value string `json:"value"`
	// {"markdownDescription":"Whether the value is **case sensitive**. \n\n - `true`: the value will be
	// compared as is. \n\n - `false`: the value will be lowercased **before** comparison."}.
	CaseSensitive bool `json:"caseSensitive"`
}

// GetHeaderName returns the value of HeaderName.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItem) GetHeaderName() string {
	return s.HeaderName
}

// GetOperator returns the value of Operator.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItem) GetOperator() UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator {
	return s.Operator
}

// GetValue returns the value of Value.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItem) GetValue() string {
	return s.Value
}

// GetCaseSensitive returns the value of CaseSensitive.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItem) GetCaseSensitive() bool {
	return s.CaseSensitive
}

// SetHeaderName sets the value of HeaderName.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItem) SetHeaderName(val string) {
	s.HeaderName = val
}

// SetOperator sets the value of Operator.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItem) SetOperator(val UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator) {
	s.Operator = val
}

// SetValue sets the value of Value.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItem) SetValue(val string) {
	s.Value = val
}

// SetCaseSensitive sets the value of CaseSensitive.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItem) SetCaseSensitive(val bool) {
	s.CaseSensitive = val
}

// {"errorMessage":"Invalid operator. Please select a valid operator.",
// "markdownDescription":"Operator to use for comparing the `headerName` with `value`.",
// "markdownEnumDescriptions":["Performs an exact, comparison between the header value and specified
// string. `string === value`","Ensures the header value does not exactly match the specified string.
// `string !== value`","Checks if the header value contains the specified string as a substring.
// `string.includes()`","Verifies the header value does not contain the specified string as a
// substring. `!string.includes()`","Validates that the header value begins with the specified string.
//
//	`string.startsWith()`","Validates that the header value does not begin with the specified string.
//
// `!string.startsWith()`","Confirms the header value ends with the specified string. `string.
// endsWith()`","Confirms the header value does not end with the specified string. `!string.
// endsWith()`","Evaluates if the header value matches the specified regular expression pattern.
// `regex.test()`","Evaluates if the header value does not match the specified regular expression
// pattern. `!regex.test()`"]}.
type UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator string

const (
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorEQUALS        UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator = "EQUALS"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTEQUALS     UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator = "NOT_EQUALS"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorCONTAINS      UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator = "CONTAINS"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTCONTAINS   UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator = "NOT_CONTAINS"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorSTARTSWITH    UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator = "STARTS_WITH"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTSTARTSWITH UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator = "NOT_STARTS_WITH"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorENDSWITH      UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator = "ENDS_WITH"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTENDSWITH   UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator = "NOT_ENDS_WITH"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorREGEX         UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator = "REGEX"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTREGEX      UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator = "NOT_REGEX"
)

// AllValues returns all UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator values.
func (UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator) AllValues() []UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator {
	return []UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator{
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorEQUALS,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTEQUALS,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorCONTAINS,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTCONTAINS,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorSTARTSWITH,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTSTARTSWITH,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorENDSWITH,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTENDSWITH,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorREGEX,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTREGEX,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator) MarshalText() ([]byte, error) {
	switch s {
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorEQUALS:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTEQUALS:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorCONTAINS:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTCONTAINS:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorSTARTSWITH:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTSTARTSWITH:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorENDSWITH:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTENDSWITH:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorREGEX:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTREGEX:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator) UnmarshalText(data []byte) error {
	switch UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperator(data) {
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorEQUALS:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorEQUALS
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTEQUALS:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTEQUALS
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorCONTAINS:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorCONTAINS
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTCONTAINS:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTCONTAINS
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorSTARTSWITH:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorSTARTSWITH
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTSTARTSWITH:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTSTARTSWITH
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorENDSWITH:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorENDSWITH
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTENDSWITH:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTENDSWITH
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorREGEX:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorREGEX
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTREGEX:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemConditionsItemOperatorNOTREGEX
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// {"markdownDescription":"Operator to use for combining conditions in the rule."}.
type UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperator string

const (
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperatorAND UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperator = "AND"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperatorOR  UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperator = "OR"
)

// AllValues returns all UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperator values.
func (UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperator) AllValues() []UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperator {
	return []UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperator{
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperatorAND,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperatorOR,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperator) MarshalText() ([]byte, error) {
	switch s {
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperatorAND:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperatorOR:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperator) UnmarshalText(data []byte) error {
	switch UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperator(data) {
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperatorAND:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperatorAND
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperatorOR:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemOperatorOR
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// {"examples":[{"headers":[{"key":"X-Custom-Header","value":"CustomValue"}]}],
// "markdownDescription":"Response modifications to be applied when the rule is matched. Optional."}.
type UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications struct {
	// {"defaultSnippets":[{"label":"Examples: Add custom header","markdownDescription":"Add a custom
	// header to the response","body":[{"key":"X-Custom-Header","value":"CustomValue"}]}],
	// "markdownDescription":"Array of headers to be added when the rule is matched."}.
	Headers []UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem `json:"headers"`
	// {"markdownDescription":"Override the subscription template with the given name. If not provided,
	// the default subscription template will be used. If the template name is not found, the default
	// subscription template for this type will be used. **This modification have higher priority than
	// settings from External Squads.**"}.
	SubscriptionTemplate OptString `json:"subscriptionTemplate"`
}

// GetHeaders returns the value of Headers.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications) GetHeaders() []UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem {
	return s.Headers
}

// GetSubscriptionTemplate returns the value of SubscriptionTemplate.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications) GetSubscriptionTemplate() OptString {
	return s.SubscriptionTemplate
}

// SetHeaders sets the value of Headers.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications) SetHeaders(val []UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem) {
	s.Headers = val
}

// SetSubscriptionTemplate sets the value of SubscriptionTemplate.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModifications) SetSubscriptionTemplate(val OptString) {
	s.SubscriptionTemplate = val
}

// {"markdownDescription":"**Key** and **value** of the response header will be added to the response.
// "}.
type UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem struct {
	// {"markdownDescription":"Key of the response header. Must comply with RFC 7230."}.
	Key string `json:"key"`
	// {"markdownDescription":"Value of the response header. "}.
	Value string `json:"value"`
}

// GetKey returns the value of Key.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem) GetKey() string {
	return s.Key
}

// GetValue returns the value of Value.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem) GetValue() string {
	return s.Value
}

// SetKey sets the value of Key.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem) SetKey(val string) {
	s.Key = val
}

// SetValue sets the value of Value.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseModificationsHeadersItem) SetValue(val string) {
	s.Value = val
}

// {"errorMessage":"Invalid response type. Please select a valid response type.",
// "markdownDescription":"Type of the response. Determines the type of **response** to be returned
// when the rule is matched.","markdownEnumDescriptions":["Return **subscription** in XRAY-JSON
// format. (Using `Xray Json` template)","Return **subscription** in BASE64 encoded string.
// Compatible with most client application with Xray core.","Return **subscription** in Mihomo format.
//
//	(Using `Mihomo` template)","Return **subscription** in Stash format. (Using `Stash` template)",
//
// "Return **subscription** in Clash format. (Using `Clash` template) Useful for client application
// that use Legacy Clash core.","Return **subscription** in Singbox format. (Using `Singbox`
// template) Format which is used by Singbox client application.","Return **subscription** as browser
// format. The same as on `/info` route.","**Drop** request and return `403` status code.","**Drop**
// request and return `404` status code.","**Drop** request and return `451` status code.","**Drop**
// the socket connection."]}.
type UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType string

const (
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeXRAYJSON      UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType = "XRAY_JSON"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeXRAYBASE64    UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType = "XRAY_BASE64"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeMIHOMO        UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType = "MIHOMO"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSTASH         UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType = "STASH"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeCLASH         UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType = "CLASH"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSINGBOX       UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType = "SINGBOX"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeBROWSER       UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType = "BROWSER"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeBLOCK         UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType = "BLOCK"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE404 UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType = "STATUS_CODE_404"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE451 UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType = "STATUS_CODE_451"
	UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSOCKETDROP    UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType = "SOCKET_DROP"
)

// AllValues returns all UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType values.
func (UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType) AllValues() []UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType {
	return []UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType{
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeXRAYJSON,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeXRAYBASE64,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeMIHOMO,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSTASH,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeCLASH,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSINGBOX,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeBROWSER,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeBLOCK,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE404,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE451,
		UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSOCKETDROP,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType) MarshalText() ([]byte, error) {
	switch s {
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeXRAYJSON:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeXRAYBASE64:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeMIHOMO:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSTASH:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeCLASH:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSINGBOX:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeBROWSER:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeBLOCK:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE404:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE451:
		return []byte(s), nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSOCKETDROP:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType) UnmarshalText(data []byte) error {
	switch UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseType(data) {
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeXRAYJSON:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeXRAYJSON
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeXRAYBASE64:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeXRAYBASE64
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeMIHOMO:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeMIHOMO
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSTASH:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSTASH
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeCLASH:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeCLASH
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSINGBOX:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSINGBOX
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeBROWSER:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeBROWSER
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeBLOCK:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeBLOCK
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE404:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE404
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE451:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSTATUSCODE451
		return nil
	case UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSOCKETDROP:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesRulesItemResponseTypeSOCKETDROP
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// {"title":"Response Rules Config Version","markdownDescription":"Version of the **response rules**
// config. Currently supported version is **1**."}.
type UpdateSubscriptionSettingsRequestDtoResponseRulesVersion string

const (
	UpdateSubscriptionSettingsRequestDtoResponseRulesVersion1 UpdateSubscriptionSettingsRequestDtoResponseRulesVersion = "1"
)

// AllValues returns all UpdateSubscriptionSettingsRequestDtoResponseRulesVersion values.
func (UpdateSubscriptionSettingsRequestDtoResponseRulesVersion) AllValues() []UpdateSubscriptionSettingsRequestDtoResponseRulesVersion {
	return []UpdateSubscriptionSettingsRequestDtoResponseRulesVersion{
		UpdateSubscriptionSettingsRequestDtoResponseRulesVersion1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateSubscriptionSettingsRequestDtoResponseRulesVersion) MarshalText() ([]byte, error) {
	switch s {
	case UpdateSubscriptionSettingsRequestDtoResponseRulesVersion1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateSubscriptionSettingsRequestDtoResponseRulesVersion) UnmarshalText(data []byte) error {
	switch UpdateSubscriptionSettingsRequestDtoResponseRulesVersion(data) {
	case UpdateSubscriptionSettingsRequestDtoResponseRulesVersion1:
		*s = UpdateSubscriptionSettingsRequestDtoResponseRulesVersion1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/UpdateTemplateRequestDto
type UpdateTemplateRequestDto struct {
	UUID                uuid.UUID                             `json:"uuid"`
	Name                OptString                             `json:"name"`
	TemplateJson        *UpdateTemplateRequestDtoTemplateJson `json:"templateJson"`
	EncodedTemplateYaml OptString                             `json:"encodedTemplateYaml"`
}

// GetUUID returns the value of UUID.
func (s *UpdateTemplateRequestDto) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *UpdateTemplateRequestDto) GetName() OptString {
	return s.Name
}

// GetTemplateJson returns the value of TemplateJson.
func (s *UpdateTemplateRequestDto) GetTemplateJson() *UpdateTemplateRequestDtoTemplateJson {
	return s.TemplateJson
}

// GetEncodedTemplateYaml returns the value of EncodedTemplateYaml.
func (s *UpdateTemplateRequestDto) GetEncodedTemplateYaml() OptString {
	return s.EncodedTemplateYaml
}

// SetUUID sets the value of UUID.
func (s *UpdateTemplateRequestDto) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *UpdateTemplateRequestDto) SetName(val OptString) {
	s.Name = val
}

// SetTemplateJson sets the value of TemplateJson.
func (s *UpdateTemplateRequestDto) SetTemplateJson(val *UpdateTemplateRequestDtoTemplateJson) {
	s.TemplateJson = val
}

// SetEncodedTemplateYaml sets the value of EncodedTemplateYaml.
func (s *UpdateTemplateRequestDto) SetEncodedTemplateYaml(val OptString) {
	s.EncodedTemplateYaml = val
}

type UpdateTemplateRequestDtoTemplateJson struct{}

// Ref: #/components/schemas/UpdateUserRequestDto
type UpdateUserRequestDto struct {
	// Username of the user.
	Username OptString `json:"username"`
	// UUID of the user. UUID has higher priority than username, so if both are provided, username will
	// be ignored.
	UUID   OptUUID                       `json:"uuid"`
	Status OptUpdateUserRequestDtoStatus `json:"status"`
	// Traffic limit in bytes. 0 - unlimited.
	TrafficLimitBytes OptInt `json:"trafficLimitBytes"`
	// Available reset periods.
	TrafficLimitStrategy OptUpdateUserRequestDtoTrafficLimitStrategy `json:"trafficLimitStrategy"`
	// Expiration date: 2025-01-17T15:38:45.065Z.
	ExpireAt             OptDateTime  `json:"expireAt"`
	Description          OptNilString `json:"description"`
	Tag                  OptNilString `json:"tag"`
	TelegramId           OptNilInt    `json:"telegramId"`
	Email                OptNilString `json:"email"`
	HwidDeviceLimit      OptNilInt    `json:"hwidDeviceLimit"`
	ActiveInternalSquads []uuid.UUID  `json:"activeInternalSquads"`
	// Optional. External squad UUID.
	ExternalSquadUuid OptNilUUID `json:"externalSquadUuid"`
}

// GetUsername returns the value of Username.
func (s *UpdateUserRequestDto) GetUsername() OptString {
	return s.Username
}

// GetUUID returns the value of UUID.
func (s *UpdateUserRequestDto) GetUUID() OptUUID {
	return s.UUID
}

// GetStatus returns the value of Status.
func (s *UpdateUserRequestDto) GetStatus() OptUpdateUserRequestDtoStatus {
	return s.Status
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *UpdateUserRequestDto) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *UpdateUserRequestDto) GetTrafficLimitStrategy() OptUpdateUserRequestDtoTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetExpireAt returns the value of ExpireAt.
func (s *UpdateUserRequestDto) GetExpireAt() OptDateTime {
	return s.ExpireAt
}

// GetDescription returns the value of Description.
func (s *UpdateUserRequestDto) GetDescription() OptNilString {
	return s.Description
}

// GetTag returns the value of Tag.
func (s *UpdateUserRequestDto) GetTag() OptNilString {
	return s.Tag
}

// GetTelegramId returns the value of TelegramId.
func (s *UpdateUserRequestDto) GetTelegramId() OptNilInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *UpdateUserRequestDto) GetEmail() OptNilString {
	return s.Email
}

// GetHwidDeviceLimit returns the value of HwidDeviceLimit.
func (s *UpdateUserRequestDto) GetHwidDeviceLimit() OptNilInt {
	return s.HwidDeviceLimit
}

// GetActiveInternalSquads returns the value of ActiveInternalSquads.
func (s *UpdateUserRequestDto) GetActiveInternalSquads() []uuid.UUID {
	return s.ActiveInternalSquads
}

// GetExternalSquadUuid returns the value of ExternalSquadUuid.
func (s *UpdateUserRequestDto) GetExternalSquadUuid() OptNilUUID {
	return s.ExternalSquadUuid
}

// SetUsername sets the value of Username.
func (s *UpdateUserRequestDto) SetUsername(val OptString) {
	s.Username = val
}

// SetUUID sets the value of UUID.
func (s *UpdateUserRequestDto) SetUUID(val OptUUID) {
	s.UUID = val
}

// SetStatus sets the value of Status.
func (s *UpdateUserRequestDto) SetStatus(val OptUpdateUserRequestDtoStatus) {
	s.Status = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *UpdateUserRequestDto) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *UpdateUserRequestDto) SetTrafficLimitStrategy(val OptUpdateUserRequestDtoTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *UpdateUserRequestDto) SetExpireAt(val OptDateTime) {
	s.ExpireAt = val
}

// SetDescription sets the value of Description.
func (s *UpdateUserRequestDto) SetDescription(val OptNilString) {
	s.Description = val
}

// SetTag sets the value of Tag.
func (s *UpdateUserRequestDto) SetTag(val OptNilString) {
	s.Tag = val
}

// SetTelegramId sets the value of TelegramId.
func (s *UpdateUserRequestDto) SetTelegramId(val OptNilInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *UpdateUserRequestDto) SetEmail(val OptNilString) {
	s.Email = val
}

// SetHwidDeviceLimit sets the value of HwidDeviceLimit.
func (s *UpdateUserRequestDto) SetHwidDeviceLimit(val OptNilInt) {
	s.HwidDeviceLimit = val
}

// SetActiveInternalSquads sets the value of ActiveInternalSquads.
func (s *UpdateUserRequestDto) SetActiveInternalSquads(val []uuid.UUID) {
	s.ActiveInternalSquads = val
}

// SetExternalSquadUuid sets the value of ExternalSquadUuid.
func (s *UpdateUserRequestDto) SetExternalSquadUuid(val OptNilUUID) {
	s.ExternalSquadUuid = val
}

type UpdateUserRequestDtoStatus string

const (
	UpdateUserRequestDtoStatusACTIVE   UpdateUserRequestDtoStatus = "ACTIVE"
	UpdateUserRequestDtoStatusDISABLED UpdateUserRequestDtoStatus = "DISABLED"
)

// AllValues returns all UpdateUserRequestDtoStatus values.
func (UpdateUserRequestDtoStatus) AllValues() []UpdateUserRequestDtoStatus {
	return []UpdateUserRequestDtoStatus{
		UpdateUserRequestDtoStatusACTIVE,
		UpdateUserRequestDtoStatusDISABLED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateUserRequestDtoStatus) MarshalText() ([]byte, error) {
	switch s {
	case UpdateUserRequestDtoStatusACTIVE:
		return []byte(s), nil
	case UpdateUserRequestDtoStatusDISABLED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateUserRequestDtoStatus) UnmarshalText(data []byte) error {
	switch UpdateUserRequestDtoStatus(data) {
	case UpdateUserRequestDtoStatusACTIVE:
		*s = UpdateUserRequestDtoStatusACTIVE
		return nil
	case UpdateUserRequestDtoStatusDISABLED:
		*s = UpdateUserRequestDtoStatusDISABLED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Available reset periods.
type UpdateUserRequestDtoTrafficLimitStrategy string

const (
	UpdateUserRequestDtoTrafficLimitStrategyNORESET UpdateUserRequestDtoTrafficLimitStrategy = "NO_RESET"
	UpdateUserRequestDtoTrafficLimitStrategyDAY     UpdateUserRequestDtoTrafficLimitStrategy = "DAY"
	UpdateUserRequestDtoTrafficLimitStrategyWEEK    UpdateUserRequestDtoTrafficLimitStrategy = "WEEK"
	UpdateUserRequestDtoTrafficLimitStrategyMONTH   UpdateUserRequestDtoTrafficLimitStrategy = "MONTH"
)

// AllValues returns all UpdateUserRequestDtoTrafficLimitStrategy values.
func (UpdateUserRequestDtoTrafficLimitStrategy) AllValues() []UpdateUserRequestDtoTrafficLimitStrategy {
	return []UpdateUserRequestDtoTrafficLimitStrategy{
		UpdateUserRequestDtoTrafficLimitStrategyNORESET,
		UpdateUserRequestDtoTrafficLimitStrategyDAY,
		UpdateUserRequestDtoTrafficLimitStrategyWEEK,
		UpdateUserRequestDtoTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateUserRequestDtoTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case UpdateUserRequestDtoTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case UpdateUserRequestDtoTrafficLimitStrategyDAY:
		return []byte(s), nil
	case UpdateUserRequestDtoTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case UpdateUserRequestDtoTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateUserRequestDtoTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch UpdateUserRequestDtoTrafficLimitStrategy(data) {
	case UpdateUserRequestDtoTrafficLimitStrategyNORESET:
		*s = UpdateUserRequestDtoTrafficLimitStrategyNORESET
		return nil
	case UpdateUserRequestDtoTrafficLimitStrategyDAY:
		*s = UpdateUserRequestDtoTrafficLimitStrategyDAY
		return nil
	case UpdateUserRequestDtoTrafficLimitStrategyWEEK:
		*s = UpdateUserRequestDtoTrafficLimitStrategyWEEK
		return nil
	case UpdateUserRequestDtoTrafficLimitStrategyMONTH:
		*s = UpdateUserRequestDtoTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/UserResponse
type UserResponse struct {
	Response UserResponseResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *UserResponse) GetResponse() UserResponseResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *UserResponse) SetResponse(val UserResponseResponse) {
	s.Response = val
}

func (*UserResponse) usersControllerCreateUserRes()             {}
func (*UserResponse) usersControllerDisableUserRes()            {}
func (*UserResponse) usersControllerEnableUserRes()             {}
func (*UserResponse) usersControllerGetUserByShortUuidRes()     {}
func (*UserResponse) usersControllerGetUserByUsernameRes()      {}
func (*UserResponse) usersControllerGetUserByUuidRes()          {}
func (*UserResponse) usersControllerResetUserTrafficRes()       {}
func (*UserResponse) usersControllerRevokeUserSubscriptionRes() {}
func (*UserResponse) usersControllerUpdateUserRes()             {}

type UserResponseResponse struct {
	UUID                     uuid.UUID                     `json:"uuid"`
	ShortUuid                string                        `json:"shortUuid"`
	Username                 string                        `json:"username"`
	Status                   OptUserResponseResponseStatus `json:"status"`
	UsedTrafficBytes         float64                       `json:"usedTrafficBytes"`
	LifetimeUsedTrafficBytes float64                       `json:"lifetimeUsedTrafficBytes"`
	TrafficLimitBytes        OptInt                        `json:"trafficLimitBytes"`
	// Available reset periods.
	TrafficLimitStrategy   OptUserResponseResponseTrafficLimitStrategy    `json:"trafficLimitStrategy"`
	SubLastUserAgent       NilString                                      `json:"subLastUserAgent"`
	SubLastOpenedAt        NilDateTime                                    `json:"subLastOpenedAt"`
	ExpireAt               time.Time                                      `json:"expireAt"`
	OnlineAt               NilDateTime                                    `json:"onlineAt"`
	SubRevokedAt           NilDateTime                                    `json:"subRevokedAt"`
	LastTrafficResetAt     NilDateTime                                    `json:"lastTrafficResetAt"`
	TrojanPassword         string                                         `json:"trojanPassword"`
	VlessUuid              uuid.UUID                                      `json:"vlessUuid"`
	SsPassword             string                                         `json:"ssPassword"`
	Description            NilString                                      `json:"description"`
	Tag                    NilString                                      `json:"tag"`
	TelegramId             NilInt                                         `json:"telegramId"`
	Email                  NilString                                      `json:"email"`
	HwidDeviceLimit        NilInt                                         `json:"hwidDeviceLimit"`
	FirstConnectedAt       NilDateTime                                    `json:"firstConnectedAt"`
	LastTriggeredThreshold OptInt                                         `json:"lastTriggeredThreshold"`
	CreatedAt              time.Time                                      `json:"createdAt"`
	UpdatedAt              time.Time                                      `json:"updatedAt"`
	ActiveInternalSquads   []UserResponseResponseActiveInternalSquadsItem `json:"activeInternalSquads"`
	ExternalSquadUuid      NilUUID                                        `json:"externalSquadUuid"`
	SubscriptionUrl        string                                         `json:"subscriptionUrl"`
	LastConnectedNode      NilUserResponseResponseLastConnectedNode       `json:"lastConnectedNode"`
	Happ                   UserResponseResponseHapp                       `json:"happ"`
}

// GetUUID returns the value of UUID.
func (s *UserResponseResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetShortUuid returns the value of ShortUuid.
func (s *UserResponseResponse) GetShortUuid() string {
	return s.ShortUuid
}

// GetUsername returns the value of Username.
func (s *UserResponseResponse) GetUsername() string {
	return s.Username
}

// GetStatus returns the value of Status.
func (s *UserResponseResponse) GetStatus() OptUserResponseResponseStatus {
	return s.Status
}

// GetUsedTrafficBytes returns the value of UsedTrafficBytes.
func (s *UserResponseResponse) GetUsedTrafficBytes() float64 {
	return s.UsedTrafficBytes
}

// GetLifetimeUsedTrafficBytes returns the value of LifetimeUsedTrafficBytes.
func (s *UserResponseResponse) GetLifetimeUsedTrafficBytes() float64 {
	return s.LifetimeUsedTrafficBytes
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *UserResponseResponse) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *UserResponseResponse) GetTrafficLimitStrategy() OptUserResponseResponseTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetSubLastUserAgent returns the value of SubLastUserAgent.
func (s *UserResponseResponse) GetSubLastUserAgent() NilString {
	return s.SubLastUserAgent
}

// GetSubLastOpenedAt returns the value of SubLastOpenedAt.
func (s *UserResponseResponse) GetSubLastOpenedAt() NilDateTime {
	return s.SubLastOpenedAt
}

// GetExpireAt returns the value of ExpireAt.
func (s *UserResponseResponse) GetExpireAt() time.Time {
	return s.ExpireAt
}

// GetOnlineAt returns the value of OnlineAt.
func (s *UserResponseResponse) GetOnlineAt() NilDateTime {
	return s.OnlineAt
}

// GetSubRevokedAt returns the value of SubRevokedAt.
func (s *UserResponseResponse) GetSubRevokedAt() NilDateTime {
	return s.SubRevokedAt
}

// GetLastTrafficResetAt returns the value of LastTrafficResetAt.
func (s *UserResponseResponse) GetLastTrafficResetAt() NilDateTime {
	return s.LastTrafficResetAt
}

// GetTrojanPassword returns the value of TrojanPassword.
func (s *UserResponseResponse) GetTrojanPassword() string {
	return s.TrojanPassword
}

// GetVlessUuid returns the value of VlessUuid.
func (s *UserResponseResponse) GetVlessUuid() uuid.UUID {
	return s.VlessUuid
}

// GetSsPassword returns the value of SsPassword.
func (s *UserResponseResponse) GetSsPassword() string {
	return s.SsPassword
}

// GetDescription returns the value of Description.
func (s *UserResponseResponse) GetDescription() NilString {
	return s.Description
}

// GetTag returns the value of Tag.
func (s *UserResponseResponse) GetTag() NilString {
	return s.Tag
}

// GetTelegramId returns the value of TelegramId.
func (s *UserResponseResponse) GetTelegramId() NilInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *UserResponseResponse) GetEmail() NilString {
	return s.Email
}

// GetHwidDeviceLimit returns the value of HwidDeviceLimit.
func (s *UserResponseResponse) GetHwidDeviceLimit() NilInt {
	return s.HwidDeviceLimit
}

// GetFirstConnectedAt returns the value of FirstConnectedAt.
func (s *UserResponseResponse) GetFirstConnectedAt() NilDateTime {
	return s.FirstConnectedAt
}

// GetLastTriggeredThreshold returns the value of LastTriggeredThreshold.
func (s *UserResponseResponse) GetLastTriggeredThreshold() OptInt {
	return s.LastTriggeredThreshold
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserResponseResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserResponseResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetActiveInternalSquads returns the value of ActiveInternalSquads.
func (s *UserResponseResponse) GetActiveInternalSquads() []UserResponseResponseActiveInternalSquadsItem {
	return s.ActiveInternalSquads
}

// GetExternalSquadUuid returns the value of ExternalSquadUuid.
func (s *UserResponseResponse) GetExternalSquadUuid() NilUUID {
	return s.ExternalSquadUuid
}

// GetSubscriptionUrl returns the value of SubscriptionUrl.
func (s *UserResponseResponse) GetSubscriptionUrl() string {
	return s.SubscriptionUrl
}

// GetLastConnectedNode returns the value of LastConnectedNode.
func (s *UserResponseResponse) GetLastConnectedNode() NilUserResponseResponseLastConnectedNode {
	return s.LastConnectedNode
}

// GetHapp returns the value of Happ.
func (s *UserResponseResponse) GetHapp() UserResponseResponseHapp {
	return s.Happ
}

// SetUUID sets the value of UUID.
func (s *UserResponseResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetShortUuid sets the value of ShortUuid.
func (s *UserResponseResponse) SetShortUuid(val string) {
	s.ShortUuid = val
}

// SetUsername sets the value of Username.
func (s *UserResponseResponse) SetUsername(val string) {
	s.Username = val
}

// SetStatus sets the value of Status.
func (s *UserResponseResponse) SetStatus(val OptUserResponseResponseStatus) {
	s.Status = val
}

// SetUsedTrafficBytes sets the value of UsedTrafficBytes.
func (s *UserResponseResponse) SetUsedTrafficBytes(val float64) {
	s.UsedTrafficBytes = val
}

// SetLifetimeUsedTrafficBytes sets the value of LifetimeUsedTrafficBytes.
func (s *UserResponseResponse) SetLifetimeUsedTrafficBytes(val float64) {
	s.LifetimeUsedTrafficBytes = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *UserResponseResponse) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *UserResponseResponse) SetTrafficLimitStrategy(val OptUserResponseResponseTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetSubLastUserAgent sets the value of SubLastUserAgent.
func (s *UserResponseResponse) SetSubLastUserAgent(val NilString) {
	s.SubLastUserAgent = val
}

// SetSubLastOpenedAt sets the value of SubLastOpenedAt.
func (s *UserResponseResponse) SetSubLastOpenedAt(val NilDateTime) {
	s.SubLastOpenedAt = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *UserResponseResponse) SetExpireAt(val time.Time) {
	s.ExpireAt = val
}

// SetOnlineAt sets the value of OnlineAt.
func (s *UserResponseResponse) SetOnlineAt(val NilDateTime) {
	s.OnlineAt = val
}

// SetSubRevokedAt sets the value of SubRevokedAt.
func (s *UserResponseResponse) SetSubRevokedAt(val NilDateTime) {
	s.SubRevokedAt = val
}

// SetLastTrafficResetAt sets the value of LastTrafficResetAt.
func (s *UserResponseResponse) SetLastTrafficResetAt(val NilDateTime) {
	s.LastTrafficResetAt = val
}

// SetTrojanPassword sets the value of TrojanPassword.
func (s *UserResponseResponse) SetTrojanPassword(val string) {
	s.TrojanPassword = val
}

// SetVlessUuid sets the value of VlessUuid.
func (s *UserResponseResponse) SetVlessUuid(val uuid.UUID) {
	s.VlessUuid = val
}

// SetSsPassword sets the value of SsPassword.
func (s *UserResponseResponse) SetSsPassword(val string) {
	s.SsPassword = val
}

// SetDescription sets the value of Description.
func (s *UserResponseResponse) SetDescription(val NilString) {
	s.Description = val
}

// SetTag sets the value of Tag.
func (s *UserResponseResponse) SetTag(val NilString) {
	s.Tag = val
}

// SetTelegramId sets the value of TelegramId.
func (s *UserResponseResponse) SetTelegramId(val NilInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *UserResponseResponse) SetEmail(val NilString) {
	s.Email = val
}

// SetHwidDeviceLimit sets the value of HwidDeviceLimit.
func (s *UserResponseResponse) SetHwidDeviceLimit(val NilInt) {
	s.HwidDeviceLimit = val
}

// SetFirstConnectedAt sets the value of FirstConnectedAt.
func (s *UserResponseResponse) SetFirstConnectedAt(val NilDateTime) {
	s.FirstConnectedAt = val
}

// SetLastTriggeredThreshold sets the value of LastTriggeredThreshold.
func (s *UserResponseResponse) SetLastTriggeredThreshold(val OptInt) {
	s.LastTriggeredThreshold = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserResponseResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserResponseResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetActiveInternalSquads sets the value of ActiveInternalSquads.
func (s *UserResponseResponse) SetActiveInternalSquads(val []UserResponseResponseActiveInternalSquadsItem) {
	s.ActiveInternalSquads = val
}

// SetExternalSquadUuid sets the value of ExternalSquadUuid.
func (s *UserResponseResponse) SetExternalSquadUuid(val NilUUID) {
	s.ExternalSquadUuid = val
}

// SetSubscriptionUrl sets the value of SubscriptionUrl.
func (s *UserResponseResponse) SetSubscriptionUrl(val string) {
	s.SubscriptionUrl = val
}

// SetLastConnectedNode sets the value of LastConnectedNode.
func (s *UserResponseResponse) SetLastConnectedNode(val NilUserResponseResponseLastConnectedNode) {
	s.LastConnectedNode = val
}

// SetHapp sets the value of Happ.
func (s *UserResponseResponse) SetHapp(val UserResponseResponseHapp) {
	s.Happ = val
}

type UserResponseResponseActiveInternalSquadsItem struct {
	UUID uuid.UUID `json:"uuid"`
	Name string    `json:"name"`
}

// GetUUID returns the value of UUID.
func (s *UserResponseResponseActiveInternalSquadsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *UserResponseResponseActiveInternalSquadsItem) GetName() string {
	return s.Name
}

// SetUUID sets the value of UUID.
func (s *UserResponseResponseActiveInternalSquadsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *UserResponseResponseActiveInternalSquadsItem) SetName(val string) {
	s.Name = val
}

type UserResponseResponseHapp struct {
	CryptoLink string `json:"cryptoLink"`
}

// GetCryptoLink returns the value of CryptoLink.
func (s *UserResponseResponseHapp) GetCryptoLink() string {
	return s.CryptoLink
}

// SetCryptoLink sets the value of CryptoLink.
func (s *UserResponseResponseHapp) SetCryptoLink(val string) {
	s.CryptoLink = val
}

type UserResponseResponseLastConnectedNode struct {
	ConnectedAt time.Time `json:"connectedAt"`
	NodeName    string    `json:"nodeName"`
	CountryCode string    `json:"countryCode"`
}

// GetConnectedAt returns the value of ConnectedAt.
func (s *UserResponseResponseLastConnectedNode) GetConnectedAt() time.Time {
	return s.ConnectedAt
}

// GetNodeName returns the value of NodeName.
func (s *UserResponseResponseLastConnectedNode) GetNodeName() string {
	return s.NodeName
}

// GetCountryCode returns the value of CountryCode.
func (s *UserResponseResponseLastConnectedNode) GetCountryCode() string {
	return s.CountryCode
}

// SetConnectedAt sets the value of ConnectedAt.
func (s *UserResponseResponseLastConnectedNode) SetConnectedAt(val time.Time) {
	s.ConnectedAt = val
}

// SetNodeName sets the value of NodeName.
func (s *UserResponseResponseLastConnectedNode) SetNodeName(val string) {
	s.NodeName = val
}

// SetCountryCode sets the value of CountryCode.
func (s *UserResponseResponseLastConnectedNode) SetCountryCode(val string) {
	s.CountryCode = val
}

type UserResponseResponseStatus string

const (
	UserResponseResponseStatusACTIVE   UserResponseResponseStatus = "ACTIVE"
	UserResponseResponseStatusDISABLED UserResponseResponseStatus = "DISABLED"
	UserResponseResponseStatusLIMITED  UserResponseResponseStatus = "LIMITED"
	UserResponseResponseStatusEXPIRED  UserResponseResponseStatus = "EXPIRED"
)

// AllValues returns all UserResponseResponseStatus values.
func (UserResponseResponseStatus) AllValues() []UserResponseResponseStatus {
	return []UserResponseResponseStatus{
		UserResponseResponseStatusACTIVE,
		UserResponseResponseStatusDISABLED,
		UserResponseResponseStatusLIMITED,
		UserResponseResponseStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UserResponseResponseStatus) MarshalText() ([]byte, error) {
	switch s {
	case UserResponseResponseStatusACTIVE:
		return []byte(s), nil
	case UserResponseResponseStatusDISABLED:
		return []byte(s), nil
	case UserResponseResponseStatusLIMITED:
		return []byte(s), nil
	case UserResponseResponseStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UserResponseResponseStatus) UnmarshalText(data []byte) error {
	switch UserResponseResponseStatus(data) {
	case UserResponseResponseStatusACTIVE:
		*s = UserResponseResponseStatusACTIVE
		return nil
	case UserResponseResponseStatusDISABLED:
		*s = UserResponseResponseStatusDISABLED
		return nil
	case UserResponseResponseStatusLIMITED:
		*s = UserResponseResponseStatusLIMITED
		return nil
	case UserResponseResponseStatusEXPIRED:
		*s = UserResponseResponseStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Available reset periods.
type UserResponseResponseTrafficLimitStrategy string

const (
	UserResponseResponseTrafficLimitStrategyNORESET UserResponseResponseTrafficLimitStrategy = "NO_RESET"
	UserResponseResponseTrafficLimitStrategyDAY     UserResponseResponseTrafficLimitStrategy = "DAY"
	UserResponseResponseTrafficLimitStrategyWEEK    UserResponseResponseTrafficLimitStrategy = "WEEK"
	UserResponseResponseTrafficLimitStrategyMONTH   UserResponseResponseTrafficLimitStrategy = "MONTH"
)

// AllValues returns all UserResponseResponseTrafficLimitStrategy values.
func (UserResponseResponseTrafficLimitStrategy) AllValues() []UserResponseResponseTrafficLimitStrategy {
	return []UserResponseResponseTrafficLimitStrategy{
		UserResponseResponseTrafficLimitStrategyNORESET,
		UserResponseResponseTrafficLimitStrategyDAY,
		UserResponseResponseTrafficLimitStrategyWEEK,
		UserResponseResponseTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UserResponseResponseTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case UserResponseResponseTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case UserResponseResponseTrafficLimitStrategyDAY:
		return []byte(s), nil
	case UserResponseResponseTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case UserResponseResponseTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UserResponseResponseTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch UserResponseResponseTrafficLimitStrategy(data) {
	case UserResponseResponseTrafficLimitStrategyNORESET:
		*s = UserResponseResponseTrafficLimitStrategyNORESET
		return nil
	case UserResponseResponseTrafficLimitStrategyDAY:
		*s = UserResponseResponseTrafficLimitStrategyDAY
		return nil
	case UserResponseResponseTrafficLimitStrategyWEEK:
		*s = UserResponseResponseTrafficLimitStrategyWEEK
		return nil
	case UserResponseResponseTrafficLimitStrategyMONTH:
		*s = UserResponseResponseTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryBadRequest struct {
	Message    OptString                                                                                   `json:"message"`
	StatusCode OptFloat64                                                                                  `json:"statusCode"`
	Errors     []UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryBadRequest) GetErrors() []UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryBadRequest) SetErrors(val []UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryBadRequestErrorsItem) {
	s.Errors = val
}

func (*UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryBadRequest) userSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryRes() {
}

type UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryBadRequestErrorsItem struct{}

type UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryInternalServerError) userSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryRes() {
}

type UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsBadRequest struct {
	Message    OptString                                                                                        `json:"message"`
	StatusCode OptFloat64                                                                                       `json:"statusCode"`
	Errors     []UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsBadRequest) GetErrors() []UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsBadRequest) SetErrors(val []UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsBadRequestErrorsItem) {
	s.Errors = val
}

func (*UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsBadRequest) userSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsRes() {
}

type UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsBadRequestErrorsItem struct{}

type UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UserSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsInternalServerError) userSubscriptionRequestHistoryControllerGetSubscriptionRequestHistoryStatsRes() {
}

type UsersBulkActionsControllerBulkAllResetUserTrafficBadRequest struct {
	Message    OptString                                                               `json:"message"`
	StatusCode OptFloat64                                                              `json:"statusCode"`
	Errors     []UsersBulkActionsControllerBulkAllResetUserTrafficBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersBulkActionsControllerBulkAllResetUserTrafficBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersBulkActionsControllerBulkAllResetUserTrafficBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersBulkActionsControllerBulkAllResetUserTrafficBadRequest) GetErrors() []UsersBulkActionsControllerBulkAllResetUserTrafficBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersBulkActionsControllerBulkAllResetUserTrafficBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersBulkActionsControllerBulkAllResetUserTrafficBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersBulkActionsControllerBulkAllResetUserTrafficBadRequest) SetErrors(val []UsersBulkActionsControllerBulkAllResetUserTrafficBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersBulkActionsControllerBulkAllResetUserTrafficBadRequest) usersBulkActionsControllerBulkAllResetUserTrafficRes() {
}

type UsersBulkActionsControllerBulkAllResetUserTrafficBadRequestErrorsItem struct{}

type UsersBulkActionsControllerBulkAllResetUserTrafficInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersBulkActionsControllerBulkAllResetUserTrafficInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersBulkActionsControllerBulkAllResetUserTrafficInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersBulkActionsControllerBulkAllResetUserTrafficInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersBulkActionsControllerBulkAllResetUserTrafficInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersBulkActionsControllerBulkAllResetUserTrafficInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersBulkActionsControllerBulkAllResetUserTrafficInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersBulkActionsControllerBulkAllResetUserTrafficInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersBulkActionsControllerBulkAllResetUserTrafficInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersBulkActionsControllerBulkAllResetUserTrafficInternalServerError) usersBulkActionsControllerBulkAllResetUserTrafficRes() {
}

type UsersBulkActionsControllerBulkDeleteUsersBadRequest struct {
	Message    OptString                                                       `json:"message"`
	StatusCode OptFloat64                                                      `json:"statusCode"`
	Errors     []UsersBulkActionsControllerBulkDeleteUsersBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersBulkActionsControllerBulkDeleteUsersBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersBulkActionsControllerBulkDeleteUsersBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersBulkActionsControllerBulkDeleteUsersBadRequest) GetErrors() []UsersBulkActionsControllerBulkDeleteUsersBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersBulkActionsControllerBulkDeleteUsersBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersBulkActionsControllerBulkDeleteUsersBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersBulkActionsControllerBulkDeleteUsersBadRequest) SetErrors(val []UsersBulkActionsControllerBulkDeleteUsersBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersBulkActionsControllerBulkDeleteUsersBadRequest) usersBulkActionsControllerBulkDeleteUsersRes() {
}

type UsersBulkActionsControllerBulkDeleteUsersBadRequestErrorsItem struct{}

type UsersBulkActionsControllerBulkDeleteUsersByStatusBadRequest struct {
	Message    OptString                                                               `json:"message"`
	StatusCode OptFloat64                                                              `json:"statusCode"`
	Errors     []UsersBulkActionsControllerBulkDeleteUsersByStatusBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersBulkActionsControllerBulkDeleteUsersByStatusBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersBulkActionsControllerBulkDeleteUsersByStatusBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersBulkActionsControllerBulkDeleteUsersByStatusBadRequest) GetErrors() []UsersBulkActionsControllerBulkDeleteUsersByStatusBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersBulkActionsControllerBulkDeleteUsersByStatusBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersBulkActionsControllerBulkDeleteUsersByStatusBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersBulkActionsControllerBulkDeleteUsersByStatusBadRequest) SetErrors(val []UsersBulkActionsControllerBulkDeleteUsersByStatusBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersBulkActionsControllerBulkDeleteUsersByStatusBadRequest) usersBulkActionsControllerBulkDeleteUsersByStatusRes() {
}

type UsersBulkActionsControllerBulkDeleteUsersByStatusBadRequestErrorsItem struct{}

type UsersBulkActionsControllerBulkDeleteUsersByStatusInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersBulkActionsControllerBulkDeleteUsersByStatusInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersBulkActionsControllerBulkDeleteUsersByStatusInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersBulkActionsControllerBulkDeleteUsersByStatusInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersBulkActionsControllerBulkDeleteUsersByStatusInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersBulkActionsControllerBulkDeleteUsersByStatusInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersBulkActionsControllerBulkDeleteUsersByStatusInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersBulkActionsControllerBulkDeleteUsersByStatusInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersBulkActionsControllerBulkDeleteUsersByStatusInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersBulkActionsControllerBulkDeleteUsersByStatusInternalServerError) usersBulkActionsControllerBulkDeleteUsersByStatusRes() {
}

type UsersBulkActionsControllerBulkDeleteUsersInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersBulkActionsControllerBulkDeleteUsersInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersBulkActionsControllerBulkDeleteUsersInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersBulkActionsControllerBulkDeleteUsersInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersBulkActionsControllerBulkDeleteUsersInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersBulkActionsControllerBulkDeleteUsersInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersBulkActionsControllerBulkDeleteUsersInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersBulkActionsControllerBulkDeleteUsersInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersBulkActionsControllerBulkDeleteUsersInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersBulkActionsControllerBulkDeleteUsersInternalServerError) usersBulkActionsControllerBulkDeleteUsersRes() {
}

type UsersBulkActionsControllerBulkResetUserTrafficBadRequest struct {
	Message    OptString                                                            `json:"message"`
	StatusCode OptFloat64                                                           `json:"statusCode"`
	Errors     []UsersBulkActionsControllerBulkResetUserTrafficBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersBulkActionsControllerBulkResetUserTrafficBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersBulkActionsControllerBulkResetUserTrafficBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersBulkActionsControllerBulkResetUserTrafficBadRequest) GetErrors() []UsersBulkActionsControllerBulkResetUserTrafficBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersBulkActionsControllerBulkResetUserTrafficBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersBulkActionsControllerBulkResetUserTrafficBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersBulkActionsControllerBulkResetUserTrafficBadRequest) SetErrors(val []UsersBulkActionsControllerBulkResetUserTrafficBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersBulkActionsControllerBulkResetUserTrafficBadRequest) usersBulkActionsControllerBulkResetUserTrafficRes() {
}

type UsersBulkActionsControllerBulkResetUserTrafficBadRequestErrorsItem struct{}

type UsersBulkActionsControllerBulkResetUserTrafficInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersBulkActionsControllerBulkResetUserTrafficInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersBulkActionsControllerBulkResetUserTrafficInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersBulkActionsControllerBulkResetUserTrafficInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersBulkActionsControllerBulkResetUserTrafficInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersBulkActionsControllerBulkResetUserTrafficInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersBulkActionsControllerBulkResetUserTrafficInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersBulkActionsControllerBulkResetUserTrafficInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersBulkActionsControllerBulkResetUserTrafficInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersBulkActionsControllerBulkResetUserTrafficInternalServerError) usersBulkActionsControllerBulkResetUserTrafficRes() {
}

type UsersBulkActionsControllerBulkRevokeUsersSubscriptionBadRequest struct {
	Message    OptString                                                                   `json:"message"`
	StatusCode OptFloat64                                                                  `json:"statusCode"`
	Errors     []UsersBulkActionsControllerBulkRevokeUsersSubscriptionBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersBulkActionsControllerBulkRevokeUsersSubscriptionBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersBulkActionsControllerBulkRevokeUsersSubscriptionBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersBulkActionsControllerBulkRevokeUsersSubscriptionBadRequest) GetErrors() []UsersBulkActionsControllerBulkRevokeUsersSubscriptionBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersBulkActionsControllerBulkRevokeUsersSubscriptionBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersBulkActionsControllerBulkRevokeUsersSubscriptionBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersBulkActionsControllerBulkRevokeUsersSubscriptionBadRequest) SetErrors(val []UsersBulkActionsControllerBulkRevokeUsersSubscriptionBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersBulkActionsControllerBulkRevokeUsersSubscriptionBadRequest) usersBulkActionsControllerBulkRevokeUsersSubscriptionRes() {
}

type UsersBulkActionsControllerBulkRevokeUsersSubscriptionBadRequestErrorsItem struct{}

type UsersBulkActionsControllerBulkRevokeUsersSubscriptionInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersBulkActionsControllerBulkRevokeUsersSubscriptionInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersBulkActionsControllerBulkRevokeUsersSubscriptionInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersBulkActionsControllerBulkRevokeUsersSubscriptionInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersBulkActionsControllerBulkRevokeUsersSubscriptionInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersBulkActionsControllerBulkRevokeUsersSubscriptionInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersBulkActionsControllerBulkRevokeUsersSubscriptionInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersBulkActionsControllerBulkRevokeUsersSubscriptionInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersBulkActionsControllerBulkRevokeUsersSubscriptionInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersBulkActionsControllerBulkRevokeUsersSubscriptionInternalServerError) usersBulkActionsControllerBulkRevokeUsersSubscriptionRes() {
}

type UsersBulkActionsControllerBulkUpdateAllUsersBadRequest struct {
	Message    OptString                                                          `json:"message"`
	StatusCode OptFloat64                                                         `json:"statusCode"`
	Errors     []UsersBulkActionsControllerBulkUpdateAllUsersBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersBulkActionsControllerBulkUpdateAllUsersBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersBulkActionsControllerBulkUpdateAllUsersBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersBulkActionsControllerBulkUpdateAllUsersBadRequest) GetErrors() []UsersBulkActionsControllerBulkUpdateAllUsersBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersBulkActionsControllerBulkUpdateAllUsersBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersBulkActionsControllerBulkUpdateAllUsersBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersBulkActionsControllerBulkUpdateAllUsersBadRequest) SetErrors(val []UsersBulkActionsControllerBulkUpdateAllUsersBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersBulkActionsControllerBulkUpdateAllUsersBadRequest) usersBulkActionsControllerBulkUpdateAllUsersRes() {
}

type UsersBulkActionsControllerBulkUpdateAllUsersBadRequestErrorsItem struct{}

type UsersBulkActionsControllerBulkUpdateAllUsersInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersBulkActionsControllerBulkUpdateAllUsersInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersBulkActionsControllerBulkUpdateAllUsersInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersBulkActionsControllerBulkUpdateAllUsersInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersBulkActionsControllerBulkUpdateAllUsersInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersBulkActionsControllerBulkUpdateAllUsersInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersBulkActionsControllerBulkUpdateAllUsersInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersBulkActionsControllerBulkUpdateAllUsersInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersBulkActionsControllerBulkUpdateAllUsersInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersBulkActionsControllerBulkUpdateAllUsersInternalServerError) usersBulkActionsControllerBulkUpdateAllUsersRes() {
}

type UsersBulkActionsControllerBulkUpdateUsersBadRequest struct {
	Message    OptString                                                       `json:"message"`
	StatusCode OptFloat64                                                      `json:"statusCode"`
	Errors     []UsersBulkActionsControllerBulkUpdateUsersBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersBulkActionsControllerBulkUpdateUsersBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersBulkActionsControllerBulkUpdateUsersBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersBulkActionsControllerBulkUpdateUsersBadRequest) GetErrors() []UsersBulkActionsControllerBulkUpdateUsersBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersBulkActionsControllerBulkUpdateUsersBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersBulkActionsControllerBulkUpdateUsersBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersBulkActionsControllerBulkUpdateUsersBadRequest) SetErrors(val []UsersBulkActionsControllerBulkUpdateUsersBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersBulkActionsControllerBulkUpdateUsersBadRequest) usersBulkActionsControllerBulkUpdateUsersRes() {
}

type UsersBulkActionsControllerBulkUpdateUsersBadRequestErrorsItem struct{}

type UsersBulkActionsControllerBulkUpdateUsersInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersBulkActionsControllerBulkUpdateUsersInternalServerError) usersBulkActionsControllerBulkUpdateUsersRes() {
}

type UsersBulkActionsControllerBulkUpdateUsersInternalSquadsBadRequest struct {
	Message    OptString                                                                     `json:"message"`
	StatusCode OptFloat64                                                                    `json:"statusCode"`
	Errors     []UsersBulkActionsControllerBulkUpdateUsersInternalSquadsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalSquadsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalSquadsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalSquadsBadRequest) GetErrors() []UsersBulkActionsControllerBulkUpdateUsersInternalSquadsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalSquadsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalSquadsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalSquadsBadRequest) SetErrors(val []UsersBulkActionsControllerBulkUpdateUsersInternalSquadsBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersBulkActionsControllerBulkUpdateUsersInternalSquadsBadRequest) usersBulkActionsControllerBulkUpdateUsersInternalSquadsRes() {
}

type UsersBulkActionsControllerBulkUpdateUsersInternalSquadsBadRequestErrorsItem struct{}

type UsersBulkActionsControllerBulkUpdateUsersInternalSquadsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalSquadsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalSquadsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalSquadsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalSquadsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalSquadsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalSquadsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalSquadsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersBulkActionsControllerBulkUpdateUsersInternalSquadsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersBulkActionsControllerBulkUpdateUsersInternalSquadsInternalServerError) usersBulkActionsControllerBulkUpdateUsersInternalSquadsRes() {
}

type UsersControllerCreateUserBadRequest struct {
	Message    OptString                                       `json:"message"`
	StatusCode OptFloat64                                      `json:"statusCode"`
	Errors     []UsersControllerCreateUserBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersControllerCreateUserBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersControllerCreateUserBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersControllerCreateUserBadRequest) GetErrors() []UsersControllerCreateUserBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersControllerCreateUserBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersControllerCreateUserBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersControllerCreateUserBadRequest) SetErrors(val []UsersControllerCreateUserBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersControllerCreateUserBadRequest) usersControllerCreateUserRes() {}

type UsersControllerCreateUserBadRequestErrorsItem struct{}

type UsersControllerCreateUserInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersControllerCreateUserInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersControllerCreateUserInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersControllerCreateUserInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersControllerCreateUserInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersControllerCreateUserInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersControllerCreateUserInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersControllerCreateUserInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersControllerCreateUserInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersControllerCreateUserInternalServerError) usersControllerCreateUserRes() {}

type UsersControllerDeleteUserBadRequest struct {
	Message    OptString                                       `json:"message"`
	StatusCode OptFloat64                                      `json:"statusCode"`
	Errors     []UsersControllerDeleteUserBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersControllerDeleteUserBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersControllerDeleteUserBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersControllerDeleteUserBadRequest) GetErrors() []UsersControllerDeleteUserBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersControllerDeleteUserBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersControllerDeleteUserBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersControllerDeleteUserBadRequest) SetErrors(val []UsersControllerDeleteUserBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersControllerDeleteUserBadRequest) usersControllerDeleteUserRes() {}

type UsersControllerDeleteUserBadRequestErrorsItem struct{}

type UsersControllerDeleteUserInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersControllerDeleteUserInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersControllerDeleteUserInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersControllerDeleteUserInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersControllerDeleteUserInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersControllerDeleteUserInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersControllerDeleteUserInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersControllerDeleteUserInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersControllerDeleteUserInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersControllerDeleteUserInternalServerError) usersControllerDeleteUserRes() {}

// UsersControllerDeleteUserNotFound is response for UsersControllerDeleteUser operation.
type UsersControllerDeleteUserNotFound struct{}

func (*UsersControllerDeleteUserNotFound) usersControllerDeleteUserRes() {}

type UsersControllerDisableUserBadRequest struct {
	Message    OptString                                        `json:"message"`
	StatusCode OptFloat64                                       `json:"statusCode"`
	Errors     []UsersControllerDisableUserBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersControllerDisableUserBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersControllerDisableUserBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersControllerDisableUserBadRequest) GetErrors() []UsersControllerDisableUserBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersControllerDisableUserBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersControllerDisableUserBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersControllerDisableUserBadRequest) SetErrors(val []UsersControllerDisableUserBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersControllerDisableUserBadRequest) usersControllerDisableUserRes() {}

type UsersControllerDisableUserBadRequestErrorsItem struct{}

type UsersControllerDisableUserInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersControllerDisableUserInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersControllerDisableUserInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersControllerDisableUserInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersControllerDisableUserInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersControllerDisableUserInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersControllerDisableUserInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersControllerDisableUserInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersControllerDisableUserInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersControllerDisableUserInternalServerError) usersControllerDisableUserRes() {}

// UsersControllerDisableUserNotFound is response for UsersControllerDisableUser operation.
type UsersControllerDisableUserNotFound struct{}

func (*UsersControllerDisableUserNotFound) usersControllerDisableUserRes() {}

type UsersControllerEnableUserBadRequest struct {
	Message    OptString                                       `json:"message"`
	StatusCode OptFloat64                                      `json:"statusCode"`
	Errors     []UsersControllerEnableUserBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersControllerEnableUserBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersControllerEnableUserBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersControllerEnableUserBadRequest) GetErrors() []UsersControllerEnableUserBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersControllerEnableUserBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersControllerEnableUserBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersControllerEnableUserBadRequest) SetErrors(val []UsersControllerEnableUserBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersControllerEnableUserBadRequest) usersControllerEnableUserRes() {}

type UsersControllerEnableUserBadRequestErrorsItem struct{}

type UsersControllerEnableUserInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersControllerEnableUserInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersControllerEnableUserInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersControllerEnableUserInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersControllerEnableUserInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersControllerEnableUserInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersControllerEnableUserInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersControllerEnableUserInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersControllerEnableUserInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersControllerEnableUserInternalServerError) usersControllerEnableUserRes() {}

// UsersControllerEnableUserNotFound is response for UsersControllerEnableUser operation.
type UsersControllerEnableUserNotFound struct{}

func (*UsersControllerEnableUserNotFound) usersControllerEnableUserRes() {}

type UsersControllerGetAllTagsBadRequest struct {
	Message    OptString                                       `json:"message"`
	StatusCode OptFloat64                                      `json:"statusCode"`
	Errors     []UsersControllerGetAllTagsBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetAllTagsBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersControllerGetAllTagsBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersControllerGetAllTagsBadRequest) GetErrors() []UsersControllerGetAllTagsBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetAllTagsBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersControllerGetAllTagsBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersControllerGetAllTagsBadRequest) SetErrors(val []UsersControllerGetAllTagsBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersControllerGetAllTagsBadRequest) usersControllerGetAllTagsRes() {}

type UsersControllerGetAllTagsBadRequestErrorsItem struct{}

type UsersControllerGetAllTagsInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersControllerGetAllTagsInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersControllerGetAllTagsInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetAllTagsInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersControllerGetAllTagsInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersControllerGetAllTagsInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersControllerGetAllTagsInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetAllTagsInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersControllerGetAllTagsInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersControllerGetAllTagsInternalServerError) usersControllerGetAllTagsRes() {}

type UsersControllerGetAllUsersBadRequest struct {
	Message    OptString                                        `json:"message"`
	StatusCode OptFloat64                                       `json:"statusCode"`
	Errors     []UsersControllerGetAllUsersBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetAllUsersBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersControllerGetAllUsersBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersControllerGetAllUsersBadRequest) GetErrors() []UsersControllerGetAllUsersBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetAllUsersBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersControllerGetAllUsersBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersControllerGetAllUsersBadRequest) SetErrors(val []UsersControllerGetAllUsersBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersControllerGetAllUsersBadRequest) usersControllerGetAllUsersRes() {}

type UsersControllerGetAllUsersBadRequestErrorsItem struct{}

type UsersControllerGetAllUsersInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersControllerGetAllUsersInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersControllerGetAllUsersInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetAllUsersInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersControllerGetAllUsersInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersControllerGetAllUsersInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersControllerGetAllUsersInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetAllUsersInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersControllerGetAllUsersInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersControllerGetAllUsersInternalServerError) usersControllerGetAllUsersRes() {}

type UsersControllerGetUserAccessibleNodesBadRequest struct {
	Message    OptString                                                   `json:"message"`
	StatusCode OptFloat64                                                  `json:"statusCode"`
	Errors     []UsersControllerGetUserAccessibleNodesBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetUserAccessibleNodesBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersControllerGetUserAccessibleNodesBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersControllerGetUserAccessibleNodesBadRequest) GetErrors() []UsersControllerGetUserAccessibleNodesBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetUserAccessibleNodesBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersControllerGetUserAccessibleNodesBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersControllerGetUserAccessibleNodesBadRequest) SetErrors(val []UsersControllerGetUserAccessibleNodesBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersControllerGetUserAccessibleNodesBadRequest) usersControllerGetUserAccessibleNodesRes() {}

type UsersControllerGetUserAccessibleNodesBadRequestErrorsItem struct{}

type UsersControllerGetUserAccessibleNodesInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersControllerGetUserAccessibleNodesInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersControllerGetUserAccessibleNodesInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetUserAccessibleNodesInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersControllerGetUserAccessibleNodesInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersControllerGetUserAccessibleNodesInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersControllerGetUserAccessibleNodesInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetUserAccessibleNodesInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersControllerGetUserAccessibleNodesInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersControllerGetUserAccessibleNodesInternalServerError) usersControllerGetUserAccessibleNodesRes() {
}

// UsersControllerGetUserAccessibleNodesNotFound is response for UsersControllerGetUserAccessibleNodes operation.
type UsersControllerGetUserAccessibleNodesNotFound struct{}

func (*UsersControllerGetUserAccessibleNodesNotFound) usersControllerGetUserAccessibleNodesRes() {}

type UsersControllerGetUserByShortUuidBadRequest struct {
	Message    OptString                                               `json:"message"`
	StatusCode OptFloat64                                              `json:"statusCode"`
	Errors     []UsersControllerGetUserByShortUuidBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetUserByShortUuidBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersControllerGetUserByShortUuidBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersControllerGetUserByShortUuidBadRequest) GetErrors() []UsersControllerGetUserByShortUuidBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetUserByShortUuidBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersControllerGetUserByShortUuidBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersControllerGetUserByShortUuidBadRequest) SetErrors(val []UsersControllerGetUserByShortUuidBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersControllerGetUserByShortUuidBadRequest) usersControllerGetUserByShortUuidRes() {}

type UsersControllerGetUserByShortUuidBadRequestErrorsItem struct{}

type UsersControllerGetUserByShortUuidInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersControllerGetUserByShortUuidInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersControllerGetUserByShortUuidInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetUserByShortUuidInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersControllerGetUserByShortUuidInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersControllerGetUserByShortUuidInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersControllerGetUserByShortUuidInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetUserByShortUuidInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersControllerGetUserByShortUuidInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersControllerGetUserByShortUuidInternalServerError) usersControllerGetUserByShortUuidRes() {}

// UsersControllerGetUserByShortUuidNotFound is response for UsersControllerGetUserByShortUuid operation.
type UsersControllerGetUserByShortUuidNotFound struct{}

func (*UsersControllerGetUserByShortUuidNotFound) usersControllerGetUserByShortUuidRes() {}

type UsersControllerGetUserByTelegramIdBadRequest struct {
	Message    OptString                                                `json:"message"`
	StatusCode OptFloat64                                               `json:"statusCode"`
	Errors     []UsersControllerGetUserByTelegramIdBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetUserByTelegramIdBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersControllerGetUserByTelegramIdBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersControllerGetUserByTelegramIdBadRequest) GetErrors() []UsersControllerGetUserByTelegramIdBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetUserByTelegramIdBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersControllerGetUserByTelegramIdBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersControllerGetUserByTelegramIdBadRequest) SetErrors(val []UsersControllerGetUserByTelegramIdBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersControllerGetUserByTelegramIdBadRequest) usersControllerGetUserByTelegramIdRes() {}

type UsersControllerGetUserByTelegramIdBadRequestErrorsItem struct{}

type UsersControllerGetUserByTelegramIdInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersControllerGetUserByTelegramIdInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersControllerGetUserByTelegramIdInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetUserByTelegramIdInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersControllerGetUserByTelegramIdInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersControllerGetUserByTelegramIdInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersControllerGetUserByTelegramIdInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetUserByTelegramIdInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersControllerGetUserByTelegramIdInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersControllerGetUserByTelegramIdInternalServerError) usersControllerGetUserByTelegramIdRes() {
}

// UsersControllerGetUserByTelegramIdNotFound is response for UsersControllerGetUserByTelegramId operation.
type UsersControllerGetUserByTelegramIdNotFound struct{}

func (*UsersControllerGetUserByTelegramIdNotFound) usersControllerGetUserByTelegramIdRes() {}

type UsersControllerGetUserByUsernameBadRequest struct {
	Message    OptString                                              `json:"message"`
	StatusCode OptFloat64                                             `json:"statusCode"`
	Errors     []UsersControllerGetUserByUsernameBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetUserByUsernameBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersControllerGetUserByUsernameBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersControllerGetUserByUsernameBadRequest) GetErrors() []UsersControllerGetUserByUsernameBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetUserByUsernameBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersControllerGetUserByUsernameBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersControllerGetUserByUsernameBadRequest) SetErrors(val []UsersControllerGetUserByUsernameBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersControllerGetUserByUsernameBadRequest) usersControllerGetUserByUsernameRes() {}

type UsersControllerGetUserByUsernameBadRequestErrorsItem struct{}

type UsersControllerGetUserByUsernameInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersControllerGetUserByUsernameInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersControllerGetUserByUsernameInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetUserByUsernameInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersControllerGetUserByUsernameInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersControllerGetUserByUsernameInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersControllerGetUserByUsernameInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetUserByUsernameInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersControllerGetUserByUsernameInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersControllerGetUserByUsernameInternalServerError) usersControllerGetUserByUsernameRes() {}

// UsersControllerGetUserByUsernameNotFound is response for UsersControllerGetUserByUsername operation.
type UsersControllerGetUserByUsernameNotFound struct{}

func (*UsersControllerGetUserByUsernameNotFound) usersControllerGetUserByUsernameRes() {}

type UsersControllerGetUserByUuidBadRequest struct {
	Message    OptString                                          `json:"message"`
	StatusCode OptFloat64                                         `json:"statusCode"`
	Errors     []UsersControllerGetUserByUuidBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetUserByUuidBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersControllerGetUserByUuidBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersControllerGetUserByUuidBadRequest) GetErrors() []UsersControllerGetUserByUuidBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetUserByUuidBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersControllerGetUserByUuidBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersControllerGetUserByUuidBadRequest) SetErrors(val []UsersControllerGetUserByUuidBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersControllerGetUserByUuidBadRequest) usersControllerGetUserByUuidRes() {}

type UsersControllerGetUserByUuidBadRequestErrorsItem struct{}

type UsersControllerGetUserByUuidInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersControllerGetUserByUuidInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersControllerGetUserByUuidInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetUserByUuidInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersControllerGetUserByUuidInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersControllerGetUserByUuidInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersControllerGetUserByUuidInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetUserByUuidInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersControllerGetUserByUuidInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersControllerGetUserByUuidInternalServerError) usersControllerGetUserByUuidRes() {}

// UsersControllerGetUserByUuidNotFound is response for UsersControllerGetUserByUuid operation.
type UsersControllerGetUserByUuidNotFound struct{}

func (*UsersControllerGetUserByUuidNotFound) usersControllerGetUserByUuidRes() {}

type UsersControllerGetUserSubscriptionRequestHistoryBadRequest struct {
	Message    OptString                                                              `json:"message"`
	StatusCode OptFloat64                                                             `json:"statusCode"`
	Errors     []UsersControllerGetUserSubscriptionRequestHistoryBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetUserSubscriptionRequestHistoryBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersControllerGetUserSubscriptionRequestHistoryBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersControllerGetUserSubscriptionRequestHistoryBadRequest) GetErrors() []UsersControllerGetUserSubscriptionRequestHistoryBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetUserSubscriptionRequestHistoryBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersControllerGetUserSubscriptionRequestHistoryBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersControllerGetUserSubscriptionRequestHistoryBadRequest) SetErrors(val []UsersControllerGetUserSubscriptionRequestHistoryBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersControllerGetUserSubscriptionRequestHistoryBadRequest) usersControllerGetUserSubscriptionRequestHistoryRes() {
}

type UsersControllerGetUserSubscriptionRequestHistoryBadRequestErrorsItem struct{}

type UsersControllerGetUserSubscriptionRequestHistoryInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersControllerGetUserSubscriptionRequestHistoryInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersControllerGetUserSubscriptionRequestHistoryInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetUserSubscriptionRequestHistoryInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersControllerGetUserSubscriptionRequestHistoryInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersControllerGetUserSubscriptionRequestHistoryInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersControllerGetUserSubscriptionRequestHistoryInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetUserSubscriptionRequestHistoryInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersControllerGetUserSubscriptionRequestHistoryInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersControllerGetUserSubscriptionRequestHistoryInternalServerError) usersControllerGetUserSubscriptionRequestHistoryRes() {
}

// UsersControllerGetUserSubscriptionRequestHistoryNotFound is response for UsersControllerGetUserSubscriptionRequestHistory operation.
type UsersControllerGetUserSubscriptionRequestHistoryNotFound struct{}

func (*UsersControllerGetUserSubscriptionRequestHistoryNotFound) usersControllerGetUserSubscriptionRequestHistoryRes() {
}

type UsersControllerGetUsersByEmailBadRequest struct {
	Message    OptString                                            `json:"message"`
	StatusCode OptFloat64                                           `json:"statusCode"`
	Errors     []UsersControllerGetUsersByEmailBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetUsersByEmailBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersControllerGetUsersByEmailBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersControllerGetUsersByEmailBadRequest) GetErrors() []UsersControllerGetUsersByEmailBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetUsersByEmailBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersControllerGetUsersByEmailBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersControllerGetUsersByEmailBadRequest) SetErrors(val []UsersControllerGetUsersByEmailBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersControllerGetUsersByEmailBadRequest) usersControllerGetUsersByEmailRes() {}

type UsersControllerGetUsersByEmailBadRequestErrorsItem struct{}

type UsersControllerGetUsersByEmailInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersControllerGetUsersByEmailInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersControllerGetUsersByEmailInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetUsersByEmailInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersControllerGetUsersByEmailInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersControllerGetUsersByEmailInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersControllerGetUsersByEmailInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetUsersByEmailInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersControllerGetUsersByEmailInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersControllerGetUsersByEmailInternalServerError) usersControllerGetUsersByEmailRes() {}

// UsersControllerGetUsersByEmailNotFound is response for UsersControllerGetUsersByEmail operation.
type UsersControllerGetUsersByEmailNotFound struct{}

func (*UsersControllerGetUsersByEmailNotFound) usersControllerGetUsersByEmailRes() {}

type UsersControllerGetUsersByTagBadRequest struct {
	Message    OptString                                          `json:"message"`
	StatusCode OptFloat64                                         `json:"statusCode"`
	Errors     []UsersControllerGetUsersByTagBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetUsersByTagBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersControllerGetUsersByTagBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersControllerGetUsersByTagBadRequest) GetErrors() []UsersControllerGetUsersByTagBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetUsersByTagBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersControllerGetUsersByTagBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersControllerGetUsersByTagBadRequest) SetErrors(val []UsersControllerGetUsersByTagBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersControllerGetUsersByTagBadRequest) usersControllerGetUsersByTagRes() {}

type UsersControllerGetUsersByTagBadRequestErrorsItem struct{}

type UsersControllerGetUsersByTagInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersControllerGetUsersByTagInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersControllerGetUsersByTagInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersControllerGetUsersByTagInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersControllerGetUsersByTagInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersControllerGetUsersByTagInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersControllerGetUsersByTagInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersControllerGetUsersByTagInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersControllerGetUsersByTagInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersControllerGetUsersByTagInternalServerError) usersControllerGetUsersByTagRes() {}

// UsersControllerGetUsersByTagNotFound is response for UsersControllerGetUsersByTag operation.
type UsersControllerGetUsersByTagNotFound struct{}

func (*UsersControllerGetUsersByTagNotFound) usersControllerGetUsersByTagRes() {}

type UsersControllerResetUserTrafficBadRequest struct {
	Message    OptString                                             `json:"message"`
	StatusCode OptFloat64                                            `json:"statusCode"`
	Errors     []UsersControllerResetUserTrafficBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersControllerResetUserTrafficBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersControllerResetUserTrafficBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersControllerResetUserTrafficBadRequest) GetErrors() []UsersControllerResetUserTrafficBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersControllerResetUserTrafficBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersControllerResetUserTrafficBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersControllerResetUserTrafficBadRequest) SetErrors(val []UsersControllerResetUserTrafficBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersControllerResetUserTrafficBadRequest) usersControllerResetUserTrafficRes() {}

type UsersControllerResetUserTrafficBadRequestErrorsItem struct{}

type UsersControllerResetUserTrafficInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersControllerResetUserTrafficInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersControllerResetUserTrafficInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersControllerResetUserTrafficInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersControllerResetUserTrafficInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersControllerResetUserTrafficInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersControllerResetUserTrafficInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersControllerResetUserTrafficInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersControllerResetUserTrafficInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersControllerResetUserTrafficInternalServerError) usersControllerResetUserTrafficRes() {}

// UsersControllerResetUserTrafficNotFound is response for UsersControllerResetUserTraffic operation.
type UsersControllerResetUserTrafficNotFound struct{}

func (*UsersControllerResetUserTrafficNotFound) usersControllerResetUserTrafficRes() {}

type UsersControllerRevokeUserSubscriptionBadRequest struct {
	Message    OptString                                                   `json:"message"`
	StatusCode OptFloat64                                                  `json:"statusCode"`
	Errors     []UsersControllerRevokeUserSubscriptionBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersControllerRevokeUserSubscriptionBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersControllerRevokeUserSubscriptionBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersControllerRevokeUserSubscriptionBadRequest) GetErrors() []UsersControllerRevokeUserSubscriptionBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersControllerRevokeUserSubscriptionBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersControllerRevokeUserSubscriptionBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersControllerRevokeUserSubscriptionBadRequest) SetErrors(val []UsersControllerRevokeUserSubscriptionBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersControllerRevokeUserSubscriptionBadRequest) usersControllerRevokeUserSubscriptionRes() {}

type UsersControllerRevokeUserSubscriptionBadRequestErrorsItem struct{}

type UsersControllerRevokeUserSubscriptionInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersControllerRevokeUserSubscriptionInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersControllerRevokeUserSubscriptionInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersControllerRevokeUserSubscriptionInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersControllerRevokeUserSubscriptionInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersControllerRevokeUserSubscriptionInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersControllerRevokeUserSubscriptionInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersControllerRevokeUserSubscriptionInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersControllerRevokeUserSubscriptionInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersControllerRevokeUserSubscriptionInternalServerError) usersControllerRevokeUserSubscriptionRes() {
}

// UsersControllerRevokeUserSubscriptionNotFound is response for UsersControllerRevokeUserSubscription operation.
type UsersControllerRevokeUserSubscriptionNotFound struct{}

func (*UsersControllerRevokeUserSubscriptionNotFound) usersControllerRevokeUserSubscriptionRes() {}

type UsersControllerUpdateUserBadRequest struct {
	Message    OptString                                       `json:"message"`
	StatusCode OptFloat64                                      `json:"statusCode"`
	Errors     []UsersControllerUpdateUserBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersControllerUpdateUserBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersControllerUpdateUserBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersControllerUpdateUserBadRequest) GetErrors() []UsersControllerUpdateUserBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersControllerUpdateUserBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersControllerUpdateUserBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersControllerUpdateUserBadRequest) SetErrors(val []UsersControllerUpdateUserBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersControllerUpdateUserBadRequest) usersControllerUpdateUserRes() {}

type UsersControllerUpdateUserBadRequestErrorsItem struct{}

type UsersControllerUpdateUserInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersControllerUpdateUserInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersControllerUpdateUserInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersControllerUpdateUserInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersControllerUpdateUserInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersControllerUpdateUserInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersControllerUpdateUserInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersControllerUpdateUserInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersControllerUpdateUserInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersControllerUpdateUserInternalServerError) usersControllerUpdateUserRes() {}

// Ref: #/components/schemas/UsersResponse
type UsersResponse struct {
	Response []UsersResponseResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *UsersResponse) GetResponse() []UsersResponseResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *UsersResponse) SetResponse(val []UsersResponseResponseItem) {
	s.Response = val
}

func (*UsersResponse) usersControllerGetUserByTelegramIdRes() {}
func (*UsersResponse) usersControllerGetUsersByEmailRes()     {}
func (*UsersResponse) usersControllerGetUsersByTagRes()       {}

type UsersResponseResponseItem struct {
	UUID                     uuid.UUID                          `json:"uuid"`
	ShortUuid                string                             `json:"shortUuid"`
	Username                 string                             `json:"username"`
	Status                   OptUsersResponseResponseItemStatus `json:"status"`
	UsedTrafficBytes         float64                            `json:"usedTrafficBytes"`
	LifetimeUsedTrafficBytes float64                            `json:"lifetimeUsedTrafficBytes"`
	TrafficLimitBytes        OptInt                             `json:"trafficLimitBytes"`
	// Available reset periods.
	TrafficLimitStrategy   OptUsersResponseResponseItemTrafficLimitStrategy    `json:"trafficLimitStrategy"`
	SubLastUserAgent       NilString                                           `json:"subLastUserAgent"`
	SubLastOpenedAt        NilDateTime                                         `json:"subLastOpenedAt"`
	ExpireAt               time.Time                                           `json:"expireAt"`
	OnlineAt               NilDateTime                                         `json:"onlineAt"`
	SubRevokedAt           NilDateTime                                         `json:"subRevokedAt"`
	LastTrafficResetAt     NilDateTime                                         `json:"lastTrafficResetAt"`
	TrojanPassword         string                                              `json:"trojanPassword"`
	VlessUuid              uuid.UUID                                           `json:"vlessUuid"`
	SsPassword             string                                              `json:"ssPassword"`
	Description            NilString                                           `json:"description"`
	Tag                    NilString                                           `json:"tag"`
	TelegramId             NilInt                                              `json:"telegramId"`
	Email                  NilString                                           `json:"email"`
	HwidDeviceLimit        NilInt                                              `json:"hwidDeviceLimit"`
	FirstConnectedAt       NilDateTime                                         `json:"firstConnectedAt"`
	LastTriggeredThreshold OptInt                                              `json:"lastTriggeredThreshold"`
	CreatedAt              time.Time                                           `json:"createdAt"`
	UpdatedAt              time.Time                                           `json:"updatedAt"`
	ActiveInternalSquads   []UsersResponseResponseItemActiveInternalSquadsItem `json:"activeInternalSquads"`
	ExternalSquadUuid      NilUUID                                             `json:"externalSquadUuid"`
	SubscriptionUrl        string                                              `json:"subscriptionUrl"`
	LastConnectedNode      NilUsersResponseResponseItemLastConnectedNode       `json:"lastConnectedNode"`
	Happ                   UsersResponseResponseItemHapp                       `json:"happ"`
}

// GetUUID returns the value of UUID.
func (s *UsersResponseResponseItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetShortUuid returns the value of ShortUuid.
func (s *UsersResponseResponseItem) GetShortUuid() string {
	return s.ShortUuid
}

// GetUsername returns the value of Username.
func (s *UsersResponseResponseItem) GetUsername() string {
	return s.Username
}

// GetStatus returns the value of Status.
func (s *UsersResponseResponseItem) GetStatus() OptUsersResponseResponseItemStatus {
	return s.Status
}

// GetUsedTrafficBytes returns the value of UsedTrafficBytes.
func (s *UsersResponseResponseItem) GetUsedTrafficBytes() float64 {
	return s.UsedTrafficBytes
}

// GetLifetimeUsedTrafficBytes returns the value of LifetimeUsedTrafficBytes.
func (s *UsersResponseResponseItem) GetLifetimeUsedTrafficBytes() float64 {
	return s.LifetimeUsedTrafficBytes
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *UsersResponseResponseItem) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *UsersResponseResponseItem) GetTrafficLimitStrategy() OptUsersResponseResponseItemTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetSubLastUserAgent returns the value of SubLastUserAgent.
func (s *UsersResponseResponseItem) GetSubLastUserAgent() NilString {
	return s.SubLastUserAgent
}

// GetSubLastOpenedAt returns the value of SubLastOpenedAt.
func (s *UsersResponseResponseItem) GetSubLastOpenedAt() NilDateTime {
	return s.SubLastOpenedAt
}

// GetExpireAt returns the value of ExpireAt.
func (s *UsersResponseResponseItem) GetExpireAt() time.Time {
	return s.ExpireAt
}

// GetOnlineAt returns the value of OnlineAt.
func (s *UsersResponseResponseItem) GetOnlineAt() NilDateTime {
	return s.OnlineAt
}

// GetSubRevokedAt returns the value of SubRevokedAt.
func (s *UsersResponseResponseItem) GetSubRevokedAt() NilDateTime {
	return s.SubRevokedAt
}

// GetLastTrafficResetAt returns the value of LastTrafficResetAt.
func (s *UsersResponseResponseItem) GetLastTrafficResetAt() NilDateTime {
	return s.LastTrafficResetAt
}

// GetTrojanPassword returns the value of TrojanPassword.
func (s *UsersResponseResponseItem) GetTrojanPassword() string {
	return s.TrojanPassword
}

// GetVlessUuid returns the value of VlessUuid.
func (s *UsersResponseResponseItem) GetVlessUuid() uuid.UUID {
	return s.VlessUuid
}

// GetSsPassword returns the value of SsPassword.
func (s *UsersResponseResponseItem) GetSsPassword() string {
	return s.SsPassword
}

// GetDescription returns the value of Description.
func (s *UsersResponseResponseItem) GetDescription() NilString {
	return s.Description
}

// GetTag returns the value of Tag.
func (s *UsersResponseResponseItem) GetTag() NilString {
	return s.Tag
}

// GetTelegramId returns the value of TelegramId.
func (s *UsersResponseResponseItem) GetTelegramId() NilInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *UsersResponseResponseItem) GetEmail() NilString {
	return s.Email
}

// GetHwidDeviceLimit returns the value of HwidDeviceLimit.
func (s *UsersResponseResponseItem) GetHwidDeviceLimit() NilInt {
	return s.HwidDeviceLimit
}

// GetFirstConnectedAt returns the value of FirstConnectedAt.
func (s *UsersResponseResponseItem) GetFirstConnectedAt() NilDateTime {
	return s.FirstConnectedAt
}

// GetLastTriggeredThreshold returns the value of LastTriggeredThreshold.
func (s *UsersResponseResponseItem) GetLastTriggeredThreshold() OptInt {
	return s.LastTriggeredThreshold
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UsersResponseResponseItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UsersResponseResponseItem) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetActiveInternalSquads returns the value of ActiveInternalSquads.
func (s *UsersResponseResponseItem) GetActiveInternalSquads() []UsersResponseResponseItemActiveInternalSquadsItem {
	return s.ActiveInternalSquads
}

// GetExternalSquadUuid returns the value of ExternalSquadUuid.
func (s *UsersResponseResponseItem) GetExternalSquadUuid() NilUUID {
	return s.ExternalSquadUuid
}

// GetSubscriptionUrl returns the value of SubscriptionUrl.
func (s *UsersResponseResponseItem) GetSubscriptionUrl() string {
	return s.SubscriptionUrl
}

// GetLastConnectedNode returns the value of LastConnectedNode.
func (s *UsersResponseResponseItem) GetLastConnectedNode() NilUsersResponseResponseItemLastConnectedNode {
	return s.LastConnectedNode
}

// GetHapp returns the value of Happ.
func (s *UsersResponseResponseItem) GetHapp() UsersResponseResponseItemHapp {
	return s.Happ
}

// SetUUID sets the value of UUID.
func (s *UsersResponseResponseItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetShortUuid sets the value of ShortUuid.
func (s *UsersResponseResponseItem) SetShortUuid(val string) {
	s.ShortUuid = val
}

// SetUsername sets the value of Username.
func (s *UsersResponseResponseItem) SetUsername(val string) {
	s.Username = val
}

// SetStatus sets the value of Status.
func (s *UsersResponseResponseItem) SetStatus(val OptUsersResponseResponseItemStatus) {
	s.Status = val
}

// SetUsedTrafficBytes sets the value of UsedTrafficBytes.
func (s *UsersResponseResponseItem) SetUsedTrafficBytes(val float64) {
	s.UsedTrafficBytes = val
}

// SetLifetimeUsedTrafficBytes sets the value of LifetimeUsedTrafficBytes.
func (s *UsersResponseResponseItem) SetLifetimeUsedTrafficBytes(val float64) {
	s.LifetimeUsedTrafficBytes = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *UsersResponseResponseItem) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *UsersResponseResponseItem) SetTrafficLimitStrategy(val OptUsersResponseResponseItemTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetSubLastUserAgent sets the value of SubLastUserAgent.
func (s *UsersResponseResponseItem) SetSubLastUserAgent(val NilString) {
	s.SubLastUserAgent = val
}

// SetSubLastOpenedAt sets the value of SubLastOpenedAt.
func (s *UsersResponseResponseItem) SetSubLastOpenedAt(val NilDateTime) {
	s.SubLastOpenedAt = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *UsersResponseResponseItem) SetExpireAt(val time.Time) {
	s.ExpireAt = val
}

// SetOnlineAt sets the value of OnlineAt.
func (s *UsersResponseResponseItem) SetOnlineAt(val NilDateTime) {
	s.OnlineAt = val
}

// SetSubRevokedAt sets the value of SubRevokedAt.
func (s *UsersResponseResponseItem) SetSubRevokedAt(val NilDateTime) {
	s.SubRevokedAt = val
}

// SetLastTrafficResetAt sets the value of LastTrafficResetAt.
func (s *UsersResponseResponseItem) SetLastTrafficResetAt(val NilDateTime) {
	s.LastTrafficResetAt = val
}

// SetTrojanPassword sets the value of TrojanPassword.
func (s *UsersResponseResponseItem) SetTrojanPassword(val string) {
	s.TrojanPassword = val
}

// SetVlessUuid sets the value of VlessUuid.
func (s *UsersResponseResponseItem) SetVlessUuid(val uuid.UUID) {
	s.VlessUuid = val
}

// SetSsPassword sets the value of SsPassword.
func (s *UsersResponseResponseItem) SetSsPassword(val string) {
	s.SsPassword = val
}

// SetDescription sets the value of Description.
func (s *UsersResponseResponseItem) SetDescription(val NilString) {
	s.Description = val
}

// SetTag sets the value of Tag.
func (s *UsersResponseResponseItem) SetTag(val NilString) {
	s.Tag = val
}

// SetTelegramId sets the value of TelegramId.
func (s *UsersResponseResponseItem) SetTelegramId(val NilInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *UsersResponseResponseItem) SetEmail(val NilString) {
	s.Email = val
}

// SetHwidDeviceLimit sets the value of HwidDeviceLimit.
func (s *UsersResponseResponseItem) SetHwidDeviceLimit(val NilInt) {
	s.HwidDeviceLimit = val
}

// SetFirstConnectedAt sets the value of FirstConnectedAt.
func (s *UsersResponseResponseItem) SetFirstConnectedAt(val NilDateTime) {
	s.FirstConnectedAt = val
}

// SetLastTriggeredThreshold sets the value of LastTriggeredThreshold.
func (s *UsersResponseResponseItem) SetLastTriggeredThreshold(val OptInt) {
	s.LastTriggeredThreshold = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UsersResponseResponseItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UsersResponseResponseItem) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetActiveInternalSquads sets the value of ActiveInternalSquads.
func (s *UsersResponseResponseItem) SetActiveInternalSquads(val []UsersResponseResponseItemActiveInternalSquadsItem) {
	s.ActiveInternalSquads = val
}

// SetExternalSquadUuid sets the value of ExternalSquadUuid.
func (s *UsersResponseResponseItem) SetExternalSquadUuid(val NilUUID) {
	s.ExternalSquadUuid = val
}

// SetSubscriptionUrl sets the value of SubscriptionUrl.
func (s *UsersResponseResponseItem) SetSubscriptionUrl(val string) {
	s.SubscriptionUrl = val
}

// SetLastConnectedNode sets the value of LastConnectedNode.
func (s *UsersResponseResponseItem) SetLastConnectedNode(val NilUsersResponseResponseItemLastConnectedNode) {
	s.LastConnectedNode = val
}

// SetHapp sets the value of Happ.
func (s *UsersResponseResponseItem) SetHapp(val UsersResponseResponseItemHapp) {
	s.Happ = val
}

type UsersResponseResponseItemActiveInternalSquadsItem struct {
	UUID uuid.UUID `json:"uuid"`
	Name string    `json:"name"`
}

// GetUUID returns the value of UUID.
func (s *UsersResponseResponseItemActiveInternalSquadsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *UsersResponseResponseItemActiveInternalSquadsItem) GetName() string {
	return s.Name
}

// SetUUID sets the value of UUID.
func (s *UsersResponseResponseItemActiveInternalSquadsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *UsersResponseResponseItemActiveInternalSquadsItem) SetName(val string) {
	s.Name = val
}

type UsersResponseResponseItemHapp struct {
	CryptoLink string `json:"cryptoLink"`
}

// GetCryptoLink returns the value of CryptoLink.
func (s *UsersResponseResponseItemHapp) GetCryptoLink() string {
	return s.CryptoLink
}

// SetCryptoLink sets the value of CryptoLink.
func (s *UsersResponseResponseItemHapp) SetCryptoLink(val string) {
	s.CryptoLink = val
}

type UsersResponseResponseItemLastConnectedNode struct {
	ConnectedAt time.Time `json:"connectedAt"`
	NodeName    string    `json:"nodeName"`
	CountryCode string    `json:"countryCode"`
}

// GetConnectedAt returns the value of ConnectedAt.
func (s *UsersResponseResponseItemLastConnectedNode) GetConnectedAt() time.Time {
	return s.ConnectedAt
}

// GetNodeName returns the value of NodeName.
func (s *UsersResponseResponseItemLastConnectedNode) GetNodeName() string {
	return s.NodeName
}

// GetCountryCode returns the value of CountryCode.
func (s *UsersResponseResponseItemLastConnectedNode) GetCountryCode() string {
	return s.CountryCode
}

// SetConnectedAt sets the value of ConnectedAt.
func (s *UsersResponseResponseItemLastConnectedNode) SetConnectedAt(val time.Time) {
	s.ConnectedAt = val
}

// SetNodeName sets the value of NodeName.
func (s *UsersResponseResponseItemLastConnectedNode) SetNodeName(val string) {
	s.NodeName = val
}

// SetCountryCode sets the value of CountryCode.
func (s *UsersResponseResponseItemLastConnectedNode) SetCountryCode(val string) {
	s.CountryCode = val
}

type UsersResponseResponseItemStatus string

const (
	UsersResponseResponseItemStatusACTIVE   UsersResponseResponseItemStatus = "ACTIVE"
	UsersResponseResponseItemStatusDISABLED UsersResponseResponseItemStatus = "DISABLED"
	UsersResponseResponseItemStatusLIMITED  UsersResponseResponseItemStatus = "LIMITED"
	UsersResponseResponseItemStatusEXPIRED  UsersResponseResponseItemStatus = "EXPIRED"
)

// AllValues returns all UsersResponseResponseItemStatus values.
func (UsersResponseResponseItemStatus) AllValues() []UsersResponseResponseItemStatus {
	return []UsersResponseResponseItemStatus{
		UsersResponseResponseItemStatusACTIVE,
		UsersResponseResponseItemStatusDISABLED,
		UsersResponseResponseItemStatusLIMITED,
		UsersResponseResponseItemStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UsersResponseResponseItemStatus) MarshalText() ([]byte, error) {
	switch s {
	case UsersResponseResponseItemStatusACTIVE:
		return []byte(s), nil
	case UsersResponseResponseItemStatusDISABLED:
		return []byte(s), nil
	case UsersResponseResponseItemStatusLIMITED:
		return []byte(s), nil
	case UsersResponseResponseItemStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UsersResponseResponseItemStatus) UnmarshalText(data []byte) error {
	switch UsersResponseResponseItemStatus(data) {
	case UsersResponseResponseItemStatusACTIVE:
		*s = UsersResponseResponseItemStatusACTIVE
		return nil
	case UsersResponseResponseItemStatusDISABLED:
		*s = UsersResponseResponseItemStatusDISABLED
		return nil
	case UsersResponseResponseItemStatusLIMITED:
		*s = UsersResponseResponseItemStatusLIMITED
		return nil
	case UsersResponseResponseItemStatusEXPIRED:
		*s = UsersResponseResponseItemStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Available reset periods.
type UsersResponseResponseItemTrafficLimitStrategy string

const (
	UsersResponseResponseItemTrafficLimitStrategyNORESET UsersResponseResponseItemTrafficLimitStrategy = "NO_RESET"
	UsersResponseResponseItemTrafficLimitStrategyDAY     UsersResponseResponseItemTrafficLimitStrategy = "DAY"
	UsersResponseResponseItemTrafficLimitStrategyWEEK    UsersResponseResponseItemTrafficLimitStrategy = "WEEK"
	UsersResponseResponseItemTrafficLimitStrategyMONTH   UsersResponseResponseItemTrafficLimitStrategy = "MONTH"
)

// AllValues returns all UsersResponseResponseItemTrafficLimitStrategy values.
func (UsersResponseResponseItemTrafficLimitStrategy) AllValues() []UsersResponseResponseItemTrafficLimitStrategy {
	return []UsersResponseResponseItemTrafficLimitStrategy{
		UsersResponseResponseItemTrafficLimitStrategyNORESET,
		UsersResponseResponseItemTrafficLimitStrategyDAY,
		UsersResponseResponseItemTrafficLimitStrategyWEEK,
		UsersResponseResponseItemTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UsersResponseResponseItemTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case UsersResponseResponseItemTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case UsersResponseResponseItemTrafficLimitStrategyDAY:
		return []byte(s), nil
	case UsersResponseResponseItemTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case UsersResponseResponseItemTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UsersResponseResponseItemTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch UsersResponseResponseItemTrafficLimitStrategy(data) {
	case UsersResponseResponseItemTrafficLimitStrategyNORESET:
		*s = UsersResponseResponseItemTrafficLimitStrategyNORESET
		return nil
	case UsersResponseResponseItemTrafficLimitStrategyDAY:
		*s = UsersResponseResponseItemTrafficLimitStrategyDAY
		return nil
	case UsersResponseResponseItemTrafficLimitStrategyWEEK:
		*s = UsersResponseResponseItemTrafficLimitStrategyWEEK
		return nil
	case UsersResponseResponseItemTrafficLimitStrategyMONTH:
		*s = UsersResponseResponseItemTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type UsersStatsControllerGetUserUsageByRangeBadRequest struct {
	Message    OptString                                                     `json:"message"`
	StatusCode OptFloat64                                                    `json:"statusCode"`
	Errors     []UsersStatsControllerGetUserUsageByRangeBadRequestErrorsItem `json:"errors"`
}

// GetMessage returns the value of Message.
func (s *UsersStatsControllerGetUserUsageByRangeBadRequest) GetMessage() OptString {
	return s.Message
}

// GetStatusCode returns the value of StatusCode.
func (s *UsersStatsControllerGetUserUsageByRangeBadRequest) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetErrors returns the value of Errors.
func (s *UsersStatsControllerGetUserUsageByRangeBadRequest) GetErrors() []UsersStatsControllerGetUserUsageByRangeBadRequestErrorsItem {
	return s.Errors
}

// SetMessage sets the value of Message.
func (s *UsersStatsControllerGetUserUsageByRangeBadRequest) SetMessage(val OptString) {
	s.Message = val
}

// SetStatusCode sets the value of StatusCode.
func (s *UsersStatsControllerGetUserUsageByRangeBadRequest) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetErrors sets the value of Errors.
func (s *UsersStatsControllerGetUserUsageByRangeBadRequest) SetErrors(val []UsersStatsControllerGetUserUsageByRangeBadRequestErrorsItem) {
	s.Errors = val
}

func (*UsersStatsControllerGetUserUsageByRangeBadRequest) usersStatsControllerGetUserUsageByRangeRes() {
}

type UsersStatsControllerGetUserUsageByRangeBadRequestErrorsItem struct{}

type UsersStatsControllerGetUserUsageByRangeInternalServerError struct {
	Timestamp OptString `json:"timestamp"`
	Path      OptString `json:"path"`
	Message   OptString `json:"message"`
	ErrorCode OptString `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *UsersStatsControllerGetUserUsageByRangeInternalServerError) GetTimestamp() OptString {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *UsersStatsControllerGetUserUsageByRangeInternalServerError) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *UsersStatsControllerGetUserUsageByRangeInternalServerError) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *UsersStatsControllerGetUserUsageByRangeInternalServerError) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *UsersStatsControllerGetUserUsageByRangeInternalServerError) SetTimestamp(val OptString) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *UsersStatsControllerGetUserUsageByRangeInternalServerError) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *UsersStatsControllerGetUserUsageByRangeInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *UsersStatsControllerGetUserUsageByRangeInternalServerError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*UsersStatsControllerGetUserUsageByRangeInternalServerError) usersStatsControllerGetUserUsageByRangeRes() {
}

// UsersStatsControllerGetUserUsageByRangeNotFound is response for UsersStatsControllerGetUserUsageByRange operation.
type UsersStatsControllerGetUserUsageByRangeNotFound struct{}

func (*UsersStatsControllerGetUserUsageByRangeNotFound) usersStatsControllerGetUserUsageByRangeRes() {
}

// Ref: #/components/schemas/VerifyPasskeyRegistrationResponseDto
type VerifyPasskeyRegistrationResponseDto struct {
	Response VerifyPasskeyRegistrationResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *VerifyPasskeyRegistrationResponseDto) GetResponse() VerifyPasskeyRegistrationResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *VerifyPasskeyRegistrationResponseDto) SetResponse(val VerifyPasskeyRegistrationResponseDtoResponse) {
	s.Response = val
}

type VerifyPasskeyRegistrationResponseDtoResponse struct {
	Verified bool `json:"verified"`
}

// GetVerified returns the value of Verified.
func (s *VerifyPasskeyRegistrationResponseDtoResponse) GetVerified() bool {
	return s.Verified
}

// SetVerified sets the value of Verified.
func (s *VerifyPasskeyRegistrationResponseDtoResponse) SetVerified(val bool) {
	s.Verified = val
}

// VerifyPasskeyRegistrationResponseDtoStatusCode wraps VerifyPasskeyRegistrationResponseDto with StatusCode.
type VerifyPasskeyRegistrationResponseDtoStatusCode struct {
	StatusCode int
	Response   VerifyPasskeyRegistrationResponseDto
}

// GetStatusCode returns the value of StatusCode.
func (s *VerifyPasskeyRegistrationResponseDtoStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *VerifyPasskeyRegistrationResponseDtoStatusCode) GetResponse() VerifyPasskeyRegistrationResponseDto {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *VerifyPasskeyRegistrationResponseDtoStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *VerifyPasskeyRegistrationResponseDtoStatusCode) SetResponse(val VerifyPasskeyRegistrationResponseDto) {
	s.Response = val
}

func (*VerifyPasskeyRegistrationResponseDtoStatusCode) passkeyControllerPasskeyRegistrationVerifyRes() {
}
